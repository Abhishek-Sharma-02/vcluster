I0131 16:40:00.138142      23 e2e.go:126] Starting e2e run "abf1f6e0-31e2-4923-8a54-a844ae6aeab1" on Ginkgo node 1
Jan 31 16:40:00.154: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1675183200 - will randomize all specs

Will run 366 of 7069 specs
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Jan 31 16:40:00.264: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 16:40:00.267: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Jan 31 16:40:00.284: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Jan 31 16:40:00.303: INFO: 1 / 1 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Jan 31 16:40:00.303: INFO: expected 1 pod replicas in namespace 'kube-system', 1 are Running and Ready.
Jan 31 16:40:00.303: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Jan 31 16:40:00.309: INFO: e2e test version: v1.26.0
Jan 31 16:40:00.313: INFO: kube-apiserver version: v1.26.0+k3s1
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Jan 31 16:40:00.313: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 16:40:00.319: INFO: Cluster IP family: ipv4
------------------------------
[SynchronizedBeforeSuite] PASSED [0.055 seconds]
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77

  Begin Captured GinkgoWriter Output >>
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Jan 31 16:40:00.264: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 16:40:00.267: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
    Jan 31 16:40:00.284: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
    Jan 31 16:40:00.303: INFO: 1 / 1 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
    Jan 31 16:40:00.303: INFO: expected 1 pod replicas in namespace 'kube-system', 1 are Running and Ready.
    Jan 31 16:40:00.303: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
    Jan 31 16:40:00.309: INFO: e2e test version: v1.26.0
    Jan 31 16:40:00.313: INFO: kube-apiserver version: v1.26.0+k3s1
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Jan 31 16:40:00.313: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 16:40:00.319: INFO: Cluster IP family: ipv4
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance]
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:00.338
Jan 31 16:40:00.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename ephemeral-containers-test 01/31/23 16:40:00.339
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:00.358
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:00.368
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/common/node/ephemeral_containers.go:38
[It] will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
STEP: creating a target pod 01/31/23 16:40:00.376
Jan 31 16:40:00.387: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-4839" to be "running and ready"
Jan 31 16:40:00.396: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 8.189992ms
Jan 31 16:40:00.396: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:40:02.405: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.017212175s
Jan 31 16:40:02.405: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
Jan 31 16:40:02.405: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
STEP: adding an ephemeral container 01/31/23 16:40:02.413
Jan 31 16:40:02.439: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-4839" to be "container debugger running"
Jan 31 16:40:02.449: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 9.053754ms
Jan 31 16:40:04.457: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.017912452s
Jan 31 16:40:06.462: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.022545984s
Jan 31 16:40:06.462: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
STEP: checking pod container endpoints 01/31/23 16:40:06.462
Jan 31 16:40:06.463: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4839 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 16:40:06.463: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 16:40:06.464: INFO: ExecWithOptions: Clientset creation
Jan 31 16:40:06.464: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/ephemeral-containers-test-4839/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
Jan 31 16:40:06.564: INFO: Exec stderr: ""
[AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:06.584: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "ephemeral-containers-test-4839" for this suite. 01/31/23 16:40:06.59
------------------------------
â€¢ [SLOW TEST] [6.258 seconds]
[sig-node] Ephemeral Containers [NodeConformance]
test/e2e/common/node/framework.go:23
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:00.338
    Jan 31 16:40:00.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename ephemeral-containers-test 01/31/23 16:40:00.339
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:00.358
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:00.368
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/common/node/ephemeral_containers.go:38
    [It] will start an ephemeral container in an existing pod [Conformance]
      test/e2e/common/node/ephemeral_containers.go:45
    STEP: creating a target pod 01/31/23 16:40:00.376
    Jan 31 16:40:00.387: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-4839" to be "running and ready"
    Jan 31 16:40:00.396: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 8.189992ms
    Jan 31 16:40:00.396: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:40:02.405: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.017212175s
    Jan 31 16:40:02.405: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
    Jan 31 16:40:02.405: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
    STEP: adding an ephemeral container 01/31/23 16:40:02.413
    Jan 31 16:40:02.439: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-4839" to be "container debugger running"
    Jan 31 16:40:02.449: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 9.053754ms
    Jan 31 16:40:04.457: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.017912452s
    Jan 31 16:40:06.462: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.022545984s
    Jan 31 16:40:06.462: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
    STEP: checking pod container endpoints 01/31/23 16:40:06.462
    Jan 31 16:40:06.463: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4839 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 16:40:06.463: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 16:40:06.464: INFO: ExecWithOptions: Clientset creation
    Jan 31 16:40:06.464: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/ephemeral-containers-test-4839/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
    Jan 31 16:40:06.564: INFO: Exec stderr: ""
    [AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:06.584: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "ephemeral-containers-test-4839" for this suite. 01/31/23 16:40:06.59
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] Services
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:06.597
Jan 31 16:40:06.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 16:40:06.598
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:06.62
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:06.627
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
STEP: creating an Endpoint 01/31/23 16:40:06.638
STEP: waiting for available Endpoint 01/31/23 16:40:06.643
STEP: listing all Endpoints 01/31/23 16:40:06.646
STEP: updating the Endpoint 01/31/23 16:40:06.651
STEP: fetching the Endpoint 01/31/23 16:40:06.659
STEP: patching the Endpoint 01/31/23 16:40:06.664
STEP: fetching the Endpoint 01/31/23 16:40:06.674
STEP: deleting the Endpoint by Collection 01/31/23 16:40:06.678
STEP: waiting for Endpoint deletion 01/31/23 16:40:06.686
STEP: fetching the Endpoint 01/31/23 16:40:06.689
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:06.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7018" for this suite. 01/31/23 16:40:06.699
------------------------------
â€¢ [0.108 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:06.597
    Jan 31 16:40:06.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 16:40:06.598
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:06.62
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:06.627
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should test the lifecycle of an Endpoint [Conformance]
      test/e2e/network/service.go:3244
    STEP: creating an Endpoint 01/31/23 16:40:06.638
    STEP: waiting for available Endpoint 01/31/23 16:40:06.643
    STEP: listing all Endpoints 01/31/23 16:40:06.646
    STEP: updating the Endpoint 01/31/23 16:40:06.651
    STEP: fetching the Endpoint 01/31/23 16:40:06.659
    STEP: patching the Endpoint 01/31/23 16:40:06.664
    STEP: fetching the Endpoint 01/31/23 16:40:06.674
    STEP: deleting the Endpoint by Collection 01/31/23 16:40:06.678
    STEP: waiting for Endpoint deletion 01/31/23 16:40:06.686
    STEP: fetching the Endpoint 01/31/23 16:40:06.689
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:06.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7018" for this suite. 01/31/23 16:40:06.699
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected downwardAPI
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:06.706
Jan 31 16:40:06.706: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 16:40:06.707
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:06.722
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:06.727
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
STEP: Creating a pod to test downward API volume plugin 01/31/23 16:40:06.735
Jan 31 16:40:06.744: INFO: Waiting up to 5m0s for pod "downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58" in namespace "projected-8772" to be "Succeeded or Failed"
Jan 31 16:40:06.751: INFO: Pod "downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58": Phase="Pending", Reason="", readiness=false. Elapsed: 7.534115ms
Jan 31 16:40:08.758: INFO: Pod "downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014710278s
Jan 31 16:40:10.760: INFO: Pod "downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016747047s
STEP: Saw pod success 01/31/23 16:40:10.761
Jan 31 16:40:10.761: INFO: Pod "downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58" satisfied condition "Succeeded or Failed"
Jan 31 16:40:10.769: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58 container client-container: <nil>
STEP: delete the pod 01/31/23 16:40:10.789
Jan 31 16:40:10.804: INFO: Waiting for pod downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58 to disappear
Jan 31 16:40:10.810: INFO: Pod downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:10.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8772" for this suite. 01/31/23 16:40:10.818
------------------------------
â€¢ [4.123 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:06.706
    Jan 31 16:40:06.706: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 16:40:06.707
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:06.722
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:06.727
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:53
    STEP: Creating a pod to test downward API volume plugin 01/31/23 16:40:06.735
    Jan 31 16:40:06.744: INFO: Waiting up to 5m0s for pod "downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58" in namespace "projected-8772" to be "Succeeded or Failed"
    Jan 31 16:40:06.751: INFO: Pod "downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58": Phase="Pending", Reason="", readiness=false. Elapsed: 7.534115ms
    Jan 31 16:40:08.758: INFO: Pod "downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014710278s
    Jan 31 16:40:10.760: INFO: Pod "downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016747047s
    STEP: Saw pod success 01/31/23 16:40:10.761
    Jan 31 16:40:10.761: INFO: Pod "downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58" satisfied condition "Succeeded or Failed"
    Jan 31 16:40:10.769: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58 container client-container: <nil>
    STEP: delete the pod 01/31/23 16:40:10.789
    Jan 31 16:40:10.804: INFO: Waiting for pod downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58 to disappear
    Jan 31 16:40:10.810: INFO: Pod downwardapi-volume-92e3946d-858d-4964-a9fb-a51592ac3a58 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:10.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8772" for this suite. 01/31/23 16:40:10.818
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:10.831
Jan 31 16:40:10.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 16:40:10.832
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:10.849
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:10.856
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
STEP: Creating a pod to test emptydir 0644 on node default medium 01/31/23 16:40:10.864
Jan 31 16:40:10.873: INFO: Waiting up to 5m0s for pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f" in namespace "emptydir-9960" to be "Succeeded or Failed"
Jan 31 16:40:10.885: INFO: Pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f": Phase="Pending", Reason="", readiness=false. Elapsed: 11.269276ms
Jan 31 16:40:12.894: INFO: Pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020729776s
Jan 31 16:40:14.896: INFO: Pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022180274s
Jan 31 16:40:16.894: INFO: Pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021042619s
STEP: Saw pod success 01/31/23 16:40:16.894
Jan 31 16:40:16.895: INFO: Pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f" satisfied condition "Succeeded or Failed"
Jan 31 16:40:16.903: INFO: Trying to get logs from node 26-m02 pod pod-7dc52d5d-062d-44b4-8bb9-253b2018431f container test-container: <nil>
STEP: delete the pod 01/31/23 16:40:16.921
Jan 31 16:40:16.946: INFO: Waiting for pod pod-7dc52d5d-062d-44b4-8bb9-253b2018431f to disappear
Jan 31 16:40:16.955: INFO: Pod pod-7dc52d5d-062d-44b4-8bb9-253b2018431f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:16.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9960" for this suite. 01/31/23 16:40:16.962
------------------------------
â€¢ [SLOW TEST] [6.139 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:10.831
    Jan 31 16:40:10.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 16:40:10.832
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:10.849
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:10.856
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:167
    STEP: Creating a pod to test emptydir 0644 on node default medium 01/31/23 16:40:10.864
    Jan 31 16:40:10.873: INFO: Waiting up to 5m0s for pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f" in namespace "emptydir-9960" to be "Succeeded or Failed"
    Jan 31 16:40:10.885: INFO: Pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f": Phase="Pending", Reason="", readiness=false. Elapsed: 11.269276ms
    Jan 31 16:40:12.894: INFO: Pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020729776s
    Jan 31 16:40:14.896: INFO: Pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022180274s
    Jan 31 16:40:16.894: INFO: Pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021042619s
    STEP: Saw pod success 01/31/23 16:40:16.894
    Jan 31 16:40:16.895: INFO: Pod "pod-7dc52d5d-062d-44b4-8bb9-253b2018431f" satisfied condition "Succeeded or Failed"
    Jan 31 16:40:16.903: INFO: Trying to get logs from node 26-m02 pod pod-7dc52d5d-062d-44b4-8bb9-253b2018431f container test-container: <nil>
    STEP: delete the pod 01/31/23 16:40:16.921
    Jan 31 16:40:16.946: INFO: Waiting for pod pod-7dc52d5d-062d-44b4-8bb9-253b2018431f to disappear
    Jan 31 16:40:16.955: INFO: Pod pod-7dc52d5d-062d-44b4-8bb9-253b2018431f no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:16.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9960" for this suite. 01/31/23 16:40:16.962
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:16.971
Jan 31 16:40:16.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 16:40:16.972
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:16.988
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:16.995
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
STEP: create deployment with httpd image 01/31/23 16:40:17.003
Jan 31 16:40:17.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1494 create -f -'
Jan 31 16:40:17.811: INFO: stderr: ""
Jan 31 16:40:17.811: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image 01/31/23 16:40:17.811
Jan 31 16:40:17.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1494 diff -f -'
Jan 31 16:40:18.062: INFO: rc: 1
Jan 31 16:40:18.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1494 delete -f -'
Jan 31 16:40:18.136: INFO: stderr: ""
Jan 31 16:40:18.137: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:18.137: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1494" for this suite. 01/31/23 16:40:18.145
------------------------------
â€¢ [1.184 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl diff
  test/e2e/kubectl/kubectl.go:925
    should check if kubectl diff finds a difference for Deployments [Conformance]
    test/e2e/kubectl/kubectl.go:931

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:16.971
    Jan 31 16:40:16.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 16:40:16.972
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:16.988
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:16.995
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl diff finds a difference for Deployments [Conformance]
      test/e2e/kubectl/kubectl.go:931
    STEP: create deployment with httpd image 01/31/23 16:40:17.003
    Jan 31 16:40:17.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1494 create -f -'
    Jan 31 16:40:17.811: INFO: stderr: ""
    Jan 31 16:40:17.811: INFO: stdout: "deployment.apps/httpd-deployment created\n"
    STEP: verify diff finds difference between live and declared image 01/31/23 16:40:17.811
    Jan 31 16:40:17.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1494 diff -f -'
    Jan 31 16:40:18.062: INFO: rc: 1
    Jan 31 16:40:18.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1494 delete -f -'
    Jan 31 16:40:18.136: INFO: stderr: ""
    Jan 31 16:40:18.137: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:18.137: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1494" for this suite. 01/31/23 16:40:18.145
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Pods
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:18.158
Jan 31 16:40:18.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 16:40:18.16
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:18.18
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:18.193
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
Jan 31 16:40:18.202: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: creating the pod 01/31/23 16:40:18.202
STEP: submitting the pod to kubernetes 01/31/23 16:40:18.202
Jan 31 16:40:18.214: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51" in namespace "pods-2163" to be "running and ready"
Jan 31 16:40:18.222: INFO: Pod "pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51": Phase="Pending", Reason="", readiness=false. Elapsed: 7.880333ms
Jan 31 16:40:18.222: INFO: The phase of Pod pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:40:20.229: INFO: Pod "pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014803459s
Jan 31 16:40:20.229: INFO: The phase of Pod pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:40:22.228: INFO: Pod "pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51": Phase="Running", Reason="", readiness=true. Elapsed: 4.014065817s
Jan 31 16:40:22.228: INFO: The phase of Pod pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51 is Running (Ready = true)
Jan 31 16:40:22.228: INFO: Pod "pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:22.270: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-2163" for this suite. 01/31/23 16:40:22.278
------------------------------
â€¢ [4.128 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:18.158
    Jan 31 16:40:18.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 16:40:18.16
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:18.18
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:18.193
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:618
    Jan 31 16:40:18.202: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: creating the pod 01/31/23 16:40:18.202
    STEP: submitting the pod to kubernetes 01/31/23 16:40:18.202
    Jan 31 16:40:18.214: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51" in namespace "pods-2163" to be "running and ready"
    Jan 31 16:40:18.222: INFO: Pod "pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51": Phase="Pending", Reason="", readiness=false. Elapsed: 7.880333ms
    Jan 31 16:40:18.222: INFO: The phase of Pod pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:40:20.229: INFO: Pod "pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014803459s
    Jan 31 16:40:20.229: INFO: The phase of Pod pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:40:22.228: INFO: Pod "pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51": Phase="Running", Reason="", readiness=true. Elapsed: 4.014065817s
    Jan 31 16:40:22.228: INFO: The phase of Pod pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51 is Running (Ready = true)
    Jan 31 16:40:22.228: INFO: Pod "pod-logs-websocket-2609db16-d001-44c7-9392-7e6c2fddfd51" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:22.270: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-2163" for this suite. 01/31/23 16:40:22.278
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:22.287
Jan 31 16:40:22.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename init-container 01/31/23 16:40:22.289
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:22.306
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:22.313
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
STEP: creating the pod 01/31/23 16:40:22.32
Jan 31 16:40:22.320: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:28.571: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-3077" for this suite. 01/31/23 16:40:28.579
------------------------------
â€¢ [SLOW TEST] [6.301 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:22.287
    Jan 31 16:40:22.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename init-container 01/31/23 16:40:22.289
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:22.306
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:22.313
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:177
    STEP: creating the pod 01/31/23 16:40:22.32
    Jan 31 16:40:22.320: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:28.571: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-3077" for this suite. 01/31/23 16:40:28.579
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch
  should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:28.595
Jan 31 16:40:28.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 16:40:28.596
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:28.615
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:28.626
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
STEP: creating Agnhost RC 01/31/23 16:40:28.636
Jan 31 16:40:28.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3488 create -f -'
Jan 31 16:40:28.938: INFO: stderr: ""
Jan 31 16:40:28.938: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 01/31/23 16:40:28.938
Jan 31 16:40:29.946: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 16:40:29.946: INFO: Found 0 / 1
Jan 31 16:40:30.944: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 16:40:30.944: INFO: Found 0 / 1
Jan 31 16:40:31.949: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 16:40:31.949: INFO: Found 1 / 1
Jan 31 16:40:31.949: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods 01/31/23 16:40:31.949
Jan 31 16:40:31.957: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 16:40:31.957: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 31 16:40:31.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3488 patch pod agnhost-primary-smxpj -p {"metadata":{"annotations":{"x":"y"}}}'
Jan 31 16:40:32.080: INFO: stderr: ""
Jan 31 16:40:32.080: INFO: stdout: "pod/agnhost-primary-smxpj patched\n"
STEP: checking annotations 01/31/23 16:40:32.08
Jan 31 16:40:32.085: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 16:40:32.085: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:32.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-3488" for this suite. 01/31/23 16:40:32.094
------------------------------
â€¢ [3.506 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl patch
  test/e2e/kubectl/kubectl.go:1646
    should add annotations for pods in rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1652

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:28.595
    Jan 31 16:40:28.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 16:40:28.596
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:28.615
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:28.626
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should add annotations for pods in rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1652
    STEP: creating Agnhost RC 01/31/23 16:40:28.636
    Jan 31 16:40:28.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3488 create -f -'
    Jan 31 16:40:28.938: INFO: stderr: ""
    Jan 31 16:40:28.938: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 01/31/23 16:40:28.938
    Jan 31 16:40:29.946: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 16:40:29.946: INFO: Found 0 / 1
    Jan 31 16:40:30.944: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 16:40:30.944: INFO: Found 0 / 1
    Jan 31 16:40:31.949: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 16:40:31.949: INFO: Found 1 / 1
    Jan 31 16:40:31.949: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    STEP: patching all pods 01/31/23 16:40:31.949
    Jan 31 16:40:31.957: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 16:40:31.957: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Jan 31 16:40:31.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3488 patch pod agnhost-primary-smxpj -p {"metadata":{"annotations":{"x":"y"}}}'
    Jan 31 16:40:32.080: INFO: stderr: ""
    Jan 31 16:40:32.080: INFO: stdout: "pod/agnhost-primary-smxpj patched\n"
    STEP: checking annotations 01/31/23 16:40:32.08
    Jan 31 16:40:32.085: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 16:40:32.085: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:32.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-3488" for this suite. 01/31/23 16:40:32.094
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:32.101
Jan 31 16:40:32.101: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 16:40:32.102
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:32.124
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:32.132
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
STEP: Create set of pods 01/31/23 16:40:32.139
Jan 31 16:40:32.150: INFO: created test-pod-1
Jan 31 16:40:32.159: INFO: created test-pod-2
Jan 31 16:40:32.169: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running 01/31/23 16:40:32.169
Jan 31 16:40:32.170: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-3416' to be running and ready
Jan 31 16:40:32.193: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 31 16:40:32.193: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 31 16:40:32.193: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 31 16:40:32.193: INFO: 0 / 3 pods in namespace 'pods-3416' are running and ready (0 seconds elapsed)
Jan 31 16:40:32.194: INFO: expected 0 pod replicas in namespace 'pods-3416', 0 are Running and Ready.
Jan 31 16:40:32.194: INFO: POD         NODE    PHASE    GRACE  CONDITIONS
Jan 31 16:40:32.194: INFO: test-pod-1  26-m02  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
Jan 31 16:40:32.194: INFO: test-pod-2  26      Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
Jan 31 16:40:32.194: INFO: test-pod-3  26-m02  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
Jan 31 16:40:32.194: INFO: 
Jan 31 16:40:34.227: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 31 16:40:34.227: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 31 16:40:34.227: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 31 16:40:34.227: INFO: 0 / 3 pods in namespace 'pods-3416' are running and ready (2 seconds elapsed)
Jan 31 16:40:34.227: INFO: expected 0 pod replicas in namespace 'pods-3416', 0 are Running and Ready.
Jan 31 16:40:34.227: INFO: POD         NODE    PHASE    GRACE  CONDITIONS
Jan 31 16:40:34.227: INFO: test-pod-2  26      Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
Jan 31 16:40:34.227: INFO: test-pod-1  26-m02  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
Jan 31 16:40:34.227: INFO: test-pod-3  26-m02  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
Jan 31 16:40:34.227: INFO: 
Jan 31 16:40:36.220: INFO: 3 / 3 pods in namespace 'pods-3416' are running and ready (4 seconds elapsed)
Jan 31 16:40:36.220: INFO: expected 0 pod replicas in namespace 'pods-3416', 0 are Running and Ready.
STEP: waiting for all pods to be deleted 01/31/23 16:40:36.249
Jan 31 16:40:36.254: INFO: Pod quantity 3 is different from expected quantity 0
Jan 31 16:40:37.262: INFO: Pod quantity 3 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:38.266: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-3416" for this suite. 01/31/23 16:40:38.278
------------------------------
â€¢ [SLOW TEST] [6.192 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:32.101
    Jan 31 16:40:32.101: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 16:40:32.102
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:32.124
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:32.132
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should delete a collection of pods [Conformance]
      test/e2e/common/node/pods.go:845
    STEP: Create set of pods 01/31/23 16:40:32.139
    Jan 31 16:40:32.150: INFO: created test-pod-1
    Jan 31 16:40:32.159: INFO: created test-pod-2
    Jan 31 16:40:32.169: INFO: created test-pod-3
    STEP: waiting for all 3 pods to be running 01/31/23 16:40:32.169
    Jan 31 16:40:32.170: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-3416' to be running and ready
    Jan 31 16:40:32.193: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Jan 31 16:40:32.193: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Jan 31 16:40:32.193: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Jan 31 16:40:32.193: INFO: 0 / 3 pods in namespace 'pods-3416' are running and ready (0 seconds elapsed)
    Jan 31 16:40:32.194: INFO: expected 0 pod replicas in namespace 'pods-3416', 0 are Running and Ready.
    Jan 31 16:40:32.194: INFO: POD         NODE    PHASE    GRACE  CONDITIONS
    Jan 31 16:40:32.194: INFO: test-pod-1  26-m02  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
    Jan 31 16:40:32.194: INFO: test-pod-2  26      Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
    Jan 31 16:40:32.194: INFO: test-pod-3  26-m02  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
    Jan 31 16:40:32.194: INFO: 
    Jan 31 16:40:34.227: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Jan 31 16:40:34.227: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Jan 31 16:40:34.227: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Jan 31 16:40:34.227: INFO: 0 / 3 pods in namespace 'pods-3416' are running and ready (2 seconds elapsed)
    Jan 31 16:40:34.227: INFO: expected 0 pod replicas in namespace 'pods-3416', 0 are Running and Ready.
    Jan 31 16:40:34.227: INFO: POD         NODE    PHASE    GRACE  CONDITIONS
    Jan 31 16:40:34.227: INFO: test-pod-2  26      Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
    Jan 31 16:40:34.227: INFO: test-pod-1  26-m02  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
    Jan 31 16:40:34.227: INFO: test-pod-3  26-m02  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 16:40:32 +0000 UTC  }]
    Jan 31 16:40:34.227: INFO: 
    Jan 31 16:40:36.220: INFO: 3 / 3 pods in namespace 'pods-3416' are running and ready (4 seconds elapsed)
    Jan 31 16:40:36.220: INFO: expected 0 pod replicas in namespace 'pods-3416', 0 are Running and Ready.
    STEP: waiting for all pods to be deleted 01/31/23 16:40:36.249
    Jan 31 16:40:36.254: INFO: Pod quantity 3 is different from expected quantity 0
    Jan 31 16:40:37.262: INFO: Pod quantity 3 is different from expected quantity 0
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:38.266: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-3416" for this suite. 01/31/23 16:40:38.278
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Pods
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:38.294
Jan 31 16:40:38.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 16:40:38.295
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:38.323
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:38.333
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
STEP: creating pod 01/31/23 16:40:38.34
Jan 31 16:40:38.349: INFO: Waiting up to 5m0s for pod "pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09" in namespace "pods-8922" to be "running and ready"
Jan 31 16:40:38.357: INFO: Pod "pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09": Phase="Pending", Reason="", readiness=false. Elapsed: 7.898698ms
Jan 31 16:40:38.357: INFO: The phase of Pod pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:40:40.372: INFO: Pod "pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022670128s
Jan 31 16:40:40.372: INFO: The phase of Pod pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:40:42.367: INFO: Pod "pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09": Phase="Running", Reason="", readiness=true. Elapsed: 4.018280424s
Jan 31 16:40:42.367: INFO: The phase of Pod pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09 is Running (Ready = true)
Jan 31 16:40:42.367: INFO: Pod "pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09" satisfied condition "running and ready"
Jan 31 16:40:42.385: INFO: Pod pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09 has hostIP: 192.168.61.148
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:42.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-8922" for this suite. 01/31/23 16:40:42.399
------------------------------
â€¢ [4.115 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:38.294
    Jan 31 16:40:38.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 16:40:38.295
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:38.323
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:38.333
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should get a host IP [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:204
    STEP: creating pod 01/31/23 16:40:38.34
    Jan 31 16:40:38.349: INFO: Waiting up to 5m0s for pod "pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09" in namespace "pods-8922" to be "running and ready"
    Jan 31 16:40:38.357: INFO: Pod "pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09": Phase="Pending", Reason="", readiness=false. Elapsed: 7.898698ms
    Jan 31 16:40:38.357: INFO: The phase of Pod pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:40:40.372: INFO: Pod "pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022670128s
    Jan 31 16:40:40.372: INFO: The phase of Pod pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:40:42.367: INFO: Pod "pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09": Phase="Running", Reason="", readiness=true. Elapsed: 4.018280424s
    Jan 31 16:40:42.367: INFO: The phase of Pod pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09 is Running (Ready = true)
    Jan 31 16:40:42.367: INFO: Pod "pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09" satisfied condition "running and ready"
    Jan 31 16:40:42.385: INFO: Pod pod-hostip-0bf135ac-1c9b-4f07-98b9-3783c3228d09 has hostIP: 192.168.61.148
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:42.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-8922" for this suite. 01/31/23 16:40:42.399
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:42.41
Jan 31 16:40:42.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 16:40:42.411
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:42.428
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:42.434
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:42.492: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-281" for this suite. 01/31/23 16:40:42.499
------------------------------
â€¢ [0.096 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:42.41
    Jan 31 16:40:42.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 16:40:42.411
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:42.428
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:42.434
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/configmap_volume.go:504
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:42.492: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-281" for this suite. 01/31/23 16:40:42.499
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:42.507
Jan 31 16:40:42.507: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 16:40:42.508
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:42.522
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:42.529
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 16:40:42.555
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:40:42.882
STEP: Deploying the webhook pod 01/31/23 16:40:42.898
STEP: Wait for the deployment to be ready 01/31/23 16:40:42.919
Jan 31 16:40:42.935: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 16:40:44.963: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 16, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 16:40:46.975
STEP: Verifying the service has paired with the endpoint 01/31/23 16:40:47.041
Jan 31 16:40:48.041: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
STEP: Creating a mutating webhook configuration 01/31/23 16:40:48.049
STEP: Updating a mutating webhook configuration's rules to not include the create operation 01/31/23 16:40:48.094
STEP: Creating a configMap that should not be mutated 01/31/23 16:40:48.106
STEP: Patching a mutating webhook configuration's rules to include the create operation 01/31/23 16:40:48.126
STEP: Creating a configMap that should be mutated 01/31/23 16:40:48.133
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:48.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6868" for this suite. 01/31/23 16:40:48.313
STEP: Destroying namespace "webhook-6868-markers" for this suite. 01/31/23 16:40:48.338
------------------------------
â€¢ [SLOW TEST] [5.839 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:42.507
    Jan 31 16:40:42.507: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 16:40:42.508
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:42.522
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:42.529
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 16:40:42.555
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:40:42.882
    STEP: Deploying the webhook pod 01/31/23 16:40:42.898
    STEP: Wait for the deployment to be ready 01/31/23 16:40:42.919
    Jan 31 16:40:42.935: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 16:40:44.963: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 16, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 16:40:46.975
    STEP: Verifying the service has paired with the endpoint 01/31/23 16:40:47.041
    Jan 31 16:40:48.041: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a mutating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:508
    STEP: Creating a mutating webhook configuration 01/31/23 16:40:48.049
    STEP: Updating a mutating webhook configuration's rules to not include the create operation 01/31/23 16:40:48.094
    STEP: Creating a configMap that should not be mutated 01/31/23 16:40:48.106
    STEP: Patching a mutating webhook configuration's rules to include the create operation 01/31/23 16:40:48.126
    STEP: Creating a configMap that should be mutated 01/31/23 16:40:48.133
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:48.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6868" for this suite. 01/31/23 16:40:48.313
    STEP: Destroying namespace "webhook-6868-markers" for this suite. 01/31/23 16:40:48.338
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:48.348
Jan 31 16:40:48.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename limitrange 01/31/23 16:40:48.351
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:48.381
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:48.393
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
STEP: Creating LimitRange "e2e-limitrange-8td5q" in namespace "limitrange-6322" 01/31/23 16:40:48.411
STEP: Creating another limitRange in another namespace 01/31/23 16:40:48.421
Jan 31 16:40:48.440: INFO: Namespace "e2e-limitrange-8td5q-3092" created
Jan 31 16:40:48.440: INFO: Creating LimitRange "e2e-limitrange-8td5q" in namespace "e2e-limitrange-8td5q-3092"
STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-8td5q" 01/31/23 16:40:48.449
Jan 31 16:40:48.456: INFO: Found 2 limitRanges
STEP: Patching LimitRange "e2e-limitrange-8td5q" in "limitrange-6322" namespace 01/31/23 16:40:48.456
Jan 31 16:40:48.464: INFO: LimitRange "e2e-limitrange-8td5q" has been patched
STEP: Delete LimitRange "e2e-limitrange-8td5q" by Collection with labelSelector: "e2e-limitrange-8td5q=patched" 01/31/23 16:40:48.464
STEP: Confirm that the limitRange "e2e-limitrange-8td5q" has been deleted 01/31/23 16:40:48.472
Jan 31 16:40:48.472: INFO: Requesting list of LimitRange to confirm quantity
Jan 31 16:40:48.478: INFO: Found 0 LimitRange with label "e2e-limitrange-8td5q=patched"
Jan 31 16:40:48.478: INFO: LimitRange "e2e-limitrange-8td5q" has been deleted.
STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-8td5q" 01/31/23 16:40:48.478
Jan 31 16:40:48.482: INFO: Found 1 limitRange
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:48.482: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-6322" for this suite. 01/31/23 16:40:48.488
STEP: Destroying namespace "e2e-limitrange-8td5q-3092" for this suite. 01/31/23 16:40:48.495
------------------------------
â€¢ [0.154 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:48.348
    Jan 31 16:40:48.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename limitrange 01/31/23 16:40:48.351
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:48.381
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:48.393
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should list, patch and delete a LimitRange by collection [Conformance]
      test/e2e/scheduling/limit_range.go:239
    STEP: Creating LimitRange "e2e-limitrange-8td5q" in namespace "limitrange-6322" 01/31/23 16:40:48.411
    STEP: Creating another limitRange in another namespace 01/31/23 16:40:48.421
    Jan 31 16:40:48.440: INFO: Namespace "e2e-limitrange-8td5q-3092" created
    Jan 31 16:40:48.440: INFO: Creating LimitRange "e2e-limitrange-8td5q" in namespace "e2e-limitrange-8td5q-3092"
    STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-8td5q" 01/31/23 16:40:48.449
    Jan 31 16:40:48.456: INFO: Found 2 limitRanges
    STEP: Patching LimitRange "e2e-limitrange-8td5q" in "limitrange-6322" namespace 01/31/23 16:40:48.456
    Jan 31 16:40:48.464: INFO: LimitRange "e2e-limitrange-8td5q" has been patched
    STEP: Delete LimitRange "e2e-limitrange-8td5q" by Collection with labelSelector: "e2e-limitrange-8td5q=patched" 01/31/23 16:40:48.464
    STEP: Confirm that the limitRange "e2e-limitrange-8td5q" has been deleted 01/31/23 16:40:48.472
    Jan 31 16:40:48.472: INFO: Requesting list of LimitRange to confirm quantity
    Jan 31 16:40:48.478: INFO: Found 0 LimitRange with label "e2e-limitrange-8td5q=patched"
    Jan 31 16:40:48.478: INFO: LimitRange "e2e-limitrange-8td5q" has been deleted.
    STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-8td5q" 01/31/23 16:40:48.478
    Jan 31 16:40:48.482: INFO: Found 1 limitRange
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:48.482: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-6322" for this suite. 01/31/23 16:40:48.488
    STEP: Destroying namespace "e2e-limitrange-8td5q-3092" for this suite. 01/31/23 16:40:48.495
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:48.504
Jan 31 16:40:48.504: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename events 01/31/23 16:40:48.504
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:48.52
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:48.527
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
STEP: Create set of events 01/31/23 16:40:48.536
STEP: get a list of Events with a label in the current namespace 01/31/23 16:40:48.553
STEP: delete a list of events 01/31/23 16:40:48.558
Jan 31 16:40:48.558: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 01/31/23 16:40:48.573
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:48.578: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-1298" for this suite. 01/31/23 16:40:48.584
------------------------------
â€¢ [0.087 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:48.504
    Jan 31 16:40:48.504: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename events 01/31/23 16:40:48.504
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:48.52
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:48.527
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/events.go:207
    STEP: Create set of events 01/31/23 16:40:48.536
    STEP: get a list of Events with a label in the current namespace 01/31/23 16:40:48.553
    STEP: delete a list of events 01/31/23 16:40:48.558
    Jan 31 16:40:48.558: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 01/31/23 16:40:48.573
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:48.578: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-1298" for this suite. 01/31/23 16:40:48.584
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:48.592
Jan 31 16:40:48.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 16:40:48.593
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:48.612
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:48.621
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
STEP: creating service in namespace services-3547 01/31/23 16:40:48.63
STEP: creating service affinity-clusterip in namespace services-3547 01/31/23 16:40:48.631
STEP: creating replication controller affinity-clusterip in namespace services-3547 01/31/23 16:40:48.659
I0131 16:40:48.666827      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-3547, replica count: 3
I0131 16:40:51.718524      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 31 16:40:51.733: INFO: Creating new exec pod
Jan 31 16:40:51.743: INFO: Waiting up to 5m0s for pod "execpod-affinity44rff" in namespace "services-3547" to be "running"
Jan 31 16:40:51.754: INFO: Pod "execpod-affinity44rff": Phase="Pending", Reason="", readiness=false. Elapsed: 10.753997ms
Jan 31 16:40:53.765: INFO: Pod "execpod-affinity44rff": Phase="Running", Reason="", readiness=true. Elapsed: 2.021414492s
Jan 31 16:40:53.765: INFO: Pod "execpod-affinity44rff" satisfied condition "running"
Jan 31 16:40:54.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-3547 exec execpod-affinity44rff -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
Jan 31 16:40:54.958: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Jan 31 16:40:54.958: INFO: stdout: ""
Jan 31 16:40:54.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-3547 exec execpod-affinity44rff -- /bin/sh -x -c nc -v -z -w 2 10.101.209.125 80'
Jan 31 16:40:55.116: INFO: stderr: "+ nc -v -z -w 2 10.101.209.125 80\nConnection to 10.101.209.125 80 port [tcp/http] succeeded!\n"
Jan 31 16:40:55.116: INFO: stdout: ""
Jan 31 16:40:55.116: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-3547 exec execpod-affinity44rff -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.101.209.125:80/ ; done'
Jan 31 16:40:55.369: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n"
Jan 31 16:40:55.369: INFO: stdout: "\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2"
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
Jan 31 16:40:55.369: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-3547, will wait for the garbage collector to delete the pods 01/31/23 16:40:55.379
Jan 31 16:40:55.444: INFO: Deleting ReplicationController affinity-clusterip took: 9.298759ms
Jan 31 16:40:55.545: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.985561ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 16:40:57.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-3547" for this suite. 01/31/23 16:40:57.48
------------------------------
â€¢ [SLOW TEST] [8.895 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:48.592
    Jan 31 16:40:48.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 16:40:48.593
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:48.612
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:48.621
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2191
    STEP: creating service in namespace services-3547 01/31/23 16:40:48.63
    STEP: creating service affinity-clusterip in namespace services-3547 01/31/23 16:40:48.631
    STEP: creating replication controller affinity-clusterip in namespace services-3547 01/31/23 16:40:48.659
    I0131 16:40:48.666827      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-3547, replica count: 3
    I0131 16:40:51.718524      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 31 16:40:51.733: INFO: Creating new exec pod
    Jan 31 16:40:51.743: INFO: Waiting up to 5m0s for pod "execpod-affinity44rff" in namespace "services-3547" to be "running"
    Jan 31 16:40:51.754: INFO: Pod "execpod-affinity44rff": Phase="Pending", Reason="", readiness=false. Elapsed: 10.753997ms
    Jan 31 16:40:53.765: INFO: Pod "execpod-affinity44rff": Phase="Running", Reason="", readiness=true. Elapsed: 2.021414492s
    Jan 31 16:40:53.765: INFO: Pod "execpod-affinity44rff" satisfied condition "running"
    Jan 31 16:40:54.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-3547 exec execpod-affinity44rff -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
    Jan 31 16:40:54.958: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
    Jan 31 16:40:54.958: INFO: stdout: ""
    Jan 31 16:40:54.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-3547 exec execpod-affinity44rff -- /bin/sh -x -c nc -v -z -w 2 10.101.209.125 80'
    Jan 31 16:40:55.116: INFO: stderr: "+ nc -v -z -w 2 10.101.209.125 80\nConnection to 10.101.209.125 80 port [tcp/http] succeeded!\n"
    Jan 31 16:40:55.116: INFO: stdout: ""
    Jan 31 16:40:55.116: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-3547 exec execpod-affinity44rff -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.101.209.125:80/ ; done'
    Jan 31 16:40:55.369: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.209.125:80/\n"
    Jan 31 16:40:55.369: INFO: stdout: "\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2\naffinity-clusterip-ggsx2"
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Received response from host: affinity-clusterip-ggsx2
    Jan 31 16:40:55.369: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip in namespace services-3547, will wait for the garbage collector to delete the pods 01/31/23 16:40:55.379
    Jan 31 16:40:55.444: INFO: Deleting ReplicationController affinity-clusterip took: 9.298759ms
    Jan 31 16:40:55.545: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.985561ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:40:57.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-3547" for this suite. 01/31/23 16:40:57.48
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:40:57.488
Jan 31 16:40:57.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename proxy 01/31/23 16:40:57.49
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:57.511
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:57.519
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
STEP: starting an echo server on multiple ports 01/31/23 16:40:57.563
STEP: creating replication controller proxy-service-jcdzi in namespace proxy-5412 01/31/23 16:40:57.563
I0131 16:40:57.573440      23 runners.go:193] Created replication controller with name: proxy-service-jcdzi, namespace: proxy-5412, replica count: 1
I0131 16:40:58.626999      23 runners.go:193] proxy-service-jcdzi Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0131 16:40:59.627482      23 runners.go:193] proxy-service-jcdzi Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I0131 16:41:00.628419      23 runners.go:193] proxy-service-jcdzi Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 31 16:41:00.635: INFO: setup took 3.107472923s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts 01/31/23 16:41:00.635
Jan 31 16:41:00.665: INFO: (0) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 30.146918ms)
Jan 31 16:41:00.665: INFO: (0) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 30.577496ms)
Jan 31 16:41:00.665: INFO: (0) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 30.403134ms)
Jan 31 16:41:00.666: INFO: (0) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 30.651438ms)
Jan 31 16:41:00.666: INFO: (0) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 30.802925ms)
Jan 31 16:41:00.668: INFO: (0) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 32.658885ms)
Jan 31 16:41:00.670: INFO: (0) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 34.793472ms)
Jan 31 16:41:00.674: INFO: (0) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 38.689479ms)
Jan 31 16:41:00.674: INFO: (0) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 38.828774ms)
Jan 31 16:41:00.674: INFO: (0) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 38.790011ms)
Jan 31 16:41:00.675: INFO: (0) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 40.074233ms)
Jan 31 16:41:00.678: INFO: (0) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 43.16564ms)
Jan 31 16:41:00.679: INFO: (0) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 43.458997ms)
Jan 31 16:41:00.679: INFO: (0) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 44.235985ms)
Jan 31 16:41:00.679: INFO: (0) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 44.266653ms)
Jan 31 16:41:00.679: INFO: (0) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 44.038499ms)
Jan 31 16:41:00.693: INFO: (1) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 13.368077ms)
Jan 31 16:41:00.700: INFO: (1) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 19.655991ms)
Jan 31 16:41:00.702: INFO: (1) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 22.706431ms)
Jan 31 16:41:00.703: INFO: (1) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 23.33142ms)
Jan 31 16:41:00.708: INFO: (1) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 27.688543ms)
Jan 31 16:41:00.711: INFO: (1) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 31.311302ms)
Jan 31 16:41:00.712: INFO: (1) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 32.62033ms)
Jan 31 16:41:00.713: INFO: (1) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 33.405974ms)
Jan 31 16:41:00.714: INFO: (1) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 34.478123ms)
Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 46.412734ms)
Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 46.209287ms)
Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 46.20535ms)
Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 46.582677ms)
Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 46.667618ms)
Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 46.844564ms)
Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 46.306713ms)
Jan 31 16:41:00.754: INFO: (2) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 27.47076ms)
Jan 31 16:41:00.754: INFO: (2) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 26.909903ms)
Jan 31 16:41:00.756: INFO: (2) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 30.027711ms)
Jan 31 16:41:00.757: INFO: (2) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 30.73742ms)
Jan 31 16:41:00.760: INFO: (2) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 33.825953ms)
Jan 31 16:41:00.760: INFO: (2) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 33.833598ms)
Jan 31 16:41:00.761: INFO: (2) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 34.195345ms)
Jan 31 16:41:00.763: INFO: (2) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 36.294746ms)
Jan 31 16:41:00.766: INFO: (2) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 39.411242ms)
Jan 31 16:41:00.766: INFO: (2) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 39.022543ms)
Jan 31 16:41:00.769: INFO: (2) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 42.116104ms)
Jan 31 16:41:00.769: INFO: (2) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 42.27212ms)
Jan 31 16:41:00.770: INFO: (2) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 43.214562ms)
Jan 31 16:41:00.771: INFO: (2) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 43.913963ms)
Jan 31 16:41:00.771: INFO: (2) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 44.409075ms)
Jan 31 16:41:00.771: INFO: (2) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 44.321187ms)
Jan 31 16:41:00.789: INFO: (3) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 18.179685ms)
Jan 31 16:41:00.789: INFO: (3) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 15.94257ms)
Jan 31 16:41:00.790: INFO: (3) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 18.826024ms)
Jan 31 16:41:00.791: INFO: (3) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 19.90793ms)
Jan 31 16:41:00.791: INFO: (3) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 19.956192ms)
Jan 31 16:41:00.797: INFO: (3) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 26.179934ms)
Jan 31 16:41:00.799: INFO: (3) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 27.85522ms)
Jan 31 16:41:00.799: INFO: (3) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 27.811608ms)
Jan 31 16:41:00.800: INFO: (3) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 28.955963ms)
Jan 31 16:41:00.800: INFO: (3) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 29.129103ms)
Jan 31 16:41:00.801: INFO: (3) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 30.021439ms)
Jan 31 16:41:00.801: INFO: (3) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 30.199898ms)
Jan 31 16:41:00.802: INFO: (3) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 30.907052ms)
Jan 31 16:41:00.803: INFO: (3) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 32.242241ms)
Jan 31 16:41:00.803: INFO: (3) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 32.118206ms)
Jan 31 16:41:00.804: INFO: (3) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 32.905101ms)
Jan 31 16:41:00.820: INFO: (4) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 15.716712ms)
Jan 31 16:41:00.820: INFO: (4) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 15.485532ms)
Jan 31 16:41:00.822: INFO: (4) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 18.033497ms)
Jan 31 16:41:00.824: INFO: (4) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 20.312189ms)
Jan 31 16:41:00.827: INFO: (4) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 22.783608ms)
Jan 31 16:41:00.828: INFO: (4) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 23.549915ms)
Jan 31 16:41:00.831: INFO: (4) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 26.771009ms)
Jan 31 16:41:00.836: INFO: (4) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 31.266205ms)
Jan 31 16:41:00.836: INFO: (4) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 31.303055ms)
Jan 31 16:41:00.836: INFO: (4) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 31.261467ms)
Jan 31 16:41:00.838: INFO: (4) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 34.004843ms)
Jan 31 16:41:00.838: INFO: (4) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 34.155398ms)
Jan 31 16:41:00.840: INFO: (4) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 36.211307ms)
Jan 31 16:41:00.840: INFO: (4) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 35.744651ms)
Jan 31 16:41:00.841: INFO: (4) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 36.631706ms)
Jan 31 16:41:00.841: INFO: (4) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 36.481551ms)
Jan 31 16:41:00.858: INFO: (5) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 17.272579ms)
Jan 31 16:41:00.859: INFO: (5) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 18.030761ms)
Jan 31 16:41:00.864: INFO: (5) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 22.745697ms)
Jan 31 16:41:00.866: INFO: (5) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 24.926162ms)
Jan 31 16:41:00.874: INFO: (5) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 32.050547ms)
Jan 31 16:41:00.874: INFO: (5) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 32.36225ms)
Jan 31 16:41:00.874: INFO: (5) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 32.602085ms)
Jan 31 16:41:00.874: INFO: (5) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 32.701225ms)
Jan 31 16:41:00.881: INFO: (5) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 39.202376ms)
Jan 31 16:41:00.881: INFO: (5) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 39.508877ms)
Jan 31 16:41:00.881: INFO: (5) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 39.377127ms)
Jan 31 16:41:00.883: INFO: (5) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 42.038107ms)
Jan 31 16:41:00.883: INFO: (5) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 41.676068ms)
Jan 31 16:41:00.884: INFO: (5) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 42.430281ms)
Jan 31 16:41:00.884: INFO: (5) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 42.436745ms)
Jan 31 16:41:00.884: INFO: (5) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 42.538697ms)
Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 25.267661ms)
Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 25.836012ms)
Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 25.691979ms)
Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 25.777851ms)
Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 26.148095ms)
Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 26.009882ms)
Jan 31 16:41:00.912: INFO: (6) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 27.767033ms)
Jan 31 16:41:00.915: INFO: (6) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 30.688418ms)
Jan 31 16:41:00.917: INFO: (6) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 32.590674ms)
Jan 31 16:41:00.917: INFO: (6) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 32.506875ms)
Jan 31 16:41:00.918: INFO: (6) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 33.539198ms)
Jan 31 16:41:00.919: INFO: (6) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 34.925864ms)
Jan 31 16:41:00.919: INFO: (6) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 35.114373ms)
Jan 31 16:41:00.920: INFO: (6) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 35.767625ms)
Jan 31 16:41:00.921: INFO: (6) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 36.452306ms)
Jan 31 16:41:00.921: INFO: (6) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 36.895839ms)
Jan 31 16:41:00.941: INFO: (7) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 19.438468ms)
Jan 31 16:41:00.941: INFO: (7) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 19.497159ms)
Jan 31 16:41:00.941: INFO: (7) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 19.398863ms)
Jan 31 16:41:00.941: INFO: (7) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 19.648777ms)
Jan 31 16:41:00.941: INFO: (7) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 19.325101ms)
Jan 31 16:41:00.943: INFO: (7) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 20.871762ms)
Jan 31 16:41:00.944: INFO: (7) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 22.221509ms)
Jan 31 16:41:00.949: INFO: (7) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 27.269156ms)
Jan 31 16:41:00.949: INFO: (7) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 27.040762ms)
Jan 31 16:41:00.949: INFO: (7) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 27.244539ms)
Jan 31 16:41:00.949: INFO: (7) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 27.569416ms)
Jan 31 16:41:00.950: INFO: (7) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 28.829062ms)
Jan 31 16:41:00.950: INFO: (7) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 29.019013ms)
Jan 31 16:41:00.953: INFO: (7) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 31.542572ms)
Jan 31 16:41:00.953: INFO: (7) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 31.482557ms)
Jan 31 16:41:00.954: INFO: (7) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 32.158863ms)
Jan 31 16:41:00.964: INFO: (8) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 10.065368ms)
Jan 31 16:41:00.965: INFO: (8) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 11.421857ms)
Jan 31 16:41:00.974: INFO: (8) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 19.575378ms)
Jan 31 16:41:00.975: INFO: (8) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 20.847446ms)
Jan 31 16:41:00.980: INFO: (8) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 25.463283ms)
Jan 31 16:41:00.981: INFO: (8) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 26.404511ms)
Jan 31 16:41:00.983: INFO: (8) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 29.107992ms)
Jan 31 16:41:00.983: INFO: (8) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 29.281572ms)
Jan 31 16:41:00.983: INFO: (8) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 29.451865ms)
Jan 31 16:41:00.986: INFO: (8) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 31.753973ms)
Jan 31 16:41:00.987: INFO: (8) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 32.845579ms)
Jan 31 16:41:00.987: INFO: (8) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 33.243264ms)
Jan 31 16:41:00.988: INFO: (8) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 34.132335ms)
Jan 31 16:41:00.989: INFO: (8) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 34.896779ms)
Jan 31 16:41:00.990: INFO: (8) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 35.958377ms)
Jan 31 16:41:00.991: INFO: (8) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 36.584827ms)
Jan 31 16:41:01.003: INFO: (9) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 12.285587ms)
Jan 31 16:41:01.003: INFO: (9) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 12.282553ms)
Jan 31 16:41:01.003: INFO: (9) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 12.298032ms)
Jan 31 16:41:01.011: INFO: (9) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 20.530333ms)
Jan 31 16:41:01.011: INFO: (9) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 20.68577ms)
Jan 31 16:41:01.011: INFO: (9) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 20.56995ms)
Jan 31 16:41:01.013: INFO: (9) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 21.595569ms)
Jan 31 16:41:01.014: INFO: (9) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 23.250164ms)
Jan 31 16:41:01.017: INFO: (9) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 25.885525ms)
Jan 31 16:41:01.019: INFO: (9) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 28.553959ms)
Jan 31 16:41:01.021: INFO: (9) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 30.412613ms)
Jan 31 16:41:01.022: INFO: (9) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 30.870604ms)
Jan 31 16:41:01.022: INFO: (9) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 31.40569ms)
Jan 31 16:41:01.023: INFO: (9) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 32.519198ms)
Jan 31 16:41:01.023: INFO: (9) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 32.607055ms)
Jan 31 16:41:01.024: INFO: (9) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 33.07764ms)
Jan 31 16:41:01.041: INFO: (10) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 17.213246ms)
Jan 31 16:41:01.041: INFO: (10) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 17.383ms)
Jan 31 16:41:01.047: INFO: (10) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 23.092465ms)
Jan 31 16:41:01.047: INFO: (10) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 23.470214ms)
Jan 31 16:41:01.049: INFO: (10) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 24.766429ms)
Jan 31 16:41:01.050: INFO: (10) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 25.444126ms)
Jan 31 16:41:01.051: INFO: (10) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 26.415904ms)
Jan 31 16:41:01.051: INFO: (10) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 27.199053ms)
Jan 31 16:41:01.054: INFO: (10) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 29.567716ms)
Jan 31 16:41:01.056: INFO: (10) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 31.719147ms)
Jan 31 16:41:01.056: INFO: (10) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 31.682937ms)
Jan 31 16:41:01.059: INFO: (10) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 34.716997ms)
Jan 31 16:41:01.059: INFO: (10) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 34.569265ms)
Jan 31 16:41:01.059: INFO: (10) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 35.010615ms)
Jan 31 16:41:01.061: INFO: (10) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 36.465221ms)
Jan 31 16:41:01.062: INFO: (10) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 37.362407ms)
Jan 31 16:41:01.071: INFO: (11) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 9.279083ms)
Jan 31 16:41:01.082: INFO: (11) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 20.341435ms)
Jan 31 16:41:01.085: INFO: (11) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 23.490212ms)
Jan 31 16:41:01.090: INFO: (11) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 27.69715ms)
Jan 31 16:41:01.090: INFO: (11) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 27.562735ms)
Jan 31 16:41:01.092: INFO: (11) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 29.342468ms)
Jan 31 16:41:01.097: INFO: (11) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 34.521776ms)
Jan 31 16:41:01.097: INFO: (11) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 34.591408ms)
Jan 31 16:41:01.097: INFO: (11) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 34.645882ms)
Jan 31 16:41:01.098: INFO: (11) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 36.211097ms)
Jan 31 16:41:01.098: INFO: (11) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 36.198855ms)
Jan 31 16:41:01.099: INFO: (11) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 36.208352ms)
Jan 31 16:41:01.099: INFO: (11) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 37.287826ms)
Jan 31 16:41:01.100: INFO: (11) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 37.773428ms)
Jan 31 16:41:01.100: INFO: (11) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 37.829705ms)
Jan 31 16:41:01.101: INFO: (11) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 38.944756ms)
Jan 31 16:41:01.117: INFO: (12) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 15.51592ms)
Jan 31 16:41:01.128: INFO: (12) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 26.142034ms)
Jan 31 16:41:01.128: INFO: (12) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 26.888063ms)
Jan 31 16:41:01.130: INFO: (12) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 28.381852ms)
Jan 31 16:41:01.132: INFO: (12) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 29.408324ms)
Jan 31 16:41:01.133: INFO: (12) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 30.988749ms)
Jan 31 16:41:01.133: INFO: (12) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 31.546458ms)
Jan 31 16:41:01.133: INFO: (12) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 31.807235ms)
Jan 31 16:41:01.134: INFO: (12) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 32.852802ms)
Jan 31 16:41:01.135: INFO: (12) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 32.516012ms)
Jan 31 16:41:01.135: INFO: (12) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 33.251701ms)
Jan 31 16:41:01.136: INFO: (12) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 33.774325ms)
Jan 31 16:41:01.137: INFO: (12) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 35.000125ms)
Jan 31 16:41:01.138: INFO: (12) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 36.116267ms)
Jan 31 16:41:01.139: INFO: (12) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 37.15381ms)
Jan 31 16:41:01.140: INFO: (12) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 38.767829ms)
Jan 31 16:41:01.152: INFO: (13) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 12.179556ms)
Jan 31 16:41:01.162: INFO: (13) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 21.513904ms)
Jan 31 16:41:01.164: INFO: (13) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 24.001894ms)
Jan 31 16:41:01.165: INFO: (13) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 24.625891ms)
Jan 31 16:41:01.165: INFO: (13) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 24.46248ms)
Jan 31 16:41:01.166: INFO: (13) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 26.035791ms)
Jan 31 16:41:01.167: INFO: (13) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 26.599243ms)
Jan 31 16:41:01.170: INFO: (13) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 29.918263ms)
Jan 31 16:41:01.173: INFO: (13) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 32.666027ms)
Jan 31 16:41:01.175: INFO: (13) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 34.138888ms)
Jan 31 16:41:01.175: INFO: (13) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 34.267282ms)
Jan 31 16:41:01.175: INFO: (13) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 34.367904ms)
Jan 31 16:41:01.176: INFO: (13) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 35.626226ms)
Jan 31 16:41:01.176: INFO: (13) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 35.785288ms)
Jan 31 16:41:01.177: INFO: (13) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 36.787804ms)
Jan 31 16:41:01.177: INFO: (13) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 36.400918ms)
Jan 31 16:41:01.193: INFO: (14) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 15.911052ms)
Jan 31 16:41:01.197: INFO: (14) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 19.967494ms)
Jan 31 16:41:01.199: INFO: (14) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 22.23245ms)
Jan 31 16:41:01.199: INFO: (14) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 22.293505ms)
Jan 31 16:41:01.200: INFO: (14) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 22.479831ms)
Jan 31 16:41:01.200: INFO: (14) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 22.288957ms)
Jan 31 16:41:01.200: INFO: (14) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 22.468048ms)
Jan 31 16:41:01.201: INFO: (14) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 23.5319ms)
Jan 31 16:41:01.201: INFO: (14) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 23.473439ms)
Jan 31 16:41:01.202: INFO: (14) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 24.518576ms)
Jan 31 16:41:01.205: INFO: (14) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 27.907972ms)
Jan 31 16:41:01.207: INFO: (14) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 29.789158ms)
Jan 31 16:41:01.207: INFO: (14) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 29.846136ms)
Jan 31 16:41:01.207: INFO: (14) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 30.097294ms)
Jan 31 16:41:01.207: INFO: (14) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 29.984438ms)
Jan 31 16:41:01.207: INFO: (14) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 30.304698ms)
Jan 31 16:41:01.226: INFO: (15) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 18.718168ms)
Jan 31 16:41:01.231: INFO: (15) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 22.834183ms)
Jan 31 16:41:01.235: INFO: (15) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 27.530192ms)
Jan 31 16:41:01.235: INFO: (15) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 27.68195ms)
Jan 31 16:41:01.237: INFO: (15) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 29.47962ms)
Jan 31 16:41:01.237: INFO: (15) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 29.416889ms)
Jan 31 16:41:01.237: INFO: (15) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 29.598213ms)
Jan 31 16:41:01.238: INFO: (15) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 30.551707ms)
Jan 31 16:41:01.240: INFO: (15) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 32.247843ms)
Jan 31 16:41:01.241: INFO: (15) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 32.957321ms)
Jan 31 16:41:01.242: INFO: (15) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 34.010965ms)
Jan 31 16:41:01.242: INFO: (15) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 34.226483ms)
Jan 31 16:41:01.245: INFO: (15) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 36.952146ms)
Jan 31 16:41:01.245: INFO: (15) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 37.024955ms)
Jan 31 16:41:01.245: INFO: (15) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 36.930545ms)
Jan 31 16:41:01.245: INFO: (15) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 37.327129ms)
Jan 31 16:41:01.253: INFO: (16) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 8.31613ms)
Jan 31 16:41:01.264: INFO: (16) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 18.752283ms)
Jan 31 16:41:01.264: INFO: (16) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 18.530381ms)
Jan 31 16:41:01.265: INFO: (16) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 19.479826ms)
Jan 31 16:41:01.265: INFO: (16) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 19.612479ms)
Jan 31 16:41:01.267: INFO: (16) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 21.694547ms)
Jan 31 16:41:01.269: INFO: (16) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 23.610679ms)
Jan 31 16:41:01.269: INFO: (16) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 23.565293ms)
Jan 31 16:41:01.270: INFO: (16) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 24.492818ms)
Jan 31 16:41:01.271: INFO: (16) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 25.49377ms)
Jan 31 16:41:01.274: INFO: (16) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 28.594236ms)
Jan 31 16:41:01.274: INFO: (16) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 29.134172ms)
Jan 31 16:41:01.277: INFO: (16) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 31.64703ms)
Jan 31 16:41:01.277: INFO: (16) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 31.617804ms)
Jan 31 16:41:01.277: INFO: (16) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 31.724087ms)
Jan 31 16:41:01.277: INFO: (16) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 31.675806ms)
Jan 31 16:41:01.286: INFO: (17) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 8.689752ms)
Jan 31 16:41:01.299: INFO: (17) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 22.151988ms)
Jan 31 16:41:01.300: INFO: (17) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 23.200109ms)
Jan 31 16:41:01.301: INFO: (17) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 23.502545ms)
Jan 31 16:41:01.302: INFO: (17) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 24.923557ms)
Jan 31 16:41:01.304: INFO: (17) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 26.52917ms)
Jan 31 16:41:01.306: INFO: (17) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 29.025946ms)
Jan 31 16:41:01.306: INFO: (17) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 29.069839ms)
Jan 31 16:41:01.306: INFO: (17) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 29.075951ms)
Jan 31 16:41:01.311: INFO: (17) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 34.064406ms)
Jan 31 16:41:01.311: INFO: (17) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 34.057574ms)
Jan 31 16:41:01.311: INFO: (17) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 33.958715ms)
Jan 31 16:41:01.313: INFO: (17) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 35.329531ms)
Jan 31 16:41:01.313: INFO: (17) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 35.493553ms)
Jan 31 16:41:01.313: INFO: (17) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 35.972184ms)
Jan 31 16:41:01.315: INFO: (17) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 37.547568ms)
Jan 31 16:41:01.333: INFO: (18) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 17.556419ms)
Jan 31 16:41:01.334: INFO: (18) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 18.684114ms)
Jan 31 16:41:01.334: INFO: (18) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 18.643666ms)
Jan 31 16:41:01.334: INFO: (18) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 18.865659ms)
Jan 31 16:41:01.334: INFO: (18) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 18.879604ms)
Jan 31 16:41:01.335: INFO: (18) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 19.637937ms)
Jan 31 16:41:01.335: INFO: (18) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 19.71892ms)
Jan 31 16:41:01.335: INFO: (18) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 20.370129ms)
Jan 31 16:41:01.339: INFO: (18) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 24.119508ms)
Jan 31 16:41:01.342: INFO: (18) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 26.773694ms)
Jan 31 16:41:01.343: INFO: (18) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 27.847416ms)
Jan 31 16:41:01.343: INFO: (18) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 27.842987ms)
Jan 31 16:41:01.343: INFO: (18) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 27.835923ms)
Jan 31 16:41:01.345: INFO: (18) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 29.814586ms)
Jan 31 16:41:01.345: INFO: (18) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 29.802633ms)
Jan 31 16:41:01.345: INFO: (18) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 30.041887ms)
Jan 31 16:41:01.354: INFO: (19) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 8.827593ms)
Jan 31 16:41:01.363: INFO: (19) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 18.074755ms)
Jan 31 16:41:01.367: INFO: (19) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 21.241445ms)
Jan 31 16:41:01.370: INFO: (19) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 24.248833ms)
Jan 31 16:41:01.371: INFO: (19) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 25.999451ms)
Jan 31 16:41:01.372: INFO: (19) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 26.745391ms)
Jan 31 16:41:01.376: INFO: (19) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 30.524636ms)
Jan 31 16:41:01.379: INFO: (19) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 33.307386ms)
Jan 31 16:41:01.379: INFO: (19) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 33.313137ms)
Jan 31 16:41:01.379: INFO: (19) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 33.450168ms)
Jan 31 16:41:01.381: INFO: (19) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 35.760912ms)
Jan 31 16:41:01.381: INFO: (19) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 35.911097ms)
Jan 31 16:41:01.381: INFO: (19) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 36.113341ms)
Jan 31 16:41:01.385: INFO: (19) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 39.85227ms)
Jan 31 16:41:01.385: INFO: (19) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 39.889862ms)
Jan 31 16:41:01.390: INFO: (19) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 44.566854ms)
STEP: deleting ReplicationController proxy-service-jcdzi in namespace proxy-5412, will wait for the garbage collector to delete the pods 01/31/23 16:41:01.39
Jan 31 16:41:01.457: INFO: Deleting ReplicationController proxy-service-jcdzi took: 5.94849ms
Jan 31 16:41:01.557: INFO: Terminating ReplicationController proxy-service-jcdzi pods took: 100.369001ms
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Jan 31 16:41:02.758: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-5412" for this suite. 01/31/23 16:41:02.764
------------------------------
â€¢ [SLOW TEST] [5.283 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/network/proxy.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:40:57.488
    Jan 31 16:40:57.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename proxy 01/31/23 16:40:57.49
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:40:57.511
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:40:57.519
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] should proxy through a service and a pod  [Conformance]
      test/e2e/network/proxy.go:101
    STEP: starting an echo server on multiple ports 01/31/23 16:40:57.563
    STEP: creating replication controller proxy-service-jcdzi in namespace proxy-5412 01/31/23 16:40:57.563
    I0131 16:40:57.573440      23 runners.go:193] Created replication controller with name: proxy-service-jcdzi, namespace: proxy-5412, replica count: 1
    I0131 16:40:58.626999      23 runners.go:193] proxy-service-jcdzi Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0131 16:40:59.627482      23 runners.go:193] proxy-service-jcdzi Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
    I0131 16:41:00.628419      23 runners.go:193] proxy-service-jcdzi Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 31 16:41:00.635: INFO: setup took 3.107472923s, starting test cases
    STEP: running 16 cases, 20 attempts per case, 320 total attempts 01/31/23 16:41:00.635
    Jan 31 16:41:00.665: INFO: (0) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 30.146918ms)
    Jan 31 16:41:00.665: INFO: (0) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 30.577496ms)
    Jan 31 16:41:00.665: INFO: (0) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 30.403134ms)
    Jan 31 16:41:00.666: INFO: (0) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 30.651438ms)
    Jan 31 16:41:00.666: INFO: (0) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 30.802925ms)
    Jan 31 16:41:00.668: INFO: (0) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 32.658885ms)
    Jan 31 16:41:00.670: INFO: (0) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 34.793472ms)
    Jan 31 16:41:00.674: INFO: (0) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 38.689479ms)
    Jan 31 16:41:00.674: INFO: (0) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 38.828774ms)
    Jan 31 16:41:00.674: INFO: (0) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 38.790011ms)
    Jan 31 16:41:00.675: INFO: (0) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 40.074233ms)
    Jan 31 16:41:00.678: INFO: (0) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 43.16564ms)
    Jan 31 16:41:00.679: INFO: (0) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 43.458997ms)
    Jan 31 16:41:00.679: INFO: (0) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 44.235985ms)
    Jan 31 16:41:00.679: INFO: (0) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 44.266653ms)
    Jan 31 16:41:00.679: INFO: (0) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 44.038499ms)
    Jan 31 16:41:00.693: INFO: (1) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 13.368077ms)
    Jan 31 16:41:00.700: INFO: (1) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 19.655991ms)
    Jan 31 16:41:00.702: INFO: (1) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 22.706431ms)
    Jan 31 16:41:00.703: INFO: (1) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 23.33142ms)
    Jan 31 16:41:00.708: INFO: (1) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 27.688543ms)
    Jan 31 16:41:00.711: INFO: (1) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 31.311302ms)
    Jan 31 16:41:00.712: INFO: (1) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 32.62033ms)
    Jan 31 16:41:00.713: INFO: (1) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 33.405974ms)
    Jan 31 16:41:00.714: INFO: (1) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 34.478123ms)
    Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 46.412734ms)
    Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 46.209287ms)
    Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 46.20535ms)
    Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 46.582677ms)
    Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 46.667618ms)
    Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 46.844564ms)
    Jan 31 16:41:00.726: INFO: (1) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 46.306713ms)
    Jan 31 16:41:00.754: INFO: (2) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 27.47076ms)
    Jan 31 16:41:00.754: INFO: (2) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 26.909903ms)
    Jan 31 16:41:00.756: INFO: (2) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 30.027711ms)
    Jan 31 16:41:00.757: INFO: (2) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 30.73742ms)
    Jan 31 16:41:00.760: INFO: (2) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 33.825953ms)
    Jan 31 16:41:00.760: INFO: (2) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 33.833598ms)
    Jan 31 16:41:00.761: INFO: (2) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 34.195345ms)
    Jan 31 16:41:00.763: INFO: (2) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 36.294746ms)
    Jan 31 16:41:00.766: INFO: (2) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 39.411242ms)
    Jan 31 16:41:00.766: INFO: (2) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 39.022543ms)
    Jan 31 16:41:00.769: INFO: (2) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 42.116104ms)
    Jan 31 16:41:00.769: INFO: (2) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 42.27212ms)
    Jan 31 16:41:00.770: INFO: (2) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 43.214562ms)
    Jan 31 16:41:00.771: INFO: (2) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 43.913963ms)
    Jan 31 16:41:00.771: INFO: (2) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 44.409075ms)
    Jan 31 16:41:00.771: INFO: (2) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 44.321187ms)
    Jan 31 16:41:00.789: INFO: (3) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 18.179685ms)
    Jan 31 16:41:00.789: INFO: (3) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 15.94257ms)
    Jan 31 16:41:00.790: INFO: (3) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 18.826024ms)
    Jan 31 16:41:00.791: INFO: (3) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 19.90793ms)
    Jan 31 16:41:00.791: INFO: (3) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 19.956192ms)
    Jan 31 16:41:00.797: INFO: (3) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 26.179934ms)
    Jan 31 16:41:00.799: INFO: (3) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 27.85522ms)
    Jan 31 16:41:00.799: INFO: (3) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 27.811608ms)
    Jan 31 16:41:00.800: INFO: (3) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 28.955963ms)
    Jan 31 16:41:00.800: INFO: (3) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 29.129103ms)
    Jan 31 16:41:00.801: INFO: (3) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 30.021439ms)
    Jan 31 16:41:00.801: INFO: (3) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 30.199898ms)
    Jan 31 16:41:00.802: INFO: (3) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 30.907052ms)
    Jan 31 16:41:00.803: INFO: (3) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 32.242241ms)
    Jan 31 16:41:00.803: INFO: (3) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 32.118206ms)
    Jan 31 16:41:00.804: INFO: (3) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 32.905101ms)
    Jan 31 16:41:00.820: INFO: (4) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 15.716712ms)
    Jan 31 16:41:00.820: INFO: (4) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 15.485532ms)
    Jan 31 16:41:00.822: INFO: (4) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 18.033497ms)
    Jan 31 16:41:00.824: INFO: (4) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 20.312189ms)
    Jan 31 16:41:00.827: INFO: (4) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 22.783608ms)
    Jan 31 16:41:00.828: INFO: (4) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 23.549915ms)
    Jan 31 16:41:00.831: INFO: (4) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 26.771009ms)
    Jan 31 16:41:00.836: INFO: (4) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 31.266205ms)
    Jan 31 16:41:00.836: INFO: (4) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 31.303055ms)
    Jan 31 16:41:00.836: INFO: (4) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 31.261467ms)
    Jan 31 16:41:00.838: INFO: (4) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 34.004843ms)
    Jan 31 16:41:00.838: INFO: (4) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 34.155398ms)
    Jan 31 16:41:00.840: INFO: (4) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 36.211307ms)
    Jan 31 16:41:00.840: INFO: (4) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 35.744651ms)
    Jan 31 16:41:00.841: INFO: (4) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 36.631706ms)
    Jan 31 16:41:00.841: INFO: (4) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 36.481551ms)
    Jan 31 16:41:00.858: INFO: (5) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 17.272579ms)
    Jan 31 16:41:00.859: INFO: (5) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 18.030761ms)
    Jan 31 16:41:00.864: INFO: (5) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 22.745697ms)
    Jan 31 16:41:00.866: INFO: (5) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 24.926162ms)
    Jan 31 16:41:00.874: INFO: (5) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 32.050547ms)
    Jan 31 16:41:00.874: INFO: (5) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 32.36225ms)
    Jan 31 16:41:00.874: INFO: (5) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 32.602085ms)
    Jan 31 16:41:00.874: INFO: (5) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 32.701225ms)
    Jan 31 16:41:00.881: INFO: (5) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 39.202376ms)
    Jan 31 16:41:00.881: INFO: (5) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 39.508877ms)
    Jan 31 16:41:00.881: INFO: (5) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 39.377127ms)
    Jan 31 16:41:00.883: INFO: (5) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 42.038107ms)
    Jan 31 16:41:00.883: INFO: (5) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 41.676068ms)
    Jan 31 16:41:00.884: INFO: (5) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 42.430281ms)
    Jan 31 16:41:00.884: INFO: (5) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 42.436745ms)
    Jan 31 16:41:00.884: INFO: (5) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 42.538697ms)
    Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 25.267661ms)
    Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 25.836012ms)
    Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 25.691979ms)
    Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 25.777851ms)
    Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 26.148095ms)
    Jan 31 16:41:00.910: INFO: (6) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 26.009882ms)
    Jan 31 16:41:00.912: INFO: (6) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 27.767033ms)
    Jan 31 16:41:00.915: INFO: (6) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 30.688418ms)
    Jan 31 16:41:00.917: INFO: (6) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 32.590674ms)
    Jan 31 16:41:00.917: INFO: (6) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 32.506875ms)
    Jan 31 16:41:00.918: INFO: (6) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 33.539198ms)
    Jan 31 16:41:00.919: INFO: (6) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 34.925864ms)
    Jan 31 16:41:00.919: INFO: (6) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 35.114373ms)
    Jan 31 16:41:00.920: INFO: (6) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 35.767625ms)
    Jan 31 16:41:00.921: INFO: (6) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 36.452306ms)
    Jan 31 16:41:00.921: INFO: (6) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 36.895839ms)
    Jan 31 16:41:00.941: INFO: (7) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 19.438468ms)
    Jan 31 16:41:00.941: INFO: (7) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 19.497159ms)
    Jan 31 16:41:00.941: INFO: (7) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 19.398863ms)
    Jan 31 16:41:00.941: INFO: (7) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 19.648777ms)
    Jan 31 16:41:00.941: INFO: (7) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 19.325101ms)
    Jan 31 16:41:00.943: INFO: (7) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 20.871762ms)
    Jan 31 16:41:00.944: INFO: (7) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 22.221509ms)
    Jan 31 16:41:00.949: INFO: (7) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 27.269156ms)
    Jan 31 16:41:00.949: INFO: (7) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 27.040762ms)
    Jan 31 16:41:00.949: INFO: (7) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 27.244539ms)
    Jan 31 16:41:00.949: INFO: (7) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 27.569416ms)
    Jan 31 16:41:00.950: INFO: (7) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 28.829062ms)
    Jan 31 16:41:00.950: INFO: (7) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 29.019013ms)
    Jan 31 16:41:00.953: INFO: (7) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 31.542572ms)
    Jan 31 16:41:00.953: INFO: (7) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 31.482557ms)
    Jan 31 16:41:00.954: INFO: (7) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 32.158863ms)
    Jan 31 16:41:00.964: INFO: (8) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 10.065368ms)
    Jan 31 16:41:00.965: INFO: (8) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 11.421857ms)
    Jan 31 16:41:00.974: INFO: (8) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 19.575378ms)
    Jan 31 16:41:00.975: INFO: (8) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 20.847446ms)
    Jan 31 16:41:00.980: INFO: (8) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 25.463283ms)
    Jan 31 16:41:00.981: INFO: (8) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 26.404511ms)
    Jan 31 16:41:00.983: INFO: (8) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 29.107992ms)
    Jan 31 16:41:00.983: INFO: (8) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 29.281572ms)
    Jan 31 16:41:00.983: INFO: (8) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 29.451865ms)
    Jan 31 16:41:00.986: INFO: (8) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 31.753973ms)
    Jan 31 16:41:00.987: INFO: (8) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 32.845579ms)
    Jan 31 16:41:00.987: INFO: (8) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 33.243264ms)
    Jan 31 16:41:00.988: INFO: (8) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 34.132335ms)
    Jan 31 16:41:00.989: INFO: (8) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 34.896779ms)
    Jan 31 16:41:00.990: INFO: (8) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 35.958377ms)
    Jan 31 16:41:00.991: INFO: (8) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 36.584827ms)
    Jan 31 16:41:01.003: INFO: (9) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 12.285587ms)
    Jan 31 16:41:01.003: INFO: (9) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 12.282553ms)
    Jan 31 16:41:01.003: INFO: (9) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 12.298032ms)
    Jan 31 16:41:01.011: INFO: (9) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 20.530333ms)
    Jan 31 16:41:01.011: INFO: (9) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 20.68577ms)
    Jan 31 16:41:01.011: INFO: (9) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 20.56995ms)
    Jan 31 16:41:01.013: INFO: (9) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 21.595569ms)
    Jan 31 16:41:01.014: INFO: (9) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 23.250164ms)
    Jan 31 16:41:01.017: INFO: (9) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 25.885525ms)
    Jan 31 16:41:01.019: INFO: (9) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 28.553959ms)
    Jan 31 16:41:01.021: INFO: (9) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 30.412613ms)
    Jan 31 16:41:01.022: INFO: (9) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 30.870604ms)
    Jan 31 16:41:01.022: INFO: (9) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 31.40569ms)
    Jan 31 16:41:01.023: INFO: (9) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 32.519198ms)
    Jan 31 16:41:01.023: INFO: (9) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 32.607055ms)
    Jan 31 16:41:01.024: INFO: (9) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 33.07764ms)
    Jan 31 16:41:01.041: INFO: (10) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 17.213246ms)
    Jan 31 16:41:01.041: INFO: (10) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 17.383ms)
    Jan 31 16:41:01.047: INFO: (10) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 23.092465ms)
    Jan 31 16:41:01.047: INFO: (10) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 23.470214ms)
    Jan 31 16:41:01.049: INFO: (10) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 24.766429ms)
    Jan 31 16:41:01.050: INFO: (10) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 25.444126ms)
    Jan 31 16:41:01.051: INFO: (10) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 26.415904ms)
    Jan 31 16:41:01.051: INFO: (10) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 27.199053ms)
    Jan 31 16:41:01.054: INFO: (10) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 29.567716ms)
    Jan 31 16:41:01.056: INFO: (10) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 31.719147ms)
    Jan 31 16:41:01.056: INFO: (10) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 31.682937ms)
    Jan 31 16:41:01.059: INFO: (10) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 34.716997ms)
    Jan 31 16:41:01.059: INFO: (10) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 34.569265ms)
    Jan 31 16:41:01.059: INFO: (10) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 35.010615ms)
    Jan 31 16:41:01.061: INFO: (10) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 36.465221ms)
    Jan 31 16:41:01.062: INFO: (10) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 37.362407ms)
    Jan 31 16:41:01.071: INFO: (11) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 9.279083ms)
    Jan 31 16:41:01.082: INFO: (11) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 20.341435ms)
    Jan 31 16:41:01.085: INFO: (11) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 23.490212ms)
    Jan 31 16:41:01.090: INFO: (11) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 27.69715ms)
    Jan 31 16:41:01.090: INFO: (11) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 27.562735ms)
    Jan 31 16:41:01.092: INFO: (11) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 29.342468ms)
    Jan 31 16:41:01.097: INFO: (11) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 34.521776ms)
    Jan 31 16:41:01.097: INFO: (11) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 34.591408ms)
    Jan 31 16:41:01.097: INFO: (11) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 34.645882ms)
    Jan 31 16:41:01.098: INFO: (11) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 36.211097ms)
    Jan 31 16:41:01.098: INFO: (11) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 36.198855ms)
    Jan 31 16:41:01.099: INFO: (11) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 36.208352ms)
    Jan 31 16:41:01.099: INFO: (11) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 37.287826ms)
    Jan 31 16:41:01.100: INFO: (11) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 37.773428ms)
    Jan 31 16:41:01.100: INFO: (11) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 37.829705ms)
    Jan 31 16:41:01.101: INFO: (11) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 38.944756ms)
    Jan 31 16:41:01.117: INFO: (12) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 15.51592ms)
    Jan 31 16:41:01.128: INFO: (12) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 26.142034ms)
    Jan 31 16:41:01.128: INFO: (12) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 26.888063ms)
    Jan 31 16:41:01.130: INFO: (12) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 28.381852ms)
    Jan 31 16:41:01.132: INFO: (12) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 29.408324ms)
    Jan 31 16:41:01.133: INFO: (12) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 30.988749ms)
    Jan 31 16:41:01.133: INFO: (12) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 31.546458ms)
    Jan 31 16:41:01.133: INFO: (12) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 31.807235ms)
    Jan 31 16:41:01.134: INFO: (12) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 32.852802ms)
    Jan 31 16:41:01.135: INFO: (12) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 32.516012ms)
    Jan 31 16:41:01.135: INFO: (12) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 33.251701ms)
    Jan 31 16:41:01.136: INFO: (12) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 33.774325ms)
    Jan 31 16:41:01.137: INFO: (12) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 35.000125ms)
    Jan 31 16:41:01.138: INFO: (12) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 36.116267ms)
    Jan 31 16:41:01.139: INFO: (12) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 37.15381ms)
    Jan 31 16:41:01.140: INFO: (12) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 38.767829ms)
    Jan 31 16:41:01.152: INFO: (13) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 12.179556ms)
    Jan 31 16:41:01.162: INFO: (13) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 21.513904ms)
    Jan 31 16:41:01.164: INFO: (13) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 24.001894ms)
    Jan 31 16:41:01.165: INFO: (13) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 24.625891ms)
    Jan 31 16:41:01.165: INFO: (13) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 24.46248ms)
    Jan 31 16:41:01.166: INFO: (13) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 26.035791ms)
    Jan 31 16:41:01.167: INFO: (13) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 26.599243ms)
    Jan 31 16:41:01.170: INFO: (13) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 29.918263ms)
    Jan 31 16:41:01.173: INFO: (13) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 32.666027ms)
    Jan 31 16:41:01.175: INFO: (13) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 34.138888ms)
    Jan 31 16:41:01.175: INFO: (13) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 34.267282ms)
    Jan 31 16:41:01.175: INFO: (13) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 34.367904ms)
    Jan 31 16:41:01.176: INFO: (13) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 35.626226ms)
    Jan 31 16:41:01.176: INFO: (13) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 35.785288ms)
    Jan 31 16:41:01.177: INFO: (13) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 36.787804ms)
    Jan 31 16:41:01.177: INFO: (13) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 36.400918ms)
    Jan 31 16:41:01.193: INFO: (14) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 15.911052ms)
    Jan 31 16:41:01.197: INFO: (14) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 19.967494ms)
    Jan 31 16:41:01.199: INFO: (14) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 22.23245ms)
    Jan 31 16:41:01.199: INFO: (14) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 22.293505ms)
    Jan 31 16:41:01.200: INFO: (14) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 22.479831ms)
    Jan 31 16:41:01.200: INFO: (14) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 22.288957ms)
    Jan 31 16:41:01.200: INFO: (14) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 22.468048ms)
    Jan 31 16:41:01.201: INFO: (14) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 23.5319ms)
    Jan 31 16:41:01.201: INFO: (14) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 23.473439ms)
    Jan 31 16:41:01.202: INFO: (14) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 24.518576ms)
    Jan 31 16:41:01.205: INFO: (14) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 27.907972ms)
    Jan 31 16:41:01.207: INFO: (14) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 29.789158ms)
    Jan 31 16:41:01.207: INFO: (14) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 29.846136ms)
    Jan 31 16:41:01.207: INFO: (14) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 30.097294ms)
    Jan 31 16:41:01.207: INFO: (14) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 29.984438ms)
    Jan 31 16:41:01.207: INFO: (14) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 30.304698ms)
    Jan 31 16:41:01.226: INFO: (15) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 18.718168ms)
    Jan 31 16:41:01.231: INFO: (15) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 22.834183ms)
    Jan 31 16:41:01.235: INFO: (15) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 27.530192ms)
    Jan 31 16:41:01.235: INFO: (15) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 27.68195ms)
    Jan 31 16:41:01.237: INFO: (15) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 29.47962ms)
    Jan 31 16:41:01.237: INFO: (15) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 29.416889ms)
    Jan 31 16:41:01.237: INFO: (15) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 29.598213ms)
    Jan 31 16:41:01.238: INFO: (15) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 30.551707ms)
    Jan 31 16:41:01.240: INFO: (15) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 32.247843ms)
    Jan 31 16:41:01.241: INFO: (15) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 32.957321ms)
    Jan 31 16:41:01.242: INFO: (15) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 34.010965ms)
    Jan 31 16:41:01.242: INFO: (15) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 34.226483ms)
    Jan 31 16:41:01.245: INFO: (15) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 36.952146ms)
    Jan 31 16:41:01.245: INFO: (15) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 37.024955ms)
    Jan 31 16:41:01.245: INFO: (15) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 36.930545ms)
    Jan 31 16:41:01.245: INFO: (15) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 37.327129ms)
    Jan 31 16:41:01.253: INFO: (16) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 8.31613ms)
    Jan 31 16:41:01.264: INFO: (16) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 18.752283ms)
    Jan 31 16:41:01.264: INFO: (16) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 18.530381ms)
    Jan 31 16:41:01.265: INFO: (16) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 19.479826ms)
    Jan 31 16:41:01.265: INFO: (16) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 19.612479ms)
    Jan 31 16:41:01.267: INFO: (16) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 21.694547ms)
    Jan 31 16:41:01.269: INFO: (16) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 23.610679ms)
    Jan 31 16:41:01.269: INFO: (16) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 23.565293ms)
    Jan 31 16:41:01.270: INFO: (16) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 24.492818ms)
    Jan 31 16:41:01.271: INFO: (16) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 25.49377ms)
    Jan 31 16:41:01.274: INFO: (16) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 28.594236ms)
    Jan 31 16:41:01.274: INFO: (16) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 29.134172ms)
    Jan 31 16:41:01.277: INFO: (16) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 31.64703ms)
    Jan 31 16:41:01.277: INFO: (16) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 31.617804ms)
    Jan 31 16:41:01.277: INFO: (16) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 31.724087ms)
    Jan 31 16:41:01.277: INFO: (16) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 31.675806ms)
    Jan 31 16:41:01.286: INFO: (17) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 8.689752ms)
    Jan 31 16:41:01.299: INFO: (17) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 22.151988ms)
    Jan 31 16:41:01.300: INFO: (17) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 23.200109ms)
    Jan 31 16:41:01.301: INFO: (17) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 23.502545ms)
    Jan 31 16:41:01.302: INFO: (17) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 24.923557ms)
    Jan 31 16:41:01.304: INFO: (17) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 26.52917ms)
    Jan 31 16:41:01.306: INFO: (17) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 29.025946ms)
    Jan 31 16:41:01.306: INFO: (17) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 29.069839ms)
    Jan 31 16:41:01.306: INFO: (17) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 29.075951ms)
    Jan 31 16:41:01.311: INFO: (17) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 34.064406ms)
    Jan 31 16:41:01.311: INFO: (17) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 34.057574ms)
    Jan 31 16:41:01.311: INFO: (17) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 33.958715ms)
    Jan 31 16:41:01.313: INFO: (17) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 35.329531ms)
    Jan 31 16:41:01.313: INFO: (17) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 35.493553ms)
    Jan 31 16:41:01.313: INFO: (17) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 35.972184ms)
    Jan 31 16:41:01.315: INFO: (17) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 37.547568ms)
    Jan 31 16:41:01.333: INFO: (18) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 17.556419ms)
    Jan 31 16:41:01.334: INFO: (18) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 18.684114ms)
    Jan 31 16:41:01.334: INFO: (18) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 18.643666ms)
    Jan 31 16:41:01.334: INFO: (18) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 18.865659ms)
    Jan 31 16:41:01.334: INFO: (18) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 18.879604ms)
    Jan 31 16:41:01.335: INFO: (18) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 19.637937ms)
    Jan 31 16:41:01.335: INFO: (18) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 19.71892ms)
    Jan 31 16:41:01.335: INFO: (18) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 20.370129ms)
    Jan 31 16:41:01.339: INFO: (18) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 24.119508ms)
    Jan 31 16:41:01.342: INFO: (18) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 26.773694ms)
    Jan 31 16:41:01.343: INFO: (18) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 27.847416ms)
    Jan 31 16:41:01.343: INFO: (18) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 27.842987ms)
    Jan 31 16:41:01.343: INFO: (18) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 27.835923ms)
    Jan 31 16:41:01.345: INFO: (18) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 29.814586ms)
    Jan 31 16:41:01.345: INFO: (18) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 29.802633ms)
    Jan 31 16:41:01.345: INFO: (18) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 30.041887ms)
    Jan 31 16:41:01.354: INFO: (19) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:443/proxy/tlsrewritem... (200; 8.827593ms)
    Jan 31 16:41:01.363: INFO: (19) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:460/proxy/: tls baz (200; 18.074755ms)
    Jan 31 16:41:01.367: INFO: (19) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 21.241445ms)
    Jan 31 16:41:01.370: INFO: (19) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">... (200; 24.248833ms)
    Jan 31 16:41:01.371: INFO: (19) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:162/proxy/: bar (200; 25.999451ms)
    Jan 31 16:41:01.372: INFO: (19) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5/proxy/rewriteme">test</a> (200; 26.745391ms)
    Jan 31 16:41:01.376: INFO: (19) /api/v1/namespaces/proxy-5412/pods/https:proxy-service-jcdzi-pwfg5:462/proxy/: tls qux (200; 30.524636ms)
    Jan 31 16:41:01.379: INFO: (19) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname1/proxy/: foo (200; 33.307386ms)
    Jan 31 16:41:01.379: INFO: (19) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:1080/proxy/rewriteme">test<... (200; 33.313137ms)
    Jan 31 16:41:01.379: INFO: (19) /api/v1/namespaces/proxy-5412/pods/proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 33.450168ms)
    Jan 31 16:41:01.381: INFO: (19) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname2/proxy/: tls qux (200; 35.760912ms)
    Jan 31 16:41:01.381: INFO: (19) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname1/proxy/: foo (200; 35.911097ms)
    Jan 31 16:41:01.381: INFO: (19) /api/v1/namespaces/proxy-5412/pods/http:proxy-service-jcdzi-pwfg5:160/proxy/: foo (200; 36.113341ms)
    Jan 31 16:41:01.385: INFO: (19) /api/v1/namespaces/proxy-5412/services/proxy-service-jcdzi:portname2/proxy/: bar (200; 39.85227ms)
    Jan 31 16:41:01.385: INFO: (19) /api/v1/namespaces/proxy-5412/services/http:proxy-service-jcdzi:portname2/proxy/: bar (200; 39.889862ms)
    Jan 31 16:41:01.390: INFO: (19) /api/v1/namespaces/proxy-5412/services/https:proxy-service-jcdzi:tlsportname1/proxy/: tls baz (200; 44.566854ms)
    STEP: deleting ReplicationController proxy-service-jcdzi in namespace proxy-5412, will wait for the garbage collector to delete the pods 01/31/23 16:41:01.39
    Jan 31 16:41:01.457: INFO: Deleting ReplicationController proxy-service-jcdzi took: 5.94849ms
    Jan 31 16:41:01.557: INFO: Terminating ReplicationController proxy-service-jcdzi pods took: 100.369001ms
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:41:02.758: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-5412" for this suite. 01/31/23 16:41:02.764
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:41:02.772
Jan 31 16:41:02.772: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename gc 01/31/23 16:41:02.773
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:02.792
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:02.798
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
STEP: create the deployment 01/31/23 16:41:02.805
STEP: Wait for the Deployment to create new ReplicaSet 01/31/23 16:41:02.812
STEP: delete the deployment 01/31/23 16:41:02.818
STEP: wait for all rs to be garbage collected 01/31/23 16:41:02.827
STEP: expected 0 pods, got 1 pods 01/31/23 16:41:02.841
STEP: expected 0 rs, got 1 rs 01/31/23 16:41:02.861
STEP: Gathering metrics 01/31/23 16:41:03.394
W0131 16:41:03.403547      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jan 31 16:41:03.403: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 31 16:41:03.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-2530" for this suite. 01/31/23 16:41:03.409
------------------------------
â€¢ [0.645 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:41:02.772
    Jan 31 16:41:02.772: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename gc 01/31/23 16:41:02.773
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:02.792
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:02.798
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete RS created by deployment when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:491
    STEP: create the deployment 01/31/23 16:41:02.805
    STEP: Wait for the Deployment to create new ReplicaSet 01/31/23 16:41:02.812
    STEP: delete the deployment 01/31/23 16:41:02.818
    STEP: wait for all rs to be garbage collected 01/31/23 16:41:02.827
    STEP: expected 0 pods, got 1 pods 01/31/23 16:41:02.841
    STEP: expected 0 rs, got 1 rs 01/31/23 16:41:02.861
    STEP: Gathering metrics 01/31/23 16:41:03.394
    W0131 16:41:03.403547      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Jan 31 16:41:03.403: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:41:03.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-2530" for this suite. 01/31/23 16:41:03.409
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:41:03.418
Jan 31 16:41:03.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sysctl 01/31/23 16:41:03.419
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:03.437
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:03.442
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 01/31/23 16:41:03.451
STEP: Watching for error events or started pod 01/31/23 16:41:03.464
STEP: Waiting for pod completion 01/31/23 16:41:05.473
Jan 31 16:41:05.473: INFO: Waiting up to 3m0s for pod "sysctl-2a97ab9e-bfa4-4c97-8fee-cb48d70db830" in namespace "sysctl-2252" to be "completed"
Jan 31 16:41:05.480: INFO: Pod "sysctl-2a97ab9e-bfa4-4c97-8fee-cb48d70db830": Phase="Pending", Reason="", readiness=false. Elapsed: 7.229515ms
Jan 31 16:41:07.491: INFO: Pod "sysctl-2a97ab9e-bfa4-4c97-8fee-cb48d70db830": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.017408186s
Jan 31 16:41:07.491: INFO: Pod "sysctl-2a97ab9e-bfa4-4c97-8fee-cb48d70db830" satisfied condition "completed"
STEP: Checking that the pod succeeded 01/31/23 16:41:07.499
STEP: Getting logs from the pod 01/31/23 16:41:07.499
STEP: Checking that the sysctl is actually updated 01/31/23 16:41:07.518
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:41:07.518: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-2252" for this suite. 01/31/23 16:41:07.525
------------------------------
â€¢ [4.119 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:41:03.418
    Jan 31 16:41:03.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sysctl 01/31/23 16:41:03.419
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:03.437
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:03.442
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:77
    STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 01/31/23 16:41:03.451
    STEP: Watching for error events or started pod 01/31/23 16:41:03.464
    STEP: Waiting for pod completion 01/31/23 16:41:05.473
    Jan 31 16:41:05.473: INFO: Waiting up to 3m0s for pod "sysctl-2a97ab9e-bfa4-4c97-8fee-cb48d70db830" in namespace "sysctl-2252" to be "completed"
    Jan 31 16:41:05.480: INFO: Pod "sysctl-2a97ab9e-bfa4-4c97-8fee-cb48d70db830": Phase="Pending", Reason="", readiness=false. Elapsed: 7.229515ms
    Jan 31 16:41:07.491: INFO: Pod "sysctl-2a97ab9e-bfa4-4c97-8fee-cb48d70db830": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.017408186s
    Jan 31 16:41:07.491: INFO: Pod "sysctl-2a97ab9e-bfa4-4c97-8fee-cb48d70db830" satisfied condition "completed"
    STEP: Checking that the pod succeeded 01/31/23 16:41:07.499
    STEP: Getting logs from the pod 01/31/23 16:41:07.499
    STEP: Checking that the sysctl is actually updated 01/31/23 16:41:07.518
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:41:07.518: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-2252" for this suite. 01/31/23 16:41:07.525
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:41:07.538
Jan 31 16:41:07.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename statefulset 01/31/23 16:41:07.541
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:07.562
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:07.572
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-8185 01/31/23 16:41:07.582
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
STEP: Creating statefulset ss in namespace statefulset-8185 01/31/23 16:41:07.616
Jan 31 16:41:07.628: INFO: Found 0 stateful pods, waiting for 1
Jan 31 16:41:17.638: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 16:41:27.641: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 16:41:37.636: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label 01/31/23 16:41:37.657
STEP: Getting /status 01/31/23 16:41:37.678
Jan 31 16:41:37.687: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status 01/31/23 16:41:37.687
Jan 31 16:41:37.703: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated 01/31/23 16:41:37.704
Jan 31 16:41:37.709: INFO: Observed &StatefulSet event: ADDED
Jan 31 16:41:37.709: INFO: Found Statefulset ss in namespace statefulset-8185 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 31 16:41:37.709: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status 01/31/23 16:41:37.709
Jan 31 16:41:37.709: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 31 16:41:37.721: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched 01/31/23 16:41:37.721
Jan 31 16:41:37.725: INFO: Observed &StatefulSet event: ADDED
Jan 31 16:41:37.725: INFO: Observed Statefulset ss in namespace statefulset-8185 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 31 16:41:37.726: INFO: Observed &StatefulSet event: MODIFIED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 31 16:41:37.726: INFO: Deleting all statefulset in ns statefulset-8185
Jan 31 16:41:37.730: INFO: Scaling statefulset ss to 0
Jan 31 16:41:47.758: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 16:41:47.767: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 31 16:41:47.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-8185" for this suite. 01/31/23 16:41:47.812
------------------------------
â€¢ [SLOW TEST] [40.280 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/apps/statefulset.go:977

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:41:07.538
    Jan 31 16:41:07.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename statefulset 01/31/23 16:41:07.541
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:07.562
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:07.572
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-8185 01/31/23 16:41:07.582
    [It] should validate Statefulset Status endpoints [Conformance]
      test/e2e/apps/statefulset.go:977
    STEP: Creating statefulset ss in namespace statefulset-8185 01/31/23 16:41:07.616
    Jan 31 16:41:07.628: INFO: Found 0 stateful pods, waiting for 1
    Jan 31 16:41:17.638: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 16:41:27.641: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 16:41:37.636: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Patch Statefulset to include a label 01/31/23 16:41:37.657
    STEP: Getting /status 01/31/23 16:41:37.678
    Jan 31 16:41:37.687: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
    STEP: updating the StatefulSet Status 01/31/23 16:41:37.687
    Jan 31 16:41:37.703: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the statefulset status to be updated 01/31/23 16:41:37.704
    Jan 31 16:41:37.709: INFO: Observed &StatefulSet event: ADDED
    Jan 31 16:41:37.709: INFO: Found Statefulset ss in namespace statefulset-8185 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Jan 31 16:41:37.709: INFO: Statefulset ss has an updated status
    STEP: patching the Statefulset Status 01/31/23 16:41:37.709
    Jan 31 16:41:37.709: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Jan 31 16:41:37.721: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Statefulset status to be patched 01/31/23 16:41:37.721
    Jan 31 16:41:37.725: INFO: Observed &StatefulSet event: ADDED
    Jan 31 16:41:37.725: INFO: Observed Statefulset ss in namespace statefulset-8185 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Jan 31 16:41:37.726: INFO: Observed &StatefulSet event: MODIFIED
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 31 16:41:37.726: INFO: Deleting all statefulset in ns statefulset-8185
    Jan 31 16:41:37.730: INFO: Scaling statefulset ss to 0
    Jan 31 16:41:47.758: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 16:41:47.767: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:41:47.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-8185" for this suite. 01/31/23 16:41:47.812
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:41:47.82
Jan 31 16:41:47.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 16:41:47.821
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:47.838
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:47.843
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
STEP: creating a service externalname-service with the type=ExternalName in namespace services-1076 01/31/23 16:41:47.848
STEP: changing the ExternalName service to type=NodePort 01/31/23 16:41:47.867
STEP: creating replication controller externalname-service in namespace services-1076 01/31/23 16:41:47.919
I0131 16:41:47.927430      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1076, replica count: 2
I0131 16:41:50.978536      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 31 16:41:50.978: INFO: Creating new exec pod
Jan 31 16:41:50.989: INFO: Waiting up to 5m0s for pod "execpodhbstk" in namespace "services-1076" to be "running"
Jan 31 16:41:51.000: INFO: Pod "execpodhbstk": Phase="Pending", Reason="", readiness=false. Elapsed: 11.070187ms
Jan 31 16:41:53.013: INFO: Pod "execpodhbstk": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024410313s
Jan 31 16:41:55.009: INFO: Pod "execpodhbstk": Phase="Running", Reason="", readiness=true. Elapsed: 4.020366715s
Jan 31 16:41:55.009: INFO: Pod "execpodhbstk" satisfied condition "running"
Jan 31 16:41:56.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-1076 exec execpodhbstk -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Jan 31 16:41:56.222: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 31 16:41:56.222: INFO: stdout: ""
Jan 31 16:41:56.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-1076 exec execpodhbstk -- /bin/sh -x -c nc -v -z -w 2 10.111.60.80 80'
Jan 31 16:41:56.379: INFO: stderr: "+ nc -v -z -w 2 10.111.60.80 80\nConnection to 10.111.60.80 80 port [tcp/http] succeeded!\n"
Jan 31 16:41:56.379: INFO: stdout: ""
Jan 31 16:41:56.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-1076 exec execpodhbstk -- /bin/sh -x -c nc -v -z -w 2 192.168.61.199 32388'
Jan 31 16:41:56.589: INFO: stderr: "+ nc -v -z -w 2 192.168.61.199 32388\nConnection to 192.168.61.199 32388 port [tcp/*] succeeded!\n"
Jan 31 16:41:56.589: INFO: stdout: ""
Jan 31 16:41:56.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-1076 exec execpodhbstk -- /bin/sh -x -c nc -v -z -w 2 192.168.61.148 32388'
Jan 31 16:41:56.769: INFO: stderr: "+ nc -v -z -w 2 192.168.61.148 32388\nConnection to 192.168.61.148 32388 port [tcp/*] succeeded!\n"
Jan 31 16:41:56.769: INFO: stdout: ""
Jan 31 16:41:56.769: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 16:41:56.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-1076" for this suite. 01/31/23 16:41:56.806
------------------------------
â€¢ [SLOW TEST] [8.996 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:41:47.82
    Jan 31 16:41:47.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 16:41:47.821
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:47.838
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:47.843
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to NodePort [Conformance]
      test/e2e/network/service.go:1477
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-1076 01/31/23 16:41:47.848
    STEP: changing the ExternalName service to type=NodePort 01/31/23 16:41:47.867
    STEP: creating replication controller externalname-service in namespace services-1076 01/31/23 16:41:47.919
    I0131 16:41:47.927430      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1076, replica count: 2
    I0131 16:41:50.978536      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 31 16:41:50.978: INFO: Creating new exec pod
    Jan 31 16:41:50.989: INFO: Waiting up to 5m0s for pod "execpodhbstk" in namespace "services-1076" to be "running"
    Jan 31 16:41:51.000: INFO: Pod "execpodhbstk": Phase="Pending", Reason="", readiness=false. Elapsed: 11.070187ms
    Jan 31 16:41:53.013: INFO: Pod "execpodhbstk": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024410313s
    Jan 31 16:41:55.009: INFO: Pod "execpodhbstk": Phase="Running", Reason="", readiness=true. Elapsed: 4.020366715s
    Jan 31 16:41:55.009: INFO: Pod "execpodhbstk" satisfied condition "running"
    Jan 31 16:41:56.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-1076 exec execpodhbstk -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Jan 31 16:41:56.222: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Jan 31 16:41:56.222: INFO: stdout: ""
    Jan 31 16:41:56.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-1076 exec execpodhbstk -- /bin/sh -x -c nc -v -z -w 2 10.111.60.80 80'
    Jan 31 16:41:56.379: INFO: stderr: "+ nc -v -z -w 2 10.111.60.80 80\nConnection to 10.111.60.80 80 port [tcp/http] succeeded!\n"
    Jan 31 16:41:56.379: INFO: stdout: ""
    Jan 31 16:41:56.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-1076 exec execpodhbstk -- /bin/sh -x -c nc -v -z -w 2 192.168.61.199 32388'
    Jan 31 16:41:56.589: INFO: stderr: "+ nc -v -z -w 2 192.168.61.199 32388\nConnection to 192.168.61.199 32388 port [tcp/*] succeeded!\n"
    Jan 31 16:41:56.589: INFO: stdout: ""
    Jan 31 16:41:56.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-1076 exec execpodhbstk -- /bin/sh -x -c nc -v -z -w 2 192.168.61.148 32388'
    Jan 31 16:41:56.769: INFO: stderr: "+ nc -v -z -w 2 192.168.61.148 32388\nConnection to 192.168.61.148 32388 port [tcp/*] succeeded!\n"
    Jan 31 16:41:56.769: INFO: stdout: ""
    Jan 31 16:41:56.769: INFO: Cleaning up the ExternalName to NodePort test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:41:56.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-1076" for this suite. 01/31/23 16:41:56.806
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:41:56.818
Jan 31 16:41:56.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename disruption 01/31/23 16:41:56.819
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:56.84
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:56.847
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:41:56.854
Jan 31 16:41:56.854: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename disruption-2 01/31/23 16:41:56.855
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:56.873
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:56.881
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
STEP: Waiting for the pdb to be processed 01/31/23 16:41:56.897
STEP: Waiting for the pdb to be processed 01/31/23 16:41:58.921
STEP: Waiting for the pdb to be processed 01/31/23 16:41:58.943
STEP: listing a collection of PDBs across all namespaces 01/31/23 16:42:00.959
STEP: listing a collection of PDBs in namespace disruption-592 01/31/23 16:42:00.974
STEP: deleting a collection of PDBs 01/31/23 16:42:00.981
STEP: Waiting for the PDB collection to be deleted 01/31/23 16:42:00.994
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/node/init/init.go:32
Jan 31 16:42:01.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Jan 31 16:42:01.012: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  dump namespaces | framework.go:196
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-2-5308" for this suite. 01/31/23 16:42:01.019
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-592" for this suite. 01/31/23 16:42:01.031
------------------------------
â€¢ [4.220 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:78
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/apps/disruption.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:41:56.818
    Jan 31 16:41:56.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename disruption 01/31/23 16:41:56.819
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:56.84
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:56.847
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:41:56.854
    Jan 31 16:41:56.854: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename disruption-2 01/31/23 16:41:56.855
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:41:56.873
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:41:56.881
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of PodDisruptionBudgets [Conformance]
      test/e2e/apps/disruption.go:87
    STEP: Waiting for the pdb to be processed 01/31/23 16:41:56.897
    STEP: Waiting for the pdb to be processed 01/31/23 16:41:58.921
    STEP: Waiting for the pdb to be processed 01/31/23 16:41:58.943
    STEP: listing a collection of PDBs across all namespaces 01/31/23 16:42:00.959
    STEP: listing a collection of PDBs in namespace disruption-592 01/31/23 16:42:00.974
    STEP: deleting a collection of PDBs 01/31/23 16:42:00.981
    STEP: Waiting for the PDB collection to be deleted 01/31/23 16:42:00.994
    [AfterEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:42:01.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:42:01.012: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-2-5308" for this suite. 01/31/23 16:42:01.019
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-592" for this suite. 01/31/23 16:42:01.031
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:42:01.039
Jan 31 16:42:01.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 16:42:01.04
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:01.055
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:01.061
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
STEP: Creating the pod 01/31/23 16:42:01.068
Jan 31 16:42:01.078: INFO: Waiting up to 5m0s for pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47" in namespace "downward-api-5523" to be "running and ready"
Jan 31 16:42:01.085: INFO: Pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47": Phase="Pending", Reason="", readiness=false. Elapsed: 6.371433ms
Jan 31 16:42:01.085: INFO: The phase of Pod annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:42:03.093: INFO: Pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014984169s
Jan 31 16:42:03.093: INFO: The phase of Pod annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:42:05.092: INFO: Pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47": Phase="Running", Reason="", readiness=true. Elapsed: 4.013397201s
Jan 31 16:42:05.092: INFO: The phase of Pod annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47 is Running (Ready = true)
Jan 31 16:42:05.092: INFO: Pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47" satisfied condition "running and ready"
Jan 31 16:42:05.640: INFO: Successfully updated pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 16:42:07.688: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-5523" for this suite. 01/31/23 16:42:07.698
------------------------------
â€¢ [SLOW TEST] [6.672 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:42:01.039
    Jan 31 16:42:01.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 16:42:01.04
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:01.055
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:01.061
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:162
    STEP: Creating the pod 01/31/23 16:42:01.068
    Jan 31 16:42:01.078: INFO: Waiting up to 5m0s for pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47" in namespace "downward-api-5523" to be "running and ready"
    Jan 31 16:42:01.085: INFO: Pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47": Phase="Pending", Reason="", readiness=false. Elapsed: 6.371433ms
    Jan 31 16:42:01.085: INFO: The phase of Pod annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:42:03.093: INFO: Pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014984169s
    Jan 31 16:42:03.093: INFO: The phase of Pod annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:42:05.092: INFO: Pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47": Phase="Running", Reason="", readiness=true. Elapsed: 4.013397201s
    Jan 31 16:42:05.092: INFO: The phase of Pod annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47 is Running (Ready = true)
    Jan 31 16:42:05.092: INFO: Pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47" satisfied condition "running and ready"
    Jan 31 16:42:05.640: INFO: Successfully updated pod "annotationupdatefaa57528-0c93-465d-b76c-a37be7445b47"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:42:07.688: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-5523" for this suite. 01/31/23 16:42:07.698
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial]
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:42:07.712
Jan 31 16:42:07.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename controllerrevisions 01/31/23 16:42:07.713
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:07.732
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:07.746
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:93
[It] should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
STEP: Creating DaemonSet "e2e-f4xk2-daemon-set" 01/31/23 16:42:07.792
STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 16:42:07.803
Jan 31 16:42:07.827: INFO: Number of nodes with available pods controlled by daemonset e2e-f4xk2-daemon-set: 0
Jan 31 16:42:07.827: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 16:42:08.842: INFO: Number of nodes with available pods controlled by daemonset e2e-f4xk2-daemon-set: 0
Jan 31 16:42:08.842: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 16:42:09.853: INFO: Number of nodes with available pods controlled by daemonset e2e-f4xk2-daemon-set: 0
Jan 31 16:42:09.853: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 16:42:10.848: INFO: Number of nodes with available pods controlled by daemonset e2e-f4xk2-daemon-set: 2
Jan 31 16:42:10.848: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-f4xk2-daemon-set
STEP: Confirm DaemonSet "e2e-f4xk2-daemon-set" successfully created with "daemonset-name=e2e-f4xk2-daemon-set" label 01/31/23 16:42:10.855
STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-f4xk2-daemon-set" 01/31/23 16:42:10.872
Jan 31 16:42:10.881: INFO: Located ControllerRevision: "e2e-f4xk2-daemon-set-fb9fbdf84"
STEP: Patching ControllerRevision "e2e-f4xk2-daemon-set-fb9fbdf84" 01/31/23 16:42:10.888
Jan 31 16:42:10.895: INFO: e2e-f4xk2-daemon-set-fb9fbdf84 has been patched
STEP: Create a new ControllerRevision 01/31/23 16:42:10.895
Jan 31 16:42:10.901: INFO: Created ControllerRevision: e2e-f4xk2-daemon-set-574f595cdb
STEP: Confirm that there are two ControllerRevisions 01/31/23 16:42:10.901
Jan 31 16:42:10.901: INFO: Requesting list of ControllerRevisions to confirm quantity
Jan 31 16:42:10.908: INFO: Found 2 ControllerRevisions
STEP: Deleting ControllerRevision "e2e-f4xk2-daemon-set-fb9fbdf84" 01/31/23 16:42:10.908
STEP: Confirm that there is only one ControllerRevision 01/31/23 16:42:10.915
Jan 31 16:42:10.915: INFO: Requesting list of ControllerRevisions to confirm quantity
Jan 31 16:42:10.921: INFO: Found 1 ControllerRevisions
STEP: Updating ControllerRevision "e2e-f4xk2-daemon-set-574f595cdb" 01/31/23 16:42:10.926
Jan 31 16:42:10.938: INFO: e2e-f4xk2-daemon-set-574f595cdb has been updated
STEP: Generate another ControllerRevision by patching the Daemonset 01/31/23 16:42:10.938
W0131 16:42:10.954715      23 warnings.go:70] unknown field "updateStrategy"
STEP: Confirm that there are two ControllerRevisions 01/31/23 16:42:10.954
Jan 31 16:42:10.955: INFO: Requesting list of ControllerRevisions to confirm quantity
Jan 31 16:42:11.964: INFO: Requesting list of ControllerRevisions to confirm quantity
Jan 31 16:42:11.971: INFO: Found 2 ControllerRevisions
STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-f4xk2-daemon-set-574f595cdb=updated" 01/31/23 16:42:11.971
STEP: Confirm that there is only one ControllerRevision 01/31/23 16:42:11.98
Jan 31 16:42:11.981: INFO: Requesting list of ControllerRevisions to confirm quantity
Jan 31 16:42:11.986: INFO: Found 1 ControllerRevisions
Jan 31 16:42:11.992: INFO: ControllerRevision "e2e-f4xk2-daemon-set-684484bbbc" has revision 3
[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:58
STEP: Deleting DaemonSet "e2e-f4xk2-daemon-set" 01/31/23 16:42:12.001
STEP: deleting DaemonSet.extensions e2e-f4xk2-daemon-set in namespace controllerrevisions-2293, will wait for the garbage collector to delete the pods 01/31/23 16:42:12.001
Jan 31 16:42:12.067: INFO: Deleting DaemonSet.extensions e2e-f4xk2-daemon-set took: 7.858921ms
Jan 31 16:42:12.168: INFO: Terminating DaemonSet.extensions e2e-f4xk2-daemon-set pods took: 101.136044ms
Jan 31 16:42:13.081: INFO: Number of nodes with available pods controlled by daemonset e2e-f4xk2-daemon-set: 0
Jan 31 16:42:13.081: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-f4xk2-daemon-set
Jan 31 16:42:13.087: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"1309"},"items":null}

Jan 31 16:42:13.092: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"1309"},"items":null}

[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:42:13.110: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "controllerrevisions-2293" for this suite. 01/31/23 16:42:13.116
------------------------------
â€¢ [SLOW TEST] [5.412 seconds]
[sig-apps] ControllerRevision [Serial]
test/e2e/apps/framework.go:23
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:42:07.712
    Jan 31 16:42:07.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename controllerrevisions 01/31/23 16:42:07.713
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:07.732
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:07.746
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:93
    [It] should manage the lifecycle of a ControllerRevision [Conformance]
      test/e2e/apps/controller_revision.go:124
    STEP: Creating DaemonSet "e2e-f4xk2-daemon-set" 01/31/23 16:42:07.792
    STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 16:42:07.803
    Jan 31 16:42:07.827: INFO: Number of nodes with available pods controlled by daemonset e2e-f4xk2-daemon-set: 0
    Jan 31 16:42:07.827: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 16:42:08.842: INFO: Number of nodes with available pods controlled by daemonset e2e-f4xk2-daemon-set: 0
    Jan 31 16:42:08.842: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 16:42:09.853: INFO: Number of nodes with available pods controlled by daemonset e2e-f4xk2-daemon-set: 0
    Jan 31 16:42:09.853: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 16:42:10.848: INFO: Number of nodes with available pods controlled by daemonset e2e-f4xk2-daemon-set: 2
    Jan 31 16:42:10.848: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-f4xk2-daemon-set
    STEP: Confirm DaemonSet "e2e-f4xk2-daemon-set" successfully created with "daemonset-name=e2e-f4xk2-daemon-set" label 01/31/23 16:42:10.855
    STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-f4xk2-daemon-set" 01/31/23 16:42:10.872
    Jan 31 16:42:10.881: INFO: Located ControllerRevision: "e2e-f4xk2-daemon-set-fb9fbdf84"
    STEP: Patching ControllerRevision "e2e-f4xk2-daemon-set-fb9fbdf84" 01/31/23 16:42:10.888
    Jan 31 16:42:10.895: INFO: e2e-f4xk2-daemon-set-fb9fbdf84 has been patched
    STEP: Create a new ControllerRevision 01/31/23 16:42:10.895
    Jan 31 16:42:10.901: INFO: Created ControllerRevision: e2e-f4xk2-daemon-set-574f595cdb
    STEP: Confirm that there are two ControllerRevisions 01/31/23 16:42:10.901
    Jan 31 16:42:10.901: INFO: Requesting list of ControllerRevisions to confirm quantity
    Jan 31 16:42:10.908: INFO: Found 2 ControllerRevisions
    STEP: Deleting ControllerRevision "e2e-f4xk2-daemon-set-fb9fbdf84" 01/31/23 16:42:10.908
    STEP: Confirm that there is only one ControllerRevision 01/31/23 16:42:10.915
    Jan 31 16:42:10.915: INFO: Requesting list of ControllerRevisions to confirm quantity
    Jan 31 16:42:10.921: INFO: Found 1 ControllerRevisions
    STEP: Updating ControllerRevision "e2e-f4xk2-daemon-set-574f595cdb" 01/31/23 16:42:10.926
    Jan 31 16:42:10.938: INFO: e2e-f4xk2-daemon-set-574f595cdb has been updated
    STEP: Generate another ControllerRevision by patching the Daemonset 01/31/23 16:42:10.938
    W0131 16:42:10.954715      23 warnings.go:70] unknown field "updateStrategy"
    STEP: Confirm that there are two ControllerRevisions 01/31/23 16:42:10.954
    Jan 31 16:42:10.955: INFO: Requesting list of ControllerRevisions to confirm quantity
    Jan 31 16:42:11.964: INFO: Requesting list of ControllerRevisions to confirm quantity
    Jan 31 16:42:11.971: INFO: Found 2 ControllerRevisions
    STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-f4xk2-daemon-set-574f595cdb=updated" 01/31/23 16:42:11.971
    STEP: Confirm that there is only one ControllerRevision 01/31/23 16:42:11.98
    Jan 31 16:42:11.981: INFO: Requesting list of ControllerRevisions to confirm quantity
    Jan 31 16:42:11.986: INFO: Found 1 ControllerRevisions
    Jan 31 16:42:11.992: INFO: ControllerRevision "e2e-f4xk2-daemon-set-684484bbbc" has revision 3
    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:58
    STEP: Deleting DaemonSet "e2e-f4xk2-daemon-set" 01/31/23 16:42:12.001
    STEP: deleting DaemonSet.extensions e2e-f4xk2-daemon-set in namespace controllerrevisions-2293, will wait for the garbage collector to delete the pods 01/31/23 16:42:12.001
    Jan 31 16:42:12.067: INFO: Deleting DaemonSet.extensions e2e-f4xk2-daemon-set took: 7.858921ms
    Jan 31 16:42:12.168: INFO: Terminating DaemonSet.extensions e2e-f4xk2-daemon-set pods took: 101.136044ms
    Jan 31 16:42:13.081: INFO: Number of nodes with available pods controlled by daemonset e2e-f4xk2-daemon-set: 0
    Jan 31 16:42:13.081: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-f4xk2-daemon-set
    Jan 31 16:42:13.087: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"1309"},"items":null}

    Jan 31 16:42:13.092: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"1309"},"items":null}

    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:42:13.110: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "controllerrevisions-2293" for this suite. 01/31/23 16:42:13.116
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:42:13.124
Jan 31 16:42:13.124: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubelet-test 01/31/23 16:42:13.125
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:13.143
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:13.15
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
Jan 31 16:42:13.168: INFO: Waiting up to 5m0s for pod "busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8" in namespace "kubelet-test-7581" to be "running and ready"
Jan 31 16:42:13.177: INFO: Pod "busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8": Phase="Pending", Reason="", readiness=false. Elapsed: 9.292899ms
Jan 31 16:42:13.178: INFO: The phase of Pod busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:42:15.190: INFO: Pod "busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022037877s
Jan 31 16:42:15.190: INFO: The phase of Pod busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:42:17.189: INFO: Pod "busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8": Phase="Running", Reason="", readiness=true. Elapsed: 4.020424454s
Jan 31 16:42:17.189: INFO: The phase of Pod busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8 is Running (Ready = true)
Jan 31 16:42:17.189: INFO: Pod "busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Jan 31 16:42:17.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-7581" for this suite. 01/31/23 16:42:17.248
------------------------------
â€¢ [4.131 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command in a pod
  test/e2e/common/node/kubelet.go:44
    should print the output to logs [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:42:13.124
    Jan 31 16:42:13.124: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubelet-test 01/31/23 16:42:13.125
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:13.143
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:13.15
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should print the output to logs [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:52
    Jan 31 16:42:13.168: INFO: Waiting up to 5m0s for pod "busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8" in namespace "kubelet-test-7581" to be "running and ready"
    Jan 31 16:42:13.177: INFO: Pod "busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8": Phase="Pending", Reason="", readiness=false. Elapsed: 9.292899ms
    Jan 31 16:42:13.178: INFO: The phase of Pod busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:42:15.190: INFO: Pod "busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022037877s
    Jan 31 16:42:15.190: INFO: The phase of Pod busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:42:17.189: INFO: Pod "busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8": Phase="Running", Reason="", readiness=true. Elapsed: 4.020424454s
    Jan 31 16:42:17.189: INFO: The phase of Pod busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8 is Running (Ready = true)
    Jan 31 16:42:17.189: INFO: Pod "busybox-scheduling-4cf7419a-2dbd-4160-988b-b7e8b3ffafd8" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:42:17.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-7581" for this suite. 01/31/23 16:42:17.248
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:42:17.256
Jan 31 16:42:17.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 16:42:17.257
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:17.286
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:17.305
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
STEP: Creating configMap with name configmap-test-volume-6b4c24ae-22b2-4a88-bca2-9604b03a6d50 01/31/23 16:42:17.317
STEP: Creating a pod to test consume configMaps 01/31/23 16:42:17.325
Jan 31 16:42:17.337: INFO: Waiting up to 5m0s for pod "pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5" in namespace "configmap-8023" to be "Succeeded or Failed"
Jan 31 16:42:17.349: INFO: Pod "pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.104203ms
Jan 31 16:42:19.361: INFO: Pod "pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023917044s
Jan 31 16:42:21.359: INFO: Pod "pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021668138s
STEP: Saw pod success 01/31/23 16:42:21.359
Jan 31 16:42:21.359: INFO: Pod "pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5" satisfied condition "Succeeded or Failed"
Jan 31 16:42:21.370: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 16:42:21.388
Jan 31 16:42:21.401: INFO: Waiting for pod pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5 to disappear
Jan 31 16:42:21.408: INFO: Pod pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 16:42:21.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8023" for this suite. 01/31/23 16:42:21.415
------------------------------
â€¢ [4.167 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:42:17.256
    Jan 31 16:42:17.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 16:42:17.257
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:17.286
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:17.305
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:74
    STEP: Creating configMap with name configmap-test-volume-6b4c24ae-22b2-4a88-bca2-9604b03a6d50 01/31/23 16:42:17.317
    STEP: Creating a pod to test consume configMaps 01/31/23 16:42:17.325
    Jan 31 16:42:17.337: INFO: Waiting up to 5m0s for pod "pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5" in namespace "configmap-8023" to be "Succeeded or Failed"
    Jan 31 16:42:17.349: INFO: Pod "pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.104203ms
    Jan 31 16:42:19.361: INFO: Pod "pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023917044s
    Jan 31 16:42:21.359: INFO: Pod "pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021668138s
    STEP: Saw pod success 01/31/23 16:42:21.359
    Jan 31 16:42:21.359: INFO: Pod "pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5" satisfied condition "Succeeded or Failed"
    Jan 31 16:42:21.370: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 16:42:21.388
    Jan 31 16:42:21.401: INFO: Waiting for pod pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5 to disappear
    Jan 31 16:42:21.408: INFO: Pod pod-configmaps-b27a84e2-de57-4885-bc55-d5d09c06cfd5 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:42:21.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8023" for this suite. 01/31/23 16:42:21.415
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:42:21.423
Jan 31 16:42:21.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 16:42:21.425
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:21.443
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:21.449
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 16:42:21.473
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:42:21.746
STEP: Deploying the webhook pod 01/31/23 16:42:21.762
STEP: Wait for the deployment to be ready 01/31/23 16:42:21.784
Jan 31 16:42:21.805: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 16:42:23.829: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 16, 42, 21, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 42, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 42, 21, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 42, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 16:42:25.838
STEP: Verifying the service has paired with the endpoint 01/31/23 16:42:25.878
Jan 31 16:42:26.879: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
Jan 31 16:42:26.888: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-444-crds.webhook.example.com via the AdmissionRegistration API 01/31/23 16:42:27.415
STEP: Creating a custom resource that should be mutated by the webhook 01/31/23 16:42:27.452
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:42:30.035: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-2741" for this suite. 01/31/23 16:42:30.117
STEP: Destroying namespace "webhook-2741-markers" for this suite. 01/31/23 16:42:30.128
------------------------------
â€¢ [SLOW TEST] [8.717 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:42:21.423
    Jan 31 16:42:21.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 16:42:21.425
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:21.443
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:21.449
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 16:42:21.473
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:42:21.746
    STEP: Deploying the webhook pod 01/31/23 16:42:21.762
    STEP: Wait for the deployment to be ready 01/31/23 16:42:21.784
    Jan 31 16:42:21.805: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 16:42:23.829: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 16, 42, 21, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 42, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 42, 21, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 42, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 16:42:25.838
    STEP: Verifying the service has paired with the endpoint 01/31/23 16:42:25.878
    Jan 31 16:42:26.879: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource [Conformance]
      test/e2e/apimachinery/webhook.go:291
    Jan 31 16:42:26.888: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-444-crds.webhook.example.com via the AdmissionRegistration API 01/31/23 16:42:27.415
    STEP: Creating a custom resource that should be mutated by the webhook 01/31/23 16:42:27.452
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:42:30.035: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-2741" for this suite. 01/31/23 16:42:30.117
    STEP: Destroying namespace "webhook-2741-markers" for this suite. 01/31/23 16:42:30.128
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Secrets
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:42:30.141
Jan 31 16:42:30.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 16:42:30.142
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:30.169
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:30.177
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
STEP: Creating secret with name s-test-opt-del-04333694-5e16-4079-904b-c1bb1cda75b8 01/31/23 16:42:30.195
STEP: Creating secret with name s-test-opt-upd-c0abea42-6c31-47e1-9e3d-265bf3f4a6e0 01/31/23 16:42:30.201
STEP: Creating the pod 01/31/23 16:42:30.208
Jan 31 16:42:30.220: INFO: Waiting up to 5m0s for pod "pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01" in namespace "secrets-7405" to be "running and ready"
Jan 31 16:42:30.228: INFO: Pod "pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01": Phase="Pending", Reason="", readiness=false. Elapsed: 7.817994ms
Jan 31 16:42:30.228: INFO: The phase of Pod pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:42:32.242: INFO: Pod "pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022146955s
Jan 31 16:42:32.242: INFO: The phase of Pod pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:42:34.239: INFO: Pod "pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01": Phase="Running", Reason="", readiness=true. Elapsed: 4.01885473s
Jan 31 16:42:34.239: INFO: The phase of Pod pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01 is Running (Ready = true)
Jan 31 16:42:34.239: INFO: Pod "pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-04333694-5e16-4079-904b-c1bb1cda75b8 01/31/23 16:42:34.291
STEP: Updating secret s-test-opt-upd-c0abea42-6c31-47e1-9e3d-265bf3f4a6e0 01/31/23 16:42:34.3
STEP: Creating secret with name s-test-opt-create-17b5a2a7-8b46-4774-8861-63bbc302c9ba 01/31/23 16:42:34.316
STEP: waiting to observe update in volume 01/31/23 16:42:34.324
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 16:43:47.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-7405" for this suite. 01/31/23 16:43:47.123
------------------------------
â€¢ [SLOW TEST] [76.995 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:42:30.141
    Jan 31 16:42:30.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 16:42:30.142
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:42:30.169
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:42:30.177
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:205
    STEP: Creating secret with name s-test-opt-del-04333694-5e16-4079-904b-c1bb1cda75b8 01/31/23 16:42:30.195
    STEP: Creating secret with name s-test-opt-upd-c0abea42-6c31-47e1-9e3d-265bf3f4a6e0 01/31/23 16:42:30.201
    STEP: Creating the pod 01/31/23 16:42:30.208
    Jan 31 16:42:30.220: INFO: Waiting up to 5m0s for pod "pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01" in namespace "secrets-7405" to be "running and ready"
    Jan 31 16:42:30.228: INFO: Pod "pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01": Phase="Pending", Reason="", readiness=false. Elapsed: 7.817994ms
    Jan 31 16:42:30.228: INFO: The phase of Pod pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:42:32.242: INFO: Pod "pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022146955s
    Jan 31 16:42:32.242: INFO: The phase of Pod pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:42:34.239: INFO: Pod "pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01": Phase="Running", Reason="", readiness=true. Elapsed: 4.01885473s
    Jan 31 16:42:34.239: INFO: The phase of Pod pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01 is Running (Ready = true)
    Jan 31 16:42:34.239: INFO: Pod "pod-secrets-a26aebdf-aace-40f8-bf54-a2b709f7cb01" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-04333694-5e16-4079-904b-c1bb1cda75b8 01/31/23 16:42:34.291
    STEP: Updating secret s-test-opt-upd-c0abea42-6c31-47e1-9e3d-265bf3f4a6e0 01/31/23 16:42:34.3
    STEP: Creating secret with name s-test-opt-create-17b5a2a7-8b46-4774-8861-63bbc302c9ba 01/31/23 16:42:34.316
    STEP: waiting to observe update in volume 01/31/23 16:42:34.324
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:43:47.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-7405" for this suite. 01/31/23 16:43:47.123
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:43:47.14
Jan 31 16:43:47.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 16:43:47.141
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:43:47.16
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:43:47.166
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
STEP: Creating a pod to test downward API volume plugin 01/31/23 16:43:47.175
Jan 31 16:43:47.186: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5" in namespace "downward-api-7712" to be "Succeeded or Failed"
Jan 31 16:43:47.199: INFO: Pod "downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.611146ms
Jan 31 16:43:49.209: INFO: Pod "downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022482814s
Jan 31 16:43:51.210: INFO: Pod "downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023211355s
STEP: Saw pod success 01/31/23 16:43:51.21
Jan 31 16:43:51.210: INFO: Pod "downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5" satisfied condition "Succeeded or Failed"
Jan 31 16:43:51.220: INFO: Trying to get logs from node 26 pod downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5 container client-container: <nil>
STEP: delete the pod 01/31/23 16:43:51.248
Jan 31 16:43:51.269: INFO: Waiting for pod downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5 to disappear
Jan 31 16:43:51.279: INFO: Pod downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 16:43:51.280: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-7712" for this suite. 01/31/23 16:43:51.292
------------------------------
â€¢ [4.162 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:43:47.14
    Jan 31 16:43:47.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 16:43:47.141
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:43:47.16
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:43:47.166
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:53
    STEP: Creating a pod to test downward API volume plugin 01/31/23 16:43:47.175
    Jan 31 16:43:47.186: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5" in namespace "downward-api-7712" to be "Succeeded or Failed"
    Jan 31 16:43:47.199: INFO: Pod "downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.611146ms
    Jan 31 16:43:49.209: INFO: Pod "downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022482814s
    Jan 31 16:43:51.210: INFO: Pod "downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023211355s
    STEP: Saw pod success 01/31/23 16:43:51.21
    Jan 31 16:43:51.210: INFO: Pod "downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5" satisfied condition "Succeeded or Failed"
    Jan 31 16:43:51.220: INFO: Trying to get logs from node 26 pod downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5 container client-container: <nil>
    STEP: delete the pod 01/31/23 16:43:51.248
    Jan 31 16:43:51.269: INFO: Waiting for pod downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5 to disappear
    Jan 31 16:43:51.279: INFO: Pod downwardapi-volume-d9bbbf52-ec3d-4566-861b-c5031d41a4b5 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:43:51.280: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-7712" for this suite. 01/31/23 16:43:51.292
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:43:51.302
Jan 31 16:43:51.303: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename dns 01/31/23 16:43:51.304
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:43:51.326
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:43:51.333
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
STEP: Creating a test externalName service 01/31/23 16:43:51.34
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
 01/31/23 16:43:51.379
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
 01/31/23 16:43:51.379
STEP: creating a pod to probe DNS 01/31/23 16:43:51.38
STEP: submitting the pod to kubernetes 01/31/23 16:43:51.38
Jan 31 16:43:51.395: INFO: Waiting up to 15m0s for pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b" in namespace "dns-8322" to be "running"
Jan 31 16:43:51.403: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 7.797724ms
Jan 31 16:43:53.417: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021334606s
Jan 31 16:43:55.411: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015935994s
Jan 31 16:43:57.413: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.017507903s
Jan 31 16:43:59.418: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 8.022449428s
Jan 31 16:44:01.413: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 10.017467064s
Jan 31 16:44:03.412: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 12.016753283s
Jan 31 16:44:05.413: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 14.017797272s
Jan 31 16:44:07.415: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 16.019439808s
Jan 31 16:44:09.415: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 18.019301526s
Jan 31 16:44:11.418: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 20.022889957s
Jan 31 16:44:13.418: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Running", Reason="", readiness=true. Elapsed: 22.022512857s
Jan 31 16:44:13.418: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b" satisfied condition "running"
STEP: retrieving the pod 01/31/23 16:44:13.418
STEP: looking for the results for each expected name from probers 01/31/23 16:44:13.426
Jan 31 16:44:13.441: INFO: DNS probes using dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b succeeded

STEP: deleting the pod 01/31/23 16:44:13.441
STEP: changing the externalName to bar.example.com 01/31/23 16:44:13.455
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
 01/31/23 16:44:13.473
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
 01/31/23 16:44:13.473
STEP: creating a second pod to probe DNS 01/31/23 16:44:13.473
STEP: submitting the pod to kubernetes 01/31/23 16:44:13.473
Jan 31 16:44:13.481: INFO: Waiting up to 15m0s for pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8" in namespace "dns-8322" to be "running"
Jan 31 16:44:13.491: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 9.634407ms
Jan 31 16:44:15.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020043761s
Jan 31 16:44:17.508: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.026518805s
Jan 31 16:44:19.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.019819791s
Jan 31 16:44:21.500: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 8.019063694s
Jan 31 16:44:23.505: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 10.023403964s
Jan 31 16:44:25.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 12.019526829s
Jan 31 16:44:27.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 14.019491165s
Jan 31 16:44:29.505: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 16.02366336s
Jan 31 16:44:31.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 18.019718369s
Jan 31 16:44:33.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 20.019773082s
Jan 31 16:44:35.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 22.019287486s
Jan 31 16:44:37.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Running", Reason="", readiness=true. Elapsed: 24.01969183s
Jan 31 16:44:37.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8" satisfied condition "running"
STEP: retrieving the pod 01/31/23 16:44:37.501
STEP: looking for the results for each expected name from probers 01/31/23 16:44:37.511
Jan 31 16:44:37.538: INFO: DNS probes using dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8 succeeded

STEP: deleting the pod 01/31/23 16:44:37.538
STEP: changing the service to type=ClusterIP 01/31/23 16:44:37.557
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
 01/31/23 16:44:37.62
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
 01/31/23 16:44:37.62
STEP: creating a third pod to probe DNS 01/31/23 16:44:37.62
STEP: submitting the pod to kubernetes 01/31/23 16:44:37.625
Jan 31 16:44:37.636: INFO: Waiting up to 15m0s for pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc" in namespace "dns-8322" to be "running"
Jan 31 16:44:37.644: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 7.904027ms
Jan 31 16:44:39.655: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018592572s
Jan 31 16:44:41.658: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 4.021559564s
Jan 31 16:44:43.655: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 6.018997345s
Jan 31 16:44:45.654: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 8.01765466s
Jan 31 16:44:47.658: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 10.021649421s
Jan 31 16:44:49.653: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 12.017199557s
Jan 31 16:44:51.653: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 14.016872519s
Jan 31 16:44:53.657: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 16.020990921s
Jan 31 16:44:55.655: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 18.018607721s
Jan 31 16:44:57.657: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 20.021137448s
Jan 31 16:44:59.659: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 22.022862986s
Jan 31 16:45:01.655: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Running", Reason="", readiness=true. Elapsed: 24.018834605s
Jan 31 16:45:01.655: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc" satisfied condition "running"
STEP: retrieving the pod 01/31/23 16:45:01.655
STEP: looking for the results for each expected name from probers 01/31/23 16:45:01.664
Jan 31 16:45:01.689: INFO: DNS probes using dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc succeeded

STEP: deleting the pod 01/31/23 16:45:01.689
STEP: deleting the test externalName service 01/31/23 16:45:01.705
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 31 16:45:01.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-8322" for this suite. 01/31/23 16:45:01.743
------------------------------
â€¢ [SLOW TEST] [70.448 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:43:51.302
    Jan 31 16:43:51.303: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename dns 01/31/23 16:43:51.304
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:43:51.326
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:43:51.333
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for ExternalName services [Conformance]
      test/e2e/network/dns.go:333
    STEP: Creating a test externalName service 01/31/23 16:43:51.34
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
     01/31/23 16:43:51.379
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
     01/31/23 16:43:51.379
    STEP: creating a pod to probe DNS 01/31/23 16:43:51.38
    STEP: submitting the pod to kubernetes 01/31/23 16:43:51.38
    Jan 31 16:43:51.395: INFO: Waiting up to 15m0s for pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b" in namespace "dns-8322" to be "running"
    Jan 31 16:43:51.403: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 7.797724ms
    Jan 31 16:43:53.417: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021334606s
    Jan 31 16:43:55.411: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015935994s
    Jan 31 16:43:57.413: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.017507903s
    Jan 31 16:43:59.418: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 8.022449428s
    Jan 31 16:44:01.413: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 10.017467064s
    Jan 31 16:44:03.412: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 12.016753283s
    Jan 31 16:44:05.413: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 14.017797272s
    Jan 31 16:44:07.415: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 16.019439808s
    Jan 31 16:44:09.415: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 18.019301526s
    Jan 31 16:44:11.418: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Pending", Reason="", readiness=false. Elapsed: 20.022889957s
    Jan 31 16:44:13.418: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b": Phase="Running", Reason="", readiness=true. Elapsed: 22.022512857s
    Jan 31 16:44:13.418: INFO: Pod "dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b" satisfied condition "running"
    STEP: retrieving the pod 01/31/23 16:44:13.418
    STEP: looking for the results for each expected name from probers 01/31/23 16:44:13.426
    Jan 31 16:44:13.441: INFO: DNS probes using dns-test-c8aace5a-e305-4fae-bd7c-1cc3f2e3d42b succeeded

    STEP: deleting the pod 01/31/23 16:44:13.441
    STEP: changing the externalName to bar.example.com 01/31/23 16:44:13.455
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
     01/31/23 16:44:13.473
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
     01/31/23 16:44:13.473
    STEP: creating a second pod to probe DNS 01/31/23 16:44:13.473
    STEP: submitting the pod to kubernetes 01/31/23 16:44:13.473
    Jan 31 16:44:13.481: INFO: Waiting up to 15m0s for pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8" in namespace "dns-8322" to be "running"
    Jan 31 16:44:13.491: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 9.634407ms
    Jan 31 16:44:15.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020043761s
    Jan 31 16:44:17.508: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.026518805s
    Jan 31 16:44:19.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.019819791s
    Jan 31 16:44:21.500: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 8.019063694s
    Jan 31 16:44:23.505: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 10.023403964s
    Jan 31 16:44:25.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 12.019526829s
    Jan 31 16:44:27.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 14.019491165s
    Jan 31 16:44:29.505: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 16.02366336s
    Jan 31 16:44:31.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 18.019718369s
    Jan 31 16:44:33.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 20.019773082s
    Jan 31 16:44:35.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Pending", Reason="", readiness=false. Elapsed: 22.019287486s
    Jan 31 16:44:37.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8": Phase="Running", Reason="", readiness=true. Elapsed: 24.01969183s
    Jan 31 16:44:37.501: INFO: Pod "dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8" satisfied condition "running"
    STEP: retrieving the pod 01/31/23 16:44:37.501
    STEP: looking for the results for each expected name from probers 01/31/23 16:44:37.511
    Jan 31 16:44:37.538: INFO: DNS probes using dns-test-2bd4cefa-5412-4288-9c96-896afd1b31c8 succeeded

    STEP: deleting the pod 01/31/23 16:44:37.538
    STEP: changing the service to type=ClusterIP 01/31/23 16:44:37.557
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
     01/31/23 16:44:37.62
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8322.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8322.svc.cluster.local; sleep 1; done
     01/31/23 16:44:37.62
    STEP: creating a third pod to probe DNS 01/31/23 16:44:37.62
    STEP: submitting the pod to kubernetes 01/31/23 16:44:37.625
    Jan 31 16:44:37.636: INFO: Waiting up to 15m0s for pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc" in namespace "dns-8322" to be "running"
    Jan 31 16:44:37.644: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 7.904027ms
    Jan 31 16:44:39.655: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018592572s
    Jan 31 16:44:41.658: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 4.021559564s
    Jan 31 16:44:43.655: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 6.018997345s
    Jan 31 16:44:45.654: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 8.01765466s
    Jan 31 16:44:47.658: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 10.021649421s
    Jan 31 16:44:49.653: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 12.017199557s
    Jan 31 16:44:51.653: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 14.016872519s
    Jan 31 16:44:53.657: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 16.020990921s
    Jan 31 16:44:55.655: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 18.018607721s
    Jan 31 16:44:57.657: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 20.021137448s
    Jan 31 16:44:59.659: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Pending", Reason="", readiness=false. Elapsed: 22.022862986s
    Jan 31 16:45:01.655: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc": Phase="Running", Reason="", readiness=true. Elapsed: 24.018834605s
    Jan 31 16:45:01.655: INFO: Pod "dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc" satisfied condition "running"
    STEP: retrieving the pod 01/31/23 16:45:01.655
    STEP: looking for the results for each expected name from probers 01/31/23 16:45:01.664
    Jan 31 16:45:01.689: INFO: DNS probes using dns-test-9e9a9b42-77ac-412b-a1c7-93f166ac26fc succeeded

    STEP: deleting the pod 01/31/23 16:45:01.689
    STEP: deleting the test externalName service 01/31/23 16:45:01.705
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:45:01.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-8322" for this suite. 01/31/23 16:45:01.743
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:45:01.753
Jan 31 16:45:01.753: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename var-expansion 01/31/23 16:45:01.754
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:45:01.772
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:45:01.78
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
STEP: creating the pod with failed condition 01/31/23 16:45:01.787
Jan 31 16:45:01.796: INFO: Waiting up to 2m0s for pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76" in namespace "var-expansion-6409" to be "running"
Jan 31 16:45:01.804: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 8.282507ms
Jan 31 16:45:03.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018545914s
Jan 31 16:45:05.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018258663s
Jan 31 16:45:07.816: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 6.019972231s
Jan 31 16:45:09.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 8.018566398s
Jan 31 16:45:11.819: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 10.023687892s
Jan 31 16:45:13.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 12.017962643s
Jan 31 16:45:15.812: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 14.016411368s
Jan 31 16:45:17.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 16.021245711s
Jan 31 16:45:19.812: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 18.016169151s
Jan 31 16:45:21.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 20.018430079s
Jan 31 16:45:23.821: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 22.025647768s
Jan 31 16:45:25.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 24.020966385s
Jan 31 16:45:27.811: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 26.015416378s
Jan 31 16:45:29.819: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 28.023669793s
Jan 31 16:45:31.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 30.021024735s
Jan 31 16:45:33.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 32.021669019s
Jan 31 16:45:35.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 34.018524732s
Jan 31 16:45:37.813: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 36.016956399s
Jan 31 16:45:39.811: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 38.015339982s
Jan 31 16:45:41.820: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 40.023927901s
Jan 31 16:45:43.816: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 42.020367104s
Jan 31 16:45:45.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 44.018507271s
Jan 31 16:45:47.822: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 46.026064687s
Jan 31 16:45:49.812: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 48.016787708s
Jan 31 16:45:51.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 50.019847941s
Jan 31 16:45:53.820: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 52.024376926s
Jan 31 16:45:55.816: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 54.02015791s
Jan 31 16:45:57.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 56.019352221s
Jan 31 16:45:59.822: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 58.026744905s
Jan 31 16:46:01.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.019015511s
Jan 31 16:46:03.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.018893578s
Jan 31 16:46:05.811: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.015566688s
Jan 31 16:46:07.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.02140327s
Jan 31 16:46:09.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.021598125s
Jan 31 16:46:11.810: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.014705703s
Jan 31 16:46:13.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.01971649s
Jan 31 16:46:15.818: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.022080983s
Jan 31 16:46:17.816: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.020292081s
Jan 31 16:46:19.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.017987024s
Jan 31 16:46:21.823: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.027079765s
Jan 31 16:46:23.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.01868532s
Jan 31 16:46:25.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.019696215s
Jan 31 16:46:27.821: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.025133291s
Jan 31 16:46:29.819: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.0228647s
Jan 31 16:46:31.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.018675564s
Jan 31 16:46:33.820: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.023970808s
Jan 31 16:46:35.818: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.022322079s
Jan 31 16:46:37.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.019673668s
Jan 31 16:46:39.819: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.023613351s
Jan 31 16:46:41.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.018211784s
Jan 31 16:46:43.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.021696939s
Jan 31 16:46:45.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.019229646s
Jan 31 16:46:47.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.019652428s
Jan 31 16:46:49.816: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.019920733s
Jan 31 16:46:51.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.019857658s
Jan 31 16:46:53.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.01950522s
Jan 31 16:46:55.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.018933035s
Jan 31 16:46:57.820: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.024746207s
Jan 31 16:46:59.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.019669614s
Jan 31 16:47:01.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.021813077s
Jan 31 16:47:01.823: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.02772699s
STEP: updating the pod 01/31/23 16:47:01.823
Jan 31 16:47:02.349: INFO: Successfully updated pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76"
STEP: waiting for pod running 01/31/23 16:47:02.349
Jan 31 16:47:02.349: INFO: Waiting up to 2m0s for pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76" in namespace "var-expansion-6409" to be "running"
Jan 31 16:47:02.357: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 7.541236ms
Jan 31 16:47:04.367: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Running", Reason="", readiness=true. Elapsed: 2.017740644s
Jan 31 16:47:04.367: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76" satisfied condition "running"
STEP: deleting the pod gracefully 01/31/23 16:47:04.367
Jan 31 16:47:04.368: INFO: Deleting pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76" in namespace "var-expansion-6409"
Jan 31 16:47:04.381: INFO: Wait up to 5m0s for pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 31 16:47:36.400: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-6409" for this suite. 01/31/23 16:47:36.41
------------------------------
â€¢ [SLOW TEST] [154.670 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:45:01.753
    Jan 31 16:45:01.753: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename var-expansion 01/31/23 16:45:01.754
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:45:01.772
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:45:01.78
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:225
    STEP: creating the pod with failed condition 01/31/23 16:45:01.787
    Jan 31 16:45:01.796: INFO: Waiting up to 2m0s for pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76" in namespace "var-expansion-6409" to be "running"
    Jan 31 16:45:01.804: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 8.282507ms
    Jan 31 16:45:03.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018545914s
    Jan 31 16:45:05.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018258663s
    Jan 31 16:45:07.816: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 6.019972231s
    Jan 31 16:45:09.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 8.018566398s
    Jan 31 16:45:11.819: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 10.023687892s
    Jan 31 16:45:13.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 12.017962643s
    Jan 31 16:45:15.812: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 14.016411368s
    Jan 31 16:45:17.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 16.021245711s
    Jan 31 16:45:19.812: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 18.016169151s
    Jan 31 16:45:21.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 20.018430079s
    Jan 31 16:45:23.821: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 22.025647768s
    Jan 31 16:45:25.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 24.020966385s
    Jan 31 16:45:27.811: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 26.015416378s
    Jan 31 16:45:29.819: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 28.023669793s
    Jan 31 16:45:31.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 30.021024735s
    Jan 31 16:45:33.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 32.021669019s
    Jan 31 16:45:35.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 34.018524732s
    Jan 31 16:45:37.813: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 36.016956399s
    Jan 31 16:45:39.811: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 38.015339982s
    Jan 31 16:45:41.820: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 40.023927901s
    Jan 31 16:45:43.816: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 42.020367104s
    Jan 31 16:45:45.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 44.018507271s
    Jan 31 16:45:47.822: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 46.026064687s
    Jan 31 16:45:49.812: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 48.016787708s
    Jan 31 16:45:51.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 50.019847941s
    Jan 31 16:45:53.820: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 52.024376926s
    Jan 31 16:45:55.816: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 54.02015791s
    Jan 31 16:45:57.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 56.019352221s
    Jan 31 16:45:59.822: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 58.026744905s
    Jan 31 16:46:01.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.019015511s
    Jan 31 16:46:03.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.018893578s
    Jan 31 16:46:05.811: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.015566688s
    Jan 31 16:46:07.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.02140327s
    Jan 31 16:46:09.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.021598125s
    Jan 31 16:46:11.810: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.014705703s
    Jan 31 16:46:13.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.01971649s
    Jan 31 16:46:15.818: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.022080983s
    Jan 31 16:46:17.816: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.020292081s
    Jan 31 16:46:19.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.017987024s
    Jan 31 16:46:21.823: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.027079765s
    Jan 31 16:46:23.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.01868532s
    Jan 31 16:46:25.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.019696215s
    Jan 31 16:46:27.821: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.025133291s
    Jan 31 16:46:29.819: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.0228647s
    Jan 31 16:46:31.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.018675564s
    Jan 31 16:46:33.820: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.023970808s
    Jan 31 16:46:35.818: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.022322079s
    Jan 31 16:46:37.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.019673668s
    Jan 31 16:46:39.819: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.023613351s
    Jan 31 16:46:41.814: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.018211784s
    Jan 31 16:46:43.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.021696939s
    Jan 31 16:46:45.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.019229646s
    Jan 31 16:46:47.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.019652428s
    Jan 31 16:46:49.816: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.019920733s
    Jan 31 16:46:51.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.019857658s
    Jan 31 16:46:53.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.01950522s
    Jan 31 16:46:55.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.018933035s
    Jan 31 16:46:57.820: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.024746207s
    Jan 31 16:46:59.815: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.019669614s
    Jan 31 16:47:01.817: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.021813077s
    Jan 31 16:47:01.823: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.02772699s
    STEP: updating the pod 01/31/23 16:47:01.823
    Jan 31 16:47:02.349: INFO: Successfully updated pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76"
    STEP: waiting for pod running 01/31/23 16:47:02.349
    Jan 31 16:47:02.349: INFO: Waiting up to 2m0s for pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76" in namespace "var-expansion-6409" to be "running"
    Jan 31 16:47:02.357: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 7.541236ms
    Jan 31 16:47:04.367: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76": Phase="Running", Reason="", readiness=true. Elapsed: 2.017740644s
    Jan 31 16:47:04.367: INFO: Pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76" satisfied condition "running"
    STEP: deleting the pod gracefully 01/31/23 16:47:04.367
    Jan 31 16:47:04.368: INFO: Deleting pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76" in namespace "var-expansion-6409"
    Jan 31 16:47:04.381: INFO: Wait up to 5m0s for pod "var-expansion-54ac668b-e9c8-41ca-b9bd-5512ee0e2d76" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:47:36.400: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-6409" for this suite. 01/31/23 16:47:36.41
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:47:36.425
Jan 31 16:47:36.425: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-lifecycle-hook 01/31/23 16:47:36.428
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:47:36.449
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:47:36.456
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 01/31/23 16:47:36.467
Jan 31 16:47:36.476: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-3493" to be "running and ready"
Jan 31 16:47:36.485: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 8.811602ms
Jan 31 16:47:36.485: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:47:38.499: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022443242s
Jan 31 16:47:38.499: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:47:40.494: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.017634724s
Jan 31 16:47:40.494: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Jan 31 16:47:40.494: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
STEP: create the pod with lifecycle hook 01/31/23 16:47:40.503
Jan 31 16:47:40.512: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-3493" to be "running and ready"
Jan 31 16:47:40.523: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 10.964024ms
Jan 31 16:47:40.523: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:47:42.534: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022126638s
Jan 31 16:47:42.534: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:47:44.538: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 4.025828497s
Jan 31 16:47:44.538: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
Jan 31 16:47:44.538: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
STEP: check poststart hook 01/31/23 16:47:44.547
STEP: delete the pod with lifecycle hook 01/31/23 16:47:44.596
Jan 31 16:47:44.607: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 31 16:47:44.615: INFO: Pod pod-with-poststart-exec-hook still exists
Jan 31 16:47:46.615: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 31 16:47:46.627: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Jan 31 16:47:46.627: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-3493" for this suite. 01/31/23 16:47:46.639
------------------------------
â€¢ [SLOW TEST] [10.226 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:134

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:47:36.425
    Jan 31 16:47:36.425: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-lifecycle-hook 01/31/23 16:47:36.428
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:47:36.449
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:47:36.456
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 01/31/23 16:47:36.467
    Jan 31 16:47:36.476: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-3493" to be "running and ready"
    Jan 31 16:47:36.485: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 8.811602ms
    Jan 31 16:47:36.485: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:47:38.499: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022443242s
    Jan 31 16:47:38.499: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:47:40.494: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.017634724s
    Jan 31 16:47:40.494: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Jan 31 16:47:40.494: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:134
    STEP: create the pod with lifecycle hook 01/31/23 16:47:40.503
    Jan 31 16:47:40.512: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-3493" to be "running and ready"
    Jan 31 16:47:40.523: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 10.964024ms
    Jan 31 16:47:40.523: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:47:42.534: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022126638s
    Jan 31 16:47:42.534: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:47:44.538: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 4.025828497s
    Jan 31 16:47:44.538: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
    Jan 31 16:47:44.538: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
    STEP: check poststart hook 01/31/23 16:47:44.547
    STEP: delete the pod with lifecycle hook 01/31/23 16:47:44.596
    Jan 31 16:47:44.607: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Jan 31 16:47:44.615: INFO: Pod pod-with-poststart-exec-hook still exists
    Jan 31 16:47:46.615: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Jan 31 16:47:46.627: INFO: Pod pod-with-poststart-exec-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:47:46.627: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-3493" for this suite. 01/31/23 16:47:46.639
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:47:46.655
Jan 31 16:47:46.655: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 16:47:46.656
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:47:46.681
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:47:46.69
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
STEP: Creating a pod to test downward api env vars 01/31/23 16:47:46.699
Jan 31 16:47:46.715: INFO: Waiting up to 5m0s for pod "downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634" in namespace "downward-api-5764" to be "Succeeded or Failed"
Jan 31 16:47:46.725: INFO: Pod "downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634": Phase="Pending", Reason="", readiness=false. Elapsed: 9.810832ms
Jan 31 16:47:48.736: INFO: Pod "downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020460387s
Jan 31 16:47:50.736: INFO: Pod "downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020060044s
STEP: Saw pod success 01/31/23 16:47:50.736
Jan 31 16:47:50.736: INFO: Pod "downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634" satisfied condition "Succeeded or Failed"
Jan 31 16:47:50.745: INFO: Trying to get logs from node 26 pod downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634 container dapi-container: <nil>
STEP: delete the pod 01/31/23 16:47:50.78
Jan 31 16:47:50.803: INFO: Waiting for pod downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634 to disappear
Jan 31 16:47:50.813: INFO: Pod downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Jan 31 16:47:50.814: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-5764" for this suite. 01/31/23 16:47:50.823
------------------------------
â€¢ [4.177 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:47:46.655
    Jan 31 16:47:46.655: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 16:47:46.656
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:47:46.681
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:47:46.69
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:217
    STEP: Creating a pod to test downward api env vars 01/31/23 16:47:46.699
    Jan 31 16:47:46.715: INFO: Waiting up to 5m0s for pod "downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634" in namespace "downward-api-5764" to be "Succeeded or Failed"
    Jan 31 16:47:46.725: INFO: Pod "downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634": Phase="Pending", Reason="", readiness=false. Elapsed: 9.810832ms
    Jan 31 16:47:48.736: INFO: Pod "downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020460387s
    Jan 31 16:47:50.736: INFO: Pod "downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020060044s
    STEP: Saw pod success 01/31/23 16:47:50.736
    Jan 31 16:47:50.736: INFO: Pod "downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634" satisfied condition "Succeeded or Failed"
    Jan 31 16:47:50.745: INFO: Trying to get logs from node 26 pod downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634 container dapi-container: <nil>
    STEP: delete the pod 01/31/23 16:47:50.78
    Jan 31 16:47:50.803: INFO: Waiting for pod downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634 to disappear
    Jan 31 16:47:50.813: INFO: Pod downward-api-41efaa0c-a54d-412e-97d5-0ac4b7f1c634 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:47:50.814: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-5764" for this suite. 01/31/23 16:47:50.823
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-network] Ingress API
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
[BeforeEach] [sig-network] Ingress API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:47:50.833
Jan 31 16:47:50.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename ingress 01/31/23 16:47:50.833
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:47:50.849
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:47:50.857
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:31
[It] should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
STEP: getting /apis 01/31/23 16:47:50.863
STEP: getting /apis/networking.k8s.io 01/31/23 16:47:50.869
STEP: getting /apis/networking.k8s.iov1 01/31/23 16:47:50.872
STEP: creating 01/31/23 16:47:50.875
STEP: getting 01/31/23 16:47:50.896
STEP: listing 01/31/23 16:47:50.901
STEP: watching 01/31/23 16:47:50.908
Jan 31 16:47:50.908: INFO: starting watch
STEP: cluster-wide listing 01/31/23 16:47:50.91
STEP: cluster-wide watching 01/31/23 16:47:50.915
Jan 31 16:47:50.915: INFO: starting watch
STEP: patching 01/31/23 16:47:50.918
STEP: updating 01/31/23 16:47:50.925
Jan 31 16:47:50.935: INFO: waiting for watch events with expected annotations
Jan 31 16:47:50.935: INFO: saw patched and updated annotations
STEP: patching /status 01/31/23 16:47:50.935
STEP: updating /status 01/31/23 16:47:50.944
STEP: get /status 01/31/23 16:47:50.958
STEP: deleting 01/31/23 16:47:50.963
STEP: deleting a collection 01/31/23 16:47:51.004
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/node/init/init.go:32
Jan 31 16:47:51.024: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Ingress API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Ingress API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingress-1974" for this suite. 01/31/23 16:47:51.03
------------------------------
â€¢ [0.205 seconds]
[sig-network] Ingress API
test/e2e/network/common/framework.go:23
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Ingress API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:47:50.833
    Jan 31 16:47:50.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename ingress 01/31/23 16:47:50.833
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:47:50.849
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:47:50.857
    [BeforeEach] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:31
    [It] should support creating Ingress API operations [Conformance]
      test/e2e/network/ingress.go:552
    STEP: getting /apis 01/31/23 16:47:50.863
    STEP: getting /apis/networking.k8s.io 01/31/23 16:47:50.869
    STEP: getting /apis/networking.k8s.iov1 01/31/23 16:47:50.872
    STEP: creating 01/31/23 16:47:50.875
    STEP: getting 01/31/23 16:47:50.896
    STEP: listing 01/31/23 16:47:50.901
    STEP: watching 01/31/23 16:47:50.908
    Jan 31 16:47:50.908: INFO: starting watch
    STEP: cluster-wide listing 01/31/23 16:47:50.91
    STEP: cluster-wide watching 01/31/23 16:47:50.915
    Jan 31 16:47:50.915: INFO: starting watch
    STEP: patching 01/31/23 16:47:50.918
    STEP: updating 01/31/23 16:47:50.925
    Jan 31 16:47:50.935: INFO: waiting for watch events with expected annotations
    Jan 31 16:47:50.935: INFO: saw patched and updated annotations
    STEP: patching /status 01/31/23 16:47:50.935
    STEP: updating /status 01/31/23 16:47:50.944
    STEP: get /status 01/31/23 16:47:50.958
    STEP: deleting 01/31/23 16:47:50.963
    STEP: deleting a collection 01/31/23 16:47:51.004
    [AfterEach] [sig-network] Ingress API
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:47:51.024: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Ingress API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Ingress API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingress-1974" for this suite. 01/31/23 16:47:51.03
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:47:51.039
Jan 31 16:47:51.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename var-expansion 01/31/23 16:47:51.04
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:47:51.056
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:47:51.062
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
STEP: creating the pod 01/31/23 16:47:51.069
STEP: waiting for pod running 01/31/23 16:47:51.078
Jan 31 16:47:51.078: INFO: Waiting up to 2m0s for pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" in namespace "var-expansion-7984" to be "running"
Jan 31 16:47:51.085: INFO: Pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.790068ms
Jan 31 16:47:53.093: INFO: Pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0": Phase="Running", Reason="", readiness=true. Elapsed: 2.015004782s
Jan 31 16:47:53.093: INFO: Pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" satisfied condition "running"
STEP: creating a file in subpath 01/31/23 16:47:53.093
Jan 31 16:47:53.098: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7984 PodName:var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 16:47:53.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 16:47:53.099: INFO: ExecWithOptions: Clientset creation
Jan 31 16:47:53.099: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/var-expansion-7984/pods/var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path 01/31/23 16:47:53.189
Jan 31 16:47:53.196: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7984 PodName:var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 16:47:53.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 16:47:53.197: INFO: ExecWithOptions: Clientset creation
Jan 31 16:47:53.197: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/var-expansion-7984/pods/var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value 01/31/23 16:47:53.285
Jan 31 16:47:53.808: INFO: Successfully updated pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0"
STEP: waiting for annotated pod running 01/31/23 16:47:53.808
Jan 31 16:47:53.809: INFO: Waiting up to 2m0s for pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" in namespace "var-expansion-7984" to be "running"
Jan 31 16:47:53.817: INFO: Pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0": Phase="Running", Reason="", readiness=true. Elapsed: 8.586513ms
Jan 31 16:47:53.818: INFO: Pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" satisfied condition "running"
STEP: deleting the pod gracefully 01/31/23 16:47:53.818
Jan 31 16:47:53.818: INFO: Deleting pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" in namespace "var-expansion-7984"
Jan 31 16:47:53.827: INFO: Wait up to 5m0s for pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 31 16:48:27.845: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-7984" for this suite. 01/31/23 16:48:27.856
------------------------------
â€¢ [SLOW TEST] [36.827 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:47:51.039
    Jan 31 16:47:51.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename var-expansion 01/31/23 16:47:51.04
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:47:51.056
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:47:51.062
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should succeed in writing subpaths in container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:297
    STEP: creating the pod 01/31/23 16:47:51.069
    STEP: waiting for pod running 01/31/23 16:47:51.078
    Jan 31 16:47:51.078: INFO: Waiting up to 2m0s for pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" in namespace "var-expansion-7984" to be "running"
    Jan 31 16:47:51.085: INFO: Pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.790068ms
    Jan 31 16:47:53.093: INFO: Pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0": Phase="Running", Reason="", readiness=true. Elapsed: 2.015004782s
    Jan 31 16:47:53.093: INFO: Pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" satisfied condition "running"
    STEP: creating a file in subpath 01/31/23 16:47:53.093
    Jan 31 16:47:53.098: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7984 PodName:var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 16:47:53.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 16:47:53.099: INFO: ExecWithOptions: Clientset creation
    Jan 31 16:47:53.099: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/var-expansion-7984/pods/var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: test for file in mounted path 01/31/23 16:47:53.189
    Jan 31 16:47:53.196: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7984 PodName:var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 16:47:53.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 16:47:53.197: INFO: ExecWithOptions: Clientset creation
    Jan 31 16:47:53.197: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/var-expansion-7984/pods/var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: updating the annotation value 01/31/23 16:47:53.285
    Jan 31 16:47:53.808: INFO: Successfully updated pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0"
    STEP: waiting for annotated pod running 01/31/23 16:47:53.808
    Jan 31 16:47:53.809: INFO: Waiting up to 2m0s for pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" in namespace "var-expansion-7984" to be "running"
    Jan 31 16:47:53.817: INFO: Pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0": Phase="Running", Reason="", readiness=true. Elapsed: 8.586513ms
    Jan 31 16:47:53.818: INFO: Pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" satisfied condition "running"
    STEP: deleting the pod gracefully 01/31/23 16:47:53.818
    Jan 31 16:47:53.818: INFO: Deleting pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" in namespace "var-expansion-7984"
    Jan 31 16:47:53.827: INFO: Wait up to 5m0s for pod "var-expansion-8a97ecf9-d9d0-4f5c-bba9-c3f67b0703b0" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:48:27.845: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-7984" for this suite. 01/31/23 16:48:27.856
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:806
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:48:27.87
Jan 31 16:48:27.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sched-preemption 01/31/23 16:48:27.871
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:48:27.896
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:48:27.904
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Jan 31 16:48:27.936: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 31 16:49:27.980: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:49:27.988
Jan 31 16:49:27.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sched-preemption-path 01/31/23 16:49:27.99
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:28.016
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:28.028
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:763
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:806
Jan 31 16:49:28.059: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
Jan 31 16:49:28.065: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/node/init/init.go:32
Jan 31 16:49:28.099: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:779
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:49:28.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PriorityClass endpoints
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PriorityClass endpoints
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-4826" for this suite. 01/31/23 16:49:28.178
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-7001" for this suite. 01/31/23 16:49:28.187
------------------------------
â€¢ [SLOW TEST] [60.323 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:756
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/scheduling/preemption.go:806

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:48:27.87
    Jan 31 16:48:27.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sched-preemption 01/31/23 16:48:27.871
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:48:27.896
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:48:27.904
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Jan 31 16:48:27.936: INFO: Waiting up to 1m0s for all nodes to be ready
    Jan 31 16:49:27.980: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PriorityClass endpoints
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:49:27.988
    Jan 31 16:49:27.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sched-preemption-path 01/31/23 16:49:27.99
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:28.016
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:28.028
    [BeforeEach] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:763
    [It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
      test/e2e/scheduling/preemption.go:806
    Jan 31 16:49:28.059: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
    Jan 31 16:49:28.065: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
    [AfterEach] PriorityClass endpoints
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:49:28.099: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:779
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:49:28.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PriorityClass endpoints
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PriorityClass endpoints
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-4826" for this suite. 01/31/23 16:49:28.178
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-7001" for this suite. 01/31/23 16:49:28.187
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:49:28.196
Jan 31 16:49:28.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 16:49:28.196
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:28.213
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:28.221
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
STEP: Creating configMap configmap-2904/configmap-test-42eb1ccd-3c93-4b4c-b82d-f234ed948912 01/31/23 16:49:28.228
STEP: Creating a pod to test consume configMaps 01/31/23 16:49:28.235
Jan 31 16:49:28.244: INFO: Waiting up to 5m0s for pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834" in namespace "configmap-2904" to be "Succeeded or Failed"
Jan 31 16:49:28.253: INFO: Pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834": Phase="Pending", Reason="", readiness=false. Elapsed: 9.242521ms
Jan 31 16:49:30.259: INFO: Pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015580474s
Jan 31 16:49:32.263: INFO: Pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019907583s
Jan 31 16:49:34.260: INFO: Pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.016637479s
STEP: Saw pod success 01/31/23 16:49:34.26
Jan 31 16:49:34.260: INFO: Pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834" satisfied condition "Succeeded or Failed"
Jan 31 16:49:34.266: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834 container env-test: <nil>
STEP: delete the pod 01/31/23 16:49:34.286
Jan 31 16:49:34.297: INFO: Waiting for pod pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834 to disappear
Jan 31 16:49:34.303: INFO: Pod pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 16:49:34.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-2904" for this suite. 01/31/23 16:49:34.311
------------------------------
â€¢ [SLOW TEST] [6.135 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:49:28.196
    Jan 31 16:49:28.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 16:49:28.196
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:28.213
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:28.221
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:93
    STEP: Creating configMap configmap-2904/configmap-test-42eb1ccd-3c93-4b4c-b82d-f234ed948912 01/31/23 16:49:28.228
    STEP: Creating a pod to test consume configMaps 01/31/23 16:49:28.235
    Jan 31 16:49:28.244: INFO: Waiting up to 5m0s for pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834" in namespace "configmap-2904" to be "Succeeded or Failed"
    Jan 31 16:49:28.253: INFO: Pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834": Phase="Pending", Reason="", readiness=false. Elapsed: 9.242521ms
    Jan 31 16:49:30.259: INFO: Pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015580474s
    Jan 31 16:49:32.263: INFO: Pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019907583s
    Jan 31 16:49:34.260: INFO: Pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.016637479s
    STEP: Saw pod success 01/31/23 16:49:34.26
    Jan 31 16:49:34.260: INFO: Pod "pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834" satisfied condition "Succeeded or Failed"
    Jan 31 16:49:34.266: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834 container env-test: <nil>
    STEP: delete the pod 01/31/23 16:49:34.286
    Jan 31 16:49:34.297: INFO: Waiting for pod pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834 to disappear
    Jan 31 16:49:34.303: INFO: Pod pod-configmaps-edf7f778-641c-4596-84fa-da5c04cc7834 no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:49:34.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-2904" for this suite. 01/31/23 16:49:34.311
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:49:34.331
Jan 31 16:49:34.331: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 16:49:34.332
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:34.352
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:34.359
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
STEP: Creating a pod to test emptydir 0777 on tmpfs 01/31/23 16:49:34.366
Jan 31 16:49:34.376: INFO: Waiting up to 5m0s for pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b" in namespace "emptydir-6413" to be "Succeeded or Failed"
Jan 31 16:49:34.382: INFO: Pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.863377ms
Jan 31 16:49:36.392: INFO: Pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01586356s
Jan 31 16:49:38.392: INFO: Pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015323225s
Jan 31 16:49:40.395: INFO: Pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018779425s
STEP: Saw pod success 01/31/23 16:49:40.395
Jan 31 16:49:40.396: INFO: Pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b" satisfied condition "Succeeded or Failed"
Jan 31 16:49:40.405: INFO: Trying to get logs from node 26-m02 pod pod-38795296-87f4-4dc0-ae1f-31515449e14b container test-container: <nil>
STEP: delete the pod 01/31/23 16:49:40.424
Jan 31 16:49:40.443: INFO: Waiting for pod pod-38795296-87f4-4dc0-ae1f-31515449e14b to disappear
Jan 31 16:49:40.450: INFO: Pod pod-38795296-87f4-4dc0-ae1f-31515449e14b no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 16:49:40.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-6413" for this suite. 01/31/23 16:49:40.457
------------------------------
â€¢ [SLOW TEST] [6.134 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:49:34.331
    Jan 31 16:49:34.331: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 16:49:34.332
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:34.352
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:34.359
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:117
    STEP: Creating a pod to test emptydir 0777 on tmpfs 01/31/23 16:49:34.366
    Jan 31 16:49:34.376: INFO: Waiting up to 5m0s for pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b" in namespace "emptydir-6413" to be "Succeeded or Failed"
    Jan 31 16:49:34.382: INFO: Pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.863377ms
    Jan 31 16:49:36.392: INFO: Pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01586356s
    Jan 31 16:49:38.392: INFO: Pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015323225s
    Jan 31 16:49:40.395: INFO: Pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018779425s
    STEP: Saw pod success 01/31/23 16:49:40.395
    Jan 31 16:49:40.396: INFO: Pod "pod-38795296-87f4-4dc0-ae1f-31515449e14b" satisfied condition "Succeeded or Failed"
    Jan 31 16:49:40.405: INFO: Trying to get logs from node 26-m02 pod pod-38795296-87f4-4dc0-ae1f-31515449e14b container test-container: <nil>
    STEP: delete the pod 01/31/23 16:49:40.424
    Jan 31 16:49:40.443: INFO: Waiting for pod pod-38795296-87f4-4dc0-ae1f-31515449e14b to disappear
    Jan 31 16:49:40.450: INFO: Pod pod-38795296-87f4-4dc0-ae1f-31515449e14b no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:49:40.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-6413" for this suite. 01/31/23 16:49:40.457
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:49:40.466
Jan 31 16:49:40.466: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename tables 01/31/23 16:49:40.467
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:40.484
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:40.491
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/node/init/init.go:32
Jan 31 16:49:40.503: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  tear down framework | framework.go:193
STEP: Destroying namespace "tables-4287" for this suite. 01/31/23 16:49:40.509
------------------------------
â€¢ [0.051 seconds]
[sig-api-machinery] Servers with support for Table transformation
test/e2e/apimachinery/framework.go:23
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:49:40.466
    Jan 31 16:49:40.466: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename tables 01/31/23 16:49:40.467
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:40.484
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:40.491
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/apimachinery/table_conversion.go:49
    [It] should return a 406 for a backend which does not implement metadata [Conformance]
      test/e2e/apimachinery/table_conversion.go:154
    [AfterEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:49:40.503: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      tear down framework | framework.go:193
    STEP: Destroying namespace "tables-4287" for this suite. 01/31/23 16:49:40.509
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:49:40.517
Jan 31 16:49:40.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename init-container 01/31/23 16:49:40.518
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:40.535
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:40.541
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
STEP: creating the pod 01/31/23 16:49:40.549
Jan 31 16:49:40.549: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:49:44.835: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-2510" for this suite. 01/31/23 16:49:44.841
------------------------------
â€¢ [4.333 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:49:40.517
    Jan 31 16:49:40.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename init-container 01/31/23 16:49:40.518
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:40.535
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:40.541
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:255
    STEP: creating the pod 01/31/23 16:49:40.549
    Jan 31 16:49:40.549: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:49:44.835: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-2510" for this suite. 01/31/23 16:49:44.841
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:49:44.851
Jan 31 16:49:44.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-probe 01/31/23 16:49:44.852
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:44.868
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:44.875
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 31 16:50:44.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-7377" for this suite. 01/31/23 16:50:44.914
------------------------------
â€¢ [SLOW TEST] [60.077 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:49:44.851
    Jan 31 16:49:44.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-probe 01/31/23 16:49:44.852
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:49:44.868
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:49:44.875
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:108
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:50:44.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-7377" for this suite. 01/31/23 16:50:44.914
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:50:44.93
Jan 31 16:50:44.930: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 16:50:44.932
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:50:44.951
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:50:44.958
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 16:50:44.982
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:50:45.496
STEP: Deploying the webhook pod 01/31/23 16:50:45.509
STEP: Wait for the deployment to be ready 01/31/23 16:50:45.529
Jan 31 16:50:45.546: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/31/23 16:50:47.567
STEP: Verifying the service has paired with the endpoint 01/31/23 16:50:47.636
Jan 31 16:50:48.636: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
STEP: Registering the webhook via the AdmissionRegistration API 01/31/23 16:50:48.645
STEP: create a pod 01/31/23 16:50:48.673
Jan 31 16:50:48.682: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-3572" to be "running"
Jan 31 16:50:48.692: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 10.162149ms
Jan 31 16:50:50.704: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022429847s
Jan 31 16:50:52.707: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.024756809s
Jan 31 16:50:52.707: INFO: Pod "to-be-attached-pod" satisfied condition "running"
STEP: 'kubectl attach' the pod, should be denied by the webhook 01/31/23 16:50:52.707
Jan 31 16:50:52.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=webhook-3572 attach --namespace=webhook-3572 to-be-attached-pod -i -c=container1'
Jan 31 16:50:52.825: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:50:52.836: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3572" for this suite. 01/31/23 16:50:52.899
STEP: Destroying namespace "webhook-3572-markers" for this suite. 01/31/23 16:50:52.912
------------------------------
â€¢ [SLOW TEST] [7.994 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:50:44.93
    Jan 31 16:50:44.930: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 16:50:44.932
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:50:44.951
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:50:44.958
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 16:50:44.982
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:50:45.496
    STEP: Deploying the webhook pod 01/31/23 16:50:45.509
    STEP: Wait for the deployment to be ready 01/31/23 16:50:45.529
    Jan 31 16:50:45.546: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/31/23 16:50:47.567
    STEP: Verifying the service has paired with the endpoint 01/31/23 16:50:47.636
    Jan 31 16:50:48.636: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny attaching pod [Conformance]
      test/e2e/apimachinery/webhook.go:209
    STEP: Registering the webhook via the AdmissionRegistration API 01/31/23 16:50:48.645
    STEP: create a pod 01/31/23 16:50:48.673
    Jan 31 16:50:48.682: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-3572" to be "running"
    Jan 31 16:50:48.692: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 10.162149ms
    Jan 31 16:50:50.704: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022429847s
    Jan 31 16:50:52.707: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.024756809s
    Jan 31 16:50:52.707: INFO: Pod "to-be-attached-pod" satisfied condition "running"
    STEP: 'kubectl attach' the pod, should be denied by the webhook 01/31/23 16:50:52.707
    Jan 31 16:50:52.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=webhook-3572 attach --namespace=webhook-3572 to-be-attached-pod -i -c=container1'
    Jan 31 16:50:52.825: INFO: rc: 1
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:50:52.836: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3572" for this suite. 01/31/23 16:50:52.899
    STEP: Destroying namespace "webhook-3572-markers" for this suite. 01/31/23 16:50:52.912
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:50:52.924
Jan 31 16:50:52.924: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename subpath 01/31/23 16:50:52.926
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:50:52.948
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:50:52.959
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 01/31/23 16:50:52.97
[It] should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
STEP: Creating pod pod-subpath-test-projected-bqqc 01/31/23 16:50:52.987
STEP: Creating a pod to test atomic-volume-subpath 01/31/23 16:50:52.987
Jan 31 16:50:52.998: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-bqqc" in namespace "subpath-5452" to be "Succeeded or Failed"
Jan 31 16:50:53.005: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Pending", Reason="", readiness=false. Elapsed: 7.221869ms
Jan 31 16:50:55.016: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 2.017545101s
Jan 31 16:50:57.016: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 4.017670788s
Jan 31 16:50:59.020: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 6.022304551s
Jan 31 16:51:01.015: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 8.01651155s
Jan 31 16:51:03.012: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 10.014050806s
Jan 31 16:51:05.021: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 12.023249725s
Jan 31 16:51:07.016: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 14.018006298s
Jan 31 16:51:09.017: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 16.018935524s
Jan 31 16:51:11.012: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 18.013691775s
Jan 31 16:51:13.015: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 20.017250429s
Jan 31 16:51:15.015: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=false. Elapsed: 22.017394541s
Jan 31 16:51:17.012: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.013681891s
STEP: Saw pod success 01/31/23 16:51:17.012
Jan 31 16:51:17.012: INFO: Pod "pod-subpath-test-projected-bqqc" satisfied condition "Succeeded or Failed"
Jan 31 16:51:17.016: INFO: Trying to get logs from node 26-m02 pod pod-subpath-test-projected-bqqc container test-container-subpath-projected-bqqc: <nil>
STEP: delete the pod 01/31/23 16:51:17.046
Jan 31 16:51:17.058: INFO: Waiting for pod pod-subpath-test-projected-bqqc to disappear
Jan 31 16:51:17.065: INFO: Pod pod-subpath-test-projected-bqqc no longer exists
STEP: Deleting pod pod-subpath-test-projected-bqqc 01/31/23 16:51:17.065
Jan 31 16:51:17.065: INFO: Deleting pod "pod-subpath-test-projected-bqqc" in namespace "subpath-5452"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Jan 31 16:51:17.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-5452" for this suite. 01/31/23 16:51:17.077
------------------------------
â€¢ [SLOW TEST] [24.159 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/storage/subpath.go:106

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:50:52.924
    Jan 31 16:50:52.924: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename subpath 01/31/23 16:50:52.926
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:50:52.948
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:50:52.959
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 01/31/23 16:50:52.97
    [It] should support subpaths with projected pod [Conformance]
      test/e2e/storage/subpath.go:106
    STEP: Creating pod pod-subpath-test-projected-bqqc 01/31/23 16:50:52.987
    STEP: Creating a pod to test atomic-volume-subpath 01/31/23 16:50:52.987
    Jan 31 16:50:52.998: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-bqqc" in namespace "subpath-5452" to be "Succeeded or Failed"
    Jan 31 16:50:53.005: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Pending", Reason="", readiness=false. Elapsed: 7.221869ms
    Jan 31 16:50:55.016: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 2.017545101s
    Jan 31 16:50:57.016: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 4.017670788s
    Jan 31 16:50:59.020: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 6.022304551s
    Jan 31 16:51:01.015: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 8.01651155s
    Jan 31 16:51:03.012: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 10.014050806s
    Jan 31 16:51:05.021: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 12.023249725s
    Jan 31 16:51:07.016: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 14.018006298s
    Jan 31 16:51:09.017: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 16.018935524s
    Jan 31 16:51:11.012: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 18.013691775s
    Jan 31 16:51:13.015: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=true. Elapsed: 20.017250429s
    Jan 31 16:51:15.015: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Running", Reason="", readiness=false. Elapsed: 22.017394541s
    Jan 31 16:51:17.012: INFO: Pod "pod-subpath-test-projected-bqqc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.013681891s
    STEP: Saw pod success 01/31/23 16:51:17.012
    Jan 31 16:51:17.012: INFO: Pod "pod-subpath-test-projected-bqqc" satisfied condition "Succeeded or Failed"
    Jan 31 16:51:17.016: INFO: Trying to get logs from node 26-m02 pod pod-subpath-test-projected-bqqc container test-container-subpath-projected-bqqc: <nil>
    STEP: delete the pod 01/31/23 16:51:17.046
    Jan 31 16:51:17.058: INFO: Waiting for pod pod-subpath-test-projected-bqqc to disappear
    Jan 31 16:51:17.065: INFO: Pod pod-subpath-test-projected-bqqc no longer exists
    STEP: Deleting pod pod-subpath-test-projected-bqqc 01/31/23 16:51:17.065
    Jan 31 16:51:17.065: INFO: Deleting pod "pod-subpath-test-projected-bqqc" in namespace "subpath-5452"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:51:17.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-5452" for this suite. 01/31/23 16:51:17.077
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:51:17.084
Jan 31 16:51:17.084: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 16:51:17.085
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:51:17.1
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:51:17.107
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 16:51:17.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-2017" for this suite. 01/31/23 16:51:17.124
------------------------------
â€¢ [0.046 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:51:17.084
    Jan 31 16:51:17.084: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 16:51:17.085
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:51:17.1
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:51:17.107
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should provide secure master service  [Conformance]
      test/e2e/network/service.go:777
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:51:17.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-2017" for this suite. 01/31/23 16:51:17.124
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:51:17.13
Jan 31 16:51:17.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename dns 01/31/23 16:51:17.131
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:51:17.147
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:51:17.154
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
STEP: Creating a test headless service 01/31/23 16:51:17.16
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 57.247.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.247.57_udp@PTR;check="$$(dig +tcp +noall +answer +search 57.247.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.247.57_tcp@PTR;sleep 1; done
 01/31/23 16:51:17.231
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 57.247.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.247.57_udp@PTR;check="$$(dig +tcp +noall +answer +search 57.247.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.247.57_tcp@PTR;sleep 1; done
 01/31/23 16:51:17.231
STEP: creating a pod to probe DNS 01/31/23 16:51:17.231
STEP: submitting the pod to kubernetes 01/31/23 16:51:17.231
Jan 31 16:51:17.244: INFO: Waiting up to 15m0s for pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd" in namespace "dns-1240" to be "running"
Jan 31 16:51:17.252: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 8.435667ms
Jan 31 16:51:19.258: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014051308s
Jan 31 16:51:21.267: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022645832s
Jan 31 16:51:23.261: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 6.017367184s
Jan 31 16:51:25.262: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 8.017789432s
Jan 31 16:51:27.266: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 10.022227202s
Jan 31 16:51:29.264: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 12.020218267s
Jan 31 16:51:31.262: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 14.018242593s
Jan 31 16:51:33.263: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 16.019228248s
Jan 31 16:51:35.265: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 18.021002431s
Jan 31 16:51:37.267: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 20.022663829s
Jan 31 16:51:39.264: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 22.01972298s
Jan 31 16:51:41.263: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Running", Reason="", readiness=true. Elapsed: 24.018561739s
Jan 31 16:51:41.263: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd" satisfied condition "running"
STEP: retrieving the pod 01/31/23 16:51:41.263
STEP: looking for the results for each expected name from probers 01/31/23 16:51:41.272
Jan 31 16:51:41.286: INFO: Unable to read wheezy_udp@dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
Jan 31 16:51:41.295: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
Jan 31 16:51:41.305: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
Jan 31 16:51:41.315: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
Jan 31 16:51:41.352: INFO: Unable to read jessie_udp@dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
Jan 31 16:51:41.357: INFO: Unable to read jessie_tcp@dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
Jan 31 16:51:41.361: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
Jan 31 16:51:41.367: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
Jan 31 16:51:41.394: INFO: Lookups using dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd failed for: [wheezy_udp@dns-test-service.dns-1240.svc.cluster.local wheezy_tcp@dns-test-service.dns-1240.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local jessie_udp@dns-test-service.dns-1240.svc.cluster.local jessie_tcp@dns-test-service.dns-1240.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local]

Jan 31 16:51:46.511: INFO: DNS probes using dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd succeeded

STEP: deleting the pod 01/31/23 16:51:46.511
STEP: deleting the test service 01/31/23 16:51:46.523
STEP: deleting the test headless service 01/31/23 16:51:46.574
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 31 16:51:46.600: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-1240" for this suite. 01/31/23 16:51:46.609
------------------------------
â€¢ [SLOW TEST] [29.490 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:51:17.13
    Jan 31 16:51:17.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename dns 01/31/23 16:51:17.131
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:51:17.147
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:51:17.154
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for services  [Conformance]
      test/e2e/network/dns.go:137
    STEP: Creating a test headless service 01/31/23 16:51:17.16
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 57.247.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.247.57_udp@PTR;check="$$(dig +tcp +noall +answer +search 57.247.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.247.57_tcp@PTR;sleep 1; done
     01/31/23 16:51:17.231
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 57.247.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.247.57_udp@PTR;check="$$(dig +tcp +noall +answer +search 57.247.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.247.57_tcp@PTR;sleep 1; done
     01/31/23 16:51:17.231
    STEP: creating a pod to probe DNS 01/31/23 16:51:17.231
    STEP: submitting the pod to kubernetes 01/31/23 16:51:17.231
    Jan 31 16:51:17.244: INFO: Waiting up to 15m0s for pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd" in namespace "dns-1240" to be "running"
    Jan 31 16:51:17.252: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 8.435667ms
    Jan 31 16:51:19.258: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014051308s
    Jan 31 16:51:21.267: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022645832s
    Jan 31 16:51:23.261: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 6.017367184s
    Jan 31 16:51:25.262: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 8.017789432s
    Jan 31 16:51:27.266: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 10.022227202s
    Jan 31 16:51:29.264: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 12.020218267s
    Jan 31 16:51:31.262: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 14.018242593s
    Jan 31 16:51:33.263: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 16.019228248s
    Jan 31 16:51:35.265: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 18.021002431s
    Jan 31 16:51:37.267: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 20.022663829s
    Jan 31 16:51:39.264: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Pending", Reason="", readiness=false. Elapsed: 22.01972298s
    Jan 31 16:51:41.263: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd": Phase="Running", Reason="", readiness=true. Elapsed: 24.018561739s
    Jan 31 16:51:41.263: INFO: Pod "dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd" satisfied condition "running"
    STEP: retrieving the pod 01/31/23 16:51:41.263
    STEP: looking for the results for each expected name from probers 01/31/23 16:51:41.272
    Jan 31 16:51:41.286: INFO: Unable to read wheezy_udp@dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
    Jan 31 16:51:41.295: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
    Jan 31 16:51:41.305: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
    Jan 31 16:51:41.315: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
    Jan 31 16:51:41.352: INFO: Unable to read jessie_udp@dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
    Jan 31 16:51:41.357: INFO: Unable to read jessie_tcp@dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
    Jan 31 16:51:41.361: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
    Jan 31 16:51:41.367: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local from pod dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd: the server could not find the requested resource (get pods dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd)
    Jan 31 16:51:41.394: INFO: Lookups using dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd failed for: [wheezy_udp@dns-test-service.dns-1240.svc.cluster.local wheezy_tcp@dns-test-service.dns-1240.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local jessie_udp@dns-test-service.dns-1240.svc.cluster.local jessie_tcp@dns-test-service.dns-1240.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1240.svc.cluster.local]

    Jan 31 16:51:46.511: INFO: DNS probes using dns-1240/dns-test-ba5e6b19-4b08-4b84-a32a-600dedb83bbd succeeded

    STEP: deleting the pod 01/31/23 16:51:46.511
    STEP: deleting the test service 01/31/23 16:51:46.523
    STEP: deleting the test headless service 01/31/23 16:51:46.574
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:51:46.600: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-1240" for this suite. 01/31/23 16:51:46.609
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases
  should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:51:46.624
Jan 31 16:51:46.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubelet-test 01/31/23 16:51:46.625
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:51:46.655
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:51:46.664
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
STEP: Waiting for pod completion 01/31/23 16:51:46.685
Jan 31 16:51:46.685: INFO: Waiting up to 3m0s for pod "agnhost-host-aliases1ca5a764-d082-4e3a-9185-b3c35d6ce7a5" in namespace "kubelet-test-7658" to be "completed"
Jan 31 16:51:46.691: INFO: Pod "agnhost-host-aliases1ca5a764-d082-4e3a-9185-b3c35d6ce7a5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.13389ms
Jan 31 16:51:48.703: INFO: Pod "agnhost-host-aliases1ca5a764-d082-4e3a-9185-b3c35d6ce7a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017697901s
Jan 31 16:51:50.702: INFO: Pod "agnhost-host-aliases1ca5a764-d082-4e3a-9185-b3c35d6ce7a5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016950073s
Jan 31 16:51:50.702: INFO: Pod "agnhost-host-aliases1ca5a764-d082-4e3a-9185-b3c35d6ce7a5" satisfied condition "completed"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Jan 31 16:51:50.722: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-7658" for this suite. 01/31/23 16:51:50.732
------------------------------
â€¢ [4.118 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling an agnhost Pod with hostAliases
  test/e2e/common/node/kubelet.go:140
    should write entries to /etc/hosts [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:148

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:51:46.624
    Jan 31 16:51:46.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubelet-test 01/31/23 16:51:46.625
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:51:46.655
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:51:46.664
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should write entries to /etc/hosts [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:148
    STEP: Waiting for pod completion 01/31/23 16:51:46.685
    Jan 31 16:51:46.685: INFO: Waiting up to 3m0s for pod "agnhost-host-aliases1ca5a764-d082-4e3a-9185-b3c35d6ce7a5" in namespace "kubelet-test-7658" to be "completed"
    Jan 31 16:51:46.691: INFO: Pod "agnhost-host-aliases1ca5a764-d082-4e3a-9185-b3c35d6ce7a5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.13389ms
    Jan 31 16:51:48.703: INFO: Pod "agnhost-host-aliases1ca5a764-d082-4e3a-9185-b3c35d6ce7a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017697901s
    Jan 31 16:51:50.702: INFO: Pod "agnhost-host-aliases1ca5a764-d082-4e3a-9185-b3c35d6ce7a5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016950073s
    Jan 31 16:51:50.702: INFO: Pod "agnhost-host-aliases1ca5a764-d082-4e3a-9185-b3c35d6ce7a5" satisfied condition "completed"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:51:50.722: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-7658" for this suite. 01/31/23 16:51:50.732
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] Services
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:51:50.742
Jan 31 16:51:50.742: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 16:51:50.745
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:51:50.769
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:51:50.777
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
STEP: creating service in namespace services-5662 01/31/23 16:51:50.787
STEP: creating service affinity-nodeport-transition in namespace services-5662 01/31/23 16:51:50.787
STEP: creating replication controller affinity-nodeport-transition in namespace services-5662 01/31/23 16:51:50.844
I0131 16:51:50.852465      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-5662, replica count: 3
I0131 16:51:53.903499      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 31 16:51:53.929: INFO: Creating new exec pod
Jan 31 16:51:53.937: INFO: Waiting up to 5m0s for pod "execpod-affinityjhnmc" in namespace "services-5662" to be "running"
Jan 31 16:51:53.947: INFO: Pod "execpod-affinityjhnmc": Phase="Pending", Reason="", readiness=false. Elapsed: 10.56284ms
Jan 31 16:51:55.955: INFO: Pod "execpod-affinityjhnmc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01812013s
Jan 31 16:51:57.960: INFO: Pod "execpod-affinityjhnmc": Phase="Running", Reason="", readiness=true. Elapsed: 4.023344653s
Jan 31 16:51:57.960: INFO: Pod "execpod-affinityjhnmc" satisfied condition "running"
Jan 31 16:51:58.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
Jan 31 16:51:59.136: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Jan 31 16:51:59.136: INFO: stdout: ""
Jan 31 16:51:59.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c nc -v -z -w 2 10.106.166.180 80'
Jan 31 16:51:59.315: INFO: stderr: "+ nc -v -z -w 2 10.106.166.180 80\nConnection to 10.106.166.180 80 port [tcp/http] succeeded!\n"
Jan 31 16:51:59.315: INFO: stdout: ""
Jan 31 16:51:59.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c nc -v -z -w 2 192.168.61.199 30762'
Jan 31 16:51:59.490: INFO: stderr: "+ nc -v -z -w 2 192.168.61.199 30762\nConnection to 192.168.61.199 30762 port [tcp/*] succeeded!\n"
Jan 31 16:51:59.490: INFO: stdout: ""
Jan 31 16:51:59.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c nc -v -z -w 2 192.168.61.148 30762'
Jan 31 16:51:59.666: INFO: stderr: "+ nc -v -z -w 2 192.168.61.148 30762\nConnection to 192.168.61.148 30762 port [tcp/*] succeeded!\n"
Jan 31 16:51:59.666: INFO: stdout: ""
Jan 31 16:51:59.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.61.148:30762/ ; done'
Jan 31 16:51:59.899: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n"
Jan 31 16:51:59.899: INFO: stdout: "\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-fr8zd\naffinity-nodeport-transition-fr8zd\naffinity-nodeport-transition-fr8zd\naffinity-nodeport-transition-fr8zd\naffinity-nodeport-transition-rf8fs\naffinity-nodeport-transition-rf8fs\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-rf8fs\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-fr8zd\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr"
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-fr8zd
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-fr8zd
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-fr8zd
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-fr8zd
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-rf8fs
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-rf8fs
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-rf8fs
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-fr8zd
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:51:59.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.61.148:30762/ ; done'
Jan 31 16:52:00.146: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n"
Jan 31 16:52:00.147: INFO: stdout: "\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr"
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
Jan 31 16:52:00.147: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5662, will wait for the garbage collector to delete the pods 01/31/23 16:52:00.158
Jan 31 16:52:00.221: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.158149ms
Jan 31 16:52:00.322: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.323107ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 16:52:02.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-5662" for this suite. 01/31/23 16:52:02.686
------------------------------
â€¢ [SLOW TEST] [11.951 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:51:50.742
    Jan 31 16:51:50.742: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 16:51:50.745
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:51:50.769
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:51:50.777
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2250
    STEP: creating service in namespace services-5662 01/31/23 16:51:50.787
    STEP: creating service affinity-nodeport-transition in namespace services-5662 01/31/23 16:51:50.787
    STEP: creating replication controller affinity-nodeport-transition in namespace services-5662 01/31/23 16:51:50.844
    I0131 16:51:50.852465      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-5662, replica count: 3
    I0131 16:51:53.903499      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 31 16:51:53.929: INFO: Creating new exec pod
    Jan 31 16:51:53.937: INFO: Waiting up to 5m0s for pod "execpod-affinityjhnmc" in namespace "services-5662" to be "running"
    Jan 31 16:51:53.947: INFO: Pod "execpod-affinityjhnmc": Phase="Pending", Reason="", readiness=false. Elapsed: 10.56284ms
    Jan 31 16:51:55.955: INFO: Pod "execpod-affinityjhnmc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01812013s
    Jan 31 16:51:57.960: INFO: Pod "execpod-affinityjhnmc": Phase="Running", Reason="", readiness=true. Elapsed: 4.023344653s
    Jan 31 16:51:57.960: INFO: Pod "execpod-affinityjhnmc" satisfied condition "running"
    Jan 31 16:51:58.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
    Jan 31 16:51:59.136: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
    Jan 31 16:51:59.136: INFO: stdout: ""
    Jan 31 16:51:59.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c nc -v -z -w 2 10.106.166.180 80'
    Jan 31 16:51:59.315: INFO: stderr: "+ nc -v -z -w 2 10.106.166.180 80\nConnection to 10.106.166.180 80 port [tcp/http] succeeded!\n"
    Jan 31 16:51:59.315: INFO: stdout: ""
    Jan 31 16:51:59.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c nc -v -z -w 2 192.168.61.199 30762'
    Jan 31 16:51:59.490: INFO: stderr: "+ nc -v -z -w 2 192.168.61.199 30762\nConnection to 192.168.61.199 30762 port [tcp/*] succeeded!\n"
    Jan 31 16:51:59.490: INFO: stdout: ""
    Jan 31 16:51:59.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c nc -v -z -w 2 192.168.61.148 30762'
    Jan 31 16:51:59.666: INFO: stderr: "+ nc -v -z -w 2 192.168.61.148 30762\nConnection to 192.168.61.148 30762 port [tcp/*] succeeded!\n"
    Jan 31 16:51:59.666: INFO: stdout: ""
    Jan 31 16:51:59.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.61.148:30762/ ; done'
    Jan 31 16:51:59.899: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n"
    Jan 31 16:51:59.899: INFO: stdout: "\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-fr8zd\naffinity-nodeport-transition-fr8zd\naffinity-nodeport-transition-fr8zd\naffinity-nodeport-transition-fr8zd\naffinity-nodeport-transition-rf8fs\naffinity-nodeport-transition-rf8fs\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-rf8fs\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-fr8zd\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr"
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-fr8zd
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-fr8zd
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-fr8zd
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-fr8zd
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-rf8fs
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-rf8fs
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-rf8fs
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-fr8zd
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:51:59.899: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:51:59.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-5662 exec execpod-affinityjhnmc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.61.148:30762/ ; done'
    Jan 31 16:52:00.146: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.148:30762/\n"
    Jan 31 16:52:00.147: INFO: stdout: "\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr\naffinity-nodeport-transition-f9cnr"
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Received response from host: affinity-nodeport-transition-f9cnr
    Jan 31 16:52:00.147: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5662, will wait for the garbage collector to delete the pods 01/31/23 16:52:00.158
    Jan 31 16:52:00.221: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.158149ms
    Jan 31 16:52:00.322: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.323107ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:52:02.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-5662" for this suite. 01/31/23 16:52:02.686
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:52:02.694
Jan 31 16:52:02.694: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 16:52:02.695
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:52:02.716
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:52:02.723
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 16:52:02.752
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:52:03.176
STEP: Deploying the webhook pod 01/31/23 16:52:03.192
STEP: Wait for the deployment to be ready 01/31/23 16:52:03.209
Jan 31 16:52:03.229: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 16:52:05.258: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 16:52:07.268
STEP: Verifying the service has paired with the endpoint 01/31/23 16:52:07.323
Jan 31 16:52:08.324: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
STEP: Registering the webhook via the AdmissionRegistration API 01/31/23 16:52:08.347
STEP: create a pod that should be denied by the webhook 01/31/23 16:52:08.373
STEP: create a pod that causes the webhook to hang 01/31/23 16:52:08.388
STEP: create a configmap that should be denied by the webhook 01/31/23 16:52:18.402
STEP: create a configmap that should be admitted by the webhook 01/31/23 16:52:18.427
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 01/31/23 16:52:18.445
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 01/31/23 16:52:18.46
STEP: create a namespace that bypass the webhook 01/31/23 16:52:18.471
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 01/31/23 16:52:18.488
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:52:18.537: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-9063" for this suite. 01/31/23 16:52:18.613
STEP: Destroying namespace "webhook-9063-markers" for this suite. 01/31/23 16:52:18.623
------------------------------
â€¢ [SLOW TEST] [15.947 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:52:02.694
    Jan 31 16:52:02.694: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 16:52:02.695
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:52:02.716
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:52:02.723
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 16:52:02.752
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:52:03.176
    STEP: Deploying the webhook pod 01/31/23 16:52:03.192
    STEP: Wait for the deployment to be ready 01/31/23 16:52:03.209
    Jan 31 16:52:03.229: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 16:52:05.258: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 16:52:07.268
    STEP: Verifying the service has paired with the endpoint 01/31/23 16:52:07.323
    Jan 31 16:52:08.324: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny pod and configmap creation [Conformance]
      test/e2e/apimachinery/webhook.go:197
    STEP: Registering the webhook via the AdmissionRegistration API 01/31/23 16:52:08.347
    STEP: create a pod that should be denied by the webhook 01/31/23 16:52:08.373
    STEP: create a pod that causes the webhook to hang 01/31/23 16:52:08.388
    STEP: create a configmap that should be denied by the webhook 01/31/23 16:52:18.402
    STEP: create a configmap that should be admitted by the webhook 01/31/23 16:52:18.427
    STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 01/31/23 16:52:18.445
    STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 01/31/23 16:52:18.46
    STEP: create a namespace that bypass the webhook 01/31/23 16:52:18.471
    STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 01/31/23 16:52:18.488
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:52:18.537: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-9063" for this suite. 01/31/23 16:52:18.613
    STEP: Destroying namespace "webhook-9063-markers" for this suite. 01/31/23 16:52:18.623
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:52:18.642
Jan 31 16:52:18.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pod-network-test 01/31/23 16:52:18.643
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:52:18.684
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:52:18.692
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
STEP: Performing setup for networking test in namespace pod-network-test-2994 01/31/23 16:52:18.7
STEP: creating a selector 01/31/23 16:52:18.7
STEP: Creating the service pods in kubernetes 01/31/23 16:52:18.7
Jan 31 16:52:18.701: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 31 16:52:18.729: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-2994" to be "running and ready"
Jan 31 16:52:18.738: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 8.711542ms
Jan 31 16:52:18.738: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:52:20.745: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.015889271s
Jan 31 16:52:20.745: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 16:52:22.748: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.019046887s
Jan 31 16:52:22.748: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 16:52:24.748: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.019552071s
Jan 31 16:52:24.749: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 16:52:26.751: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.022456183s
Jan 31 16:52:26.751: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 16:52:28.748: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.019448425s
Jan 31 16:52:28.748: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 16:52:30.747: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.01813972s
Jan 31 16:52:30.747: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Jan 31 16:52:30.747: INFO: Pod "netserver-0" satisfied condition "running and ready"
Jan 31 16:52:30.757: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-2994" to be "running and ready"
Jan 31 16:52:30.766: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 8.948952ms
Jan 31 16:52:30.766: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Jan 31 16:52:30.766: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 01/31/23 16:52:30.775
Jan 31 16:52:30.801: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-2994" to be "running"
Jan 31 16:52:30.815: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 14.162744ms
Jan 31 16:52:32.828: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027047297s
Jan 31 16:52:34.826: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.025027087s
Jan 31 16:52:34.826: INFO: Pod "test-container-pod" satisfied condition "running"
Jan 31 16:52:34.839: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-2994" to be "running"
Jan 31 16:52:34.848: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 8.413975ms
Jan 31 16:52:34.848: INFO: Pod "host-test-container-pod" satisfied condition "running"
Jan 31 16:52:34.854: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jan 31 16:52:34.854: INFO: Going to poll 10.244.0.50 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Jan 31 16:52:34.860: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.50 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2994 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 16:52:34.860: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 16:52:34.861: INFO: ExecWithOptions: Clientset creation
Jan 31 16:52:34.861: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-2994/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.50+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 31 16:52:35.983: INFO: Found all 1 expected endpoints: [netserver-0]
Jan 31 16:52:35.983: INFO: Going to poll 10.244.1.56 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Jan 31 16:52:35.994: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.56 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2994 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 16:52:35.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 16:52:35.995: INFO: ExecWithOptions: Clientset creation
Jan 31 16:52:35.995: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-2994/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.56+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 31 16:52:37.096: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Jan 31 16:52:37.096: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-2994" for this suite. 01/31/23 16:52:37.107
------------------------------
â€¢ [SLOW TEST] [18.472 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:52:18.642
    Jan 31 16:52:18.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pod-network-test 01/31/23 16:52:18.643
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:52:18.684
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:52:18.692
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:122
    STEP: Performing setup for networking test in namespace pod-network-test-2994 01/31/23 16:52:18.7
    STEP: creating a selector 01/31/23 16:52:18.7
    STEP: Creating the service pods in kubernetes 01/31/23 16:52:18.7
    Jan 31 16:52:18.701: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Jan 31 16:52:18.729: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-2994" to be "running and ready"
    Jan 31 16:52:18.738: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 8.711542ms
    Jan 31 16:52:18.738: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:52:20.745: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.015889271s
    Jan 31 16:52:20.745: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 16:52:22.748: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.019046887s
    Jan 31 16:52:22.748: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 16:52:24.748: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.019552071s
    Jan 31 16:52:24.749: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 16:52:26.751: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.022456183s
    Jan 31 16:52:26.751: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 16:52:28.748: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.019448425s
    Jan 31 16:52:28.748: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 16:52:30.747: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.01813972s
    Jan 31 16:52:30.747: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Jan 31 16:52:30.747: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Jan 31 16:52:30.757: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-2994" to be "running and ready"
    Jan 31 16:52:30.766: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 8.948952ms
    Jan 31 16:52:30.766: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Jan 31 16:52:30.766: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 01/31/23 16:52:30.775
    Jan 31 16:52:30.801: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-2994" to be "running"
    Jan 31 16:52:30.815: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 14.162744ms
    Jan 31 16:52:32.828: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027047297s
    Jan 31 16:52:34.826: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.025027087s
    Jan 31 16:52:34.826: INFO: Pod "test-container-pod" satisfied condition "running"
    Jan 31 16:52:34.839: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-2994" to be "running"
    Jan 31 16:52:34.848: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 8.413975ms
    Jan 31 16:52:34.848: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Jan 31 16:52:34.854: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Jan 31 16:52:34.854: INFO: Going to poll 10.244.0.50 on port 8081 at least 0 times, with a maximum of 34 tries before failing
    Jan 31 16:52:34.860: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.50 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2994 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 16:52:34.860: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 16:52:34.861: INFO: ExecWithOptions: Clientset creation
    Jan 31 16:52:34.861: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-2994/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.50+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Jan 31 16:52:35.983: INFO: Found all 1 expected endpoints: [netserver-0]
    Jan 31 16:52:35.983: INFO: Going to poll 10.244.1.56 on port 8081 at least 0 times, with a maximum of 34 tries before failing
    Jan 31 16:52:35.994: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.56 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2994 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 16:52:35.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 16:52:35.995: INFO: ExecWithOptions: Clientset creation
    Jan 31 16:52:35.995: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-2994/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.56+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Jan 31 16:52:37.096: INFO: Found all 1 expected endpoints: [netserver-1]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:52:37.096: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-2994" for this suite. 01/31/23 16:52:37.107
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] Deployment
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:52:37.114
Jan 31 16:52:37.114: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename deployment 01/31/23 16:52:37.115
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:52:37.132
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:52:37.142
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
Jan 31 16:52:37.164: INFO: Pod name rollover-pod: Found 0 pods out of 1
Jan 31 16:52:42.178: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/31/23 16:52:42.178
Jan 31 16:52:42.178: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Jan 31 16:52:44.189: INFO: Creating deployment "test-rollover-deployment"
Jan 31 16:52:44.210: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Jan 31 16:52:46.240: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Jan 31 16:52:46.256: INFO: Ensure that both replica sets have 1 created replica
Jan 31 16:52:46.272: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Jan 31 16:52:46.295: INFO: Updating deployment test-rollover-deployment
Jan 31 16:52:46.295: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Jan 31 16:52:48.313: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Jan 31 16:52:48.322: INFO: Make sure deployment "test-rollover-deployment" is complete
Jan 31 16:52:48.332: INFO: all replica sets need to contain the pod-template-hash label
Jan 31 16:52:48.333: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 16:52:50.353: INFO: all replica sets need to contain the pod-template-hash label
Jan 31 16:52:50.353: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 16:52:52.355: INFO: all replica sets need to contain the pod-template-hash label
Jan 31 16:52:52.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 16:52:54.350: INFO: all replica sets need to contain the pod-template-hash label
Jan 31 16:52:54.351: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 16:52:56.346: INFO: all replica sets need to contain the pod-template-hash label
Jan 31 16:52:56.346: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 16:52:58.360: INFO: all replica sets need to contain the pod-template-hash label
Jan 31 16:52:58.360: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 16:53:00.347: INFO: 
Jan 31 16:53:00.347: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 31 16:53:00.373: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-6571  3282edc9-9633-471c-8702-8f08bc2e1f58 2598 2 2023-01-31 16:52:44 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-31 16:52:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 16:52:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000c64f28 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-31 16:52:44 +0000 UTC,LastTransitionTime:2023-01-31 16:52:44 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-01-31 16:52:58 +0000 UTC,LastTransitionTime:2023-01-31 16:52:44 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 31 16:53:00.383: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-6571  3687e265-0203-44ef-b316-f30f66a7426a 2589 2 2023-01-31 16:52:46 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 3282edc9-9633-471c-8702-8f08bc2e1f58 0xc003313ff7 0xc003313ff8}] [] [{k3s Update apps/v1 2023-01-31 16:52:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3282edc9-9633-471c-8702-8f08bc2e1f58\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 16:52:58 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002b863e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 31 16:53:00.383: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Jan 31 16:53:00.383: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-6571  7258b173-3e81-4a3f-bb9d-07ae5de23955 2597 2 2023-01-31 16:52:37 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 3282edc9-9633-471c-8702-8f08bc2e1f58 0xc002b865af 0xc002b865c0}] [] [{e2e.test Update apps/v1 2023-01-31 16:52:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 16:52:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3282edc9-9633-471c-8702-8f08bc2e1f58\"}":{}}},"f:spec":{"f:replicas":{}}} } {k3s Update apps/v1 2023-01-31 16:52:58 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc002b86688 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 31 16:53:00.383: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-6571  89ebb233-624e-485f-b53c-2fd8831c9c1a 2573 2 2023-01-31 16:52:44 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 3282edc9-9633-471c-8702-8f08bc2e1f58 0xc003313ed7 0xc003313ed8}] [] [{k3s Update apps/v1 2023-01-31 16:52:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3282edc9-9633-471c-8702-8f08bc2e1f58\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 16:52:46 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003313f98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 31 16:53:00.392: INFO: Pod "test-rollover-deployment-6c6df9974f-ddq4z" is available:
&Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-ddq4z test-rollover-deployment-6c6df9974f- deployment-6571  ca86a7b9-272d-412c-85ad-3bfd0ce4b147 2585 0 2023-01-31 16:52:46 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f 3687e265-0203-44ef-b316-f30f66a7426a 0xc002b873c7 0xc002b873c8}] [] [{k3s Update v1 2023-01-31 16:52:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3687e265-0203-44ef-b316-f30f66a7426a\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 16:52:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-42wwr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-42wwr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 16:52:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 16:52:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 16:52:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 16:52:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.59,StartTime:2023-01-31 16:52:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 16:52:47 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:docker://8538a81bce139805eb801ccb4945adabd513f3e54354f288c60c696e2c3cb2c5,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.59,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 31 16:53:00.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-6571" for this suite. 01/31/23 16:53:00.402
------------------------------
â€¢ [SLOW TEST] [23.300 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:52:37.114
    Jan 31 16:52:37.114: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename deployment 01/31/23 16:52:37.115
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:52:37.132
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:52:37.142
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support rollover [Conformance]
      test/e2e/apps/deployment.go:132
    Jan 31 16:52:37.164: INFO: Pod name rollover-pod: Found 0 pods out of 1
    Jan 31 16:52:42.178: INFO: Pod name rollover-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/31/23 16:52:42.178
    Jan 31 16:52:42.178: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
    Jan 31 16:52:44.189: INFO: Creating deployment "test-rollover-deployment"
    Jan 31 16:52:44.210: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
    Jan 31 16:52:46.240: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
    Jan 31 16:52:46.256: INFO: Ensure that both replica sets have 1 created replica
    Jan 31 16:52:46.272: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
    Jan 31 16:52:46.295: INFO: Updating deployment test-rollover-deployment
    Jan 31 16:52:46.295: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
    Jan 31 16:52:48.313: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
    Jan 31 16:52:48.322: INFO: Make sure deployment "test-rollover-deployment" is complete
    Jan 31 16:52:48.332: INFO: all replica sets need to contain the pod-template-hash label
    Jan 31 16:52:48.333: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 16:52:50.353: INFO: all replica sets need to contain the pod-template-hash label
    Jan 31 16:52:50.353: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 16:52:52.355: INFO: all replica sets need to contain the pod-template-hash label
    Jan 31 16:52:52.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 16:52:54.350: INFO: all replica sets need to contain the pod-template-hash label
    Jan 31 16:52:54.351: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 16:52:56.346: INFO: all replica sets need to contain the pod-template-hash label
    Jan 31 16:52:56.346: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 16:52:58.360: INFO: all replica sets need to contain the pod-template-hash label
    Jan 31 16:52:58.360: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 52, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 16:53:00.347: INFO: 
    Jan 31 16:53:00.347: INFO: Ensure that both old replica sets have no replicas
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 31 16:53:00.373: INFO: Deployment "test-rollover-deployment":
    &Deployment{ObjectMeta:{test-rollover-deployment  deployment-6571  3282edc9-9633-471c-8702-8f08bc2e1f58 2598 2 2023-01-31 16:52:44 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-31 16:52:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 16:52:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000c64f28 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-31 16:52:44 +0000 UTC,LastTransitionTime:2023-01-31 16:52:44 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-01-31 16:52:58 +0000 UTC,LastTransitionTime:2023-01-31 16:52:44 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Jan 31 16:53:00.383: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
    &ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-6571  3687e265-0203-44ef-b316-f30f66a7426a 2589 2 2023-01-31 16:52:46 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 3282edc9-9633-471c-8702-8f08bc2e1f58 0xc003313ff7 0xc003313ff8}] [] [{k3s Update apps/v1 2023-01-31 16:52:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3282edc9-9633-471c-8702-8f08bc2e1f58\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 16:52:58 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002b863e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 16:53:00.383: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
    Jan 31 16:53:00.383: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-6571  7258b173-3e81-4a3f-bb9d-07ae5de23955 2597 2 2023-01-31 16:52:37 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 3282edc9-9633-471c-8702-8f08bc2e1f58 0xc002b865af 0xc002b865c0}] [] [{e2e.test Update apps/v1 2023-01-31 16:52:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 16:52:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3282edc9-9633-471c-8702-8f08bc2e1f58\"}":{}}},"f:spec":{"f:replicas":{}}} } {k3s Update apps/v1 2023-01-31 16:52:58 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc002b86688 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 16:53:00.383: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-6571  89ebb233-624e-485f-b53c-2fd8831c9c1a 2573 2 2023-01-31 16:52:44 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 3282edc9-9633-471c-8702-8f08bc2e1f58 0xc003313ed7 0xc003313ed8}] [] [{k3s Update apps/v1 2023-01-31 16:52:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3282edc9-9633-471c-8702-8f08bc2e1f58\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 16:52:46 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003313f98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 16:53:00.392: INFO: Pod "test-rollover-deployment-6c6df9974f-ddq4z" is available:
    &Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-ddq4z test-rollover-deployment-6c6df9974f- deployment-6571  ca86a7b9-272d-412c-85ad-3bfd0ce4b147 2585 0 2023-01-31 16:52:46 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f 3687e265-0203-44ef-b316-f30f66a7426a 0xc002b873c7 0xc002b873c8}] [] [{k3s Update v1 2023-01-31 16:52:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3687e265-0203-44ef-b316-f30f66a7426a\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 16:52:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-42wwr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-42wwr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 16:52:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 16:52:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 16:52:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 16:52:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.59,StartTime:2023-01-31 16:52:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 16:52:47 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:docker://8538a81bce139805eb801ccb4945adabd513f3e54354f288c60c696e2c3cb2c5,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.59,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:53:00.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-6571" for this suite. 01/31/23 16:53:00.402
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:53:00.417
Jan 31 16:53:00.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename events 01/31/23 16:53:00.419
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:00.445
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:00.453
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
STEP: creating a test event 01/31/23 16:53:00.459
STEP: listing events in all namespaces 01/31/23 16:53:00.464
STEP: listing events in test namespace 01/31/23 16:53:00.472
STEP: listing events with field selection filtering on source 01/31/23 16:53:00.479
STEP: listing events with field selection filtering on reportingController 01/31/23 16:53:00.485
STEP: getting the test event 01/31/23 16:53:00.495
STEP: patching the test event 01/31/23 16:53:00.504
STEP: getting the test event 01/31/23 16:53:00.516
STEP: updating the test event 01/31/23 16:53:00.523
STEP: getting the test event 01/31/23 16:53:00.534
STEP: deleting the test event 01/31/23 16:53:00.542
STEP: listing events in all namespaces 01/31/23 16:53:00.586
STEP: listing events in test namespace 01/31/23 16:53:00.593
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Jan 31 16:53:00.599: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-5996" for this suite. 01/31/23 16:53:00.604
------------------------------
â€¢ [0.197 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:53:00.417
    Jan 31 16:53:00.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename events 01/31/23 16:53:00.419
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:00.445
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:00.453
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
      test/e2e/instrumentation/events.go:98
    STEP: creating a test event 01/31/23 16:53:00.459
    STEP: listing events in all namespaces 01/31/23 16:53:00.464
    STEP: listing events in test namespace 01/31/23 16:53:00.472
    STEP: listing events with field selection filtering on source 01/31/23 16:53:00.479
    STEP: listing events with field selection filtering on reportingController 01/31/23 16:53:00.485
    STEP: getting the test event 01/31/23 16:53:00.495
    STEP: patching the test event 01/31/23 16:53:00.504
    STEP: getting the test event 01/31/23 16:53:00.516
    STEP: updating the test event 01/31/23 16:53:00.523
    STEP: getting the test event 01/31/23 16:53:00.534
    STEP: deleting the test event 01/31/23 16:53:00.542
    STEP: listing events in all namespaces 01/31/23 16:53:00.586
    STEP: listing events in test namespace 01/31/23 16:53:00.593
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:53:00.599: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-5996" for this suite. 01/31/23 16:53:00.604
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:53:00.617
Jan 31 16:53:00.617: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename containers 01/31/23 16:53:00.619
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:00.637
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:00.644
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
STEP: Creating a pod to test override all 01/31/23 16:53:00.652
Jan 31 16:53:00.662: INFO: Waiting up to 5m0s for pod "client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613" in namespace "containers-6871" to be "Succeeded or Failed"
Jan 31 16:53:00.670: INFO: Pod "client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613": Phase="Pending", Reason="", readiness=false. Elapsed: 8.214035ms
Jan 31 16:53:02.677: INFO: Pod "client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015197211s
Jan 31 16:53:04.685: INFO: Pod "client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022805503s
STEP: Saw pod success 01/31/23 16:53:04.685
Jan 31 16:53:04.685: INFO: Pod "client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613" satisfied condition "Succeeded or Failed"
Jan 31 16:53:04.691: INFO: Trying to get logs from node 26-m02 pod client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 16:53:04.707
Jan 31 16:53:04.723: INFO: Waiting for pod client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613 to disappear
Jan 31 16:53:04.730: INFO: Pod client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Jan 31 16:53:04.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-6871" for this suite. 01/31/23 16:53:04.738
------------------------------
â€¢ [4.127 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:53:00.617
    Jan 31 16:53:00.617: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename containers 01/31/23 16:53:00.619
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:00.637
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:00.644
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:87
    STEP: Creating a pod to test override all 01/31/23 16:53:00.652
    Jan 31 16:53:00.662: INFO: Waiting up to 5m0s for pod "client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613" in namespace "containers-6871" to be "Succeeded or Failed"
    Jan 31 16:53:00.670: INFO: Pod "client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613": Phase="Pending", Reason="", readiness=false. Elapsed: 8.214035ms
    Jan 31 16:53:02.677: INFO: Pod "client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015197211s
    Jan 31 16:53:04.685: INFO: Pod "client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022805503s
    STEP: Saw pod success 01/31/23 16:53:04.685
    Jan 31 16:53:04.685: INFO: Pod "client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613" satisfied condition "Succeeded or Failed"
    Jan 31 16:53:04.691: INFO: Trying to get logs from node 26-m02 pod client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 16:53:04.707
    Jan 31 16:53:04.723: INFO: Waiting for pod client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613 to disappear
    Jan 31 16:53:04.730: INFO: Pod client-containers-898a3ae2-1cfc-4b53-93d0-06c5d13a8613 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:53:04.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-6871" for this suite. 01/31/23 16:53:04.738
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:53:04.745
Jan 31 16:53:04.745: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename init-container 01/31/23 16:53:04.746
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:04.764
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:04.773
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
STEP: creating the pod 01/31/23 16:53:04.781
Jan 31 16:53:04.781: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:53:09.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-3760" for this suite. 01/31/23 16:53:09.356
------------------------------
â€¢ [4.618 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:53:04.745
    Jan 31 16:53:04.745: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename init-container 01/31/23 16:53:04.746
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:04.764
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:04.773
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:458
    STEP: creating the pod 01/31/23 16:53:04.781
    Jan 31 16:53:04.781: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:53:09.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-3760" for this suite. 01/31/23 16:53:09.356
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:53:09.364
Jan 31 16:53:09.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-lifecycle-hook 01/31/23 16:53:09.365
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:09.388
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:09.396
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 01/31/23 16:53:09.408
Jan 31 16:53:09.418: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-1804" to be "running and ready"
Jan 31 16:53:09.430: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 12.013048ms
Jan 31 16:53:09.430: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:53:11.437: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.019112791s
Jan 31 16:53:11.437: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Jan 31 16:53:11.437: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
STEP: create the pod with lifecycle hook 01/31/23 16:53:11.446
Jan 31 16:53:11.455: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-1804" to be "running and ready"
Jan 31 16:53:11.465: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 10.459844ms
Jan 31 16:53:11.465: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:53:13.475: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019822069s
Jan 31 16:53:13.475: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:53:15.475: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 4.020494303s
Jan 31 16:53:15.475: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
Jan 31 16:53:15.475: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
STEP: check poststart hook 01/31/23 16:53:15.484
STEP: delete the pod with lifecycle hook 01/31/23 16:53:15.52
Jan 31 16:53:15.532: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 31 16:53:15.540: INFO: Pod pod-with-poststart-http-hook still exists
Jan 31 16:53:17.541: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 31 16:53:17.548: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Jan 31 16:53:17.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-1804" for this suite. 01/31/23 16:53:17.558
------------------------------
â€¢ [SLOW TEST] [8.208 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:53:09.364
    Jan 31 16:53:09.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-lifecycle-hook 01/31/23 16:53:09.365
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:09.388
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:09.396
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 01/31/23 16:53:09.408
    Jan 31 16:53:09.418: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-1804" to be "running and ready"
    Jan 31 16:53:09.430: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 12.013048ms
    Jan 31 16:53:09.430: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:53:11.437: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.019112791s
    Jan 31 16:53:11.437: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Jan 31 16:53:11.437: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:167
    STEP: create the pod with lifecycle hook 01/31/23 16:53:11.446
    Jan 31 16:53:11.455: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-1804" to be "running and ready"
    Jan 31 16:53:11.465: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 10.459844ms
    Jan 31 16:53:11.465: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:53:13.475: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019822069s
    Jan 31 16:53:13.475: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:53:15.475: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 4.020494303s
    Jan 31 16:53:15.475: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
    Jan 31 16:53:15.475: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
    STEP: check poststart hook 01/31/23 16:53:15.484
    STEP: delete the pod with lifecycle hook 01/31/23 16:53:15.52
    Jan 31 16:53:15.532: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Jan 31 16:53:15.540: INFO: Pod pod-with-poststart-http-hook still exists
    Jan 31 16:53:17.541: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Jan 31 16:53:17.548: INFO: Pod pod-with-poststart-http-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:53:17.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-1804" for this suite. 01/31/23 16:53:17.558
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:53:17.573
Jan 31 16:53:17.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename containers 01/31/23 16:53:17.575
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:17.6
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:17.608
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
STEP: Creating a pod to test override arguments 01/31/23 16:53:17.614
Jan 31 16:53:17.624: INFO: Waiting up to 5m0s for pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd" in namespace "containers-4601" to be "Succeeded or Failed"
Jan 31 16:53:17.629: INFO: Pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.55467ms
Jan 31 16:53:19.639: INFO: Pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015446108s
Jan 31 16:53:21.644: INFO: Pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020350546s
Jan 31 16:53:23.641: INFO: Pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017540007s
STEP: Saw pod success 01/31/23 16:53:23.642
Jan 31 16:53:23.642: INFO: Pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd" satisfied condition "Succeeded or Failed"
Jan 31 16:53:23.650: INFO: Trying to get logs from node 26-m02 pod client-containers-b8c5f151-6223-4848-9d45-23207af299fd container agnhost-container: <nil>
STEP: delete the pod 01/31/23 16:53:23.668
Jan 31 16:53:23.691: INFO: Waiting for pod client-containers-b8c5f151-6223-4848-9d45-23207af299fd to disappear
Jan 31 16:53:23.698: INFO: Pod client-containers-b8c5f151-6223-4848-9d45-23207af299fd no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Jan 31 16:53:23.698: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-4601" for this suite. 01/31/23 16:53:23.706
------------------------------
â€¢ [SLOW TEST] [6.143 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:53:17.573
    Jan 31 16:53:17.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename containers 01/31/23 16:53:17.575
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:17.6
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:17.608
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:59
    STEP: Creating a pod to test override arguments 01/31/23 16:53:17.614
    Jan 31 16:53:17.624: INFO: Waiting up to 5m0s for pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd" in namespace "containers-4601" to be "Succeeded or Failed"
    Jan 31 16:53:17.629: INFO: Pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.55467ms
    Jan 31 16:53:19.639: INFO: Pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015446108s
    Jan 31 16:53:21.644: INFO: Pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020350546s
    Jan 31 16:53:23.641: INFO: Pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017540007s
    STEP: Saw pod success 01/31/23 16:53:23.642
    Jan 31 16:53:23.642: INFO: Pod "client-containers-b8c5f151-6223-4848-9d45-23207af299fd" satisfied condition "Succeeded or Failed"
    Jan 31 16:53:23.650: INFO: Trying to get logs from node 26-m02 pod client-containers-b8c5f151-6223-4848-9d45-23207af299fd container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 16:53:23.668
    Jan 31 16:53:23.691: INFO: Waiting for pod client-containers-b8c5f151-6223-4848-9d45-23207af299fd to disappear
    Jan 31 16:53:23.698: INFO: Pod client-containers-b8c5f151-6223-4848-9d45-23207af299fd no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:53:23.698: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-4601" for this suite. 01/31/23 16:53:23.706
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:53:23.717
Jan 31 16:53:23.717: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pod-network-test 01/31/23 16:53:23.718
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:23.734
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:23.741
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
STEP: Performing setup for networking test in namespace pod-network-test-2606 01/31/23 16:53:23.748
STEP: creating a selector 01/31/23 16:53:23.748
STEP: Creating the service pods in kubernetes 01/31/23 16:53:23.748
Jan 31 16:53:23.748: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 31 16:53:23.777: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-2606" to be "running and ready"
Jan 31 16:53:23.787: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 9.802535ms
Jan 31 16:53:23.787: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:53:25.797: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01996682s
Jan 31 16:53:25.797: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 16:53:27.802: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.025327353s
Jan 31 16:53:27.802: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 16:53:29.799: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.022320787s
Jan 31 16:53:29.799: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 16:53:31.796: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.01963881s
Jan 31 16:53:31.796: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 16:53:33.795: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.018503844s
Jan 31 16:53:33.795: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 16:53:35.797: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.020178058s
Jan 31 16:53:35.797: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Jan 31 16:53:35.797: INFO: Pod "netserver-0" satisfied condition "running and ready"
Jan 31 16:53:35.806: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-2606" to be "running and ready"
Jan 31 16:53:35.816: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 9.946338ms
Jan 31 16:53:35.816: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Jan 31 16:53:35.816: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 01/31/23 16:53:35.825
Jan 31 16:53:35.838: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-2606" to be "running"
Jan 31 16:53:35.850: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 11.594511ms
Jan 31 16:53:37.860: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021966788s
Jan 31 16:53:39.859: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.021037662s
Jan 31 16:53:39.859: INFO: Pod "test-container-pod" satisfied condition "running"
Jan 31 16:53:39.868: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jan 31 16:53:39.868: INFO: Breadth first check of 10.244.0.55 on host 192.168.61.199...
Jan 31 16:53:39.875: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.63:9080/dial?request=hostname&protocol=udp&host=10.244.0.55&port=8081&tries=1'] Namespace:pod-network-test-2606 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 16:53:39.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 16:53:39.876: INFO: ExecWithOptions: Clientset creation
Jan 31 16:53:39.876: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-2606/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.63%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.55%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 31 16:53:39.979: INFO: Waiting for responses: map[]
Jan 31 16:53:39.979: INFO: reached 10.244.0.55 after 0/1 tries
Jan 31 16:53:39.979: INFO: Breadth first check of 10.244.1.62 on host 192.168.61.148...
Jan 31 16:53:39.984: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.63:9080/dial?request=hostname&protocol=udp&host=10.244.1.62&port=8081&tries=1'] Namespace:pod-network-test-2606 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 16:53:39.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 16:53:39.985: INFO: ExecWithOptions: Clientset creation
Jan 31 16:53:39.985: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-2606/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.63%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.62%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 31 16:53:40.067: INFO: Waiting for responses: map[]
Jan 31 16:53:40.067: INFO: reached 10.244.1.62 after 0/1 tries
Jan 31 16:53:40.067: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Jan 31 16:53:40.067: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-2606" for this suite. 01/31/23 16:53:40.074
------------------------------
â€¢ [SLOW TEST] [16.365 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:53:23.717
    Jan 31 16:53:23.717: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pod-network-test 01/31/23 16:53:23.718
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:23.734
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:23.741
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:93
    STEP: Performing setup for networking test in namespace pod-network-test-2606 01/31/23 16:53:23.748
    STEP: creating a selector 01/31/23 16:53:23.748
    STEP: Creating the service pods in kubernetes 01/31/23 16:53:23.748
    Jan 31 16:53:23.748: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Jan 31 16:53:23.777: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-2606" to be "running and ready"
    Jan 31 16:53:23.787: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 9.802535ms
    Jan 31 16:53:23.787: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:53:25.797: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01996682s
    Jan 31 16:53:25.797: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 16:53:27.802: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.025327353s
    Jan 31 16:53:27.802: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 16:53:29.799: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.022320787s
    Jan 31 16:53:29.799: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 16:53:31.796: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.01963881s
    Jan 31 16:53:31.796: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 16:53:33.795: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.018503844s
    Jan 31 16:53:33.795: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 16:53:35.797: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.020178058s
    Jan 31 16:53:35.797: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Jan 31 16:53:35.797: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Jan 31 16:53:35.806: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-2606" to be "running and ready"
    Jan 31 16:53:35.816: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 9.946338ms
    Jan 31 16:53:35.816: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Jan 31 16:53:35.816: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 01/31/23 16:53:35.825
    Jan 31 16:53:35.838: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-2606" to be "running"
    Jan 31 16:53:35.850: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 11.594511ms
    Jan 31 16:53:37.860: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021966788s
    Jan 31 16:53:39.859: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.021037662s
    Jan 31 16:53:39.859: INFO: Pod "test-container-pod" satisfied condition "running"
    Jan 31 16:53:39.868: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Jan 31 16:53:39.868: INFO: Breadth first check of 10.244.0.55 on host 192.168.61.199...
    Jan 31 16:53:39.875: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.63:9080/dial?request=hostname&protocol=udp&host=10.244.0.55&port=8081&tries=1'] Namespace:pod-network-test-2606 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 16:53:39.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 16:53:39.876: INFO: ExecWithOptions: Clientset creation
    Jan 31 16:53:39.876: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-2606/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.63%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.55%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Jan 31 16:53:39.979: INFO: Waiting for responses: map[]
    Jan 31 16:53:39.979: INFO: reached 10.244.0.55 after 0/1 tries
    Jan 31 16:53:39.979: INFO: Breadth first check of 10.244.1.62 on host 192.168.61.148...
    Jan 31 16:53:39.984: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.63:9080/dial?request=hostname&protocol=udp&host=10.244.1.62&port=8081&tries=1'] Namespace:pod-network-test-2606 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 16:53:39.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 16:53:39.985: INFO: ExecWithOptions: Clientset creation
    Jan 31 16:53:39.985: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-2606/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.63%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.62%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Jan 31 16:53:40.067: INFO: Waiting for responses: map[]
    Jan 31 16:53:40.067: INFO: reached 10.244.1.62 after 0/1 tries
    Jan 31 16:53:40.067: INFO: Going to retry 0 out of 2 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:53:40.067: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-2606" for this suite. 01/31/23 16:53:40.074
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:53:40.083
Jan 31 16:53:40.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 16:53:40.084
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:40.109
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:40.117
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 16:53:40.148
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:53:40.628
STEP: Deploying the webhook pod 01/31/23 16:53:40.64
STEP: Wait for the deployment to be ready 01/31/23 16:53:40.656
Jan 31 16:53:40.679: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/31/23 16:53:42.708
STEP: Verifying the service has paired with the endpoint 01/31/23 16:53:42.769
Jan 31 16:53:43.770: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
STEP: fetching the /apis discovery document 01/31/23 16:53:43.78
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 01/31/23 16:53:43.786
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 01/31/23 16:53:43.787
STEP: fetching the /apis/admissionregistration.k8s.io discovery document 01/31/23 16:53:43.787
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 01/31/23 16:53:43.793
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 01/31/23 16:53:43.794
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 01/31/23 16:53:43.799
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:53:43.799: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6881" for this suite. 01/31/23 16:53:43.871
STEP: Destroying namespace "webhook-6881-markers" for this suite. 01/31/23 16:53:43.883
------------------------------
â€¢ [3.809 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:53:40.083
    Jan 31 16:53:40.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 16:53:40.084
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:40.109
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:40.117
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 16:53:40.148
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:53:40.628
    STEP: Deploying the webhook pod 01/31/23 16:53:40.64
    STEP: Wait for the deployment to be ready 01/31/23 16:53:40.656
    Jan 31 16:53:40.679: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/31/23 16:53:42.708
    STEP: Verifying the service has paired with the endpoint 01/31/23 16:53:42.769
    Jan 31 16:53:43.770: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should include webhook resources in discovery documents [Conformance]
      test/e2e/apimachinery/webhook.go:117
    STEP: fetching the /apis discovery document 01/31/23 16:53:43.78
    STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 01/31/23 16:53:43.786
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 01/31/23 16:53:43.787
    STEP: fetching the /apis/admissionregistration.k8s.io discovery document 01/31/23 16:53:43.787
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 01/31/23 16:53:43.793
    STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 01/31/23 16:53:43.794
    STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 01/31/23 16:53:43.799
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:53:43.799: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6881" for this suite. 01/31/23 16:53:43.871
    STEP: Destroying namespace "webhook-6881-markers" for this suite. 01/31/23 16:53:43.883
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:53:43.893
Jan 31 16:53:43.893: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename security-context-test 01/31/23 16:53:43.894
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:43.91
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:43.916
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
Jan 31 16:53:43.930: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029" in namespace "security-context-test-9584" to be "Succeeded or Failed"
Jan 31 16:53:43.939: INFO: Pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029": Phase="Pending", Reason="", readiness=false. Elapsed: 9.239394ms
Jan 31 16:53:45.949: INFO: Pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018680118s
Jan 31 16:53:47.950: INFO: Pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020302638s
Jan 31 16:53:49.946: INFO: Pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.016003291s
Jan 31 16:53:49.946: INFO: Pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029" satisfied condition "Succeeded or Failed"
Jan 31 16:53:49.959: INFO: Got logs for pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 31 16:53:49.959: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-9584" for this suite. 01/31/23 16:53:49.965
------------------------------
â€¢ [SLOW TEST] [6.080 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with privileged
  test/e2e/common/node/security_context.go:491
    should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:528

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:53:43.893
    Jan 31 16:53:43.893: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename security-context-test 01/31/23 16:53:43.894
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:43.91
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:43.916
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:528
    Jan 31 16:53:43.930: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029" in namespace "security-context-test-9584" to be "Succeeded or Failed"
    Jan 31 16:53:43.939: INFO: Pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029": Phase="Pending", Reason="", readiness=false. Elapsed: 9.239394ms
    Jan 31 16:53:45.949: INFO: Pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018680118s
    Jan 31 16:53:47.950: INFO: Pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020302638s
    Jan 31 16:53:49.946: INFO: Pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.016003291s
    Jan 31 16:53:49.946: INFO: Pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029" satisfied condition "Succeeded or Failed"
    Jan 31 16:53:49.959: INFO: Got logs for pod "busybox-privileged-false-3c1497cd-b073-43b4-a138-15668dd8d029": "ip: RTNETLINK answers: Operation not permitted\n"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:53:49.959: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-9584" for this suite. 01/31/23 16:53:49.965
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:53:49.975
Jan 31 16:53:49.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename statefulset 01/31/23 16:53:49.976
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:49.995
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:50.001
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-6856 01/31/23 16:53:50.008
[It] should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
STEP: Creating statefulset ss in namespace statefulset-6856 01/31/23 16:53:50.026
Jan 31 16:53:50.043: INFO: Found 0 stateful pods, waiting for 1
Jan 31 16:54:00.053: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 16:54:10.054: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 16:54:20.054: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource 01/31/23 16:54:20.072
STEP: updating a scale subresource 01/31/23 16:54:20.079
STEP: verifying the statefulset Spec.Replicas was modified 01/31/23 16:54:20.088
STEP: Patch a scale subresource 01/31/23 16:54:20.094
STEP: verifying the statefulset Spec.Replicas was modified 01/31/23 16:54:20.127
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 31 16:54:20.132: INFO: Deleting all statefulset in ns statefulset-6856
Jan 31 16:54:20.138: INFO: Scaling statefulset ss to 0
Jan 31 16:54:50.171: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 16:54:50.180: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 31 16:54:50.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-6856" for this suite. 01/31/23 16:54:50.228
------------------------------
â€¢ [SLOW TEST] [60.259 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should have a working scale subresource [Conformance]
    test/e2e/apps/statefulset.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:53:49.975
    Jan 31 16:53:49.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename statefulset 01/31/23 16:53:49.976
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:53:49.995
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:53:50.001
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-6856 01/31/23 16:53:50.008
    [It] should have a working scale subresource [Conformance]
      test/e2e/apps/statefulset.go:848
    STEP: Creating statefulset ss in namespace statefulset-6856 01/31/23 16:53:50.026
    Jan 31 16:53:50.043: INFO: Found 0 stateful pods, waiting for 1
    Jan 31 16:54:00.053: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 16:54:10.054: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 16:54:20.054: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: getting scale subresource 01/31/23 16:54:20.072
    STEP: updating a scale subresource 01/31/23 16:54:20.079
    STEP: verifying the statefulset Spec.Replicas was modified 01/31/23 16:54:20.088
    STEP: Patch a scale subresource 01/31/23 16:54:20.094
    STEP: verifying the statefulset Spec.Replicas was modified 01/31/23 16:54:20.127
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 31 16:54:20.132: INFO: Deleting all statefulset in ns statefulset-6856
    Jan 31 16:54:20.138: INFO: Scaling statefulset ss to 0
    Jan 31 16:54:50.171: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 16:54:50.180: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:54:50.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-6856" for this suite. 01/31/23 16:54:50.228
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Secrets
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:54:50.235
Jan 31 16:54:50.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 16:54:50.236
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:54:50.253
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:54:50.259
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
STEP: creating secret secrets-8214/secret-test-9cab1af0-79fb-4c6c-845d-c56b4b2e5e87 01/31/23 16:54:50.269
STEP: Creating a pod to test consume secrets 01/31/23 16:54:50.278
Jan 31 16:54:50.289: INFO: Waiting up to 5m0s for pod "pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060" in namespace "secrets-8214" to be "Succeeded or Failed"
Jan 31 16:54:50.295: INFO: Pod "pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060": Phase="Pending", Reason="", readiness=false. Elapsed: 6.74913ms
Jan 31 16:54:52.306: INFO: Pod "pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016944819s
Jan 31 16:54:54.308: INFO: Pod "pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018970259s
STEP: Saw pod success 01/31/23 16:54:54.308
Jan 31 16:54:54.308: INFO: Pod "pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060" satisfied condition "Succeeded or Failed"
Jan 31 16:54:54.318: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060 container env-test: <nil>
STEP: delete the pod 01/31/23 16:54:54.336
Jan 31 16:54:54.353: INFO: Waiting for pod pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060 to disappear
Jan 31 16:54:54.363: INFO: Pod pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 16:54:54.363: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-8214" for this suite. 01/31/23 16:54:54.371
------------------------------
â€¢ [4.143 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:54:50.235
    Jan 31 16:54:50.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 16:54:50.236
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:54:50.253
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:54:50.259
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:95
    STEP: creating secret secrets-8214/secret-test-9cab1af0-79fb-4c6c-845d-c56b4b2e5e87 01/31/23 16:54:50.269
    STEP: Creating a pod to test consume secrets 01/31/23 16:54:50.278
    Jan 31 16:54:50.289: INFO: Waiting up to 5m0s for pod "pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060" in namespace "secrets-8214" to be "Succeeded or Failed"
    Jan 31 16:54:50.295: INFO: Pod "pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060": Phase="Pending", Reason="", readiness=false. Elapsed: 6.74913ms
    Jan 31 16:54:52.306: INFO: Pod "pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016944819s
    Jan 31 16:54:54.308: INFO: Pod "pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018970259s
    STEP: Saw pod success 01/31/23 16:54:54.308
    Jan 31 16:54:54.308: INFO: Pod "pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060" satisfied condition "Succeeded or Failed"
    Jan 31 16:54:54.318: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060 container env-test: <nil>
    STEP: delete the pod 01/31/23 16:54:54.336
    Jan 31 16:54:54.353: INFO: Waiting for pod pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060 to disappear
    Jan 31 16:54:54.363: INFO: Pod pod-configmaps-0daa12b1-13f7-42b5-ab67-4348e82ff060 no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:54:54.363: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-8214" for this suite. 01/31/23 16:54:54.371
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:54:54.379
Jan 31 16:54:54.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 16:54:54.38
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:54:54.395
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:54:54.401
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
STEP: Creating a pod to test downward api env vars 01/31/23 16:54:54.406
Jan 31 16:54:54.416: INFO: Waiting up to 5m0s for pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b" in namespace "downward-api-9264" to be "Succeeded or Failed"
Jan 31 16:54:54.421: INFO: Pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.940152ms
Jan 31 16:54:56.434: INFO: Pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018813502s
Jan 31 16:54:58.429: INFO: Pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01332805s
Jan 31 16:55:00.431: INFO: Pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.015238499s
STEP: Saw pod success 01/31/23 16:55:00.431
Jan 31 16:55:00.431: INFO: Pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b" satisfied condition "Succeeded or Failed"
Jan 31 16:55:00.442: INFO: Trying to get logs from node 26-m02 pod downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b container dapi-container: <nil>
STEP: delete the pod 01/31/23 16:55:00.453
Jan 31 16:55:00.468: INFO: Waiting for pod downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b to disappear
Jan 31 16:55:00.473: INFO: Pod downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Jan 31 16:55:00.473: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9264" for this suite. 01/31/23 16:55:00.479
------------------------------
â€¢ [SLOW TEST] [6.108 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:54:54.379
    Jan 31 16:54:54.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 16:54:54.38
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:54:54.395
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:54:54.401
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod UID as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:267
    STEP: Creating a pod to test downward api env vars 01/31/23 16:54:54.406
    Jan 31 16:54:54.416: INFO: Waiting up to 5m0s for pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b" in namespace "downward-api-9264" to be "Succeeded or Failed"
    Jan 31 16:54:54.421: INFO: Pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.940152ms
    Jan 31 16:54:56.434: INFO: Pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018813502s
    Jan 31 16:54:58.429: INFO: Pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01332805s
    Jan 31 16:55:00.431: INFO: Pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.015238499s
    STEP: Saw pod success 01/31/23 16:55:00.431
    Jan 31 16:55:00.431: INFO: Pod "downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b" satisfied condition "Succeeded or Failed"
    Jan 31 16:55:00.442: INFO: Trying to get logs from node 26-m02 pod downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b container dapi-container: <nil>
    STEP: delete the pod 01/31/23 16:55:00.453
    Jan 31 16:55:00.468: INFO: Waiting for pod downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b to disappear
    Jan 31 16:55:00.473: INFO: Pod downward-api-d1bc7ea0-a7f2-4337-bf5d-b609a7db3b9b no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:55:00.473: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9264" for this suite. 01/31/23 16:55:00.479
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:55:00.488
Jan 31 16:55:00.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename security-context-test 01/31/23 16:55:00.489
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:00.507
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:00.515
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
Jan 31 16:55:00.531: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b" in namespace "security-context-test-3400" to be "Succeeded or Failed"
Jan 31 16:55:00.538: INFO: Pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b": Phase="Pending", Reason="", readiness=false. Elapsed: 7.149341ms
Jan 31 16:55:02.553: INFO: Pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021782064s
Jan 31 16:55:04.549: INFO: Pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017238572s
Jan 31 16:55:06.548: INFO: Pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017064246s
Jan 31 16:55:06.548: INFO: Pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 31 16:55:06.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-3400" for this suite. 01/31/23 16:55:06.575
------------------------------
â€¢ [SLOW TEST] [6.095 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:555
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:609

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:55:00.488
    Jan 31 16:55:00.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename security-context-test 01/31/23 16:55:00.489
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:00.507
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:00.515
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:609
    Jan 31 16:55:00.531: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b" in namespace "security-context-test-3400" to be "Succeeded or Failed"
    Jan 31 16:55:00.538: INFO: Pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b": Phase="Pending", Reason="", readiness=false. Elapsed: 7.149341ms
    Jan 31 16:55:02.553: INFO: Pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021782064s
    Jan 31 16:55:04.549: INFO: Pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017238572s
    Jan 31 16:55:06.548: INFO: Pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017064246s
    Jan 31 16:55:06.548: INFO: Pod "alpine-nnp-false-7d555bc7-62fd-436a-9b47-dfbfea2a323b" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:55:06.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-3400" for this suite. 01/31/23 16:55:06.575
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:55:06.584
Jan 31 16:55:06.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 16:55:06.586
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:06.611
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:06.621
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 16:55:06.654
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:55:06.81
STEP: Deploying the webhook pod 01/31/23 16:55:06.824
STEP: Wait for the deployment to be ready 01/31/23 16:55:06.846
Jan 31 16:55:06.864: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 16:55:08.887: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 16, 55, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 55, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 55, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 55, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 16:55:10.898
STEP: Verifying the service has paired with the endpoint 01/31/23 16:55:10.967
Jan 31 16:55:11.968: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 01/31/23 16:55:11.976
STEP: create a namespace for the webhook 01/31/23 16:55:12.002
STEP: create a configmap should be unconditionally rejected by the webhook 01/31/23 16:55:12.012
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:55:12.041: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1205" for this suite. 01/31/23 16:55:12.102
STEP: Destroying namespace "webhook-1205-markers" for this suite. 01/31/23 16:55:12.111
------------------------------
â€¢ [SLOW TEST] [5.539 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:55:06.584
    Jan 31 16:55:06.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 16:55:06.586
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:06.611
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:06.621
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 16:55:06.654
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 16:55:06.81
    STEP: Deploying the webhook pod 01/31/23 16:55:06.824
    STEP: Wait for the deployment to be ready 01/31/23 16:55:06.846
    Jan 31 16:55:06.864: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 16:55:08.887: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 16, 55, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 55, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 16, 55, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 16, 55, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 16:55:10.898
    STEP: Verifying the service has paired with the endpoint 01/31/23 16:55:10.967
    Jan 31 16:55:11.968: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should unconditionally reject operations on fail closed webhook [Conformance]
      test/e2e/apimachinery/webhook.go:239
    STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 01/31/23 16:55:11.976
    STEP: create a namespace for the webhook 01/31/23 16:55:12.002
    STEP: create a configmap should be unconditionally rejected by the webhook 01/31/23 16:55:12.012
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:55:12.041: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1205" for this suite. 01/31/23 16:55:12.102
    STEP: Destroying namespace "webhook-1205-markers" for this suite. 01/31/23 16:55:12.111
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:55:12.124
Jan 31 16:55:12.125: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 16:55:12.126
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:12.147
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:12.155
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
STEP: Creating configMap with name configmap-test-volume-0b011c99-8161-4ddf-9438-aa1dedf83087 01/31/23 16:55:12.163
STEP: Creating a pod to test consume configMaps 01/31/23 16:55:12.169
Jan 31 16:55:12.182: INFO: Waiting up to 5m0s for pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600" in namespace "configmap-8689" to be "Succeeded or Failed"
Jan 31 16:55:12.191: INFO: Pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600": Phase="Pending", Reason="", readiness=false. Elapsed: 7.945394ms
Jan 31 16:55:14.201: INFO: Pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017950036s
Jan 31 16:55:16.202: INFO: Pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018779346s
Jan 31 16:55:18.201: INFO: Pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018356553s
STEP: Saw pod success 01/31/23 16:55:18.201
Jan 31 16:55:18.201: INFO: Pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600" satisfied condition "Succeeded or Failed"
Jan 31 16:55:18.209: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 16:55:18.225
Jan 31 16:55:18.244: INFO: Waiting for pod pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600 to disappear
Jan 31 16:55:18.252: INFO: Pod pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 16:55:18.253: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8689" for this suite. 01/31/23 16:55:18.26
------------------------------
â€¢ [SLOW TEST] [6.161 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:55:12.124
    Jan 31 16:55:12.125: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 16:55:12.126
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:12.147
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:12.155
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:47
    STEP: Creating configMap with name configmap-test-volume-0b011c99-8161-4ddf-9438-aa1dedf83087 01/31/23 16:55:12.163
    STEP: Creating a pod to test consume configMaps 01/31/23 16:55:12.169
    Jan 31 16:55:12.182: INFO: Waiting up to 5m0s for pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600" in namespace "configmap-8689" to be "Succeeded or Failed"
    Jan 31 16:55:12.191: INFO: Pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600": Phase="Pending", Reason="", readiness=false. Elapsed: 7.945394ms
    Jan 31 16:55:14.201: INFO: Pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017950036s
    Jan 31 16:55:16.202: INFO: Pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018779346s
    Jan 31 16:55:18.201: INFO: Pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018356553s
    STEP: Saw pod success 01/31/23 16:55:18.201
    Jan 31 16:55:18.201: INFO: Pod "pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600" satisfied condition "Succeeded or Failed"
    Jan 31 16:55:18.209: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 16:55:18.225
    Jan 31 16:55:18.244: INFO: Waiting for pod pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600 to disappear
    Jan 31 16:55:18.252: INFO: Pod pod-configmaps-b55255fb-b113-48d3-b7fa-037cf939f600 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:55:18.253: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8689" for this suite. 01/31/23 16:55:18.26
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:55:18.285
Jan 31 16:55:18.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 16:55:18.286
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:18.303
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:18.309
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
STEP: Creating a pod to test downward API volume plugin 01/31/23 16:55:18.315
Jan 31 16:55:18.324: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d" in namespace "downward-api-9452" to be "Succeeded or Failed"
Jan 31 16:55:18.332: INFO: Pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d": Phase="Pending", Reason="", readiness=false. Elapsed: 7.712312ms
Jan 31 16:55:20.343: INFO: Pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018659605s
Jan 31 16:55:22.345: INFO: Pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020512748s
Jan 31 16:55:24.344: INFO: Pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019685247s
STEP: Saw pod success 01/31/23 16:55:24.344
Jan 31 16:55:24.344: INFO: Pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d" satisfied condition "Succeeded or Failed"
Jan 31 16:55:24.353: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d container client-container: <nil>
STEP: delete the pod 01/31/23 16:55:24.365
Jan 31 16:55:24.378: INFO: Waiting for pod downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d to disappear
Jan 31 16:55:24.384: INFO: Pod downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 16:55:24.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9452" for this suite. 01/31/23 16:55:24.39
------------------------------
â€¢ [SLOW TEST] [6.112 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:55:18.285
    Jan 31 16:55:18.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 16:55:18.286
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:18.303
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:18.309
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:193
    STEP: Creating a pod to test downward API volume plugin 01/31/23 16:55:18.315
    Jan 31 16:55:18.324: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d" in namespace "downward-api-9452" to be "Succeeded or Failed"
    Jan 31 16:55:18.332: INFO: Pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d": Phase="Pending", Reason="", readiness=false. Elapsed: 7.712312ms
    Jan 31 16:55:20.343: INFO: Pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018659605s
    Jan 31 16:55:22.345: INFO: Pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020512748s
    Jan 31 16:55:24.344: INFO: Pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019685247s
    STEP: Saw pod success 01/31/23 16:55:24.344
    Jan 31 16:55:24.344: INFO: Pod "downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d" satisfied condition "Succeeded or Failed"
    Jan 31 16:55:24.353: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d container client-container: <nil>
    STEP: delete the pod 01/31/23 16:55:24.365
    Jan 31 16:55:24.378: INFO: Waiting for pod downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d to disappear
    Jan 31 16:55:24.384: INFO: Pod downwardapi-volume-2ed6e9b5-e97a-4f99-be85-7ea45715fc3d no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:55:24.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9452" for this suite. 01/31/23 16:55:24.39
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:55:24.398
Jan 31 16:55:24.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 16:55:24.399
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:24.423
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:24.429
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
Jan 31 16:55:24.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 01/31/23 16:55:25.944
Jan 31 16:55:25.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 create -f -'
Jan 31 16:55:26.709: INFO: stderr: ""
Jan 31 16:55:26.709: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jan 31 16:55:26.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 delete e2e-test-crd-publish-openapi-2830-crds test-foo'
Jan 31 16:55:26.814: INFO: stderr: ""
Jan 31 16:55:26.814: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Jan 31 16:55:26.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 apply -f -'
Jan 31 16:55:27.127: INFO: stderr: ""
Jan 31 16:55:27.127: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jan 31 16:55:27.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 delete e2e-test-crd-publish-openapi-2830-crds test-foo'
Jan 31 16:55:27.245: INFO: stderr: ""
Jan 31 16:55:27.245: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 01/31/23 16:55:27.245
Jan 31 16:55:27.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 create -f -'
Jan 31 16:55:27.573: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 01/31/23 16:55:27.573
Jan 31 16:55:27.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 create -f -'
Jan 31 16:55:27.795: INFO: rc: 1
Jan 31 16:55:27.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 apply -f -'
Jan 31 16:55:28.114: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties 01/31/23 16:55:28.114
Jan 31 16:55:28.114: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 create -f -'
Jan 31 16:55:28.348: INFO: rc: 1
Jan 31 16:55:28.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 apply -f -'
Jan 31 16:55:28.697: INFO: rc: 1
STEP: kubectl explain works to explain CR properties 01/31/23 16:55:28.697
Jan 31 16:55:28.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 explain e2e-test-crd-publish-openapi-2830-crds'
Jan 31 16:55:28.947: INFO: stderr: ""
Jan 31 16:55:28.947: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2830-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively 01/31/23 16:55:28.947
Jan 31 16:55:28.947: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 explain e2e-test-crd-publish-openapi-2830-crds.metadata'
Jan 31 16:55:29.150: INFO: stderr: ""
Jan 31 16:55:29.151: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2830-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Jan 31 16:55:29.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 explain e2e-test-crd-publish-openapi-2830-crds.spec'
Jan 31 16:55:29.440: INFO: stderr: ""
Jan 31 16:55:29.440: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2830-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Jan 31 16:55:29.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 explain e2e-test-crd-publish-openapi-2830-crds.spec.bars'
Jan 31 16:55:29.607: INFO: stderr: ""
Jan 31 16:55:29.607: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2830-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist 01/31/23 16:55:29.607
Jan 31 16:55:29.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 explain e2e-test-crd-publish-openapi-2830-crds.spec.bars2'
Jan 31 16:55:29.839: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 16:55:31.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-4073" for this suite. 01/31/23 16:55:31.319
------------------------------
â€¢ [SLOW TEST] [6.932 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:55:24.398
    Jan 31 16:55:24.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 16:55:24.399
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:24.423
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:24.429
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD with validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:69
    Jan 31 16:55:24.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 01/31/23 16:55:25.944
    Jan 31 16:55:25.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 create -f -'
    Jan 31 16:55:26.709: INFO: stderr: ""
    Jan 31 16:55:26.709: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Jan 31 16:55:26.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 delete e2e-test-crd-publish-openapi-2830-crds test-foo'
    Jan 31 16:55:26.814: INFO: stderr: ""
    Jan 31 16:55:26.814: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    Jan 31 16:55:26.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 apply -f -'
    Jan 31 16:55:27.127: INFO: stderr: ""
    Jan 31 16:55:27.127: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Jan 31 16:55:27.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 delete e2e-test-crd-publish-openapi-2830-crds test-foo'
    Jan 31 16:55:27.245: INFO: stderr: ""
    Jan 31 16:55:27.245: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 01/31/23 16:55:27.245
    Jan 31 16:55:27.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 create -f -'
    Jan 31 16:55:27.573: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 01/31/23 16:55:27.573
    Jan 31 16:55:27.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 create -f -'
    Jan 31 16:55:27.795: INFO: rc: 1
    Jan 31 16:55:27.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 apply -f -'
    Jan 31 16:55:28.114: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request without required properties 01/31/23 16:55:28.114
    Jan 31 16:55:28.114: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 create -f -'
    Jan 31 16:55:28.348: INFO: rc: 1
    Jan 31 16:55:28.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 --namespace=crd-publish-openapi-4073 apply -f -'
    Jan 31 16:55:28.697: INFO: rc: 1
    STEP: kubectl explain works to explain CR properties 01/31/23 16:55:28.697
    Jan 31 16:55:28.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 explain e2e-test-crd-publish-openapi-2830-crds'
    Jan 31 16:55:28.947: INFO: stderr: ""
    Jan 31 16:55:28.947: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2830-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
    STEP: kubectl explain works to explain CR properties recursively 01/31/23 16:55:28.947
    Jan 31 16:55:28.947: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 explain e2e-test-crd-publish-openapi-2830-crds.metadata'
    Jan 31 16:55:29.150: INFO: stderr: ""
    Jan 31 16:55:29.151: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2830-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
    Jan 31 16:55:29.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 explain e2e-test-crd-publish-openapi-2830-crds.spec'
    Jan 31 16:55:29.440: INFO: stderr: ""
    Jan 31 16:55:29.440: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2830-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
    Jan 31 16:55:29.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 explain e2e-test-crd-publish-openapi-2830-crds.spec.bars'
    Jan 31 16:55:29.607: INFO: stderr: ""
    Jan 31 16:55:29.607: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2830-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
    STEP: kubectl explain works to return error when explain is called on property that doesn't exist 01/31/23 16:55:29.607
    Jan 31 16:55:29.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-4073 explain e2e-test-crd-publish-openapi-2830-crds.spec.bars2'
    Jan 31 16:55:29.839: INFO: rc: 1
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:55:31.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-4073" for this suite. 01/31/23 16:55:31.319
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:55:31.332
Jan 31 16:55:31.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 16:55:31.333
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:31.357
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:31.367
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
STEP: Creating a pod to test downward API volume plugin 01/31/23 16:55:31.376
Jan 31 16:55:31.386: INFO: Waiting up to 5m0s for pod "downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6" in namespace "projected-6635" to be "Succeeded or Failed"
Jan 31 16:55:31.393: INFO: Pod "downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6": Phase="Pending", Reason="", readiness=false. Elapsed: 6.64389ms
Jan 31 16:55:33.403: INFO: Pod "downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016667264s
Jan 31 16:55:35.403: INFO: Pod "downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017101477s
STEP: Saw pod success 01/31/23 16:55:35.403
Jan 31 16:55:35.403: INFO: Pod "downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6" satisfied condition "Succeeded or Failed"
Jan 31 16:55:35.413: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6 container client-container: <nil>
STEP: delete the pod 01/31/23 16:55:35.432
Jan 31 16:55:35.454: INFO: Waiting for pod downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6 to disappear
Jan 31 16:55:35.465: INFO: Pod downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 16:55:35.465: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6635" for this suite. 01/31/23 16:55:35.472
------------------------------
â€¢ [4.150 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:55:31.332
    Jan 31 16:55:31.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 16:55:31.333
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:31.357
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:31.367
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:261
    STEP: Creating a pod to test downward API volume plugin 01/31/23 16:55:31.376
    Jan 31 16:55:31.386: INFO: Waiting up to 5m0s for pod "downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6" in namespace "projected-6635" to be "Succeeded or Failed"
    Jan 31 16:55:31.393: INFO: Pod "downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6": Phase="Pending", Reason="", readiness=false. Elapsed: 6.64389ms
    Jan 31 16:55:33.403: INFO: Pod "downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016667264s
    Jan 31 16:55:35.403: INFO: Pod "downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017101477s
    STEP: Saw pod success 01/31/23 16:55:35.403
    Jan 31 16:55:35.403: INFO: Pod "downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6" satisfied condition "Succeeded or Failed"
    Jan 31 16:55:35.413: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6 container client-container: <nil>
    STEP: delete the pod 01/31/23 16:55:35.432
    Jan 31 16:55:35.454: INFO: Waiting for pod downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6 to disappear
    Jan 31 16:55:35.465: INFO: Pod downwardapi-volume-304208ad-9127-4cc6-9e78-3048858d26c6 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:55:35.465: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6635" for this suite. 01/31/23 16:55:35.472
  << End Captured GinkgoWriter Output
------------------------------
[sig-instrumentation] Events
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:55:35.482
Jan 31 16:55:35.482: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename events 01/31/23 16:55:35.483
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:35.506
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:35.513
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
STEP: creating a test event 01/31/23 16:55:35.519
STEP: listing all events in all namespaces 01/31/23 16:55:35.524
STEP: patching the test event 01/31/23 16:55:35.532
STEP: fetching the test event 01/31/23 16:55:35.539
STEP: updating the test event 01/31/23 16:55:35.544
STEP: getting the test event 01/31/23 16:55:35.56
STEP: deleting the test event 01/31/23 16:55:35.565
STEP: listing all events in all namespaces 01/31/23 16:55:35.576
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Jan 31 16:55:35.585: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-5327" for this suite. 01/31/23 16:55:35.594
------------------------------
â€¢ [0.120 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:55:35.482
    Jan 31 16:55:35.482: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename events 01/31/23 16:55:35.483
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:35.506
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:35.513
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of an event [Conformance]
      test/e2e/instrumentation/core_events.go:57
    STEP: creating a test event 01/31/23 16:55:35.519
    STEP: listing all events in all namespaces 01/31/23 16:55:35.524
    STEP: patching the test event 01/31/23 16:55:35.532
    STEP: fetching the test event 01/31/23 16:55:35.539
    STEP: updating the test event 01/31/23 16:55:35.544
    STEP: getting the test event 01/31/23 16:55:35.56
    STEP: deleting the test event 01/31/23 16:55:35.565
    STEP: listing all events in all namespaces 01/31/23 16:55:35.576
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:55:35.585: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-5327" for this suite. 01/31/23 16:55:35.594
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:55:35.603
Jan 31 16:55:35.603: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 16:55:35.604
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:35.622
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:35.63
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
STEP: Creating configMap with name configmap-test-volume-map-42c01531-051a-4c0d-b625-dd219f522c6c 01/31/23 16:55:35.637
STEP: Creating a pod to test consume configMaps 01/31/23 16:55:35.643
Jan 31 16:55:35.652: INFO: Waiting up to 5m0s for pod "pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029" in namespace "configmap-5985" to be "Succeeded or Failed"
Jan 31 16:55:35.662: INFO: Pod "pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029": Phase="Pending", Reason="", readiness=false. Elapsed: 10.426651ms
Jan 31 16:55:37.677: INFO: Pod "pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024995976s
Jan 31 16:55:39.672: INFO: Pod "pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019531806s
STEP: Saw pod success 01/31/23 16:55:39.672
Jan 31 16:55:39.672: INFO: Pod "pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029" satisfied condition "Succeeded or Failed"
Jan 31 16:55:39.681: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 16:55:39.701
Jan 31 16:55:39.720: INFO: Waiting for pod pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029 to disappear
Jan 31 16:55:39.729: INFO: Pod pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 16:55:39.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-5985" for this suite. 01/31/23 16:55:39.739
------------------------------
â€¢ [4.146 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:55:35.603
    Jan 31 16:55:35.603: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 16:55:35.604
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:35.622
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:35.63
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:109
    STEP: Creating configMap with name configmap-test-volume-map-42c01531-051a-4c0d-b625-dd219f522c6c 01/31/23 16:55:35.637
    STEP: Creating a pod to test consume configMaps 01/31/23 16:55:35.643
    Jan 31 16:55:35.652: INFO: Waiting up to 5m0s for pod "pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029" in namespace "configmap-5985" to be "Succeeded or Failed"
    Jan 31 16:55:35.662: INFO: Pod "pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029": Phase="Pending", Reason="", readiness=false. Elapsed: 10.426651ms
    Jan 31 16:55:37.677: INFO: Pod "pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024995976s
    Jan 31 16:55:39.672: INFO: Pod "pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019531806s
    STEP: Saw pod success 01/31/23 16:55:39.672
    Jan 31 16:55:39.672: INFO: Pod "pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029" satisfied condition "Succeeded or Failed"
    Jan 31 16:55:39.681: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 16:55:39.701
    Jan 31 16:55:39.720: INFO: Waiting for pod pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029 to disappear
    Jan 31 16:55:39.729: INFO: Pod pod-configmaps-9257a328-40e4-4052-bb6c-6ebbb0a6e029 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 16:55:39.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-5985" for this suite. 01/31/23 16:55:39.739
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 16:55:39.749
Jan 31 16:55:39.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename statefulset 01/31/23 16:55:39.75
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:39.768
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:39.772
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-7635 01/31/23 16:55:39.778
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
STEP: Creating a new StatefulSet 01/31/23 16:55:39.794
Jan 31 16:55:39.819: INFO: Found 0 stateful pods, waiting for 3
Jan 31 16:55:49.830: INFO: Found 1 stateful pods, waiting for 3
Jan 31 16:55:59.835: INFO: Found 1 stateful pods, waiting for 3
Jan 31 16:56:09.834: INFO: Found 2 stateful pods, waiting for 3
Jan 31 16:56:19.825: INFO: Found 2 stateful pods, waiting for 3
Jan 31 16:56:29.830: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 16:56:29.830: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 16:56:29.830: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 16:56:39.839: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 16:56:39.839: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 16:56:39.839: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 16:56:49.833: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 16:56:49.833: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 16:56:49.833: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 16:56:59.833: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 16:56:59.833: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 16:56:59.833: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 16:56:59.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-7635 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 31 16:57:00.107: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 31 16:57:00.108: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 31 16:57:00.108: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 01/31/23 16:57:10.132
Jan 31 16:57:10.155: INFO: Updating stateful set ss2
STEP: Creating a new revision 01/31/23 16:57:10.156
STEP: Updating Pods in reverse ordinal order 01/31/23 16:57:20.199
Jan 31 16:57:20.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-7635 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 16:57:20.384: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 31 16:57:20.384: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 31 16:57:20.384: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 31 16:57:30.426: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:57:30.426: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 31 16:57:30.426: INFO: Waiting for Pod statefulset-7635/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 31 16:57:40.450: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:57:40.450: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 31 16:57:40.450: INFO: Waiting for Pod statefulset-7635/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 31 16:57:50.445: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:57:50.445: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 31 16:58:00.443: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:58:00.443: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 31 16:58:10.444: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:58:10.444: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 31 16:58:20.441: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:58:30.447: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
STEP: Rolling back to a previous revision 01/31/23 16:58:40.44
Jan 31 16:58:40.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-7635 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 31 16:58:40.644: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 31 16:58:40.644: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 31 16:58:40.644: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 31 16:58:50.707: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order 01/31/23 16:59:00.748
Jan 31 16:59:00.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-7635 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 16:59:00.987: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 31 16:59:00.988: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 31 16:59:00.988: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 31 16:59:11.037: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:59:11.037: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
Jan 31 16:59:11.037: INFO: Waiting for Pod statefulset-7635/ss2-1 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
Jan 31 16:59:21.058: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:59:21.058: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
Jan 31 16:59:21.058: INFO: Waiting for Pod statefulset-7635/ss2-1 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
Jan 31 16:59:31.057: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:59:31.057: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
Jan 31 16:59:41.057: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:59:41.057: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
Jan 31 16:59:51.056: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 16:59:51.057: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
Jan 31 17:00:01.060: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
Jan 31 17:00:11.060: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 31 17:00:21.056: INFO: Deleting all statefulset in ns statefulset-7635
Jan 31 17:00:21.062: INFO: Scaling statefulset ss2 to 0
Jan 31 17:00:31.103: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 17:00:31.111: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 31 17:00:31.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-7635" for this suite. 01/31/23 17:00:31.154
------------------------------
â€¢ [SLOW TEST] [291.412 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/apps/statefulset.go:306

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 16:55:39.749
    Jan 31 16:55:39.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename statefulset 01/31/23 16:55:39.75
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 16:55:39.768
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 16:55:39.772
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-7635 01/31/23 16:55:39.778
    [It] should perform rolling updates and roll backs of template modifications [Conformance]
      test/e2e/apps/statefulset.go:306
    STEP: Creating a new StatefulSet 01/31/23 16:55:39.794
    Jan 31 16:55:39.819: INFO: Found 0 stateful pods, waiting for 3
    Jan 31 16:55:49.830: INFO: Found 1 stateful pods, waiting for 3
    Jan 31 16:55:59.835: INFO: Found 1 stateful pods, waiting for 3
    Jan 31 16:56:09.834: INFO: Found 2 stateful pods, waiting for 3
    Jan 31 16:56:19.825: INFO: Found 2 stateful pods, waiting for 3
    Jan 31 16:56:29.830: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 16:56:29.830: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 16:56:29.830: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 16:56:39.839: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 16:56:39.839: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 16:56:39.839: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 16:56:49.833: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 16:56:49.833: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 16:56:49.833: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 16:56:59.833: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 16:56:59.833: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 16:56:59.833: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 16:56:59.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-7635 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 31 16:57:00.107: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 31 16:57:00.108: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 31 16:57:00.108: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 01/31/23 16:57:10.132
    Jan 31 16:57:10.155: INFO: Updating stateful set ss2
    STEP: Creating a new revision 01/31/23 16:57:10.156
    STEP: Updating Pods in reverse ordinal order 01/31/23 16:57:20.199
    Jan 31 16:57:20.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-7635 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 16:57:20.384: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 31 16:57:20.384: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 31 16:57:20.384: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 31 16:57:30.426: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:57:30.426: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 31 16:57:30.426: INFO: Waiting for Pod statefulset-7635/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 31 16:57:40.450: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:57:40.450: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 31 16:57:40.450: INFO: Waiting for Pod statefulset-7635/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 31 16:57:50.445: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:57:50.445: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 31 16:58:00.443: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:58:00.443: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 31 16:58:10.444: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:58:10.444: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 31 16:58:20.441: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:58:30.447: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    STEP: Rolling back to a previous revision 01/31/23 16:58:40.44
    Jan 31 16:58:40.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-7635 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 31 16:58:40.644: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 31 16:58:40.644: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 31 16:58:40.644: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 31 16:58:50.707: INFO: Updating stateful set ss2
    STEP: Rolling back update in reverse ordinal order 01/31/23 16:59:00.748
    Jan 31 16:59:00.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-7635 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 16:59:00.987: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 31 16:59:00.988: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 31 16:59:00.988: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 31 16:59:11.037: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:59:11.037: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
    Jan 31 16:59:11.037: INFO: Waiting for Pod statefulset-7635/ss2-1 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
    Jan 31 16:59:21.058: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:59:21.058: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
    Jan 31 16:59:21.058: INFO: Waiting for Pod statefulset-7635/ss2-1 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
    Jan 31 16:59:31.057: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:59:31.057: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
    Jan 31 16:59:41.057: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:59:41.057: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
    Jan 31 16:59:51.056: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 16:59:51.057: INFO: Waiting for Pod statefulset-7635/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
    Jan 31 17:00:01.060: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    Jan 31 17:00:11.060: INFO: Waiting for StatefulSet statefulset-7635/ss2 to complete update
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 31 17:00:21.056: INFO: Deleting all statefulset in ns statefulset-7635
    Jan 31 17:00:21.062: INFO: Scaling statefulset ss2 to 0
    Jan 31 17:00:31.103: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 17:00:31.111: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:00:31.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-7635" for this suite. 01/31/23 17:00:31.154
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:00:31.164
Jan 31 17:00:31.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:00:31.165
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:00:31.186
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:00:31.194
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
Jan 31 17:00:31.201: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/31/23 17:00:33.155
Jan 31 17:00:33.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-2072 --namespace=crd-publish-openapi-2072 create -f -'
Jan 31 17:00:33.882: INFO: stderr: ""
Jan 31 17:00:33.882: INFO: stdout: "e2e-test-crd-publish-openapi-3997-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jan 31 17:00:33.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-2072 --namespace=crd-publish-openapi-2072 delete e2e-test-crd-publish-openapi-3997-crds test-cr'
Jan 31 17:00:33.983: INFO: stderr: ""
Jan 31 17:00:33.983: INFO: stdout: "e2e-test-crd-publish-openapi-3997-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Jan 31 17:00:33.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-2072 --namespace=crd-publish-openapi-2072 apply -f -'
Jan 31 17:00:34.263: INFO: stderr: ""
Jan 31 17:00:34.263: INFO: stdout: "e2e-test-crd-publish-openapi-3997-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jan 31 17:00:34.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-2072 --namespace=crd-publish-openapi-2072 delete e2e-test-crd-publish-openapi-3997-crds test-cr'
Jan 31 17:00:34.376: INFO: stderr: ""
Jan 31 17:00:34.376: INFO: stdout: "e2e-test-crd-publish-openapi-3997-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 01/31/23 17:00:34.376
Jan 31 17:00:34.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-2072 explain e2e-test-crd-publish-openapi-3997-crds'
Jan 31 17:00:34.656: INFO: stderr: ""
Jan 31 17:00:34.656: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3997-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:00:36.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-2072" for this suite. 01/31/23 17:00:36.234
------------------------------
â€¢ [SLOW TEST] [5.077 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:00:31.164
    Jan 31 17:00:31.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:00:31.165
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:00:31.186
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:00:31.194
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields in an embedded object [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:236
    Jan 31 17:00:31.201: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/31/23 17:00:33.155
    Jan 31 17:00:33.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-2072 --namespace=crd-publish-openapi-2072 create -f -'
    Jan 31 17:00:33.882: INFO: stderr: ""
    Jan 31 17:00:33.882: INFO: stdout: "e2e-test-crd-publish-openapi-3997-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Jan 31 17:00:33.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-2072 --namespace=crd-publish-openapi-2072 delete e2e-test-crd-publish-openapi-3997-crds test-cr'
    Jan 31 17:00:33.983: INFO: stderr: ""
    Jan 31 17:00:33.983: INFO: stdout: "e2e-test-crd-publish-openapi-3997-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    Jan 31 17:00:33.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-2072 --namespace=crd-publish-openapi-2072 apply -f -'
    Jan 31 17:00:34.263: INFO: stderr: ""
    Jan 31 17:00:34.263: INFO: stdout: "e2e-test-crd-publish-openapi-3997-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Jan 31 17:00:34.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-2072 --namespace=crd-publish-openapi-2072 delete e2e-test-crd-publish-openapi-3997-crds test-cr'
    Jan 31 17:00:34.376: INFO: stderr: ""
    Jan 31 17:00:34.376: INFO: stdout: "e2e-test-crd-publish-openapi-3997-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 01/31/23 17:00:34.376
    Jan 31 17:00:34.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-2072 explain e2e-test-crd-publish-openapi-3997-crds'
    Jan 31 17:00:34.656: INFO: stderr: ""
    Jan 31 17:00:34.656: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3997-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:00:36.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-2072" for this suite. 01/31/23 17:00:36.234
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:00:36.242
Jan 31 17:00:36.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename watch 01/31/23 17:00:36.243
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:00:36.259
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:00:36.268
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
STEP: creating a watch on configmaps with label A 01/31/23 17:00:36.282
STEP: creating a watch on configmaps with label B 01/31/23 17:00:36.287
STEP: creating a watch on configmaps with label A or B 01/31/23 17:00:36.291
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 01/31/23 17:00:36.294
Jan 31 17:00:36.313: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3691 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:00:36.314: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3691 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification 01/31/23 17:00:36.314
Jan 31 17:00:36.333: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3693 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:00:36.333: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3693 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification 01/31/23 17:00:36.333
Jan 31 17:00:36.347: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3694 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:00:36.347: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3694 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification 01/31/23 17:00:36.347
Jan 31 17:00:36.355: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3695 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:00:36.355: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3695 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 01/31/23 17:00:36.355
Jan 31 17:00:36.362: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8573  be04a2a3-b565-4d2e-b80f-be3ad97872e7 3697 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:00:36.362: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8573  be04a2a3-b565-4d2e-b80f-be3ad97872e7 3697 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification 01/31/23 17:00:46.363
Jan 31 17:00:46.377: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8573  be04a2a3-b565-4d2e-b80f-be3ad97872e7 3786 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:00:46.377: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8573  be04a2a3-b565-4d2e-b80f-be3ad97872e7 3786 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Jan 31 17:00:56.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-8573" for this suite. 01/31/23 17:00:56.39
------------------------------
â€¢ [SLOW TEST] [20.163 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:00:36.242
    Jan 31 17:00:36.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename watch 01/31/23 17:00:36.243
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:00:36.259
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:00:36.268
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe add, update, and delete watch notifications on configmaps [Conformance]
      test/e2e/apimachinery/watch.go:60
    STEP: creating a watch on configmaps with label A 01/31/23 17:00:36.282
    STEP: creating a watch on configmaps with label B 01/31/23 17:00:36.287
    STEP: creating a watch on configmaps with label A or B 01/31/23 17:00:36.291
    STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 01/31/23 17:00:36.294
    Jan 31 17:00:36.313: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3691 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:00:36.314: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3691 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A and ensuring the correct watchers observe the notification 01/31/23 17:00:36.314
    Jan 31 17:00:36.333: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3693 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:00:36.333: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3693 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A again and ensuring the correct watchers observe the notification 01/31/23 17:00:36.333
    Jan 31 17:00:36.347: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3694 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:00:36.347: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3694 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap A and ensuring the correct watchers observe the notification 01/31/23 17:00:36.347
    Jan 31 17:00:36.355: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3695 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:00:36.355: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8573  2cf4e6e1-b4f4-4f0c-b8a6-7968001d4418 3695 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 01/31/23 17:00:36.355
    Jan 31 17:00:36.362: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8573  be04a2a3-b565-4d2e-b80f-be3ad97872e7 3697 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:00:36.362: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8573  be04a2a3-b565-4d2e-b80f-be3ad97872e7 3697 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap B and ensuring the correct watchers observe the notification 01/31/23 17:00:46.363
    Jan 31 17:00:46.377: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8573  be04a2a3-b565-4d2e-b80f-be3ad97872e7 3786 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:00:46.377: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8573  be04a2a3-b565-4d2e-b80f-be3ad97872e7 3786 0 2023-01-31 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-31 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:00:56.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-8573" for this suite. 01/31/23 17:00:56.39
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:00:56.406
Jan 31 17:00:56.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-probe 01/31/23 17:00:56.408
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:00:56.433
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:00:56.443
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
Jan 31 17:00:56.462: INFO: Waiting up to 5m0s for pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251" in namespace "container-probe-7196" to be "running and ready"
Jan 31 17:00:56.472: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Pending", Reason="", readiness=false. Elapsed: 9.914908ms
Jan 31 17:00:56.472: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:00:58.480: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 2.017846996s
Jan 31 17:00:58.480: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
Jan 31 17:01:00.484: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 4.021814229s
Jan 31 17:01:00.484: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
Jan 31 17:01:02.481: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 6.019475716s
Jan 31 17:01:02.481: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
Jan 31 17:01:04.482: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 8.020452865s
Jan 31 17:01:04.482: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
Jan 31 17:01:06.488: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 10.025879182s
Jan 31 17:01:06.488: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
Jan 31 17:01:08.482: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 12.020673628s
Jan 31 17:01:08.482: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
Jan 31 17:01:10.483: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 14.021007575s
Jan 31 17:01:10.483: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
Jan 31 17:01:12.486: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 16.024609454s
Jan 31 17:01:12.486: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
Jan 31 17:01:14.479: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 18.016933726s
Jan 31 17:01:14.479: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
Jan 31 17:01:16.481: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 20.019644822s
Jan 31 17:01:16.481: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
Jan 31 17:01:18.485: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=true. Elapsed: 22.02325132s
Jan 31 17:01:18.485: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = true)
Jan 31 17:01:18.485: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251" satisfied condition "running and ready"
Jan 31 17:01:18.493: INFO: Container started at 2023-01-31 17:00:57 +0000 UTC, pod became ready at 2023-01-31 17:01:16 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 31 17:01:18.493: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-7196" for this suite. 01/31/23 17:01:18.503
------------------------------
â€¢ [SLOW TEST] [22.106 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:00:56.406
    Jan 31 17:00:56.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-probe 01/31/23 17:00:56.408
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:00:56.433
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:00:56.443
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:72
    Jan 31 17:00:56.462: INFO: Waiting up to 5m0s for pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251" in namespace "container-probe-7196" to be "running and ready"
    Jan 31 17:00:56.472: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Pending", Reason="", readiness=false. Elapsed: 9.914908ms
    Jan 31 17:00:56.472: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:00:58.480: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 2.017846996s
    Jan 31 17:00:58.480: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
    Jan 31 17:01:00.484: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 4.021814229s
    Jan 31 17:01:00.484: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
    Jan 31 17:01:02.481: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 6.019475716s
    Jan 31 17:01:02.481: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
    Jan 31 17:01:04.482: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 8.020452865s
    Jan 31 17:01:04.482: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
    Jan 31 17:01:06.488: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 10.025879182s
    Jan 31 17:01:06.488: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
    Jan 31 17:01:08.482: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 12.020673628s
    Jan 31 17:01:08.482: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
    Jan 31 17:01:10.483: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 14.021007575s
    Jan 31 17:01:10.483: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
    Jan 31 17:01:12.486: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 16.024609454s
    Jan 31 17:01:12.486: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
    Jan 31 17:01:14.479: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 18.016933726s
    Jan 31 17:01:14.479: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
    Jan 31 17:01:16.481: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=false. Elapsed: 20.019644822s
    Jan 31 17:01:16.481: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = false)
    Jan 31 17:01:18.485: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251": Phase="Running", Reason="", readiness=true. Elapsed: 22.02325132s
    Jan 31 17:01:18.485: INFO: The phase of Pod test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251 is Running (Ready = true)
    Jan 31 17:01:18.485: INFO: Pod "test-webserver-a6942267-dfad-41a5-a99f-577aa04ee251" satisfied condition "running and ready"
    Jan 31 17:01:18.493: INFO: Container started at 2023-01-31 17:00:57 +0000 UTC, pod became ready at 2023-01-31 17:01:16 +0000 UTC
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:01:18.493: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-7196" for this suite. 01/31/23 17:01:18.503
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:01:18.513
Jan 31 17:01:18.513: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 17:01:18.515
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:18.541
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:18.547
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
STEP: Creating a pod to test emptydir volume type on node default medium 01/31/23 17:01:18.554
Jan 31 17:01:18.563: INFO: Waiting up to 5m0s for pod "pod-f28ce692-092f-477f-837e-d52478f44027" in namespace "emptydir-5949" to be "Succeeded or Failed"
Jan 31 17:01:18.571: INFO: Pod "pod-f28ce692-092f-477f-837e-d52478f44027": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012271ms
Jan 31 17:01:20.581: INFO: Pod "pod-f28ce692-092f-477f-837e-d52478f44027": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017264572s
Jan 31 17:01:22.582: INFO: Pod "pod-f28ce692-092f-477f-837e-d52478f44027": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018690898s
Jan 31 17:01:24.580: INFO: Pod "pod-f28ce692-092f-477f-837e-d52478f44027": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017148859s
STEP: Saw pod success 01/31/23 17:01:24.581
Jan 31 17:01:24.581: INFO: Pod "pod-f28ce692-092f-477f-837e-d52478f44027" satisfied condition "Succeeded or Failed"
Jan 31 17:01:24.586: INFO: Trying to get logs from node 26-m02 pod pod-f28ce692-092f-477f-837e-d52478f44027 container test-container: <nil>
STEP: delete the pod 01/31/23 17:01:24.606
Jan 31 17:01:24.619: INFO: Waiting for pod pod-f28ce692-092f-477f-837e-d52478f44027 to disappear
Jan 31 17:01:24.625: INFO: Pod pod-f28ce692-092f-477f-837e-d52478f44027 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:01:24.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-5949" for this suite. 01/31/23 17:01:24.63
------------------------------
â€¢ [SLOW TEST] [6.125 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:01:18.513
    Jan 31 17:01:18.513: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 17:01:18.515
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:18.541
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:18.547
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:157
    STEP: Creating a pod to test emptydir volume type on node default medium 01/31/23 17:01:18.554
    Jan 31 17:01:18.563: INFO: Waiting up to 5m0s for pod "pod-f28ce692-092f-477f-837e-d52478f44027" in namespace "emptydir-5949" to be "Succeeded or Failed"
    Jan 31 17:01:18.571: INFO: Pod "pod-f28ce692-092f-477f-837e-d52478f44027": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012271ms
    Jan 31 17:01:20.581: INFO: Pod "pod-f28ce692-092f-477f-837e-d52478f44027": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017264572s
    Jan 31 17:01:22.582: INFO: Pod "pod-f28ce692-092f-477f-837e-d52478f44027": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018690898s
    Jan 31 17:01:24.580: INFO: Pod "pod-f28ce692-092f-477f-837e-d52478f44027": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017148859s
    STEP: Saw pod success 01/31/23 17:01:24.581
    Jan 31 17:01:24.581: INFO: Pod "pod-f28ce692-092f-477f-837e-d52478f44027" satisfied condition "Succeeded or Failed"
    Jan 31 17:01:24.586: INFO: Trying to get logs from node 26-m02 pod pod-f28ce692-092f-477f-837e-d52478f44027 container test-container: <nil>
    STEP: delete the pod 01/31/23 17:01:24.606
    Jan 31 17:01:24.619: INFO: Waiting for pod pod-f28ce692-092f-477f-837e-d52478f44027 to disappear
    Jan 31 17:01:24.625: INFO: Pod pod-f28ce692-092f-477f-837e-d52478f44027 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:01:24.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-5949" for this suite. 01/31/23 17:01:24.63
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:01:24.638
Jan 31 17:01:24.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 17:01:24.639
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:24.656
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:24.664
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
STEP: Creating a ResourceQuota with best effort scope 01/31/23 17:01:24.673
STEP: Ensuring ResourceQuota status is calculated 01/31/23 17:01:24.679
STEP: Creating a ResourceQuota with not best effort scope 01/31/23 17:01:26.688
STEP: Ensuring ResourceQuota status is calculated 01/31/23 17:01:26.699
STEP: Creating a best-effort pod 01/31/23 17:01:28.707
STEP: Ensuring resource quota with best effort scope captures the pod usage 01/31/23 17:01:28.733
STEP: Ensuring resource quota with not best effort ignored the pod usage 01/31/23 17:01:30.74
STEP: Deleting the pod 01/31/23 17:01:32.75
STEP: Ensuring resource quota status released the pod usage 01/31/23 17:01:32.776
STEP: Creating a not best-effort pod 01/31/23 17:01:34.786
STEP: Ensuring resource quota with not best effort scope captures the pod usage 01/31/23 17:01:34.802
STEP: Ensuring resource quota with best effort scope ignored the pod usage 01/31/23 17:01:36.816
STEP: Deleting the pod 01/31/23 17:01:38.827
STEP: Ensuring resource quota status released the pod usage 01/31/23 17:01:38.852
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 17:01:40.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-1212" for this suite. 01/31/23 17:01:40.874
------------------------------
â€¢ [SLOW TEST] [16.249 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:01:24.638
    Jan 31 17:01:24.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 17:01:24.639
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:24.656
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:24.664
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with best effort scope. [Conformance]
      test/e2e/apimachinery/resource_quota.go:803
    STEP: Creating a ResourceQuota with best effort scope 01/31/23 17:01:24.673
    STEP: Ensuring ResourceQuota status is calculated 01/31/23 17:01:24.679
    STEP: Creating a ResourceQuota with not best effort scope 01/31/23 17:01:26.688
    STEP: Ensuring ResourceQuota status is calculated 01/31/23 17:01:26.699
    STEP: Creating a best-effort pod 01/31/23 17:01:28.707
    STEP: Ensuring resource quota with best effort scope captures the pod usage 01/31/23 17:01:28.733
    STEP: Ensuring resource quota with not best effort ignored the pod usage 01/31/23 17:01:30.74
    STEP: Deleting the pod 01/31/23 17:01:32.75
    STEP: Ensuring resource quota status released the pod usage 01/31/23 17:01:32.776
    STEP: Creating a not best-effort pod 01/31/23 17:01:34.786
    STEP: Ensuring resource quota with not best effort scope captures the pod usage 01/31/23 17:01:34.802
    STEP: Ensuring resource quota with best effort scope ignored the pod usage 01/31/23 17:01:36.816
    STEP: Deleting the pod 01/31/23 17:01:38.827
    STEP: Ensuring resource quota status released the pod usage 01/31/23 17:01:38.852
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:01:40.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-1212" for this suite. 01/31/23 17:01:40.874
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:01:40.889
Jan 31 17:01:40.890: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 17:01:40.89
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:40.918
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:40.925
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
STEP: Creating a ResourceQuota 01/31/23 17:01:40.935
STEP: Getting a ResourceQuota 01/31/23 17:01:40.942
STEP: Updating a ResourceQuota 01/31/23 17:01:40.947
STEP: Verifying a ResourceQuota was modified 01/31/23 17:01:40.953
STEP: Deleting a ResourceQuota 01/31/23 17:01:40.958
STEP: Verifying the deleted ResourceQuota 01/31/23 17:01:40.971
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 17:01:40.979: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-5415" for this suite. 01/31/23 17:01:40.985
------------------------------
â€¢ [0.110 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:01:40.889
    Jan 31 17:01:40.890: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 17:01:40.89
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:40.918
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:40.925
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to update and delete ResourceQuota. [Conformance]
      test/e2e/apimachinery/resource_quota.go:884
    STEP: Creating a ResourceQuota 01/31/23 17:01:40.935
    STEP: Getting a ResourceQuota 01/31/23 17:01:40.942
    STEP: Updating a ResourceQuota 01/31/23 17:01:40.947
    STEP: Verifying a ResourceQuota was modified 01/31/23 17:01:40.953
    STEP: Deleting a ResourceQuota 01/31/23 17:01:40.958
    STEP: Verifying the deleted ResourceQuota 01/31/23 17:01:40.971
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:01:40.979: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-5415" for this suite. 01/31/23 17:01:40.985
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:01:41.002
Jan 31 17:01:41.003: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:01:41.004
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:41.022
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:41.029
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
STEP: Creating configMap with name projected-configmap-test-volume-f7a646cd-88b7-4e55-8ddd-8befb2bf0255 01/31/23 17:01:41.036
STEP: Creating a pod to test consume configMaps 01/31/23 17:01:41.041
Jan 31 17:01:41.050: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232" in namespace "projected-4155" to be "Succeeded or Failed"
Jan 31 17:01:41.057: INFO: Pod "pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232": Phase="Pending", Reason="", readiness=false. Elapsed: 6.651363ms
Jan 31 17:01:43.072: INFO: Pod "pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021843225s
Jan 31 17:01:45.068: INFO: Pod "pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017816903s
STEP: Saw pod success 01/31/23 17:01:45.068
Jan 31 17:01:45.068: INFO: Pod "pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232" satisfied condition "Succeeded or Failed"
Jan 31 17:01:45.078: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 17:01:45.1
Jan 31 17:01:45.114: INFO: Waiting for pod pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232 to disappear
Jan 31 17:01:45.124: INFO: Pod pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:01:45.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4155" for this suite. 01/31/23 17:01:45.132
------------------------------
â€¢ [4.137 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:01:41.002
    Jan 31 17:01:41.003: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:01:41.004
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:41.022
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:41.029
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:47
    STEP: Creating configMap with name projected-configmap-test-volume-f7a646cd-88b7-4e55-8ddd-8befb2bf0255 01/31/23 17:01:41.036
    STEP: Creating a pod to test consume configMaps 01/31/23 17:01:41.041
    Jan 31 17:01:41.050: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232" in namespace "projected-4155" to be "Succeeded or Failed"
    Jan 31 17:01:41.057: INFO: Pod "pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232": Phase="Pending", Reason="", readiness=false. Elapsed: 6.651363ms
    Jan 31 17:01:43.072: INFO: Pod "pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021843225s
    Jan 31 17:01:45.068: INFO: Pod "pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017816903s
    STEP: Saw pod success 01/31/23 17:01:45.068
    Jan 31 17:01:45.068: INFO: Pod "pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232" satisfied condition "Succeeded or Failed"
    Jan 31 17:01:45.078: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 17:01:45.1
    Jan 31 17:01:45.114: INFO: Waiting for pod pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232 to disappear
    Jan 31 17:01:45.124: INFO: Pod pod-projected-configmaps-4a54948b-f5f4-4ce1-b3b2-ca36affb2232 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:01:45.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4155" for this suite. 01/31/23 17:01:45.132
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:01:45.142
Jan 31 17:01:45.142: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sched-pred 01/31/23 17:01:45.142
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:45.158
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:45.164
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Jan 31 17:01:45.170: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 31 17:01:45.180: INFO: Waiting for terminating namespaces to be deleted...
Jan 31 17:01:45.185: INFO: 
Logging pods the apiserver thinks is on node 26-m02 before test
Jan 31 17:01:45.192: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-2s64n from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 17:01:45.192: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 17:01:45.192: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 31 17:01:45.192: INFO: sonobuoy from sonobuoy started at 2023-01-31 16:39:57 +0000 UTC (1 container statuses recorded)
Jan 31 17:01:45.192: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 31 17:01:45.192: INFO: 
Logging pods the apiserver thinks is on node 26 before test
Jan 31 17:01:45.197: INFO: coredns-56bfc489cf-8ptdd from kube-system started at 2023-01-31 16:39:52 +0000 UTC (1 container statuses recorded)
Jan 31 17:01:45.197: INFO: 	Container coredns ready: true, restart count 0
Jan 31 17:01:45.197: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 17:01:45.197: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 17:01:45.197: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 31 17:01:45.197: INFO: sonobuoy-e2e-job-1f36c7afce724735 from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 17:01:45.197: INFO: 	Container e2e ready: true, restart count 0
Jan 31 17:01:45.198: INFO: 	Container sonobuoy-worker ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
STEP: verifying the node has the label node 26-m02 01/31/23 17:01:45.212
STEP: verifying the node has the label node 26 01/31/23 17:01:45.231
Jan 31 17:01:45.246: INFO: Pod coredns-56bfc489cf-8ptdd requesting resource cpu=3m on Node 26
Jan 31 17:01:45.246: INFO: Pod sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-2s64n requesting resource cpu=0m on Node 26-m02
Jan 31 17:01:45.246: INFO: Pod sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl requesting resource cpu=0m on Node 26
Jan 31 17:01:45.246: INFO: Pod sonobuoy-e2e-job-1f36c7afce724735 requesting resource cpu=0m on Node 26
Jan 31 17:01:45.246: INFO: Pod sonobuoy requesting resource cpu=0m on Node 26-m02
STEP: Starting Pods to consume most of the cluster CPU. 01/31/23 17:01:45.246
Jan 31 17:01:45.246: INFO: Creating a pod which consumes cpu=6776m on Node 26-m02
Jan 31 17:01:45.257: INFO: Creating a pod which consumes cpu=6402m on Node 26
Jan 31 17:01:45.264: INFO: Waiting up to 5m0s for pod "filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d" in namespace "sched-pred-6233" to be "running"
Jan 31 17:01:45.271: INFO: Pod "filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.990328ms
Jan 31 17:01:47.279: INFO: Pod "filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015048931s
Jan 31 17:01:49.283: INFO: Pod "filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d": Phase="Running", Reason="", readiness=true. Elapsed: 4.019420704s
Jan 31 17:01:49.283: INFO: Pod "filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d" satisfied condition "running"
Jan 31 17:01:49.283: INFO: Waiting up to 5m0s for pod "filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb" in namespace "sched-pred-6233" to be "running"
Jan 31 17:01:49.290: INFO: Pod "filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb": Phase="Running", Reason="", readiness=true. Elapsed: 6.65493ms
Jan 31 17:01:49.290: INFO: Pod "filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb" satisfied condition "running"
STEP: Creating another pod that requires unavailable amount of CPU. 01/31/23 17:01:49.29
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d.173f736e994f4919], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6233/filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d to 26-m02] 01/31/23 17:01:49.297
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb.173f736e99dd32c2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6233/filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb to 26] 01/31/23 17:01:49.297
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d.173f736ed2327b51], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 01/31/23 17:01:49.298
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb.173f736ed2dc3a11], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 01/31/23 17:01:49.298
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d.173f736ed680163f], Reason = [Created], Message = [Created container filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d] 01/31/23 17:01:49.298
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb.173f736ed719f107], Reason = [Created], Message = [Created container filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb] 01/31/23 17:01:49.298
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb.173f736eec6392a0], Reason = [Started], Message = [Started container filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb] 01/31/23 17:01:49.298
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d.173f736eec6cec4e], Reason = [Started], Message = [Started container filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d] 01/31/23 17:01:49.298
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.173f736f8a8f2edc], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod..] 01/31/23 17:01:49.318
STEP: removing the label node off the node 26-m02 01/31/23 17:01:50.318
STEP: verifying the node doesn't have the label node 01/31/23 17:01:50.333
STEP: removing the label node off the node 26 01/31/23 17:01:50.337
STEP: verifying the node doesn't have the label node 01/31/23 17:01:50.357
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:01:50.362: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-6233" for this suite. 01/31/23 17:01:50.368
------------------------------
â€¢ [SLOW TEST] [5.233 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:01:45.142
    Jan 31 17:01:45.142: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sched-pred 01/31/23 17:01:45.142
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:45.158
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:45.164
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Jan 31 17:01:45.170: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Jan 31 17:01:45.180: INFO: Waiting for terminating namespaces to be deleted...
    Jan 31 17:01:45.185: INFO: 
    Logging pods the apiserver thinks is on node 26-m02 before test
    Jan 31 17:01:45.192: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-2s64n from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 17:01:45.192: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 17:01:45.192: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 31 17:01:45.192: INFO: sonobuoy from sonobuoy started at 2023-01-31 16:39:57 +0000 UTC (1 container statuses recorded)
    Jan 31 17:01:45.192: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Jan 31 17:01:45.192: INFO: 
    Logging pods the apiserver thinks is on node 26 before test
    Jan 31 17:01:45.197: INFO: coredns-56bfc489cf-8ptdd from kube-system started at 2023-01-31 16:39:52 +0000 UTC (1 container statuses recorded)
    Jan 31 17:01:45.197: INFO: 	Container coredns ready: true, restart count 0
    Jan 31 17:01:45.197: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 17:01:45.197: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 17:01:45.197: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 31 17:01:45.197: INFO: sonobuoy-e2e-job-1f36c7afce724735 from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 17:01:45.197: INFO: 	Container e2e ready: true, restart count 0
    Jan 31 17:01:45.198: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    [It] validates resource limits of pods that are allowed to run  [Conformance]
      test/e2e/scheduling/predicates.go:331
    STEP: verifying the node has the label node 26-m02 01/31/23 17:01:45.212
    STEP: verifying the node has the label node 26 01/31/23 17:01:45.231
    Jan 31 17:01:45.246: INFO: Pod coredns-56bfc489cf-8ptdd requesting resource cpu=3m on Node 26
    Jan 31 17:01:45.246: INFO: Pod sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-2s64n requesting resource cpu=0m on Node 26-m02
    Jan 31 17:01:45.246: INFO: Pod sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl requesting resource cpu=0m on Node 26
    Jan 31 17:01:45.246: INFO: Pod sonobuoy-e2e-job-1f36c7afce724735 requesting resource cpu=0m on Node 26
    Jan 31 17:01:45.246: INFO: Pod sonobuoy requesting resource cpu=0m on Node 26-m02
    STEP: Starting Pods to consume most of the cluster CPU. 01/31/23 17:01:45.246
    Jan 31 17:01:45.246: INFO: Creating a pod which consumes cpu=6776m on Node 26-m02
    Jan 31 17:01:45.257: INFO: Creating a pod which consumes cpu=6402m on Node 26
    Jan 31 17:01:45.264: INFO: Waiting up to 5m0s for pod "filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d" in namespace "sched-pred-6233" to be "running"
    Jan 31 17:01:45.271: INFO: Pod "filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.990328ms
    Jan 31 17:01:47.279: INFO: Pod "filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015048931s
    Jan 31 17:01:49.283: INFO: Pod "filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d": Phase="Running", Reason="", readiness=true. Elapsed: 4.019420704s
    Jan 31 17:01:49.283: INFO: Pod "filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d" satisfied condition "running"
    Jan 31 17:01:49.283: INFO: Waiting up to 5m0s for pod "filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb" in namespace "sched-pred-6233" to be "running"
    Jan 31 17:01:49.290: INFO: Pod "filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb": Phase="Running", Reason="", readiness=true. Elapsed: 6.65493ms
    Jan 31 17:01:49.290: INFO: Pod "filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb" satisfied condition "running"
    STEP: Creating another pod that requires unavailable amount of CPU. 01/31/23 17:01:49.29
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d.173f736e994f4919], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6233/filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d to 26-m02] 01/31/23 17:01:49.297
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb.173f736e99dd32c2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6233/filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb to 26] 01/31/23 17:01:49.297
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d.173f736ed2327b51], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 01/31/23 17:01:49.298
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb.173f736ed2dc3a11], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 01/31/23 17:01:49.298
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d.173f736ed680163f], Reason = [Created], Message = [Created container filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d] 01/31/23 17:01:49.298
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb.173f736ed719f107], Reason = [Created], Message = [Created container filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb] 01/31/23 17:01:49.298
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb.173f736eec6392a0], Reason = [Started], Message = [Started container filler-pod-71a55113-87e8-45f8-a770-d869c8fa98cb] 01/31/23 17:01:49.298
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d.173f736eec6cec4e], Reason = [Started], Message = [Started container filler-pod-215e7728-b00a-4e64-8b61-d730fecb403d] 01/31/23 17:01:49.298
    STEP: Considering event: 
    Type = [Warning], Name = [additional-pod.173f736f8a8f2edc], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod..] 01/31/23 17:01:49.318
    STEP: removing the label node off the node 26-m02 01/31/23 17:01:50.318
    STEP: verifying the node doesn't have the label node 01/31/23 17:01:50.333
    STEP: removing the label node off the node 26 01/31/23 17:01:50.337
    STEP: verifying the node doesn't have the label node 01/31/23 17:01:50.357
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:01:50.362: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-6233" for this suite. 01/31/23 17:01:50.368
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:01:50.375
Jan 31 17:01:50.375: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename subpath 01/31/23 17:01:50.376
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:50.391
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:50.397
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 01/31/23 17:01:50.409
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
STEP: Creating pod pod-subpath-test-configmap-2lwv 01/31/23 17:01:50.421
STEP: Creating a pod to test atomic-volume-subpath 01/31/23 17:01:50.421
Jan 31 17:01:50.432: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-2lwv" in namespace "subpath-2584" to be "Succeeded or Failed"
Jan 31 17:01:50.444: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Pending", Reason="", readiness=false. Elapsed: 11.999501ms
Jan 31 17:01:52.453: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 2.021658775s
Jan 31 17:01:54.458: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 4.026070183s
Jan 31 17:01:56.453: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 6.020967898s
Jan 31 17:01:58.456: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 8.024487241s
Jan 31 17:02:00.454: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 10.021982553s
Jan 31 17:02:02.455: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 12.023598889s
Jan 31 17:02:04.453: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 14.021656531s
Jan 31 17:02:06.457: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 16.025740108s
Jan 31 17:02:08.451: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 18.019643973s
Jan 31 17:02:10.453: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 20.021002068s
Jan 31 17:02:12.457: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 22.025366839s
Jan 31 17:02:14.456: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=false. Elapsed: 24.024257183s
Jan 31 17:02:16.453: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.021117989s
STEP: Saw pod success 01/31/23 17:02:16.453
Jan 31 17:02:16.453: INFO: Pod "pod-subpath-test-configmap-2lwv" satisfied condition "Succeeded or Failed"
Jan 31 17:02:16.460: INFO: Trying to get logs from node 26-m02 pod pod-subpath-test-configmap-2lwv container test-container-subpath-configmap-2lwv: <nil>
STEP: delete the pod 01/31/23 17:02:16.479
Jan 31 17:02:16.497: INFO: Waiting for pod pod-subpath-test-configmap-2lwv to disappear
Jan 31 17:02:16.504: INFO: Pod pod-subpath-test-configmap-2lwv no longer exists
STEP: Deleting pod pod-subpath-test-configmap-2lwv 01/31/23 17:02:16.504
Jan 31 17:02:16.504: INFO: Deleting pod "pod-subpath-test-configmap-2lwv" in namespace "subpath-2584"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Jan 31 17:02:16.509: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-2584" for this suite. 01/31/23 17:02:16.516
------------------------------
â€¢ [SLOW TEST] [26.152 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/storage/subpath.go:70

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:01:50.375
    Jan 31 17:01:50.375: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename subpath 01/31/23 17:01:50.376
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:01:50.391
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:01:50.397
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 01/31/23 17:01:50.409
    [It] should support subpaths with configmap pod [Conformance]
      test/e2e/storage/subpath.go:70
    STEP: Creating pod pod-subpath-test-configmap-2lwv 01/31/23 17:01:50.421
    STEP: Creating a pod to test atomic-volume-subpath 01/31/23 17:01:50.421
    Jan 31 17:01:50.432: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-2lwv" in namespace "subpath-2584" to be "Succeeded or Failed"
    Jan 31 17:01:50.444: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Pending", Reason="", readiness=false. Elapsed: 11.999501ms
    Jan 31 17:01:52.453: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 2.021658775s
    Jan 31 17:01:54.458: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 4.026070183s
    Jan 31 17:01:56.453: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 6.020967898s
    Jan 31 17:01:58.456: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 8.024487241s
    Jan 31 17:02:00.454: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 10.021982553s
    Jan 31 17:02:02.455: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 12.023598889s
    Jan 31 17:02:04.453: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 14.021656531s
    Jan 31 17:02:06.457: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 16.025740108s
    Jan 31 17:02:08.451: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 18.019643973s
    Jan 31 17:02:10.453: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 20.021002068s
    Jan 31 17:02:12.457: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=true. Elapsed: 22.025366839s
    Jan 31 17:02:14.456: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Running", Reason="", readiness=false. Elapsed: 24.024257183s
    Jan 31 17:02:16.453: INFO: Pod "pod-subpath-test-configmap-2lwv": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.021117989s
    STEP: Saw pod success 01/31/23 17:02:16.453
    Jan 31 17:02:16.453: INFO: Pod "pod-subpath-test-configmap-2lwv" satisfied condition "Succeeded or Failed"
    Jan 31 17:02:16.460: INFO: Trying to get logs from node 26-m02 pod pod-subpath-test-configmap-2lwv container test-container-subpath-configmap-2lwv: <nil>
    STEP: delete the pod 01/31/23 17:02:16.479
    Jan 31 17:02:16.497: INFO: Waiting for pod pod-subpath-test-configmap-2lwv to disappear
    Jan 31 17:02:16.504: INFO: Pod pod-subpath-test-configmap-2lwv no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-2lwv 01/31/23 17:02:16.504
    Jan 31 17:02:16.504: INFO: Deleting pod "pod-subpath-test-configmap-2lwv" in namespace "subpath-2584"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:02:16.509: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-2584" for this suite. 01/31/23 17:02:16.516
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:02:16.527
Jan 31 17:02:16.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename namespaces 01/31/23 17:02:16.528
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:16.544
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:16.55
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
STEP: Creating namespace "e2e-ns-8zgwb" 01/31/23 17:02:16.558
Jan 31 17:02:16.575: INFO: Namespace "e2e-ns-8zgwb-7417" has []v1.FinalizerName{"kubernetes"}
STEP: Adding e2e finalizer to namespace "e2e-ns-8zgwb-7417" 01/31/23 17:02:16.575
Jan 31 17:02:16.588: INFO: Namespace "e2e-ns-8zgwb-7417" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
STEP: Removing e2e finalizer from namespace "e2e-ns-8zgwb-7417" 01/31/23 17:02:16.588
Jan 31 17:02:16.598: INFO: Namespace "e2e-ns-8zgwb-7417" has []v1.FinalizerName{"kubernetes"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:02:16.598: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-5036" for this suite. 01/31/23 17:02:16.604
STEP: Destroying namespace "e2e-ns-8zgwb-7417" for this suite. 01/31/23 17:02:16.612
------------------------------
â€¢ [0.094 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:02:16.527
    Jan 31 17:02:16.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename namespaces 01/31/23 17:02:16.528
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:16.544
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:16.55
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply a finalizer to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:394
    STEP: Creating namespace "e2e-ns-8zgwb" 01/31/23 17:02:16.558
    Jan 31 17:02:16.575: INFO: Namespace "e2e-ns-8zgwb-7417" has []v1.FinalizerName{"kubernetes"}
    STEP: Adding e2e finalizer to namespace "e2e-ns-8zgwb-7417" 01/31/23 17:02:16.575
    Jan 31 17:02:16.588: INFO: Namespace "e2e-ns-8zgwb-7417" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
    STEP: Removing e2e finalizer from namespace "e2e-ns-8zgwb-7417" 01/31/23 17:02:16.588
    Jan 31 17:02:16.598: INFO: Namespace "e2e-ns-8zgwb-7417" has []v1.FinalizerName{"kubernetes"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:02:16.598: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-5036" for this suite. 01/31/23 17:02:16.604
    STEP: Destroying namespace "e2e-ns-8zgwb-7417" for this suite. 01/31/23 17:02:16.612
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:02:16.625
Jan 31 17:02:16.625: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 17:02:16.626
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:16.641
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:16.646
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
STEP: Creating a pod to test downward API volume plugin 01/31/23 17:02:16.653
Jan 31 17:02:16.707: INFO: Waiting up to 5m0s for pod "downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a" in namespace "downward-api-4954" to be "Succeeded or Failed"
Jan 31 17:02:16.723: INFO: Pod "downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a": Phase="Pending", Reason="", readiness=false. Elapsed: 16.284416ms
Jan 31 17:02:18.737: INFO: Pod "downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.029698398s
Jan 31 17:02:20.733: INFO: Pod "downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025860465s
STEP: Saw pod success 01/31/23 17:02:20.733
Jan 31 17:02:20.733: INFO: Pod "downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a" satisfied condition "Succeeded or Failed"
Jan 31 17:02:20.743: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a container client-container: <nil>
STEP: delete the pod 01/31/23 17:02:20.762
Jan 31 17:02:20.782: INFO: Waiting for pod downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a to disappear
Jan 31 17:02:20.790: INFO: Pod downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 17:02:20.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-4954" for this suite. 01/31/23 17:02:20.798
------------------------------
â€¢ [4.180 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:02:16.625
    Jan 31 17:02:16.625: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 17:02:16.626
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:16.641
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:16.646
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:261
    STEP: Creating a pod to test downward API volume plugin 01/31/23 17:02:16.653
    Jan 31 17:02:16.707: INFO: Waiting up to 5m0s for pod "downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a" in namespace "downward-api-4954" to be "Succeeded or Failed"
    Jan 31 17:02:16.723: INFO: Pod "downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a": Phase="Pending", Reason="", readiness=false. Elapsed: 16.284416ms
    Jan 31 17:02:18.737: INFO: Pod "downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.029698398s
    Jan 31 17:02:20.733: INFO: Pod "downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025860465s
    STEP: Saw pod success 01/31/23 17:02:20.733
    Jan 31 17:02:20.733: INFO: Pod "downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a" satisfied condition "Succeeded or Failed"
    Jan 31 17:02:20.743: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a container client-container: <nil>
    STEP: delete the pod 01/31/23 17:02:20.762
    Jan 31 17:02:20.782: INFO: Waiting for pod downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a to disappear
    Jan 31 17:02:20.790: INFO: Pod downwardapi-volume-10fbcf52-1165-490e-aba9-cbf446f2755a no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:02:20.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-4954" for this suite. 01/31/23 17:02:20.798
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:02:20.806
Jan 31 17:02:20.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename runtimeclass 01/31/23 17:02:20.807
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:20.825
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:20.832
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
Jan 31 17:02:20.856: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-5929 to be scheduled
Jan 31 17:02:20.860: INFO: 1 pods are not scheduled: [runtimeclass-5929/test-runtimeclass-runtimeclass-5929-preconfigured-handler-blccc(09ee2458-f4b2-4179-9034-9458d8f52864)]
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Jan 31 17:02:22.887: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-5929" for this suite. 01/31/23 17:02:22.893
------------------------------
â€¢ [2.096 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:02:20.806
    Jan 31 17:02:20.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename runtimeclass 01/31/23 17:02:20.807
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:20.825
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:20.832
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:129
    Jan 31 17:02:20.856: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-5929 to be scheduled
    Jan 31 17:02:20.860: INFO: 1 pods are not scheduled: [runtimeclass-5929/test-runtimeclass-runtimeclass-5929-preconfigured-handler-blccc(09ee2458-f4b2-4179-9034-9458d8f52864)]
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:02:22.887: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-5929" for this suite. 01/31/23 17:02:22.893
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:02:22.902
Jan 31 17:02:22.902: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-webhook 01/31/23 17:02:22.905
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:22.933
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:22.94
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 01/31/23 17:02:22.946
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 01/31/23 17:02:23.298
STEP: Deploying the custom resource conversion webhook pod 01/31/23 17:02:23.311
STEP: Wait for the deployment to be ready 01/31/23 17:02:23.33
Jan 31 17:02:23.346: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
Jan 31 17:02:25.374: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 2, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 2, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 2, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 2, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-74ff66dd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 17:02:27.384
STEP: Verifying the service has paired with the endpoint 01/31/23 17:02:27.466
Jan 31 17:02:28.467: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
Jan 31 17:02:28.477: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Creating a v1 custom resource 01/31/23 17:02:31.079
STEP: Create a v2 custom resource 01/31/23 17:02:31.1
STEP: List CRs in v1 01/31/23 17:02:31.137
STEP: List CRs in v2 01/31/23 17:02:31.147
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:02:31.681: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-5304" for this suite. 01/31/23 17:02:31.761
------------------------------
â€¢ [SLOW TEST] [8.874 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:02:22.902
    Jan 31 17:02:22.902: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-webhook 01/31/23 17:02:22.905
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:22.933
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:22.94
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 01/31/23 17:02:22.946
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 01/31/23 17:02:23.298
    STEP: Deploying the custom resource conversion webhook pod 01/31/23 17:02:23.311
    STEP: Wait for the deployment to be ready 01/31/23 17:02:23.33
    Jan 31 17:02:23.346: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
    Jan 31 17:02:25.374: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 2, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 2, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 2, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 2, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-74ff66dd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 17:02:27.384
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:02:27.466
    Jan 31 17:02:28.467: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert a non homogeneous list of CRs [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:184
    Jan 31 17:02:28.477: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Creating a v1 custom resource 01/31/23 17:02:31.079
    STEP: Create a v2 custom resource 01/31/23 17:02:31.1
    STEP: List CRs in v1 01/31/23 17:02:31.137
    STEP: List CRs in v2 01/31/23 17:02:31.147
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:02:31.681: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-5304" for this suite. 01/31/23 17:02:31.761
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:02:31.776
Jan 31 17:02:31.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename deployment 01/31/23 17:02:31.777
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:31.808
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:31.818
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
Jan 31 17:02:31.829: INFO: Creating deployment "webserver-deployment"
Jan 31 17:02:31.836: INFO: Waiting for observed generation 1
Jan 31 17:02:33.851: INFO: Waiting for all required pods to come up
Jan 31 17:02:33.866: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running 01/31/23 17:02:33.866
Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-dph96" in namespace "deployment-3541" to be "running"
Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-bwsjn" in namespace "deployment-3541" to be "running"
Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-rgbc4" in namespace "deployment-3541" to be "running"
Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-92j8r" in namespace "deployment-3541" to be "running"
Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-g4kcm" in namespace "deployment-3541" to be "running"
Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-sljlh" in namespace "deployment-3541" to be "running"
Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-wdk2r" in namespace "deployment-3541" to be "running"
Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-z4t2l" in namespace "deployment-3541" to be "running"
Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-qwwxt" in namespace "deployment-3541" to be "running"
Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-v258r" in namespace "deployment-3541" to be "running"
Jan 31 17:02:33.877: INFO: Pod "webserver-deployment-7f5969cbc7-rgbc4": Phase="Pending", Reason="", readiness=false. Elapsed: 10.406121ms
Jan 31 17:02:33.878: INFO: Pod "webserver-deployment-7f5969cbc7-g4kcm": Phase="Pending", Reason="", readiness=false. Elapsed: 11.938073ms
Jan 31 17:02:33.884: INFO: Pod "webserver-deployment-7f5969cbc7-92j8r": Phase="Pending", Reason="", readiness=false. Elapsed: 17.571052ms
Jan 31 17:02:33.887: INFO: Pod "webserver-deployment-7f5969cbc7-bwsjn": Phase="Pending", Reason="", readiness=false. Elapsed: 21.107333ms
Jan 31 17:02:33.892: INFO: Pod "webserver-deployment-7f5969cbc7-v258r": Phase="Pending", Reason="", readiness=false. Elapsed: 25.401186ms
Jan 31 17:02:33.895: INFO: Pod "webserver-deployment-7f5969cbc7-dph96": Phase="Pending", Reason="", readiness=false. Elapsed: 28.796502ms
Jan 31 17:02:33.895: INFO: Pod "webserver-deployment-7f5969cbc7-sljlh": Phase="Pending", Reason="", readiness=false. Elapsed: 28.808774ms
Jan 31 17:02:33.897: INFO: Pod "webserver-deployment-7f5969cbc7-wdk2r": Phase="Pending", Reason="", readiness=false. Elapsed: 30.902693ms
Jan 31 17:02:33.902: INFO: Pod "webserver-deployment-7f5969cbc7-qwwxt": Phase="Pending", Reason="", readiness=false. Elapsed: 36.009281ms
Jan 31 17:02:33.902: INFO: Pod "webserver-deployment-7f5969cbc7-z4t2l": Phase="Pending", Reason="", readiness=false. Elapsed: 36.102037ms
Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-g4kcm": Phase="Running", Reason="", readiness=true. Elapsed: 2.034928862s
Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-g4kcm" satisfied condition "running"
Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-bwsjn": Phase="Running", Reason="", readiness=true. Elapsed: 2.03511154s
Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-bwsjn" satisfied condition "running"
Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-92j8r": Phase="Running", Reason="", readiness=true. Elapsed: 2.035055714s
Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-92j8r" satisfied condition "running"
Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-rgbc4": Phase="Running", Reason="", readiness=true. Elapsed: 2.035367437s
Jan 31 17:02:35.902: INFO: Pod "webserver-deployment-7f5969cbc7-rgbc4" satisfied condition "running"
Jan 31 17:02:35.908: INFO: Pod "webserver-deployment-7f5969cbc7-v258r": Phase="Running", Reason="", readiness=true. Elapsed: 2.041399632s
Jan 31 17:02:35.908: INFO: Pod "webserver-deployment-7f5969cbc7-v258r" satisfied condition "running"
Jan 31 17:02:35.911: INFO: Pod "webserver-deployment-7f5969cbc7-wdk2r": Phase="Running", Reason="", readiness=true. Elapsed: 2.044314163s
Jan 31 17:02:35.911: INFO: Pod "webserver-deployment-7f5969cbc7-wdk2r" satisfied condition "running"
Jan 31 17:02:35.912: INFO: Pod "webserver-deployment-7f5969cbc7-sljlh": Phase="Running", Reason="", readiness=true. Elapsed: 2.046258099s
Jan 31 17:02:35.912: INFO: Pod "webserver-deployment-7f5969cbc7-sljlh" satisfied condition "running"
Jan 31 17:02:35.922: INFO: Pod "webserver-deployment-7f5969cbc7-dph96": Phase="Running", Reason="", readiness=true. Elapsed: 2.056160253s
Jan 31 17:02:35.922: INFO: Pod "webserver-deployment-7f5969cbc7-dph96" satisfied condition "running"
Jan 31 17:02:35.933: INFO: Pod "webserver-deployment-7f5969cbc7-qwwxt": Phase="Running", Reason="", readiness=true. Elapsed: 2.066412159s
Jan 31 17:02:35.933: INFO: Pod "webserver-deployment-7f5969cbc7-qwwxt" satisfied condition "running"
Jan 31 17:02:35.934: INFO: Pod "webserver-deployment-7f5969cbc7-z4t2l": Phase="Running", Reason="", readiness=true. Elapsed: 2.068201201s
Jan 31 17:02:35.934: INFO: Pod "webserver-deployment-7f5969cbc7-z4t2l" satisfied condition "running"
Jan 31 17:02:35.934: INFO: Waiting for deployment "webserver-deployment" to complete
Jan 31 17:02:35.943: INFO: Updating deployment "webserver-deployment" with a non-existent image
Jan 31 17:02:35.955: INFO: Updating deployment webserver-deployment
Jan 31 17:02:35.955: INFO: Waiting for observed generation 2
Jan 31 17:02:37.966: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Jan 31 17:02:37.971: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Jan 31 17:02:37.977: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jan 31 17:02:37.999: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Jan 31 17:02:37.999: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Jan 31 17:02:38.006: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jan 31 17:02:38.024: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Jan 31 17:02:38.024: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Jan 31 17:02:38.044: INFO: Updating deployment webserver-deployment
Jan 31 17:02:38.044: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Jan 31 17:02:38.059: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Jan 31 17:02:38.074: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 31 17:02:38.122: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-3541  3463dcdd-0c67-48cd-88de-68e63fcb4ed2 4350 3 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00474dbc8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-01-31 17:02:36 +0000 UTC,LastTransitionTime:2023-01-31 17:02:31 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-31 17:02:38 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Jan 31 17:02:38.152: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-3541  2ce9ed8e-b194-4014-995e-db7989f4d12c 4347 3 2023-01-31 17:02:35 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 3463dcdd-0c67-48cd-88de-68e63fcb4ed2 0xc0045fa0e7 0xc0045fa0e8}] [] [{k3s Update apps/v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status} {k3s Update apps/v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3463dcdd-0c67-48cd-88de-68e63fcb4ed2\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0045fa198 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 31 17:02:38.152: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Jan 31 17:02:38.152: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-3541  d7bf9a66-4ce0-4847-95b6-29d14e166e24 4345 3 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 3463dcdd-0c67-48cd-88de-68e63fcb4ed2 0xc00474dfe7 0xc00474dfe8}] [] [{k3s Update apps/v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {k3s Update apps/v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3463dcdd-0c67-48cd-88de-68e63fcb4ed2\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0045fa088 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Jan 31 17:02:38.272: INFO: Pod "webserver-deployment-7f5969cbc7-qwwxt" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-qwwxt webserver-deployment-7f5969cbc7- deployment-3541  f03a7484-1f54-493c-bb5c-136840268636 4242 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc0039b5bb0 0xc0039b5bb1}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.63\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-654hx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-654hx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.63,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://d0e6026b4c6e4674e5d613f127efe199c51e3ba9358015de2fb9a577f9f21d33,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.63,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.274: INFO: Pod "webserver-deployment-7f5969cbc7-rgbc4" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-rgbc4 webserver-deployment-7f5969cbc7- deployment-3541  c47f5b11-9e5c-447b-b963-1f136aaeaf10 4246 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc0039b5d80 0xc0039b5d81}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.64\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bq226,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bq226,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.64,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://a822102eb0584a2f78780500761c4426b905b0c143eab9fdb02a1d3e65a4f7c1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.64,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.276: INFO: Pod "webserver-deployment-7f5969cbc7-g4kcm" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-g4kcm webserver-deployment-7f5969cbc7- deployment-3541  0004ea76-ae6e-4204-be7e-7cb7ee8598f7 4249 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc0039b5f60 0xc0039b5f61}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.65\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-98rtg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-98rtg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.65,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://bc1eb03e5a096d047f7c24cd9f44ccc652403088f1c72ee368e84b94a715706c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.65,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.276: INFO: Pod "webserver-deployment-7f5969cbc7-bwsjn" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-bwsjn webserver-deployment-7f5969cbc7- deployment-3541  298aa9d4-25e5-476b-b6c1-c08af55134c1 4252 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe4140 0xc003fe4141}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.62\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zdr4g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zdr4g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.62,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://ef53f3dcd1fd7a656bed9a21709ed3e85c24d0af006b8284b7efc05abc863ac6,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.62,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.276: INFO: Pod "webserver-deployment-7f5969cbc7-z4t2l" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-z4t2l webserver-deployment-7f5969cbc7- deployment-3541  e37f80e2-c1ca-45c4-a88d-59ecf0ced940 4256 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe4310 0xc003fe4311}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.61\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kmqdd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kmqdd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:31 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.61,StartTime:2023-01-31 17:02:31 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:33 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://634ac95431beabfbb69d6336830244f79cb76544dd1666c73f327205d4d29988,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.61,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.276: INFO: Pod "webserver-deployment-7f5969cbc7-wdk2r" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-wdk2r webserver-deployment-7f5969cbc7- deployment-3541  0d2376e3-417c-43ab-a868-726af83a4c67 4260 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe44e0 0xc003fe44e1}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.92\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lzrwm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lzrwm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.92,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://1f8dd28c32fb7353ded25dc88f76f7acb30328ecbaba2203fb8ac0899059feb4,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.92,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.276: INFO: Pod "webserver-deployment-7f5969cbc7-sljlh" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-sljlh webserver-deployment-7f5969cbc7- deployment-3541  23760e05-bafc-4df1-8a4b-5441dc9eff9e 4269 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe46c0 0xc003fe46c1}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.88\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xsnhg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xsnhg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:31 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.88,StartTime:2023-01-31 17:02:31 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:33 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://23eb4e6b1c2501c793e375bffe011dd703a002ee249619189b72a68fe15a0293,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.88,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.277: INFO: Pod "webserver-deployment-7f5969cbc7-92j8r" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-92j8r webserver-deployment-7f5969cbc7- deployment-3541  acf4a23b-37bf-41ba-9054-5a51c7c8c939 4272 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe48a0 0xc003fe48a1}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.91\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-grzdf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-grzdf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.91,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://500f145296ed99cf9e4b1c6a43ea219c9d36aebf7b2ba3d6a8a3763a55608f37,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.91,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.277: INFO: Pod "webserver-deployment-d9f79cb5-fqbvk" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-fqbvk webserver-deployment-d9f79cb5- deployment-3541  225c2dec-a210-49be-9d82-9fa4f6c6e238 4314 0 2023-01-31 17:02:35 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe4a6f 0xc003fe4a80}] [] [{k3s Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2pvg5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2pvg5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:,StartTime:2023-01-31 17:02:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.278: INFO: Pod "webserver-deployment-d9f79cb5-rzs5h" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-rzs5h webserver-deployment-d9f79cb5- deployment-3541  99fc1010-47af-4ffb-94a1-e4aa8b40266e 4318 0 2023-01-31 17:02:35 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe4c4f 0xc003fe4c60}] [] [{k3s Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pl4cf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pl4cf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:,StartTime:2023-01-31 17:02:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.278: INFO: Pod "webserver-deployment-d9f79cb5-jtfq4" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-jtfq4 webserver-deployment-d9f79cb5- deployment-3541  7df3acd4-dfbb-4d69-8b41-2fa936b877e3 4322 0 2023-01-31 17:02:35 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe4e1f 0xc003fe4e30}] [] [{k3s Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gk2df,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gk2df,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:,StartTime:2023-01-31 17:02:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.278: INFO: Pod "webserver-deployment-d9f79cb5-49l8q" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-49l8q webserver-deployment-d9f79cb5- deployment-3541  d0539fce-3e08-4547-82a6-d97b3dd7df60 4326 0 2023-01-31 17:02:36 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe4fff 0xc003fe5010}] [] [{k3s Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6j8h9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6j8h9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:,StartTime:2023-01-31 17:02:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.278: INFO: Pod "webserver-deployment-d9f79cb5-xgr7f" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-xgr7f webserver-deployment-d9f79cb5- deployment-3541  056d7d8a-cd41-4af9-b1ef-71f66c80ba0d 4328 0 2023-01-31 17:02:36 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe51cf 0xc003fe51e0}] [] [{k3s Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kgc4r,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kgc4r,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:,StartTime:2023-01-31 17:02:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.279: INFO: Pod "webserver-deployment-7f5969cbc7-8spg8" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-8spg8 webserver-deployment-7f5969cbc7- deployment-3541  ba59f4e3-c5ba-4ef5-81c7-823a91f54b0f 4353 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe53c7 0xc003fe53c8}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5xwvr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5xwvr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.279: INFO: Pod "webserver-deployment-7f5969cbc7-2k485" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-2k485 webserver-deployment-7f5969cbc7- deployment-3541  f58b704c-7d26-43ac-a240-46d517a5345b 4357 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe5530 0xc003fe5531}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6wcpw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6wcpw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.279: INFO: Pod "webserver-deployment-d9f79cb5-m2zws" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-m2zws webserver-deployment-d9f79cb5- deployment-3541  26677c94-a1a4-40b2-9e4a-3f1d9322f577 4359 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe567f 0xc003fe5690}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vmzpl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vmzpl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.279: INFO: Pod "webserver-deployment-d9f79cb5-7p9rs" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-7p9rs webserver-deployment-d9f79cb5- deployment-3541  ebbf0d9b-c372-46d9-aa70-b05a94c2d6bf 4362 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe57ef 0xc003fe5800}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wb9tk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wb9tk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.280: INFO: Pod "webserver-deployment-d9f79cb5-s5nmp" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-s5nmp webserver-deployment-d9f79cb5- deployment-3541  ac2f15ae-c1d1-45da-8abc-ce68f63e65b1 4364 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe594f 0xc003fe5960}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-j9z5n,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-j9z5n,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.280: INFO: Pod "webserver-deployment-7f5969cbc7-2dfgp" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-2dfgp webserver-deployment-7f5969cbc7- deployment-3541  ef3d65a6-20ab-4930-8a89-177f4b4dd876 4371 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe5ad0 0xc003fe5ad1}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rrt5q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rrt5q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.280: INFO: Pod "webserver-deployment-d9f79cb5-tk7vn" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-tk7vn webserver-deployment-d9f79cb5- deployment-3541  b1381180-2948-412b-bcb8-d369b709e11e 4375 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe5c2f 0xc003fe5c40}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bwrj2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bwrj2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.280: INFO: Pod "webserver-deployment-7f5969cbc7-fr9hp" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-fr9hp webserver-deployment-7f5969cbc7- deployment-3541  42fc6a50-bd3c-4d3e-9aaf-c1de1b8db94f 4376 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe5d97 0xc003fe5d98}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dpgpr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dpgpr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-d9f79cb5-lrkbj" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-lrkbj webserver-deployment-d9f79cb5- deployment-3541  31ab3c23-5a61-4b61-aa56-1aec6ae69e99 4377 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe5eef 0xc003fe5f00}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dgtp5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dgtp5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-d9f79cb5-pgq72" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-pgq72 webserver-deployment-d9f79cb5- deployment-3541  a7584305-4ea2-4445-9cc3-e31cce7482f7 4379 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003eb606f 0xc003eb6080}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xjzwl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xjzwl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-7f5969cbc7-jsvx2" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-jsvx2 webserver-deployment-7f5969cbc7- deployment-3541  131a4cd5-bb22-4b8a-b990-0a0096f63bba 4380 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003eb62d7 0xc003eb62d8}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dwtxp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dwtxp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-7f5969cbc7-6hnbt" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-6hnbt webserver-deployment-7f5969cbc7- deployment-3541  ca8b5d92-01a6-40c8-b9ca-052adbe5c89a 4381 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003eb6977 0xc003eb6978}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6knjl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6knjl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-7f5969cbc7-blptf" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-blptf webserver-deployment-7f5969cbc7- deployment-3541  f7292ce3-2899-4d97-8fdf-5e5354bfb7c7 4382 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003eb6c40 0xc003eb6c41}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-r7dlj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-r7dlj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-d9f79cb5-bq76v" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-bq76v webserver-deployment-d9f79cb5- deployment-3541  0c29208d-6ab8-41e3-89ce-916866727a1b 4386 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003eb6fef 0xc003eb7000}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9krcg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9krcg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-d9f79cb5-vskpp" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-vskpp webserver-deployment-d9f79cb5- deployment-3541  8176df1c-f665-40b2-914e-73b4dc276174 4388 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003eb714f 0xc003eb7160}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jjfks,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jjfks,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:02:38.284: INFO: Pod "webserver-deployment-7f5969cbc7-wn87n" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-wn87n webserver-deployment-7f5969cbc7- deployment-3541  f03efb0d-f87b-4c91-be18-c6bb2652cdd0 4389 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003eb72a7 0xc003eb72a8}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gmctc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gmctc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 31 17:02:38.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-3541" for this suite. 01/31/23 17:02:38.315
------------------------------
â€¢ [SLOW TEST] [6.577 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:02:31.776
    Jan 31 17:02:31.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename deployment 01/31/23 17:02:31.777
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:31.808
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:31.818
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support proportional scaling [Conformance]
      test/e2e/apps/deployment.go:160
    Jan 31 17:02:31.829: INFO: Creating deployment "webserver-deployment"
    Jan 31 17:02:31.836: INFO: Waiting for observed generation 1
    Jan 31 17:02:33.851: INFO: Waiting for all required pods to come up
    Jan 31 17:02:33.866: INFO: Pod name httpd: Found 10 pods out of 10
    STEP: ensuring each pod is running 01/31/23 17:02:33.866
    Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-dph96" in namespace "deployment-3541" to be "running"
    Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-bwsjn" in namespace "deployment-3541" to be "running"
    Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-rgbc4" in namespace "deployment-3541" to be "running"
    Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-92j8r" in namespace "deployment-3541" to be "running"
    Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-g4kcm" in namespace "deployment-3541" to be "running"
    Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-sljlh" in namespace "deployment-3541" to be "running"
    Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-wdk2r" in namespace "deployment-3541" to be "running"
    Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-z4t2l" in namespace "deployment-3541" to be "running"
    Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-qwwxt" in namespace "deployment-3541" to be "running"
    Jan 31 17:02:33.866: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-v258r" in namespace "deployment-3541" to be "running"
    Jan 31 17:02:33.877: INFO: Pod "webserver-deployment-7f5969cbc7-rgbc4": Phase="Pending", Reason="", readiness=false. Elapsed: 10.406121ms
    Jan 31 17:02:33.878: INFO: Pod "webserver-deployment-7f5969cbc7-g4kcm": Phase="Pending", Reason="", readiness=false. Elapsed: 11.938073ms
    Jan 31 17:02:33.884: INFO: Pod "webserver-deployment-7f5969cbc7-92j8r": Phase="Pending", Reason="", readiness=false. Elapsed: 17.571052ms
    Jan 31 17:02:33.887: INFO: Pod "webserver-deployment-7f5969cbc7-bwsjn": Phase="Pending", Reason="", readiness=false. Elapsed: 21.107333ms
    Jan 31 17:02:33.892: INFO: Pod "webserver-deployment-7f5969cbc7-v258r": Phase="Pending", Reason="", readiness=false. Elapsed: 25.401186ms
    Jan 31 17:02:33.895: INFO: Pod "webserver-deployment-7f5969cbc7-dph96": Phase="Pending", Reason="", readiness=false. Elapsed: 28.796502ms
    Jan 31 17:02:33.895: INFO: Pod "webserver-deployment-7f5969cbc7-sljlh": Phase="Pending", Reason="", readiness=false. Elapsed: 28.808774ms
    Jan 31 17:02:33.897: INFO: Pod "webserver-deployment-7f5969cbc7-wdk2r": Phase="Pending", Reason="", readiness=false. Elapsed: 30.902693ms
    Jan 31 17:02:33.902: INFO: Pod "webserver-deployment-7f5969cbc7-qwwxt": Phase="Pending", Reason="", readiness=false. Elapsed: 36.009281ms
    Jan 31 17:02:33.902: INFO: Pod "webserver-deployment-7f5969cbc7-z4t2l": Phase="Pending", Reason="", readiness=false. Elapsed: 36.102037ms
    Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-g4kcm": Phase="Running", Reason="", readiness=true. Elapsed: 2.034928862s
    Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-g4kcm" satisfied condition "running"
    Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-bwsjn": Phase="Running", Reason="", readiness=true. Elapsed: 2.03511154s
    Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-bwsjn" satisfied condition "running"
    Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-92j8r": Phase="Running", Reason="", readiness=true. Elapsed: 2.035055714s
    Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-92j8r" satisfied condition "running"
    Jan 31 17:02:35.901: INFO: Pod "webserver-deployment-7f5969cbc7-rgbc4": Phase="Running", Reason="", readiness=true. Elapsed: 2.035367437s
    Jan 31 17:02:35.902: INFO: Pod "webserver-deployment-7f5969cbc7-rgbc4" satisfied condition "running"
    Jan 31 17:02:35.908: INFO: Pod "webserver-deployment-7f5969cbc7-v258r": Phase="Running", Reason="", readiness=true. Elapsed: 2.041399632s
    Jan 31 17:02:35.908: INFO: Pod "webserver-deployment-7f5969cbc7-v258r" satisfied condition "running"
    Jan 31 17:02:35.911: INFO: Pod "webserver-deployment-7f5969cbc7-wdk2r": Phase="Running", Reason="", readiness=true. Elapsed: 2.044314163s
    Jan 31 17:02:35.911: INFO: Pod "webserver-deployment-7f5969cbc7-wdk2r" satisfied condition "running"
    Jan 31 17:02:35.912: INFO: Pod "webserver-deployment-7f5969cbc7-sljlh": Phase="Running", Reason="", readiness=true. Elapsed: 2.046258099s
    Jan 31 17:02:35.912: INFO: Pod "webserver-deployment-7f5969cbc7-sljlh" satisfied condition "running"
    Jan 31 17:02:35.922: INFO: Pod "webserver-deployment-7f5969cbc7-dph96": Phase="Running", Reason="", readiness=true. Elapsed: 2.056160253s
    Jan 31 17:02:35.922: INFO: Pod "webserver-deployment-7f5969cbc7-dph96" satisfied condition "running"
    Jan 31 17:02:35.933: INFO: Pod "webserver-deployment-7f5969cbc7-qwwxt": Phase="Running", Reason="", readiness=true. Elapsed: 2.066412159s
    Jan 31 17:02:35.933: INFO: Pod "webserver-deployment-7f5969cbc7-qwwxt" satisfied condition "running"
    Jan 31 17:02:35.934: INFO: Pod "webserver-deployment-7f5969cbc7-z4t2l": Phase="Running", Reason="", readiness=true. Elapsed: 2.068201201s
    Jan 31 17:02:35.934: INFO: Pod "webserver-deployment-7f5969cbc7-z4t2l" satisfied condition "running"
    Jan 31 17:02:35.934: INFO: Waiting for deployment "webserver-deployment" to complete
    Jan 31 17:02:35.943: INFO: Updating deployment "webserver-deployment" with a non-existent image
    Jan 31 17:02:35.955: INFO: Updating deployment webserver-deployment
    Jan 31 17:02:35.955: INFO: Waiting for observed generation 2
    Jan 31 17:02:37.966: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
    Jan 31 17:02:37.971: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
    Jan 31 17:02:37.977: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Jan 31 17:02:37.999: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
    Jan 31 17:02:37.999: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
    Jan 31 17:02:38.006: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Jan 31 17:02:38.024: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
    Jan 31 17:02:38.024: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
    Jan 31 17:02:38.044: INFO: Updating deployment webserver-deployment
    Jan 31 17:02:38.044: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
    Jan 31 17:02:38.059: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
    Jan 31 17:02:38.074: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 31 17:02:38.122: INFO: Deployment "webserver-deployment":
    &Deployment{ObjectMeta:{webserver-deployment  deployment-3541  3463dcdd-0c67-48cd-88de-68e63fcb4ed2 4350 3 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00474dbc8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-01-31 17:02:36 +0000 UTC,LastTransitionTime:2023-01-31 17:02:31 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-31 17:02:38 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

    Jan 31 17:02:38.152: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
    &ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-3541  2ce9ed8e-b194-4014-995e-db7989f4d12c 4347 3 2023-01-31 17:02:35 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 3463dcdd-0c67-48cd-88de-68e63fcb4ed2 0xc0045fa0e7 0xc0045fa0e8}] [] [{k3s Update apps/v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status} {k3s Update apps/v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3463dcdd-0c67-48cd-88de-68e63fcb4ed2\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0045fa198 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 17:02:38.152: INFO: All old ReplicaSets of Deployment "webserver-deployment":
    Jan 31 17:02:38.152: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-3541  d7bf9a66-4ce0-4847-95b6-29d14e166e24 4345 3 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 3463dcdd-0c67-48cd-88de-68e63fcb4ed2 0xc00474dfe7 0xc00474dfe8}] [] [{k3s Update apps/v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {k3s Update apps/v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3463dcdd-0c67-48cd-88de-68e63fcb4ed2\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0045fa088 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 17:02:38.272: INFO: Pod "webserver-deployment-7f5969cbc7-qwwxt" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-qwwxt webserver-deployment-7f5969cbc7- deployment-3541  f03a7484-1f54-493c-bb5c-136840268636 4242 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc0039b5bb0 0xc0039b5bb1}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.63\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-654hx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-654hx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.63,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://d0e6026b4c6e4674e5d613f127efe199c51e3ba9358015de2fb9a577f9f21d33,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.63,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.274: INFO: Pod "webserver-deployment-7f5969cbc7-rgbc4" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-rgbc4 webserver-deployment-7f5969cbc7- deployment-3541  c47f5b11-9e5c-447b-b963-1f136aaeaf10 4246 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc0039b5d80 0xc0039b5d81}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.64\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bq226,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bq226,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.64,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://a822102eb0584a2f78780500761c4426b905b0c143eab9fdb02a1d3e65a4f7c1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.64,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.276: INFO: Pod "webserver-deployment-7f5969cbc7-g4kcm" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-g4kcm webserver-deployment-7f5969cbc7- deployment-3541  0004ea76-ae6e-4204-be7e-7cb7ee8598f7 4249 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc0039b5f60 0xc0039b5f61}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.65\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-98rtg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-98rtg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.65,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://bc1eb03e5a096d047f7c24cd9f44ccc652403088f1c72ee368e84b94a715706c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.65,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.276: INFO: Pod "webserver-deployment-7f5969cbc7-bwsjn" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-bwsjn webserver-deployment-7f5969cbc7- deployment-3541  298aa9d4-25e5-476b-b6c1-c08af55134c1 4252 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe4140 0xc003fe4141}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.62\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zdr4g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zdr4g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.62,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://ef53f3dcd1fd7a656bed9a21709ed3e85c24d0af006b8284b7efc05abc863ac6,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.62,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.276: INFO: Pod "webserver-deployment-7f5969cbc7-z4t2l" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-z4t2l webserver-deployment-7f5969cbc7- deployment-3541  e37f80e2-c1ca-45c4-a88d-59ecf0ced940 4256 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe4310 0xc003fe4311}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.61\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kmqdd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kmqdd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:31 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.61,StartTime:2023-01-31 17:02:31 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:33 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://634ac95431beabfbb69d6336830244f79cb76544dd1666c73f327205d4d29988,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.61,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.276: INFO: Pod "webserver-deployment-7f5969cbc7-wdk2r" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-wdk2r webserver-deployment-7f5969cbc7- deployment-3541  0d2376e3-417c-43ab-a868-726af83a4c67 4260 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe44e0 0xc003fe44e1}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.92\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lzrwm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lzrwm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.92,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://1f8dd28c32fb7353ded25dc88f76f7acb30328ecbaba2203fb8ac0899059feb4,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.92,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.276: INFO: Pod "webserver-deployment-7f5969cbc7-sljlh" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-sljlh webserver-deployment-7f5969cbc7- deployment-3541  23760e05-bafc-4df1-8a4b-5441dc9eff9e 4269 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe46c0 0xc003fe46c1}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.88\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xsnhg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xsnhg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:31 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.88,StartTime:2023-01-31 17:02:31 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:33 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://23eb4e6b1c2501c793e375bffe011dd703a002ee249619189b72a68fe15a0293,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.88,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.277: INFO: Pod "webserver-deployment-7f5969cbc7-92j8r" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-92j8r webserver-deployment-7f5969cbc7- deployment-3541  acf4a23b-37bf-41ba-9054-5a51c7c8c939 4272 0 2023-01-31 17:02:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe48a0 0xc003fe48a1}] [] [{k3s Update v1 2023-01-31 17:02:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.91\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-grzdf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-grzdf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.91,StartTime:2023-01-31 17:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:02:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://500f145296ed99cf9e4b1c6a43ea219c9d36aebf7b2ba3d6a8a3763a55608f37,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.91,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.277: INFO: Pod "webserver-deployment-d9f79cb5-fqbvk" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-fqbvk webserver-deployment-d9f79cb5- deployment-3541  225c2dec-a210-49be-9d82-9fa4f6c6e238 4314 0 2023-01-31 17:02:35 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe4a6f 0xc003fe4a80}] [] [{k3s Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2pvg5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2pvg5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:,StartTime:2023-01-31 17:02:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.278: INFO: Pod "webserver-deployment-d9f79cb5-rzs5h" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-rzs5h webserver-deployment-d9f79cb5- deployment-3541  99fc1010-47af-4ffb-94a1-e4aa8b40266e 4318 0 2023-01-31 17:02:35 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe4c4f 0xc003fe4c60}] [] [{k3s Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pl4cf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pl4cf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:,StartTime:2023-01-31 17:02:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.278: INFO: Pod "webserver-deployment-d9f79cb5-jtfq4" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-jtfq4 webserver-deployment-d9f79cb5- deployment-3541  7df3acd4-dfbb-4d69-8b41-2fa936b877e3 4322 0 2023-01-31 17:02:35 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe4e1f 0xc003fe4e30}] [] [{k3s Update v1 2023-01-31 17:02:35 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gk2df,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gk2df,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:,StartTime:2023-01-31 17:02:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.278: INFO: Pod "webserver-deployment-d9f79cb5-49l8q" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-49l8q webserver-deployment-d9f79cb5- deployment-3541  d0539fce-3e08-4547-82a6-d97b3dd7df60 4326 0 2023-01-31 17:02:36 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe4fff 0xc003fe5010}] [] [{k3s Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6j8h9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6j8h9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:,StartTime:2023-01-31 17:02:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.278: INFO: Pod "webserver-deployment-d9f79cb5-xgr7f" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-xgr7f webserver-deployment-d9f79cb5- deployment-3541  056d7d8a-cd41-4af9-b1ef-71f66c80ba0d 4328 0 2023-01-31 17:02:36 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe51cf 0xc003fe51e0}] [] [{k3s Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:02:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kgc4r,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kgc4r,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:,StartTime:2023-01-31 17:02:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.279: INFO: Pod "webserver-deployment-7f5969cbc7-8spg8" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-8spg8 webserver-deployment-7f5969cbc7- deployment-3541  ba59f4e3-c5ba-4ef5-81c7-823a91f54b0f 4353 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe53c7 0xc003fe53c8}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5xwvr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5xwvr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.279: INFO: Pod "webserver-deployment-7f5969cbc7-2k485" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-2k485 webserver-deployment-7f5969cbc7- deployment-3541  f58b704c-7d26-43ac-a240-46d517a5345b 4357 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe5530 0xc003fe5531}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6wcpw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6wcpw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.279: INFO: Pod "webserver-deployment-d9f79cb5-m2zws" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-m2zws webserver-deployment-d9f79cb5- deployment-3541  26677c94-a1a4-40b2-9e4a-3f1d9322f577 4359 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe567f 0xc003fe5690}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vmzpl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vmzpl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.279: INFO: Pod "webserver-deployment-d9f79cb5-7p9rs" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-7p9rs webserver-deployment-d9f79cb5- deployment-3541  ebbf0d9b-c372-46d9-aa70-b05a94c2d6bf 4362 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe57ef 0xc003fe5800}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wb9tk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wb9tk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.280: INFO: Pod "webserver-deployment-d9f79cb5-s5nmp" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-s5nmp webserver-deployment-d9f79cb5- deployment-3541  ac2f15ae-c1d1-45da-8abc-ce68f63e65b1 4364 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe594f 0xc003fe5960}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-j9z5n,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-j9z5n,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.280: INFO: Pod "webserver-deployment-7f5969cbc7-2dfgp" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-2dfgp webserver-deployment-7f5969cbc7- deployment-3541  ef3d65a6-20ab-4930-8a89-177f4b4dd876 4371 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe5ad0 0xc003fe5ad1}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rrt5q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rrt5q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.280: INFO: Pod "webserver-deployment-d9f79cb5-tk7vn" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-tk7vn webserver-deployment-d9f79cb5- deployment-3541  b1381180-2948-412b-bcb8-d369b709e11e 4375 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe5c2f 0xc003fe5c40}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bwrj2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bwrj2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.280: INFO: Pod "webserver-deployment-7f5969cbc7-fr9hp" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-fr9hp webserver-deployment-7f5969cbc7- deployment-3541  42fc6a50-bd3c-4d3e-9aaf-c1de1b8db94f 4376 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003fe5d97 0xc003fe5d98}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dpgpr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dpgpr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-d9f79cb5-lrkbj" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-lrkbj webserver-deployment-d9f79cb5- deployment-3541  31ab3c23-5a61-4b61-aa56-1aec6ae69e99 4377 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003fe5eef 0xc003fe5f00}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dgtp5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dgtp5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-d9f79cb5-pgq72" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-pgq72 webserver-deployment-d9f79cb5- deployment-3541  a7584305-4ea2-4445-9cc3-e31cce7482f7 4379 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003eb606f 0xc003eb6080}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xjzwl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xjzwl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-7f5969cbc7-jsvx2" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-jsvx2 webserver-deployment-7f5969cbc7- deployment-3541  131a4cd5-bb22-4b8a-b990-0a0096f63bba 4380 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003eb62d7 0xc003eb62d8}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dwtxp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dwtxp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-7f5969cbc7-6hnbt" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-6hnbt webserver-deployment-7f5969cbc7- deployment-3541  ca8b5d92-01a6-40c8-b9ca-052adbe5c89a 4381 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003eb6977 0xc003eb6978}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6knjl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6knjl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-7f5969cbc7-blptf" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-blptf webserver-deployment-7f5969cbc7- deployment-3541  f7292ce3-2899-4d97-8fdf-5e5354bfb7c7 4382 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003eb6c40 0xc003eb6c41}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-r7dlj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-r7dlj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-d9f79cb5-bq76v" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-bq76v webserver-deployment-d9f79cb5- deployment-3541  0c29208d-6ab8-41e3-89ce-916866727a1b 4386 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003eb6fef 0xc003eb7000}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9krcg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9krcg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:02:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.281: INFO: Pod "webserver-deployment-d9f79cb5-vskpp" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-vskpp webserver-deployment-d9f79cb5- deployment-3541  8176df1c-f665-40b2-914e-73b4dc276174 4388 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ce9ed8e-b194-4014-995e-db7989f4d12c 0xc003eb714f 0xc003eb7160}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ce9ed8e-b194-4014-995e-db7989f4d12c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jjfks,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jjfks,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:02:38.284: INFO: Pod "webserver-deployment-7f5969cbc7-wn87n" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-wn87n webserver-deployment-7f5969cbc7- deployment-3541  f03efb0d-f87b-4c91-be18-c6bb2652cdd0 4389 0 2023-01-31 17:02:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 d7bf9a66-4ce0-4847-95b6-29d14e166e24 0xc003eb72a7 0xc003eb72a8}] [] [{k3s Update v1 2023-01-31 17:02:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7bf9a66-4ce0-4847-95b6-29d14e166e24\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gmctc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gmctc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:02:38.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-3541" for this suite. 01/31/23 17:02:38.315
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:02:38.362
Jan 31 17:02:38.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:02:38.363
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:38.432
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:38.447
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
STEP: Creating a pod to test downward API volume plugin 01/31/23 17:02:38.463
Jan 31 17:02:38.481: INFO: Waiting up to 5m0s for pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe" in namespace "projected-9390" to be "Succeeded or Failed"
Jan 31 17:02:38.492: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe": Phase="Pending", Reason="", readiness=false. Elapsed: 10.988539ms
Jan 31 17:02:40.505: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023845745s
Jan 31 17:02:42.505: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023669624s
Jan 31 17:02:44.507: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe": Phase="Pending", Reason="", readiness=false. Elapsed: 6.025231608s
Jan 31 17:02:46.502: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.020819276s
STEP: Saw pod success 01/31/23 17:02:46.502
Jan 31 17:02:46.502: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe" satisfied condition "Succeeded or Failed"
Jan 31 17:02:46.513: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe container client-container: <nil>
STEP: delete the pod 01/31/23 17:02:46.537
Jan 31 17:02:46.550: INFO: Waiting for pod downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe to disappear
Jan 31 17:02:46.558: INFO: Pod downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 17:02:46.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9390" for this suite. 01/31/23 17:02:46.565
------------------------------
â€¢ [SLOW TEST] [8.212 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:02:38.362
    Jan 31 17:02:38.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:02:38.363
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:38.432
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:38.447
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:235
    STEP: Creating a pod to test downward API volume plugin 01/31/23 17:02:38.463
    Jan 31 17:02:38.481: INFO: Waiting up to 5m0s for pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe" in namespace "projected-9390" to be "Succeeded or Failed"
    Jan 31 17:02:38.492: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe": Phase="Pending", Reason="", readiness=false. Elapsed: 10.988539ms
    Jan 31 17:02:40.505: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023845745s
    Jan 31 17:02:42.505: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023669624s
    Jan 31 17:02:44.507: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe": Phase="Pending", Reason="", readiness=false. Elapsed: 6.025231608s
    Jan 31 17:02:46.502: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.020819276s
    STEP: Saw pod success 01/31/23 17:02:46.502
    Jan 31 17:02:46.502: INFO: Pod "downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe" satisfied condition "Succeeded or Failed"
    Jan 31 17:02:46.513: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe container client-container: <nil>
    STEP: delete the pod 01/31/23 17:02:46.537
    Jan 31 17:02:46.550: INFO: Waiting for pod downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe to disappear
    Jan 31 17:02:46.558: INFO: Pod downwardapi-volume-614db9c2-70a1-4194-9df2-674c91750afe no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:02:46.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9390" for this suite. 01/31/23 17:02:46.565
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:02:46.574
Jan 31 17:02:46.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename dns 01/31/23 17:02:46.575
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:46.597
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:46.605
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
STEP: Creating a test headless service 01/31/23 17:02:46.612
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1029.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1029.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
 01/31/23 17:02:46.636
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1029.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1029.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
 01/31/23 17:02:46.637
STEP: creating a pod to probe DNS 01/31/23 17:02:46.637
STEP: submitting the pod to kubernetes 01/31/23 17:02:46.637
Jan 31 17:02:46.668: INFO: Waiting up to 15m0s for pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0" in namespace "dns-1029" to be "running"
Jan 31 17:02:46.676: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.810177ms
Jan 31 17:02:48.688: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019997778s
Jan 31 17:02:50.687: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018583254s
Jan 31 17:02:52.686: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.018202985s
Jan 31 17:02:54.692: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 8.023949242s
Jan 31 17:02:56.686: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 10.018114264s
Jan 31 17:02:58.685: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 12.017215049s
Jan 31 17:03:00.682: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 14.013765656s
Jan 31 17:03:02.686: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 16.018208515s
Jan 31 17:03:04.688: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 18.0195707s
Jan 31 17:03:06.683: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 20.014490666s
Jan 31 17:03:08.683: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 22.015036279s
Jan 31 17:03:10.684: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 24.015572443s
Jan 31 17:03:12.686: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Running", Reason="", readiness=true. Elapsed: 26.018110071s
Jan 31 17:03:12.686: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0" satisfied condition "running"
STEP: retrieving the pod 01/31/23 17:03:12.686
STEP: looking for the results for each expected name from probers 01/31/23 17:03:12.695
Jan 31 17:03:12.734: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-1029/dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0: the server could not find the requested resource (get pods dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0)
Jan 31 17:03:12.734: INFO: Lookups using dns-1029/dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0 failed for: [jessie_hosts@dns-querier-2]

Jan 31 17:03:17.775: INFO: DNS probes using dns-1029/dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0 succeeded

STEP: deleting the pod 01/31/23 17:03:17.775
STEP: deleting the test headless service 01/31/23 17:03:17.794
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 31 17:03:17.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-1029" for this suite. 01/31/23 17:03:17.825
------------------------------
â€¢ [SLOW TEST] [31.267 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:02:46.574
    Jan 31 17:02:46.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename dns 01/31/23 17:02:46.575
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:02:46.597
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:02:46.605
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Hostname [Conformance]
      test/e2e/network/dns.go:248
    STEP: Creating a test headless service 01/31/23 17:02:46.612
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1029.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1029.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
     01/31/23 17:02:46.636
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1029.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1029.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
     01/31/23 17:02:46.637
    STEP: creating a pod to probe DNS 01/31/23 17:02:46.637
    STEP: submitting the pod to kubernetes 01/31/23 17:02:46.637
    Jan 31 17:02:46.668: INFO: Waiting up to 15m0s for pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0" in namespace "dns-1029" to be "running"
    Jan 31 17:02:46.676: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.810177ms
    Jan 31 17:02:48.688: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019997778s
    Jan 31 17:02:50.687: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018583254s
    Jan 31 17:02:52.686: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.018202985s
    Jan 31 17:02:54.692: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 8.023949242s
    Jan 31 17:02:56.686: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 10.018114264s
    Jan 31 17:02:58.685: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 12.017215049s
    Jan 31 17:03:00.682: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 14.013765656s
    Jan 31 17:03:02.686: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 16.018208515s
    Jan 31 17:03:04.688: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 18.0195707s
    Jan 31 17:03:06.683: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 20.014490666s
    Jan 31 17:03:08.683: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 22.015036279s
    Jan 31 17:03:10.684: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Pending", Reason="", readiness=false. Elapsed: 24.015572443s
    Jan 31 17:03:12.686: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0": Phase="Running", Reason="", readiness=true. Elapsed: 26.018110071s
    Jan 31 17:03:12.686: INFO: Pod "dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0" satisfied condition "running"
    STEP: retrieving the pod 01/31/23 17:03:12.686
    STEP: looking for the results for each expected name from probers 01/31/23 17:03:12.695
    Jan 31 17:03:12.734: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-1029/dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0: the server could not find the requested resource (get pods dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0)
    Jan 31 17:03:12.734: INFO: Lookups using dns-1029/dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0 failed for: [jessie_hosts@dns-querier-2]

    Jan 31 17:03:17.775: INFO: DNS probes using dns-1029/dns-test-53b327e7-4632-49d6-bd14-d80a94e659d0 succeeded

    STEP: deleting the pod 01/31/23 17:03:17.775
    STEP: deleting the test headless service 01/31/23 17:03:17.794
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:03:17.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-1029" for this suite. 01/31/23 17:03:17.825
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:03:17.843
Jan 31 17:03:17.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename watch 01/31/23 17:03:17.848
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:17.875
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:17.884
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
STEP: creating a watch on configmaps 01/31/23 17:03:17.892
STEP: creating a new configmap 01/31/23 17:03:17.898
STEP: modifying the configmap once 01/31/23 17:03:17.904
STEP: closing the watch once it receives two notifications 01/31/23 17:03:17.915
Jan 31 17:03:17.915: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3531  dcb63f5f-cc58-4b79-9bac-be0f2e990485 4767 0 2023-01-31 17:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-31 17:03:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:03:17.915: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3531  dcb63f5f-cc58-4b79-9bac-be0f2e990485 4768 0 2023-01-31 17:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-31 17:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed 01/31/23 17:03:17.915
STEP: creating a new watch on configmaps from the last resource version observed by the first watch 01/31/23 17:03:17.926
STEP: deleting the configmap 01/31/23 17:03:17.929
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 01/31/23 17:03:17.936
Jan 31 17:03:17.936: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3531  dcb63f5f-cc58-4b79-9bac-be0f2e990485 4769 0 2023-01-31 17:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-31 17:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:03:17.937: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3531  dcb63f5f-cc58-4b79-9bac-be0f2e990485 4770 0 2023-01-31 17:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-31 17:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Jan 31 17:03:17.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-3531" for this suite. 01/31/23 17:03:17.943
------------------------------
â€¢ [0.108 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:03:17.843
    Jan 31 17:03:17.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename watch 01/31/23 17:03:17.848
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:17.875
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:17.884
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
      test/e2e/apimachinery/watch.go:191
    STEP: creating a watch on configmaps 01/31/23 17:03:17.892
    STEP: creating a new configmap 01/31/23 17:03:17.898
    STEP: modifying the configmap once 01/31/23 17:03:17.904
    STEP: closing the watch once it receives two notifications 01/31/23 17:03:17.915
    Jan 31 17:03:17.915: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3531  dcb63f5f-cc58-4b79-9bac-be0f2e990485 4767 0 2023-01-31 17:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-31 17:03:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:03:17.915: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3531  dcb63f5f-cc58-4b79-9bac-be0f2e990485 4768 0 2023-01-31 17:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-31 17:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time, while the watch is closed 01/31/23 17:03:17.915
    STEP: creating a new watch on configmaps from the last resource version observed by the first watch 01/31/23 17:03:17.926
    STEP: deleting the configmap 01/31/23 17:03:17.929
    STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 01/31/23 17:03:17.936
    Jan 31 17:03:17.936: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3531  dcb63f5f-cc58-4b79-9bac-be0f2e990485 4769 0 2023-01-31 17:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-31 17:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:03:17.937: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3531  dcb63f5f-cc58-4b79-9bac-be0f2e990485 4770 0 2023-01-31 17:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-31 17:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:03:17.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-3531" for this suite. 01/31/23 17:03:17.943
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:03:17.954
Jan 31 17:03:17.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename runtimeclass 01/31/23 17:03:17.955
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:17.971
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:17.978
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
STEP: Deleting RuntimeClass runtimeclass-1626-delete-me 01/31/23 17:03:17.99
STEP: Waiting for the RuntimeClass to disappear 01/31/23 17:03:17.997
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Jan 31 17:03:18.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-1626" for this suite. 01/31/23 17:03:18.016
------------------------------
â€¢ [0.071 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:03:17.954
    Jan 31 17:03:17.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename runtimeclass 01/31/23 17:03:17.955
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:17.971
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:17.978
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:156
    STEP: Deleting RuntimeClass runtimeclass-1626-delete-me 01/31/23 17:03:17.99
    STEP: Waiting for the RuntimeClass to disappear 01/31/23 17:03:17.997
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:03:18.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-1626" for this suite. 01/31/23 17:03:18.016
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:03:18.026
Jan 31 17:03:18.026: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 17:03:18.027
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:18.053
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:18.059
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 17:03:18.081
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:03:18.696
STEP: Deploying the webhook pod 01/31/23 17:03:18.71
STEP: Wait for the deployment to be ready 01/31/23 17:03:18.73
Jan 31 17:03:18.744: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/31/23 17:03:20.775
STEP: Verifying the service has paired with the endpoint 01/31/23 17:03:20.841
Jan 31 17:03:21.841: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
Jan 31 17:03:21.846: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-803-crds.webhook.example.com via the AdmissionRegistration API 01/31/23 17:03:22.367
STEP: Creating a custom resource while v1 is storage version 01/31/23 17:03:22.423
STEP: Patching Custom Resource Definition to set v2 as storage 01/31/23 17:03:24.509
STEP: Patching the custom resource while v2 is storage version 01/31/23 17:03:24.548
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:03:25.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-2413" for this suite. 01/31/23 17:03:25.225
STEP: Destroying namespace "webhook-2413-markers" for this suite. 01/31/23 17:03:25.237
------------------------------
â€¢ [SLOW TEST] [7.225 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:03:18.026
    Jan 31 17:03:18.026: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 17:03:18.027
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:18.053
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:18.059
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 17:03:18.081
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:03:18.696
    STEP: Deploying the webhook pod 01/31/23 17:03:18.71
    STEP: Wait for the deployment to be ready 01/31/23 17:03:18.73
    Jan 31 17:03:18.744: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/31/23 17:03:20.775
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:03:20.841
    Jan 31 17:03:21.841: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with different stored version [Conformance]
      test/e2e/apimachinery/webhook.go:323
    Jan 31 17:03:21.846: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-803-crds.webhook.example.com via the AdmissionRegistration API 01/31/23 17:03:22.367
    STEP: Creating a custom resource while v1 is storage version 01/31/23 17:03:22.423
    STEP: Patching Custom Resource Definition to set v2 as storage 01/31/23 17:03:24.509
    STEP: Patching the custom resource while v2 is storage version 01/31/23 17:03:24.548
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:03:25.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-2413" for this suite. 01/31/23 17:03:25.225
    STEP: Destroying namespace "webhook-2413-markers" for this suite. 01/31/23 17:03:25.237
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:03:25.251
Jan 31 17:03:25.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename subpath 01/31/23 17:03:25.252
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:25.287
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:25.297
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 01/31/23 17:03:25.306
[It] should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
STEP: Creating pod pod-subpath-test-downwardapi-cqnp 01/31/23 17:03:25.321
STEP: Creating a pod to test atomic-volume-subpath 01/31/23 17:03:25.321
Jan 31 17:03:25.332: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-cqnp" in namespace "subpath-332" to be "Succeeded or Failed"
Jan 31 17:03:25.339: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Pending", Reason="", readiness=false. Elapsed: 6.957847ms
Jan 31 17:03:27.348: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 2.01679482s
Jan 31 17:03:29.349: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 4.017116296s
Jan 31 17:03:31.349: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 6.017385482s
Jan 31 17:03:33.347: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 8.015602296s
Jan 31 17:03:35.351: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 10.019696314s
Jan 31 17:03:37.351: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 12.019586098s
Jan 31 17:03:39.349: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 14.017914226s
Jan 31 17:03:41.354: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 16.022680781s
Jan 31 17:03:43.350: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 18.018069449s
Jan 31 17:03:45.348: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 20.016507034s
Jan 31 17:03:47.351: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 22.01941105s
Jan 31 17:03:49.348: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=false. Elapsed: 24.016496094s
Jan 31 17:03:51.349: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.016944072s
STEP: Saw pod success 01/31/23 17:03:51.349
Jan 31 17:03:51.349: INFO: Pod "pod-subpath-test-downwardapi-cqnp" satisfied condition "Succeeded or Failed"
Jan 31 17:03:51.358: INFO: Trying to get logs from node 26-m02 pod pod-subpath-test-downwardapi-cqnp container test-container-subpath-downwardapi-cqnp: <nil>
STEP: delete the pod 01/31/23 17:03:51.378
Jan 31 17:03:51.449: INFO: Waiting for pod pod-subpath-test-downwardapi-cqnp to disappear
Jan 31 17:03:51.462: INFO: Pod pod-subpath-test-downwardapi-cqnp no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-cqnp 01/31/23 17:03:51.462
Jan 31 17:03:51.463: INFO: Deleting pod "pod-subpath-test-downwardapi-cqnp" in namespace "subpath-332"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Jan 31 17:03:51.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-332" for this suite. 01/31/23 17:03:51.476
------------------------------
â€¢ [SLOW TEST] [26.234 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/storage/subpath.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:03:25.251
    Jan 31 17:03:25.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename subpath 01/31/23 17:03:25.252
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:25.287
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:25.297
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 01/31/23 17:03:25.306
    [It] should support subpaths with downward pod [Conformance]
      test/e2e/storage/subpath.go:92
    STEP: Creating pod pod-subpath-test-downwardapi-cqnp 01/31/23 17:03:25.321
    STEP: Creating a pod to test atomic-volume-subpath 01/31/23 17:03:25.321
    Jan 31 17:03:25.332: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-cqnp" in namespace "subpath-332" to be "Succeeded or Failed"
    Jan 31 17:03:25.339: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Pending", Reason="", readiness=false. Elapsed: 6.957847ms
    Jan 31 17:03:27.348: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 2.01679482s
    Jan 31 17:03:29.349: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 4.017116296s
    Jan 31 17:03:31.349: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 6.017385482s
    Jan 31 17:03:33.347: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 8.015602296s
    Jan 31 17:03:35.351: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 10.019696314s
    Jan 31 17:03:37.351: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 12.019586098s
    Jan 31 17:03:39.349: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 14.017914226s
    Jan 31 17:03:41.354: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 16.022680781s
    Jan 31 17:03:43.350: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 18.018069449s
    Jan 31 17:03:45.348: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 20.016507034s
    Jan 31 17:03:47.351: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=true. Elapsed: 22.01941105s
    Jan 31 17:03:49.348: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Running", Reason="", readiness=false. Elapsed: 24.016496094s
    Jan 31 17:03:51.349: INFO: Pod "pod-subpath-test-downwardapi-cqnp": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.016944072s
    STEP: Saw pod success 01/31/23 17:03:51.349
    Jan 31 17:03:51.349: INFO: Pod "pod-subpath-test-downwardapi-cqnp" satisfied condition "Succeeded or Failed"
    Jan 31 17:03:51.358: INFO: Trying to get logs from node 26-m02 pod pod-subpath-test-downwardapi-cqnp container test-container-subpath-downwardapi-cqnp: <nil>
    STEP: delete the pod 01/31/23 17:03:51.378
    Jan 31 17:03:51.449: INFO: Waiting for pod pod-subpath-test-downwardapi-cqnp to disappear
    Jan 31 17:03:51.462: INFO: Pod pod-subpath-test-downwardapi-cqnp no longer exists
    STEP: Deleting pod pod-subpath-test-downwardapi-cqnp 01/31/23 17:03:51.462
    Jan 31 17:03:51.463: INFO: Deleting pod "pod-subpath-test-downwardapi-cqnp" in namespace "subpath-332"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:03:51.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-332" for this suite. 01/31/23 17:03:51.476
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:03:51.486
Jan 31 17:03:51.486: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubelet-test 01/31/23 17:03:51.487
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:51.514
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:51.52
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Jan 31 17:03:51.547: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-71" for this suite. 01/31/23 17:03:51.553
------------------------------
â€¢ [0.075 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should be possible to delete [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:03:51.486
    Jan 31 17:03:51.486: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubelet-test 01/31/23 17:03:51.487
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:51.514
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:51.52
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should be possible to delete [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:135
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:03:51.547: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-71" for this suite. 01/31/23 17:03:51.553
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:03:51.563
Jan 31 17:03:51.563: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 17:03:51.564
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:51.588
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:51.596
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
STEP: Creating a ResourceQuota with terminating scope 01/31/23 17:03:51.604
STEP: Ensuring ResourceQuota status is calculated 01/31/23 17:03:51.609
STEP: Creating a ResourceQuota with not terminating scope 01/31/23 17:03:53.618
STEP: Ensuring ResourceQuota status is calculated 01/31/23 17:03:53.624
STEP: Creating a long running pod 01/31/23 17:03:55.636
STEP: Ensuring resource quota with not terminating scope captures the pod usage 01/31/23 17:03:55.66
STEP: Ensuring resource quota with terminating scope ignored the pod usage 01/31/23 17:03:57.671
STEP: Deleting the pod 01/31/23 17:03:59.684
STEP: Ensuring resource quota status released the pod usage 01/31/23 17:03:59.707
STEP: Creating a terminating pod 01/31/23 17:04:01.72
STEP: Ensuring resource quota with terminating scope captures the pod usage 01/31/23 17:04:01.736
STEP: Ensuring resource quota with not terminating scope ignored the pod usage 01/31/23 17:04:03.747
STEP: Deleting the pod 01/31/23 17:04:05.758
STEP: Ensuring resource quota status released the pod usage 01/31/23 17:04:05.783
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 17:04:07.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-8755" for this suite. 01/31/23 17:04:07.805
------------------------------
â€¢ [SLOW TEST] [16.257 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:03:51.563
    Jan 31 17:03:51.563: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 17:03:51.564
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:03:51.588
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:03:51.596
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with terminating scopes. [Conformance]
      test/e2e/apimachinery/resource_quota.go:690
    STEP: Creating a ResourceQuota with terminating scope 01/31/23 17:03:51.604
    STEP: Ensuring ResourceQuota status is calculated 01/31/23 17:03:51.609
    STEP: Creating a ResourceQuota with not terminating scope 01/31/23 17:03:53.618
    STEP: Ensuring ResourceQuota status is calculated 01/31/23 17:03:53.624
    STEP: Creating a long running pod 01/31/23 17:03:55.636
    STEP: Ensuring resource quota with not terminating scope captures the pod usage 01/31/23 17:03:55.66
    STEP: Ensuring resource quota with terminating scope ignored the pod usage 01/31/23 17:03:57.671
    STEP: Deleting the pod 01/31/23 17:03:59.684
    STEP: Ensuring resource quota status released the pod usage 01/31/23 17:03:59.707
    STEP: Creating a terminating pod 01/31/23 17:04:01.72
    STEP: Ensuring resource quota with terminating scope captures the pod usage 01/31/23 17:04:01.736
    STEP: Ensuring resource quota with not terminating scope ignored the pod usage 01/31/23 17:04:03.747
    STEP: Deleting the pod 01/31/23 17:04:05.758
    STEP: Ensuring resource quota status released the pod usage 01/31/23 17:04:05.783
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:04:07.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-8755" for this suite. 01/31/23 17:04:07.805
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose
  should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:04:07.821
Jan 31 17:04:07.822: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:04:07.824
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:07.847
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:07.853
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
STEP: creating Agnhost RC 01/31/23 17:04:07.861
Jan 31 17:04:07.861: INFO: namespace kubectl-722
Jan 31 17:04:07.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-722 create -f -'
Jan 31 17:04:08.819: INFO: stderr: ""
Jan 31 17:04:08.819: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 01/31/23 17:04:08.819
Jan 31 17:04:09.833: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 17:04:09.833: INFO: Found 0 / 1
Jan 31 17:04:10.834: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 17:04:10.834: INFO: Found 1 / 1
Jan 31 17:04:10.834: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jan 31 17:04:10.846: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 17:04:10.847: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 31 17:04:10.847: INFO: wait on agnhost-primary startup in kubectl-722 
Jan 31 17:04:10.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-722 logs agnhost-primary-4mmcx agnhost-primary'
Jan 31 17:04:10.990: INFO: stderr: ""
Jan 31 17:04:10.990: INFO: stdout: "Paused\n"
STEP: exposing RC 01/31/23 17:04:10.99
Jan 31 17:04:10.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-722 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Jan 31 17:04:11.131: INFO: stderr: ""
Jan 31 17:04:11.131: INFO: stdout: "service/rm2 exposed\n"
Jan 31 17:04:11.139: INFO: Service rm2 in namespace kubectl-722 found.
STEP: exposing service 01/31/23 17:04:13.157
Jan 31 17:04:13.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-722 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Jan 31 17:04:13.337: INFO: stderr: ""
Jan 31 17:04:13.338: INFO: stdout: "service/rm3 exposed\n"
Jan 31 17:04:13.344: INFO: Service rm3 in namespace kubectl-722 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:04:15.363: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-722" for this suite. 01/31/23 17:04:15.373
------------------------------
â€¢ [SLOW TEST] [7.566 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1409
    should create services for rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1415

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:04:07.821
    Jan 31 17:04:07.822: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:04:07.824
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:07.847
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:07.853
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create services for rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1415
    STEP: creating Agnhost RC 01/31/23 17:04:07.861
    Jan 31 17:04:07.861: INFO: namespace kubectl-722
    Jan 31 17:04:07.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-722 create -f -'
    Jan 31 17:04:08.819: INFO: stderr: ""
    Jan 31 17:04:08.819: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 01/31/23 17:04:08.819
    Jan 31 17:04:09.833: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 17:04:09.833: INFO: Found 0 / 1
    Jan 31 17:04:10.834: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 17:04:10.834: INFO: Found 1 / 1
    Jan 31 17:04:10.834: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Jan 31 17:04:10.846: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 17:04:10.847: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Jan 31 17:04:10.847: INFO: wait on agnhost-primary startup in kubectl-722 
    Jan 31 17:04:10.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-722 logs agnhost-primary-4mmcx agnhost-primary'
    Jan 31 17:04:10.990: INFO: stderr: ""
    Jan 31 17:04:10.990: INFO: stdout: "Paused\n"
    STEP: exposing RC 01/31/23 17:04:10.99
    Jan 31 17:04:10.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-722 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
    Jan 31 17:04:11.131: INFO: stderr: ""
    Jan 31 17:04:11.131: INFO: stdout: "service/rm2 exposed\n"
    Jan 31 17:04:11.139: INFO: Service rm2 in namespace kubectl-722 found.
    STEP: exposing service 01/31/23 17:04:13.157
    Jan 31 17:04:13.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-722 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
    Jan 31 17:04:13.337: INFO: stderr: ""
    Jan 31 17:04:13.338: INFO: stdout: "service/rm3 exposed\n"
    Jan 31 17:04:13.344: INFO: Service rm3 in namespace kubectl-722 found.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:04:15.363: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-722" for this suite. 01/31/23 17:04:15.373
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:04:15.387
Jan 31 17:04:15.387: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename svcaccounts 01/31/23 17:04:15.389
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:15.42
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:15.428
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
Jan 31 17:04:15.458: INFO: created pod pod-service-account-defaultsa
Jan 31 17:04:15.458: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Jan 31 17:04:15.476: INFO: created pod pod-service-account-mountsa
Jan 31 17:04:15.476: INFO: pod pod-service-account-mountsa service account token volume mount: true
Jan 31 17:04:15.494: INFO: created pod pod-service-account-nomountsa
Jan 31 17:04:15.494: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Jan 31 17:04:15.516: INFO: created pod pod-service-account-defaultsa-mountspec
Jan 31 17:04:15.516: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Jan 31 17:04:15.543: INFO: created pod pod-service-account-mountsa-mountspec
Jan 31 17:04:15.543: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Jan 31 17:04:15.558: INFO: created pod pod-service-account-nomountsa-mountspec
Jan 31 17:04:15.558: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Jan 31 17:04:15.581: INFO: created pod pod-service-account-defaultsa-nomountspec
Jan 31 17:04:15.581: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Jan 31 17:04:15.596: INFO: created pod pod-service-account-mountsa-nomountspec
Jan 31 17:04:15.596: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Jan 31 17:04:15.608: INFO: created pod pod-service-account-nomountsa-nomountspec
Jan 31 17:04:15.608: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 31 17:04:15.608: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-4685" for this suite. 01/31/23 17:04:15.621
------------------------------
â€¢ [0.248 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:04:15.387
    Jan 31 17:04:15.387: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename svcaccounts 01/31/23 17:04:15.389
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:15.42
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:15.428
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow opting out of API token automount  [Conformance]
      test/e2e/auth/service_accounts.go:161
    Jan 31 17:04:15.458: INFO: created pod pod-service-account-defaultsa
    Jan 31 17:04:15.458: INFO: pod pod-service-account-defaultsa service account token volume mount: true
    Jan 31 17:04:15.476: INFO: created pod pod-service-account-mountsa
    Jan 31 17:04:15.476: INFO: pod pod-service-account-mountsa service account token volume mount: true
    Jan 31 17:04:15.494: INFO: created pod pod-service-account-nomountsa
    Jan 31 17:04:15.494: INFO: pod pod-service-account-nomountsa service account token volume mount: false
    Jan 31 17:04:15.516: INFO: created pod pod-service-account-defaultsa-mountspec
    Jan 31 17:04:15.516: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
    Jan 31 17:04:15.543: INFO: created pod pod-service-account-mountsa-mountspec
    Jan 31 17:04:15.543: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
    Jan 31 17:04:15.558: INFO: created pod pod-service-account-nomountsa-mountspec
    Jan 31 17:04:15.558: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
    Jan 31 17:04:15.581: INFO: created pod pod-service-account-defaultsa-nomountspec
    Jan 31 17:04:15.581: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
    Jan 31 17:04:15.596: INFO: created pod pod-service-account-mountsa-nomountspec
    Jan 31 17:04:15.596: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
    Jan 31 17:04:15.608: INFO: created pod pod-service-account-nomountsa-nomountspec
    Jan 31 17:04:15.608: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:04:15.608: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-4685" for this suite. 01/31/23 17:04:15.621
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Projected configMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:04:15.635
Jan 31 17:04:15.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:04:15.64
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:15.672
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:15.681
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
STEP: Creating configMap with name cm-test-opt-del-e57b334e-97db-48d8-8f9e-b996af10d956 01/31/23 17:04:15.696
STEP: Creating configMap with name cm-test-opt-upd-128267ee-9b44-4c81-8676-c7bbd81f919d 01/31/23 17:04:15.705
STEP: Creating the pod 01/31/23 17:04:15.714
Jan 31 17:04:15.728: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6" in namespace "projected-4478" to be "running and ready"
Jan 31 17:04:15.736: INFO: Pod "pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6": Phase="Pending", Reason="", readiness=false. Elapsed: 8.721799ms
Jan 31 17:04:15.736: INFO: The phase of Pod pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:04:17.748: INFO: Pod "pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019899493s
Jan 31 17:04:17.748: INFO: The phase of Pod pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:04:19.745: INFO: Pod "pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6": Phase="Running", Reason="", readiness=true. Elapsed: 4.017567997s
Jan 31 17:04:19.745: INFO: The phase of Pod pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6 is Running (Ready = true)
Jan 31 17:04:19.745: INFO: Pod "pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-e57b334e-97db-48d8-8f9e-b996af10d956 01/31/23 17:04:19.798
STEP: Updating configmap cm-test-opt-upd-128267ee-9b44-4c81-8676-c7bbd81f919d 01/31/23 17:04:19.806
STEP: Creating configMap with name cm-test-opt-create-51569635-3e0d-4ebd-94c5-983953fbfd03 01/31/23 17:04:19.815
STEP: waiting to observe update in volume 01/31/23 17:04:19.826
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:04:23.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4478" for this suite. 01/31/23 17:04:23.93
------------------------------
â€¢ [SLOW TEST] [8.304 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:04:15.635
    Jan 31 17:04:15.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:04:15.64
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:15.672
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:15.681
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:174
    STEP: Creating configMap with name cm-test-opt-del-e57b334e-97db-48d8-8f9e-b996af10d956 01/31/23 17:04:15.696
    STEP: Creating configMap with name cm-test-opt-upd-128267ee-9b44-4c81-8676-c7bbd81f919d 01/31/23 17:04:15.705
    STEP: Creating the pod 01/31/23 17:04:15.714
    Jan 31 17:04:15.728: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6" in namespace "projected-4478" to be "running and ready"
    Jan 31 17:04:15.736: INFO: Pod "pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6": Phase="Pending", Reason="", readiness=false. Elapsed: 8.721799ms
    Jan 31 17:04:15.736: INFO: The phase of Pod pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:04:17.748: INFO: Pod "pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019899493s
    Jan 31 17:04:17.748: INFO: The phase of Pod pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:04:19.745: INFO: Pod "pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6": Phase="Running", Reason="", readiness=true. Elapsed: 4.017567997s
    Jan 31 17:04:19.745: INFO: The phase of Pod pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6 is Running (Ready = true)
    Jan 31 17:04:19.745: INFO: Pod "pod-projected-configmaps-4c727831-5084-4467-be0e-3d13b1715de6" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-e57b334e-97db-48d8-8f9e-b996af10d956 01/31/23 17:04:19.798
    STEP: Updating configmap cm-test-opt-upd-128267ee-9b44-4c81-8676-c7bbd81f919d 01/31/23 17:04:19.806
    STEP: Creating configMap with name cm-test-opt-create-51569635-3e0d-4ebd-94c5-983953fbfd03 01/31/23 17:04:19.815
    STEP: waiting to observe update in volume 01/31/23 17:04:19.826
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:04:23.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4478" for this suite. 01/31/23 17:04:23.93
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:04:23.94
Jan 31 17:04:23.940: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename daemonsets 01/31/23 17:04:23.941
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:23.965
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:23.972
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432
Jan 31 17:04:24.023: INFO: Create a RollingUpdate DaemonSet
Jan 31 17:04:24.030: INFO: Check that daemon pods launch on every node of the cluster
Jan 31 17:04:24.050: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:04:24.050: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 17:04:25.064: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:04:25.064: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 17:04:26.067: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 31 17:04:26.067: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
Jan 31 17:04:26.067: INFO: Update the DaemonSet to trigger a rollout
Jan 31 17:04:26.079: INFO: Updating DaemonSet daemon-set
Jan 31 17:04:29.118: INFO: Roll back the DaemonSet before rollout is complete
Jan 31 17:04:29.140: INFO: Updating DaemonSet daemon-set
Jan 31 17:04:29.140: INFO: Make sure DaemonSet rollback is complete
Jan 31 17:04:29.147: INFO: Wrong image for pod: daemon-set-5r2rx. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
Jan 31 17:04:29.147: INFO: Pod daemon-set-5r2rx is not available
Jan 31 17:04:33.162: INFO: Pod daemon-set-bq2hg is not available
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/31/23 17:04:33.183
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4634, will wait for the garbage collector to delete the pods 01/31/23 17:04:33.183
Jan 31 17:04:33.249: INFO: Deleting DaemonSet.extensions daemon-set took: 8.640905ms
Jan 31 17:04:33.350: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.962263ms
Jan 31 17:04:35.961: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:04:35.961: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 31 17:04:35.971: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5243"},"items":null}

Jan 31 17:04:35.983: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5243"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:04:36.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-4634" for this suite. 01/31/23 17:04:36.022
------------------------------
â€¢ [SLOW TEST] [12.092 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:04:23.94
    Jan 31 17:04:23.940: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename daemonsets 01/31/23 17:04:23.941
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:23.965
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:23.972
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should rollback without unnecessary restarts [Conformance]
      test/e2e/apps/daemon_set.go:432
    Jan 31 17:04:24.023: INFO: Create a RollingUpdate DaemonSet
    Jan 31 17:04:24.030: INFO: Check that daemon pods launch on every node of the cluster
    Jan 31 17:04:24.050: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:04:24.050: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 17:04:25.064: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:04:25.064: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 17:04:26.067: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 31 17:04:26.067: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    Jan 31 17:04:26.067: INFO: Update the DaemonSet to trigger a rollout
    Jan 31 17:04:26.079: INFO: Updating DaemonSet daemon-set
    Jan 31 17:04:29.118: INFO: Roll back the DaemonSet before rollout is complete
    Jan 31 17:04:29.140: INFO: Updating DaemonSet daemon-set
    Jan 31 17:04:29.140: INFO: Make sure DaemonSet rollback is complete
    Jan 31 17:04:29.147: INFO: Wrong image for pod: daemon-set-5r2rx. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
    Jan 31 17:04:29.147: INFO: Pod daemon-set-5r2rx is not available
    Jan 31 17:04:33.162: INFO: Pod daemon-set-bq2hg is not available
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/31/23 17:04:33.183
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4634, will wait for the garbage collector to delete the pods 01/31/23 17:04:33.183
    Jan 31 17:04:33.249: INFO: Deleting DaemonSet.extensions daemon-set took: 8.640905ms
    Jan 31 17:04:33.350: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.962263ms
    Jan 31 17:04:35.961: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:04:35.961: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 31 17:04:35.971: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5243"},"items":null}

    Jan 31 17:04:35.983: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5243"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:04:36.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-4634" for this suite. 01/31/23 17:04:36.022
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:04:36.033
Jan 31 17:04:36.033: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename job 01/31/23 17:04:36.034
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:36.052
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:36.06
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
STEP: Creating a job 01/31/23 17:04:36.066
STEP: Ensure pods equal to parallelism count is attached to the job 01/31/23 17:04:36.072
STEP: patching /status 01/31/23 17:04:38.079
STEP: updating /status 01/31/23 17:04:38.093
STEP: get /status 01/31/23 17:04:38.139
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 31 17:04:38.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-3084" for this suite. 01/31/23 17:04:38.151
------------------------------
â€¢ [2.127 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:04:36.033
    Jan 31 17:04:36.033: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename job 01/31/23 17:04:36.034
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:36.052
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:36.06
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a job status [Conformance]
      test/e2e/apps/job.go:636
    STEP: Creating a job 01/31/23 17:04:36.066
    STEP: Ensure pods equal to parallelism count is attached to the job 01/31/23 17:04:36.072
    STEP: patching /status 01/31/23 17:04:38.079
    STEP: updating /status 01/31/23 17:04:38.093
    STEP: get /status 01/31/23 17:04:38.139
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:04:38.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-3084" for this suite. 01/31/23 17:04:38.151
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:04:38.162
Jan 31 17:04:38.162: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename gc 01/31/23 17:04:38.163
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:38.18
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:38.187
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
Jan 31 17:04:38.238: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"39fed9f3-06ed-4058-8a11-f0e0d1fdfe24", Controller:(*bool)(0xc003fe4966), BlockOwnerDeletion:(*bool)(0xc003fe4967)}}
Jan 31 17:04:38.263: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"b9588c1b-f073-4085-8a62-7c45a6a386e1", Controller:(*bool)(0xc003fe4ba6), BlockOwnerDeletion:(*bool)(0xc003fe4ba7)}}
Jan 31 17:04:38.274: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"080f0b99-f3c1-409d-af65-a74d989627d6", Controller:(*bool)(0xc0045fb6b6), BlockOwnerDeletion:(*bool)(0xc0045fb6b7)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 31 17:04:43.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-4308" for this suite. 01/31/23 17:04:43.304
------------------------------
â€¢ [SLOW TEST] [5.150 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:04:38.162
    Jan 31 17:04:38.162: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename gc 01/31/23 17:04:38.163
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:38.18
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:38.187
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be blocked by dependency circle [Conformance]
      test/e2e/apimachinery/garbage_collector.go:849
    Jan 31 17:04:38.238: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"39fed9f3-06ed-4058-8a11-f0e0d1fdfe24", Controller:(*bool)(0xc003fe4966), BlockOwnerDeletion:(*bool)(0xc003fe4967)}}
    Jan 31 17:04:38.263: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"b9588c1b-f073-4085-8a62-7c45a6a386e1", Controller:(*bool)(0xc003fe4ba6), BlockOwnerDeletion:(*bool)(0xc003fe4ba7)}}
    Jan 31 17:04:38.274: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"080f0b99-f3c1-409d-af65-a74d989627d6", Controller:(*bool)(0xc0045fb6b6), BlockOwnerDeletion:(*bool)(0xc0045fb6b7)}}
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:04:43.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-4308" for this suite. 01/31/23 17:04:43.304
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:04:43.316
Jan 31 17:04:43.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename endpointslice 01/31/23 17:04:43.316
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:43.337
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:43.343
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Jan 31 17:04:45.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-3182" for this suite. 01/31/23 17:04:45.492
------------------------------
â€¢ [2.188 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:04:43.316
    Jan 31 17:04:43.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename endpointslice 01/31/23 17:04:43.316
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:43.337
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:43.343
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
      test/e2e/network/endpointslice.go:102
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:04:45.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-3182" for this suite. 01/31/23 17:04:45.492
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Probing container
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:04:45.504
Jan 31 17:04:45.504: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-probe 01/31/23 17:04:45.506
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:45.536
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:45.543
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
STEP: Creating pod liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 in namespace container-probe-4525 01/31/23 17:04:45.551
Jan 31 17:04:45.562: INFO: Waiting up to 5m0s for pod "liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0" in namespace "container-probe-4525" to be "not pending"
Jan 31 17:04:45.570: INFO: Pod "liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.595019ms
Jan 31 17:04:47.581: INFO: Pod "liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017870388s
Jan 31 17:04:49.581: INFO: Pod "liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0": Phase="Running", Reason="", readiness=true. Elapsed: 4.017804991s
Jan 31 17:04:49.581: INFO: Pod "liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0" satisfied condition "not pending"
Jan 31 17:04:49.581: INFO: Started pod liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 in namespace container-probe-4525
STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:04:49.581
Jan 31 17:04:49.588: INFO: Initial restart count of pod liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is 0
Jan 31 17:05:07.695: INFO: Restart count of pod container-probe-4525/liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is now 1 (18.106852113s elapsed)
Jan 31 17:05:27.809: INFO: Restart count of pod container-probe-4525/liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is now 2 (38.221245506s elapsed)
Jan 31 17:05:47.910: INFO: Restart count of pod container-probe-4525/liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is now 3 (58.322769683s elapsed)
Jan 31 17:06:08.027: INFO: Restart count of pod container-probe-4525/liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is now 4 (1m18.438873435s elapsed)
Jan 31 17:07:08.376: INFO: Restart count of pod container-probe-4525/liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is now 5 (2m18.787802041s elapsed)
STEP: deleting the pod 01/31/23 17:07:08.376
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 31 17:07:08.395: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-4525" for this suite. 01/31/23 17:07:08.404
------------------------------
â€¢ [SLOW TEST] [142.908 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:04:45.504
    Jan 31 17:04:45.504: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-probe 01/31/23 17:04:45.506
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:04:45.536
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:04:45.543
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should have monotonically increasing restart count [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:199
    STEP: Creating pod liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 in namespace container-probe-4525 01/31/23 17:04:45.551
    Jan 31 17:04:45.562: INFO: Waiting up to 5m0s for pod "liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0" in namespace "container-probe-4525" to be "not pending"
    Jan 31 17:04:45.570: INFO: Pod "liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.595019ms
    Jan 31 17:04:47.581: INFO: Pod "liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017870388s
    Jan 31 17:04:49.581: INFO: Pod "liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0": Phase="Running", Reason="", readiness=true. Elapsed: 4.017804991s
    Jan 31 17:04:49.581: INFO: Pod "liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0" satisfied condition "not pending"
    Jan 31 17:04:49.581: INFO: Started pod liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 in namespace container-probe-4525
    STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:04:49.581
    Jan 31 17:04:49.588: INFO: Initial restart count of pod liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is 0
    Jan 31 17:05:07.695: INFO: Restart count of pod container-probe-4525/liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is now 1 (18.106852113s elapsed)
    Jan 31 17:05:27.809: INFO: Restart count of pod container-probe-4525/liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is now 2 (38.221245506s elapsed)
    Jan 31 17:05:47.910: INFO: Restart count of pod container-probe-4525/liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is now 3 (58.322769683s elapsed)
    Jan 31 17:06:08.027: INFO: Restart count of pod container-probe-4525/liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is now 4 (1m18.438873435s elapsed)
    Jan 31 17:07:08.376: INFO: Restart count of pod container-probe-4525/liveness-b340cfd8-27e4-41a6-aad5-102b7804c1c0 is now 5 (2m18.787802041s elapsed)
    STEP: deleting the pod 01/31/23 17:07:08.376
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:07:08.395: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-4525" for this suite. 01/31/23 17:07:08.404
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:07:08.413
Jan 31 17:07:08.413: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:07:08.414
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:08.443
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:08.453
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 01/31/23 17:07:08.461
Jan 31 17:07:08.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:07:10.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:07:16.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-8066" for this suite. 01/31/23 17:07:16.007
------------------------------
â€¢ [SLOW TEST] [7.603 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:07:08.413
    Jan 31 17:07:08.413: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:07:08.414
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:08.443
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:08.453
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group and version but different kinds [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:357
    STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 01/31/23 17:07:08.461
    Jan 31 17:07:08.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:07:10.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:07:16.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-8066" for this suite. 01/31/23 17:07:16.007
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:07:16.016
Jan 31 17:07:16.016: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-lifecycle-hook 01/31/23 17:07:16.018
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:16.036
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:16.042
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 01/31/23 17:07:16.054
Jan 31 17:07:16.064: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-2785" to be "running and ready"
Jan 31 17:07:16.077: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 13.246741ms
Jan 31 17:07:16.077: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:07:18.088: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024102778s
Jan 31 17:07:18.088: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:07:20.092: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.028767612s
Jan 31 17:07:20.093: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Jan 31 17:07:20.093: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
STEP: create the pod with lifecycle hook 01/31/23 17:07:20.103
Jan 31 17:07:20.115: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-2785" to be "running and ready"
Jan 31 17:07:20.130: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 14.488531ms
Jan 31 17:07:20.130: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:07:22.137: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021798705s
Jan 31 17:07:22.137: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:07:24.141: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 4.026261317s
Jan 31 17:07:24.142: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
Jan 31 17:07:24.142: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 01/31/23 17:07:24.152
Jan 31 17:07:24.171: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 31 17:07:24.178: INFO: Pod pod-with-prestop-http-hook still exists
Jan 31 17:07:26.180: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 31 17:07:26.189: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook 01/31/23 17:07:26.19
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Jan 31 17:07:26.228: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-2785" for this suite. 01/31/23 17:07:26.236
------------------------------
â€¢ [SLOW TEST] [10.233 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:212

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:07:16.016
    Jan 31 17:07:16.016: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-lifecycle-hook 01/31/23 17:07:16.018
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:16.036
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:16.042
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 01/31/23 17:07:16.054
    Jan 31 17:07:16.064: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-2785" to be "running and ready"
    Jan 31 17:07:16.077: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 13.246741ms
    Jan 31 17:07:16.077: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:07:18.088: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024102778s
    Jan 31 17:07:18.088: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:07:20.092: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.028767612s
    Jan 31 17:07:20.093: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Jan 31 17:07:20.093: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:212
    STEP: create the pod with lifecycle hook 01/31/23 17:07:20.103
    Jan 31 17:07:20.115: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-2785" to be "running and ready"
    Jan 31 17:07:20.130: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 14.488531ms
    Jan 31 17:07:20.130: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:07:22.137: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021798705s
    Jan 31 17:07:22.137: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:07:24.141: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 4.026261317s
    Jan 31 17:07:24.142: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
    Jan 31 17:07:24.142: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 01/31/23 17:07:24.152
    Jan 31 17:07:24.171: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Jan 31 17:07:24.178: INFO: Pod pod-with-prestop-http-hook still exists
    Jan 31 17:07:26.180: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Jan 31 17:07:26.189: INFO: Pod pod-with-prestop-http-hook no longer exists
    STEP: check prestop hook 01/31/23 17:07:26.19
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:07:26.228: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-2785" for this suite. 01/31/23 17:07:26.236
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:07:26.249
Jan 31 17:07:26.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 17:07:26.25
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:26.269
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:26.276
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
STEP: Creating the pod 01/31/23 17:07:26.283
Jan 31 17:07:26.296: INFO: Waiting up to 5m0s for pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597" in namespace "downward-api-3684" to be "running and ready"
Jan 31 17:07:26.308: INFO: Pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597": Phase="Pending", Reason="", readiness=false. Elapsed: 11.295974ms
Jan 31 17:07:26.308: INFO: The phase of Pod labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:07:28.318: INFO: Pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020617s
Jan 31 17:07:28.318: INFO: The phase of Pod labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:07:30.320: INFO: Pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597": Phase="Running", Reason="", readiness=true. Elapsed: 4.023443562s
Jan 31 17:07:30.321: INFO: The phase of Pod labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597 is Running (Ready = true)
Jan 31 17:07:30.321: INFO: Pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597" satisfied condition "running and ready"
Jan 31 17:07:30.874: INFO: Successfully updated pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 17:07:32.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-3684" for this suite. 01/31/23 17:07:32.921
------------------------------
â€¢ [SLOW TEST] [6.679 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:07:26.249
    Jan 31 17:07:26.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 17:07:26.25
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:26.269
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:26.276
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:130
    STEP: Creating the pod 01/31/23 17:07:26.283
    Jan 31 17:07:26.296: INFO: Waiting up to 5m0s for pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597" in namespace "downward-api-3684" to be "running and ready"
    Jan 31 17:07:26.308: INFO: Pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597": Phase="Pending", Reason="", readiness=false. Elapsed: 11.295974ms
    Jan 31 17:07:26.308: INFO: The phase of Pod labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:07:28.318: INFO: Pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020617s
    Jan 31 17:07:28.318: INFO: The phase of Pod labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:07:30.320: INFO: Pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597": Phase="Running", Reason="", readiness=true. Elapsed: 4.023443562s
    Jan 31 17:07:30.321: INFO: The phase of Pod labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597 is Running (Ready = true)
    Jan 31 17:07:30.321: INFO: Pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597" satisfied condition "running and ready"
    Jan 31 17:07:30.874: INFO: Successfully updated pod "labelsupdatec1c2fd16-8cbb-46e8-b99f-f178c3ad3597"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:07:32.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-3684" for this suite. 01/31/23 17:07:32.921
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application
  should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:07:32.931
Jan 31 17:07:32.931: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:07:32.932
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:32.955
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:32.963
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
STEP: creating all guestbook components 01/31/23 17:07:32.971
Jan 31 17:07:32.971: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Jan 31 17:07:32.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
Jan 31 17:07:33.649: INFO: stderr: ""
Jan 31 17:07:33.649: INFO: stdout: "service/agnhost-replica created\n"
Jan 31 17:07:33.650: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Jan 31 17:07:33.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
Jan 31 17:07:33.871: INFO: stderr: ""
Jan 31 17:07:33.871: INFO: stdout: "service/agnhost-primary created\n"
Jan 31 17:07:33.871: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Jan 31 17:07:33.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
Jan 31 17:07:34.131: INFO: stderr: ""
Jan 31 17:07:34.131: INFO: stdout: "service/frontend created\n"
Jan 31 17:07:34.131: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Jan 31 17:07:34.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
Jan 31 17:07:34.333: INFO: stderr: ""
Jan 31 17:07:34.333: INFO: stdout: "deployment.apps/frontend created\n"
Jan 31 17:07:34.333: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jan 31 17:07:34.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
Jan 31 17:07:34.550: INFO: stderr: ""
Jan 31 17:07:34.550: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Jan 31 17:07:34.550: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jan 31 17:07:34.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
Jan 31 17:07:34.751: INFO: stderr: ""
Jan 31 17:07:34.751: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app 01/31/23 17:07:34.751
Jan 31 17:07:34.751: INFO: Waiting for all frontend pods to be Running.
Jan 31 17:07:39.803: INFO: Waiting for frontend to serve content.
Jan 31 17:07:39.828: INFO: Trying to add a new entry to the guestbook.
Jan 31 17:07:39.848: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources 01/31/23 17:07:39.864
Jan 31 17:07:39.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
Jan 31 17:07:39.979: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 31 17:07:39.979: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources 01/31/23 17:07:39.979
Jan 31 17:07:39.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
Jan 31 17:07:40.074: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 31 17:07:40.074: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 01/31/23 17:07:40.074
Jan 31 17:07:40.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
Jan 31 17:07:40.166: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 31 17:07:40.166: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources 01/31/23 17:07:40.167
Jan 31 17:07:40.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
Jan 31 17:07:40.270: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 31 17:07:40.270: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources 01/31/23 17:07:40.271
Jan 31 17:07:40.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
Jan 31 17:07:40.368: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 31 17:07:40.368: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 01/31/23 17:07:40.368
Jan 31 17:07:40.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
Jan 31 17:07:40.469: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 31 17:07:40.469: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:07:40.469: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1190" for this suite. 01/31/23 17:07:40.484
------------------------------
â€¢ [SLOW TEST] [7.565 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:369
    should create and stop a working application  [Conformance]
    test/e2e/kubectl/kubectl.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:07:32.931
    Jan 31 17:07:32.931: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:07:32.932
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:32.955
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:32.963
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create and stop a working application  [Conformance]
      test/e2e/kubectl/kubectl.go:394
    STEP: creating all guestbook components 01/31/23 17:07:32.971
    Jan 31 17:07:32.971: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-replica
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      ports:
      - port: 6379
      selector:
        app: agnhost
        role: replica
        tier: backend

    Jan 31 17:07:32.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
    Jan 31 17:07:33.649: INFO: stderr: ""
    Jan 31 17:07:33.649: INFO: stdout: "service/agnhost-replica created\n"
    Jan 31 17:07:33.650: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-primary
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      ports:
      - port: 6379
        targetPort: 6379
      selector:
        app: agnhost
        role: primary
        tier: backend

    Jan 31 17:07:33.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
    Jan 31 17:07:33.871: INFO: stderr: ""
    Jan 31 17:07:33.871: INFO: stdout: "service/agnhost-primary created\n"
    Jan 31 17:07:33.871: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: frontend
      labels:
        app: guestbook
        tier: frontend
    spec:
      # if your cluster supports it, uncomment the following to automatically create
      # an external load-balanced IP for the frontend service.
      # type: LoadBalancer
      ports:
      - port: 80
      selector:
        app: guestbook
        tier: frontend

    Jan 31 17:07:33.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
    Jan 31 17:07:34.131: INFO: stderr: ""
    Jan 31 17:07:34.131: INFO: stdout: "service/frontend created\n"
    Jan 31 17:07:34.131: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: frontend
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: guestbook
          tier: frontend
      template:
        metadata:
          labels:
            app: guestbook
            tier: frontend
        spec:
          containers:
          - name: guestbook-frontend
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--backend-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 80

    Jan 31 17:07:34.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
    Jan 31 17:07:34.333: INFO: stderr: ""
    Jan 31 17:07:34.333: INFO: stdout: "deployment.apps/frontend created\n"
    Jan 31 17:07:34.333: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-primary
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: agnhost
          role: primary
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: primary
            tier: backend
        spec:
          containers:
          - name: primary
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Jan 31 17:07:34.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
    Jan 31 17:07:34.550: INFO: stderr: ""
    Jan 31 17:07:34.550: INFO: stdout: "deployment.apps/agnhost-primary created\n"
    Jan 31 17:07:34.550: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-replica
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: agnhost
          role: replica
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: replica
            tier: backend
        spec:
          containers:
          - name: replica
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Jan 31 17:07:34.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 create -f -'
    Jan 31 17:07:34.751: INFO: stderr: ""
    Jan 31 17:07:34.751: INFO: stdout: "deployment.apps/agnhost-replica created\n"
    STEP: validating guestbook app 01/31/23 17:07:34.751
    Jan 31 17:07:34.751: INFO: Waiting for all frontend pods to be Running.
    Jan 31 17:07:39.803: INFO: Waiting for frontend to serve content.
    Jan 31 17:07:39.828: INFO: Trying to add a new entry to the guestbook.
    Jan 31 17:07:39.848: INFO: Verifying that added entry can be retrieved.
    STEP: using delete to clean up resources 01/31/23 17:07:39.864
    Jan 31 17:07:39.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
    Jan 31 17:07:39.979: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 31 17:07:39.979: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
    STEP: using delete to clean up resources 01/31/23 17:07:39.979
    Jan 31 17:07:39.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
    Jan 31 17:07:40.074: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 31 17:07:40.074: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 01/31/23 17:07:40.074
    Jan 31 17:07:40.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
    Jan 31 17:07:40.166: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 31 17:07:40.166: INFO: stdout: "service \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 01/31/23 17:07:40.167
    Jan 31 17:07:40.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
    Jan 31 17:07:40.270: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 31 17:07:40.270: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 01/31/23 17:07:40.271
    Jan 31 17:07:40.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
    Jan 31 17:07:40.368: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 31 17:07:40.368: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 01/31/23 17:07:40.368
    Jan 31 17:07:40.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1190 delete --grace-period=0 --force -f -'
    Jan 31 17:07:40.469: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 31 17:07:40.469: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:07:40.469: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1190" for this suite. 01/31/23 17:07:40.484
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:07:40.498
Jan 31 17:07:40.498: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename daemonsets 01/31/23 17:07:40.499
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:40.525
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:40.535
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862
STEP: Creating simple DaemonSet "daemon-set" 01/31/23 17:07:40.601
STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 17:07:40.613
Jan 31 17:07:40.636: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:07:40.637: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 17:07:41.653: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:07:41.653: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 17:07:42.653: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 17:07:42.653: INFO: Node 26-m02 is running 0 daemon pod, expected 1
Jan 31 17:07:43.655: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 31 17:07:43.655: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Getting /status 01/31/23 17:07:43.663
Jan 31 17:07:43.672: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status 01/31/23 17:07:43.672
Jan 31 17:07:43.691: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated 01/31/23 17:07:43.691
Jan 31 17:07:43.697: INFO: Observed &DaemonSet event: ADDED
Jan 31 17:07:43.697: INFO: Observed &DaemonSet event: MODIFIED
Jan 31 17:07:43.697: INFO: Observed &DaemonSet event: MODIFIED
Jan 31 17:07:43.698: INFO: Observed &DaemonSet event: MODIFIED
Jan 31 17:07:43.698: INFO: Observed &DaemonSet event: MODIFIED
Jan 31 17:07:43.698: INFO: Found daemon set daemon-set in namespace daemonsets-4483 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 31 17:07:43.698: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status 01/31/23 17:07:43.698
STEP: watching for the daemon set status to be patched 01/31/23 17:07:43.708
Jan 31 17:07:43.713: INFO: Observed &DaemonSet event: ADDED
Jan 31 17:07:43.713: INFO: Observed &DaemonSet event: MODIFIED
Jan 31 17:07:43.713: INFO: Observed &DaemonSet event: MODIFIED
Jan 31 17:07:43.714: INFO: Observed &DaemonSet event: MODIFIED
Jan 31 17:07:43.714: INFO: Observed &DaemonSet event: MODIFIED
Jan 31 17:07:43.714: INFO: Observed daemon set daemon-set in namespace daemonsets-4483 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 31 17:07:43.714: INFO: Observed &DaemonSet event: MODIFIED
Jan 31 17:07:43.714: INFO: Found daemon set daemon-set in namespace daemonsets-4483 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Jan 31 17:07:43.714: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/31/23 17:07:43.719
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4483, will wait for the garbage collector to delete the pods 01/31/23 17:07:43.719
Jan 31 17:07:43.789: INFO: Deleting DaemonSet.extensions daemon-set took: 14.774655ms
Jan 31 17:07:43.890: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.330061ms
Jan 31 17:07:45.900: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:07:45.900: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 31 17:07:45.907: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5799"},"items":null}

Jan 31 17:07:45.917: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5799"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:07:45.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-4483" for this suite. 01/31/23 17:07:45.945
------------------------------
â€¢ [SLOW TEST] [5.455 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:07:40.498
    Jan 31 17:07:40.498: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename daemonsets 01/31/23 17:07:40.499
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:40.525
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:40.535
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should verify changes to a daemon set status [Conformance]
      test/e2e/apps/daemon_set.go:862
    STEP: Creating simple DaemonSet "daemon-set" 01/31/23 17:07:40.601
    STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 17:07:40.613
    Jan 31 17:07:40.636: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:07:40.637: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 17:07:41.653: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:07:41.653: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 17:07:42.653: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 17:07:42.653: INFO: Node 26-m02 is running 0 daemon pod, expected 1
    Jan 31 17:07:43.655: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 31 17:07:43.655: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Getting /status 01/31/23 17:07:43.663
    Jan 31 17:07:43.672: INFO: Daemon Set daemon-set has Conditions: []
    STEP: updating the DaemonSet Status 01/31/23 17:07:43.672
    Jan 31 17:07:43.691: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the daemon set status to be updated 01/31/23 17:07:43.691
    Jan 31 17:07:43.697: INFO: Observed &DaemonSet event: ADDED
    Jan 31 17:07:43.697: INFO: Observed &DaemonSet event: MODIFIED
    Jan 31 17:07:43.697: INFO: Observed &DaemonSet event: MODIFIED
    Jan 31 17:07:43.698: INFO: Observed &DaemonSet event: MODIFIED
    Jan 31 17:07:43.698: INFO: Observed &DaemonSet event: MODIFIED
    Jan 31 17:07:43.698: INFO: Found daemon set daemon-set in namespace daemonsets-4483 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Jan 31 17:07:43.698: INFO: Daemon set daemon-set has an updated status
    STEP: patching the DaemonSet Status 01/31/23 17:07:43.698
    STEP: watching for the daemon set status to be patched 01/31/23 17:07:43.708
    Jan 31 17:07:43.713: INFO: Observed &DaemonSet event: ADDED
    Jan 31 17:07:43.713: INFO: Observed &DaemonSet event: MODIFIED
    Jan 31 17:07:43.713: INFO: Observed &DaemonSet event: MODIFIED
    Jan 31 17:07:43.714: INFO: Observed &DaemonSet event: MODIFIED
    Jan 31 17:07:43.714: INFO: Observed &DaemonSet event: MODIFIED
    Jan 31 17:07:43.714: INFO: Observed daemon set daemon-set in namespace daemonsets-4483 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Jan 31 17:07:43.714: INFO: Observed &DaemonSet event: MODIFIED
    Jan 31 17:07:43.714: INFO: Found daemon set daemon-set in namespace daemonsets-4483 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
    Jan 31 17:07:43.714: INFO: Daemon set daemon-set has a patched status
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/31/23 17:07:43.719
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4483, will wait for the garbage collector to delete the pods 01/31/23 17:07:43.719
    Jan 31 17:07:43.789: INFO: Deleting DaemonSet.extensions daemon-set took: 14.774655ms
    Jan 31 17:07:43.890: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.330061ms
    Jan 31 17:07:45.900: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:07:45.900: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 31 17:07:45.907: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5799"},"items":null}

    Jan 31 17:07:45.917: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5799"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:07:45.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-4483" for this suite. 01/31/23 17:07:45.945
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:07:45.954
Jan 31 17:07:45.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 17:07:45.955
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:45.973
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:45.979
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
STEP: Creating projection with secret that has name secret-emptykey-test-9624fac9-ef89-425d-9784-a1b7762f5f8d 01/31/23 17:07:45.99
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 17:07:45.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-2629" for this suite. 01/31/23 17:07:46
------------------------------
â€¢ [0.053 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:07:45.954
    Jan 31 17:07:45.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 17:07:45.955
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:45.973
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:45.979
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create secret due to empty secret key [Conformance]
      test/e2e/common/node/secrets.go:140
    STEP: Creating projection with secret that has name secret-emptykey-test-9624fac9-ef89-425d-9784-a1b7762f5f8d 01/31/23 17:07:45.99
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:07:45.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-2629" for this suite. 01/31/23 17:07:46
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:07:46.008
Jan 31 17:07:46.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:07:46.009
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:46.03
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:46.036
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
STEP: Creating the pod 01/31/23 17:07:46.042
Jan 31 17:07:46.053: INFO: Waiting up to 5m0s for pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454" in namespace "projected-6540" to be "running and ready"
Jan 31 17:07:46.060: INFO: Pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454": Phase="Pending", Reason="", readiness=false. Elapsed: 7.000317ms
Jan 31 17:07:46.060: INFO: The phase of Pod labelsupdate1e248db9-5230-478c-8c30-01140e017454 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:07:48.070: INFO: Pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016464176s
Jan 31 17:07:48.070: INFO: The phase of Pod labelsupdate1e248db9-5230-478c-8c30-01140e017454 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:07:50.072: INFO: Pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454": Phase="Running", Reason="", readiness=true. Elapsed: 4.018554618s
Jan 31 17:07:50.072: INFO: The phase of Pod labelsupdate1e248db9-5230-478c-8c30-01140e017454 is Running (Ready = true)
Jan 31 17:07:50.072: INFO: Pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454" satisfied condition "running and ready"
Jan 31 17:07:50.623: INFO: Successfully updated pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 17:07:52.692: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6540" for this suite. 01/31/23 17:07:52.698
------------------------------
â€¢ [SLOW TEST] [6.699 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:07:46.008
    Jan 31 17:07:46.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:07:46.009
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:46.03
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:46.036
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:130
    STEP: Creating the pod 01/31/23 17:07:46.042
    Jan 31 17:07:46.053: INFO: Waiting up to 5m0s for pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454" in namespace "projected-6540" to be "running and ready"
    Jan 31 17:07:46.060: INFO: Pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454": Phase="Pending", Reason="", readiness=false. Elapsed: 7.000317ms
    Jan 31 17:07:46.060: INFO: The phase of Pod labelsupdate1e248db9-5230-478c-8c30-01140e017454 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:07:48.070: INFO: Pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016464176s
    Jan 31 17:07:48.070: INFO: The phase of Pod labelsupdate1e248db9-5230-478c-8c30-01140e017454 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:07:50.072: INFO: Pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454": Phase="Running", Reason="", readiness=true. Elapsed: 4.018554618s
    Jan 31 17:07:50.072: INFO: The phase of Pod labelsupdate1e248db9-5230-478c-8c30-01140e017454 is Running (Ready = true)
    Jan 31 17:07:50.072: INFO: Pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454" satisfied condition "running and ready"
    Jan 31 17:07:50.623: INFO: Successfully updated pod "labelsupdate1e248db9-5230-478c-8c30-01140e017454"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:07:52.692: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6540" for this suite. 01/31/23 17:07:52.698
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:07:52.712
Jan 31 17:07:52.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 17:07:52.713
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:52.731
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:52.737
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 17:07:52.762
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:07:53.282
STEP: Deploying the webhook pod 01/31/23 17:07:53.301
STEP: Wait for the deployment to be ready 01/31/23 17:07:53.321
Jan 31 17:07:53.341: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 17:07:55.372: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 7, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 7, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 7, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 7, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 17:07:57.383
STEP: Verifying the service has paired with the endpoint 01/31/23 17:07:57.448
Jan 31 17:07:58.448: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 01/31/23 17:07:58.461
STEP: create a configmap that should be updated by the webhook 01/31/23 17:07:58.496
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:07:58.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-725" for this suite. 01/31/23 17:07:58.639
STEP: Destroying namespace "webhook-725-markers" for this suite. 01/31/23 17:07:58.647
------------------------------
â€¢ [SLOW TEST] [5.944 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:07:52.712
    Jan 31 17:07:52.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 17:07:52.713
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:52.731
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:52.737
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 17:07:52.762
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:07:53.282
    STEP: Deploying the webhook pod 01/31/23 17:07:53.301
    STEP: Wait for the deployment to be ready 01/31/23 17:07:53.321
    Jan 31 17:07:53.341: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 17:07:55.372: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 7, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 7, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 7, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 7, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 17:07:57.383
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:07:57.448
    Jan 31 17:07:58.448: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate configmap [Conformance]
      test/e2e/apimachinery/webhook.go:252
    STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 01/31/23 17:07:58.461
    STEP: create a configmap that should be updated by the webhook 01/31/23 17:07:58.496
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:07:58.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-725" for this suite. 01/31/23 17:07:58.639
    STEP: Destroying namespace "webhook-725-markers" for this suite. 01/31/23 17:07:58.647
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:07:58.657
Jan 31 17:07:58.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replication-controller 01/31/23 17:07:58.658
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:58.676
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:58.682
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
STEP: Creating replication controller my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865 01/31/23 17:07:58.689
Jan 31 17:07:58.704: INFO: Pod name my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865: Found 0 pods out of 1
Jan 31 17:08:03.716: INFO: Pod name my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865: Found 1 pods out of 1
Jan 31 17:08:03.716: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865" are running
Jan 31 17:08:03.716: INFO: Waiting up to 5m0s for pod "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2" in namespace "replication-controller-5794" to be "running"
Jan 31 17:08:03.725: INFO: Pod "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2": Phase="Running", Reason="", readiness=true. Elapsed: 8.516379ms
Jan 31 17:08:03.725: INFO: Pod "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2" satisfied condition "running"
Jan 31 17:08:03.725: INFO: Pod "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:07:58 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:08:00 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:08:00 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:07:58 +0000 UTC Reason: Message:}])
Jan 31 17:08:03.725: INFO: Trying to dial the pod
Jan 31 17:08:08.761: INFO: Controller my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865: Got expected result from replica 1 [my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2]: "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 31 17:08:08.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-5794" for this suite. 01/31/23 17:08:08.772
------------------------------
â€¢ [SLOW TEST] [10.129 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:07:58.657
    Jan 31 17:07:58.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replication-controller 01/31/23 17:07:58.658
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:07:58.676
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:07:58.682
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/rc.go:67
    STEP: Creating replication controller my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865 01/31/23 17:07:58.689
    Jan 31 17:07:58.704: INFO: Pod name my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865: Found 0 pods out of 1
    Jan 31 17:08:03.716: INFO: Pod name my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865: Found 1 pods out of 1
    Jan 31 17:08:03.716: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865" are running
    Jan 31 17:08:03.716: INFO: Waiting up to 5m0s for pod "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2" in namespace "replication-controller-5794" to be "running"
    Jan 31 17:08:03.725: INFO: Pod "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2": Phase="Running", Reason="", readiness=true. Elapsed: 8.516379ms
    Jan 31 17:08:03.725: INFO: Pod "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2" satisfied condition "running"
    Jan 31 17:08:03.725: INFO: Pod "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:07:58 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:08:00 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:08:00 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:07:58 +0000 UTC Reason: Message:}])
    Jan 31 17:08:03.725: INFO: Trying to dial the pod
    Jan 31 17:08:08.761: INFO: Controller my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865: Got expected result from replica 1 [my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2]: "my-hostname-basic-57ef8fca-ca7f-42e9-840d-85c50232b865-k9tx2", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:08:08.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-5794" for this suite. 01/31/23 17:08:08.772
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:08:08.786
Jan 31 17:08:08.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename svcaccounts 01/31/23 17:08:08.787
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:08.811
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:08.819
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
STEP: Creating ServiceAccount "e2e-sa-4mxpw"  01/31/23 17:08:08.827
Jan 31 17:08:08.834: INFO: AutomountServiceAccountToken: false
STEP: Updating ServiceAccount "e2e-sa-4mxpw"  01/31/23 17:08:08.834
Jan 31 17:08:08.848: INFO: AutomountServiceAccountToken: true
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 31 17:08:08.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-3213" for this suite. 01/31/23 17:08:08.854
------------------------------
â€¢ [0.075 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:08:08.786
    Jan 31 17:08:08.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename svcaccounts 01/31/23 17:08:08.787
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:08.811
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:08.819
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should update a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:810
    STEP: Creating ServiceAccount "e2e-sa-4mxpw"  01/31/23 17:08:08.827
    Jan 31 17:08:08.834: INFO: AutomountServiceAccountToken: false
    STEP: Updating ServiceAccount "e2e-sa-4mxpw"  01/31/23 17:08:08.834
    Jan 31 17:08:08.848: INFO: AutomountServiceAccountToken: true
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:08:08.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-3213" for this suite. 01/31/23 17:08:08.854
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:08:08.862
Jan 31 17:08:08.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename daemonsets 01/31/23 17:08:08.863
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:08.891
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:08.898
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823
STEP: Creating simple DaemonSet "daemon-set" 01/31/23 17:08:08.934
STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 17:08:08.943
Jan 31 17:08:08.958: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:08:08.958: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 17:08:09.978: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:08:09.978: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 17:08:10.982: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:08:10.982: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 17:08:11.978: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 31 17:08:11.978: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: listing all DeamonSets 01/31/23 17:08:11.986
STEP: DeleteCollection of the DaemonSets 01/31/23 17:08:11.997
STEP: Verify that ReplicaSets have been deleted 01/31/23 17:08:12.012
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
Jan 31 17:08:12.040: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5982"},"items":null}

Jan 31 17:08:12.045: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5982"},"items":[{"metadata":{"name":"daemon-set-ff2pc","generateName":"daemon-set-","namespace":"daemonsets-8027","uid":"4140bab8-dce4-46b1-ad7b-322cf06e8709","resourceVersion":"5980","creationTimestamp":"2023-01-31T17:08:08Z","deletionTimestamp":"2023-01-31T17:08:42Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ecdb47a1-d331-4410-a440-0da73dc327ab","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-01-31T17:08:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ecdb47a1-d331-4410-a440-0da73dc327ab\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"vcluster","operation":"Update","apiVersion":"v1","time":"2023-01-31T17:08:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.132\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p8wtj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p8wtj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"26-m02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["26-m02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:09Z"}],"hostIP":"192.168.61.148","podIP":"10.244.1.132","podIPs":[{"ip":"10.244.1.132"}],"startTime":"2023-01-31T17:08:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-31T17:08:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://6a725291cbbb424d3e88254df2e2856ec1591efd93ee2ed5896888f552a0a069","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-vgh4z","generateName":"daemon-set-","namespace":"daemonsets-8027","uid":"8a65a9dd-131c-41d6-a4a1-6f9473e93876","resourceVersion":"5982","creationTimestamp":"2023-01-31T17:08:08Z","deletionTimestamp":"2023-01-31T17:08:42Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ecdb47a1-d331-4410-a440-0da73dc327ab","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-01-31T17:08:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ecdb47a1-d331-4410-a440-0da73dc327ab\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"vcluster","operation":"Update","apiVersion":"v1","time":"2023-01-31T17:08:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.88\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vxn76","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vxn76","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"26","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["26"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:08Z"}],"hostIP":"192.168.61.199","podIP":"10.244.0.88","podIPs":[{"ip":"10.244.0.88"}],"startTime":"2023-01-31T17:08:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-31T17:08:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://fb3eaa949e1c57af078660f7c009bf4456eedb0be0da531f6634c0f56d51b0cf","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:08:12.065: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-8027" for this suite. 01/31/23 17:08:12.071
------------------------------
â€¢ [3.214 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:08:08.862
    Jan 31 17:08:08.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename daemonsets 01/31/23 17:08:08.863
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:08.891
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:08.898
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should list and delete a collection of DaemonSets [Conformance]
      test/e2e/apps/daemon_set.go:823
    STEP: Creating simple DaemonSet "daemon-set" 01/31/23 17:08:08.934
    STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 17:08:08.943
    Jan 31 17:08:08.958: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:08:08.958: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 17:08:09.978: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:08:09.978: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 17:08:10.982: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:08:10.982: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 17:08:11.978: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 31 17:08:11.978: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: listing all DeamonSets 01/31/23 17:08:11.986
    STEP: DeleteCollection of the DaemonSets 01/31/23 17:08:11.997
    STEP: Verify that ReplicaSets have been deleted 01/31/23 17:08:12.012
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    Jan 31 17:08:12.040: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5982"},"items":null}

    Jan 31 17:08:12.045: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5982"},"items":[{"metadata":{"name":"daemon-set-ff2pc","generateName":"daemon-set-","namespace":"daemonsets-8027","uid":"4140bab8-dce4-46b1-ad7b-322cf06e8709","resourceVersion":"5980","creationTimestamp":"2023-01-31T17:08:08Z","deletionTimestamp":"2023-01-31T17:08:42Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ecdb47a1-d331-4410-a440-0da73dc327ab","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-01-31T17:08:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ecdb47a1-d331-4410-a440-0da73dc327ab\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"vcluster","operation":"Update","apiVersion":"v1","time":"2023-01-31T17:08:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.132\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p8wtj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p8wtj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"26-m02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["26-m02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:09Z"}],"hostIP":"192.168.61.148","podIP":"10.244.1.132","podIPs":[{"ip":"10.244.1.132"}],"startTime":"2023-01-31T17:08:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-31T17:08:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://6a725291cbbb424d3e88254df2e2856ec1591efd93ee2ed5896888f552a0a069","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-vgh4z","generateName":"daemon-set-","namespace":"daemonsets-8027","uid":"8a65a9dd-131c-41d6-a4a1-6f9473e93876","resourceVersion":"5982","creationTimestamp":"2023-01-31T17:08:08Z","deletionTimestamp":"2023-01-31T17:08:42Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ecdb47a1-d331-4410-a440-0da73dc327ab","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-01-31T17:08:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ecdb47a1-d331-4410-a440-0da73dc327ab\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"vcluster","operation":"Update","apiVersion":"v1","time":"2023-01-31T17:08:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.88\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vxn76","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vxn76","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"26","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["26"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-31T17:08:08Z"}],"hostIP":"192.168.61.199","podIP":"10.244.0.88","podIPs":[{"ip":"10.244.0.88"}],"startTime":"2023-01-31T17:08:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-31T17:08:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://fb3eaa949e1c57af078660f7c009bf4456eedb0be0da531f6634c0f56d51b0cf","started":true}],"qosClass":"BestEffort"}}]}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:08:12.065: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-8027" for this suite. 01/31/23 17:08:12.071
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:08:12.088
Jan 31 17:08:12.088: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 17:08:12.09
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:12.11
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:12.117
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
STEP: Creating a pod to test downward API volume plugin 01/31/23 17:08:12.129
Jan 31 17:08:12.142: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3" in namespace "downward-api-7175" to be "Succeeded or Failed"
Jan 31 17:08:12.150: INFO: Pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3": Phase="Pending", Reason="", readiness=false. Elapsed: 8.330125ms
Jan 31 17:08:14.159: INFO: Pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017273155s
Jan 31 17:08:16.162: INFO: Pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019604314s
Jan 31 17:08:18.161: INFO: Pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.01895582s
STEP: Saw pod success 01/31/23 17:08:18.161
Jan 31 17:08:18.162: INFO: Pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3" satisfied condition "Succeeded or Failed"
Jan 31 17:08:18.172: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3 container client-container: <nil>
STEP: delete the pod 01/31/23 17:08:18.192
Jan 31 17:08:18.208: INFO: Waiting for pod downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3 to disappear
Jan 31 17:08:18.218: INFO: Pod downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 17:08:18.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-7175" for this suite. 01/31/23 17:08:18.226
------------------------------
â€¢ [SLOW TEST] [6.146 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:08:12.088
    Jan 31 17:08:12.088: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 17:08:12.09
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:12.11
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:12.117
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:68
    STEP: Creating a pod to test downward API volume plugin 01/31/23 17:08:12.129
    Jan 31 17:08:12.142: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3" in namespace "downward-api-7175" to be "Succeeded or Failed"
    Jan 31 17:08:12.150: INFO: Pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3": Phase="Pending", Reason="", readiness=false. Elapsed: 8.330125ms
    Jan 31 17:08:14.159: INFO: Pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017273155s
    Jan 31 17:08:16.162: INFO: Pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019604314s
    Jan 31 17:08:18.161: INFO: Pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.01895582s
    STEP: Saw pod success 01/31/23 17:08:18.161
    Jan 31 17:08:18.162: INFO: Pod "downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3" satisfied condition "Succeeded or Failed"
    Jan 31 17:08:18.172: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3 container client-container: <nil>
    STEP: delete the pod 01/31/23 17:08:18.192
    Jan 31 17:08:18.208: INFO: Waiting for pod downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3 to disappear
    Jan 31 17:08:18.218: INFO: Pod downwardapi-volume-8badd482-824c-474e-b766-1fcaa544a6b3 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:08:18.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-7175" for this suite. 01/31/23 17:08:18.226
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:08:18.235
Jan 31 17:08:18.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename gc 01/31/23 17:08:18.236
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:18.252
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:18.258
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
STEP: create the rc 01/31/23 17:08:18.264
STEP: delete the rc 01/31/23 17:08:23.279
STEP: wait for all pods to be garbage collected 01/31/23 17:08:23.288
STEP: Gathering metrics 01/31/23 17:08:28.31
W0131 17:08:28.319758      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jan 31 17:08:28.319: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 31 17:08:28.319: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-5094" for this suite. 01/31/23 17:08:28.329
------------------------------
â€¢ [SLOW TEST] [10.105 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:08:18.235
    Jan 31 17:08:18.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename gc 01/31/23 17:08:18.236
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:18.252
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:18.258
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete pods created by rc when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:312
    STEP: create the rc 01/31/23 17:08:18.264
    STEP: delete the rc 01/31/23 17:08:23.279
    STEP: wait for all pods to be garbage collected 01/31/23 17:08:23.288
    STEP: Gathering metrics 01/31/23 17:08:28.31
    W0131 17:08:28.319758      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Jan 31 17:08:28.319: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:08:28.319: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-5094" for this suite. 01/31/23 17:08:28.329
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:08:28.342
Jan 31 17:08:28.342: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 17:08:28.343
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:28.361
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:28.367
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
STEP: creating service multi-endpoint-test in namespace services-4594 01/31/23 17:08:28.376
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4594 to expose endpoints map[] 01/31/23 17:08:28.436
Jan 31 17:08:28.445: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Jan 31 17:08:29.467: INFO: successfully validated that service multi-endpoint-test in namespace services-4594 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-4594 01/31/23 17:08:29.467
Jan 31 17:08:29.485: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-4594" to be "running and ready"
Jan 31 17:08:29.504: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 18.936487ms
Jan 31 17:08:29.504: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:08:31.516: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.031261656s
Jan 31 17:08:31.517: INFO: The phase of Pod pod1 is Running (Ready = true)
Jan 31 17:08:31.517: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4594 to expose endpoints map[pod1:[100]] 01/31/23 17:08:31.524
Jan 31 17:08:31.546: INFO: successfully validated that service multi-endpoint-test in namespace services-4594 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-4594 01/31/23 17:08:31.546
Jan 31 17:08:31.558: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-4594" to be "running and ready"
Jan 31 17:08:31.564: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.513381ms
Jan 31 17:08:31.564: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:08:33.573: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014470417s
Jan 31 17:08:33.573: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:08:35.574: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.015822747s
Jan 31 17:08:35.574: INFO: The phase of Pod pod2 is Running (Ready = true)
Jan 31 17:08:35.574: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4594 to expose endpoints map[pod1:[100] pod2:[101]] 01/31/23 17:08:35.585
Jan 31 17:08:35.627: INFO: successfully validated that service multi-endpoint-test in namespace services-4594 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods 01/31/23 17:08:35.627
Jan 31 17:08:35.627: INFO: Creating new exec pod
Jan 31 17:08:35.638: INFO: Waiting up to 5m0s for pod "execpod6qrdg" in namespace "services-4594" to be "running"
Jan 31 17:08:35.646: INFO: Pod "execpod6qrdg": Phase="Pending", Reason="", readiness=false. Elapsed: 8.171545ms
Jan 31 17:08:37.653: INFO: Pod "execpod6qrdg": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015292983s
Jan 31 17:08:39.662: INFO: Pod "execpod6qrdg": Phase="Running", Reason="", readiness=true. Elapsed: 4.024393844s
Jan 31 17:08:39.662: INFO: Pod "execpod6qrdg" satisfied condition "running"
Jan 31 17:08:40.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-4594 exec execpod6qrdg -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
Jan 31 17:08:40.872: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Jan 31 17:08:40.872: INFO: stdout: ""
Jan 31 17:08:40.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-4594 exec execpod6qrdg -- /bin/sh -x -c nc -v -z -w 2 10.100.63.213 80'
Jan 31 17:08:41.084: INFO: stderr: "+ nc -v -z -w 2 10.100.63.213 80\nConnection to 10.100.63.213 80 port [tcp/http] succeeded!\n"
Jan 31 17:08:41.084: INFO: stdout: ""
Jan 31 17:08:41.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-4594 exec execpod6qrdg -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
Jan 31 17:08:41.283: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Jan 31 17:08:41.283: INFO: stdout: ""
Jan 31 17:08:41.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-4594 exec execpod6qrdg -- /bin/sh -x -c nc -v -z -w 2 10.100.63.213 81'
Jan 31 17:08:41.501: INFO: stderr: "+ nc -v -z -w 2 10.100.63.213 81\nConnection to 10.100.63.213 81 port [tcp/*] succeeded!\n"
Jan 31 17:08:41.501: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-4594 01/31/23 17:08:41.501
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4594 to expose endpoints map[pod2:[101]] 01/31/23 17:08:41.514
Jan 31 17:08:42.564: INFO: successfully validated that service multi-endpoint-test in namespace services-4594 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-4594 01/31/23 17:08:42.564
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4594 to expose endpoints map[] 01/31/23 17:08:42.583
Jan 31 17:08:43.631: INFO: successfully validated that service multi-endpoint-test in namespace services-4594 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 17:08:43.671: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4594" for this suite. 01/31/23 17:08:43.679
------------------------------
â€¢ [SLOW TEST] [15.347 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:08:28.342
    Jan 31 17:08:28.342: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 17:08:28.343
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:28.361
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:28.367
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve multiport endpoints from pods  [Conformance]
      test/e2e/network/service.go:848
    STEP: creating service multi-endpoint-test in namespace services-4594 01/31/23 17:08:28.376
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4594 to expose endpoints map[] 01/31/23 17:08:28.436
    Jan 31 17:08:28.445: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
    Jan 31 17:08:29.467: INFO: successfully validated that service multi-endpoint-test in namespace services-4594 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-4594 01/31/23 17:08:29.467
    Jan 31 17:08:29.485: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-4594" to be "running and ready"
    Jan 31 17:08:29.504: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 18.936487ms
    Jan 31 17:08:29.504: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:08:31.516: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.031261656s
    Jan 31 17:08:31.517: INFO: The phase of Pod pod1 is Running (Ready = true)
    Jan 31 17:08:31.517: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4594 to expose endpoints map[pod1:[100]] 01/31/23 17:08:31.524
    Jan 31 17:08:31.546: INFO: successfully validated that service multi-endpoint-test in namespace services-4594 exposes endpoints map[pod1:[100]]
    STEP: Creating pod pod2 in namespace services-4594 01/31/23 17:08:31.546
    Jan 31 17:08:31.558: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-4594" to be "running and ready"
    Jan 31 17:08:31.564: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.513381ms
    Jan 31 17:08:31.564: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:08:33.573: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014470417s
    Jan 31 17:08:33.573: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:08:35.574: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.015822747s
    Jan 31 17:08:35.574: INFO: The phase of Pod pod2 is Running (Ready = true)
    Jan 31 17:08:35.574: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4594 to expose endpoints map[pod1:[100] pod2:[101]] 01/31/23 17:08:35.585
    Jan 31 17:08:35.627: INFO: successfully validated that service multi-endpoint-test in namespace services-4594 exposes endpoints map[pod1:[100] pod2:[101]]
    STEP: Checking if the Service forwards traffic to pods 01/31/23 17:08:35.627
    Jan 31 17:08:35.627: INFO: Creating new exec pod
    Jan 31 17:08:35.638: INFO: Waiting up to 5m0s for pod "execpod6qrdg" in namespace "services-4594" to be "running"
    Jan 31 17:08:35.646: INFO: Pod "execpod6qrdg": Phase="Pending", Reason="", readiness=false. Elapsed: 8.171545ms
    Jan 31 17:08:37.653: INFO: Pod "execpod6qrdg": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015292983s
    Jan 31 17:08:39.662: INFO: Pod "execpod6qrdg": Phase="Running", Reason="", readiness=true. Elapsed: 4.024393844s
    Jan 31 17:08:39.662: INFO: Pod "execpod6qrdg" satisfied condition "running"
    Jan 31 17:08:40.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-4594 exec execpod6qrdg -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
    Jan 31 17:08:40.872: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
    Jan 31 17:08:40.872: INFO: stdout: ""
    Jan 31 17:08:40.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-4594 exec execpod6qrdg -- /bin/sh -x -c nc -v -z -w 2 10.100.63.213 80'
    Jan 31 17:08:41.084: INFO: stderr: "+ nc -v -z -w 2 10.100.63.213 80\nConnection to 10.100.63.213 80 port [tcp/http] succeeded!\n"
    Jan 31 17:08:41.084: INFO: stdout: ""
    Jan 31 17:08:41.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-4594 exec execpod6qrdg -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
    Jan 31 17:08:41.283: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
    Jan 31 17:08:41.283: INFO: stdout: ""
    Jan 31 17:08:41.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-4594 exec execpod6qrdg -- /bin/sh -x -c nc -v -z -w 2 10.100.63.213 81'
    Jan 31 17:08:41.501: INFO: stderr: "+ nc -v -z -w 2 10.100.63.213 81\nConnection to 10.100.63.213 81 port [tcp/*] succeeded!\n"
    Jan 31 17:08:41.501: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-4594 01/31/23 17:08:41.501
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4594 to expose endpoints map[pod2:[101]] 01/31/23 17:08:41.514
    Jan 31 17:08:42.564: INFO: successfully validated that service multi-endpoint-test in namespace services-4594 exposes endpoints map[pod2:[101]]
    STEP: Deleting pod pod2 in namespace services-4594 01/31/23 17:08:42.564
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4594 to expose endpoints map[] 01/31/23 17:08:42.583
    Jan 31 17:08:43.631: INFO: successfully validated that service multi-endpoint-test in namespace services-4594 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:08:43.671: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4594" for this suite. 01/31/23 17:08:43.679
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Pods
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:08:43.689
Jan 31 17:08:43.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 17:08:43.69
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:43.76
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:43.771
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
STEP: Create a pod 01/31/23 17:08:43.783
Jan 31 17:08:43.794: INFO: Waiting up to 5m0s for pod "pod-5k8qj" in namespace "pods-6980" to be "running"
Jan 31 17:08:43.805: INFO: Pod "pod-5k8qj": Phase="Pending", Reason="", readiness=false. Elapsed: 10.738203ms
Jan 31 17:08:45.817: INFO: Pod "pod-5k8qj": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022568722s
Jan 31 17:08:47.818: INFO: Pod "pod-5k8qj": Phase="Running", Reason="", readiness=true. Elapsed: 4.023537725s
Jan 31 17:08:47.818: INFO: Pod "pod-5k8qj" satisfied condition "running"
STEP: patching /status 01/31/23 17:08:47.818
Jan 31 17:08:47.835: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 31 17:08:47.835: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-6980" for this suite. 01/31/23 17:08:47.85
------------------------------
â€¢ [4.174 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:08:43.689
    Jan 31 17:08:43.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 17:08:43.69
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:43.76
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:43.771
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should patch a pod status [Conformance]
      test/e2e/common/node/pods.go:1083
    STEP: Create a pod 01/31/23 17:08:43.783
    Jan 31 17:08:43.794: INFO: Waiting up to 5m0s for pod "pod-5k8qj" in namespace "pods-6980" to be "running"
    Jan 31 17:08:43.805: INFO: Pod "pod-5k8qj": Phase="Pending", Reason="", readiness=false. Elapsed: 10.738203ms
    Jan 31 17:08:45.817: INFO: Pod "pod-5k8qj": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022568722s
    Jan 31 17:08:47.818: INFO: Pod "pod-5k8qj": Phase="Running", Reason="", readiness=true. Elapsed: 4.023537725s
    Jan 31 17:08:47.818: INFO: Pod "pod-5k8qj" satisfied condition "running"
    STEP: patching /status 01/31/23 17:08:47.818
    Jan 31 17:08:47.835: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:08:47.835: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-6980" for this suite. 01/31/23 17:08:47.85
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:08:47.863
Jan 31 17:08:47.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:08:47.864
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:47.883
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:47.889
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
STEP: Creating a pod to test downward API volume plugin 01/31/23 17:08:47.902
Jan 31 17:08:47.913: INFO: Waiting up to 5m0s for pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5" in namespace "projected-7812" to be "Succeeded or Failed"
Jan 31 17:08:47.922: INFO: Pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5": Phase="Pending", Reason="", readiness=false. Elapsed: 9.059261ms
Jan 31 17:08:49.934: INFO: Pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02030094s
Jan 31 17:08:51.934: INFO: Pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020859401s
Jan 31 17:08:53.934: INFO: Pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.02059115s
STEP: Saw pod success 01/31/23 17:08:53.934
Jan 31 17:08:53.934: INFO: Pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5" satisfied condition "Succeeded or Failed"
Jan 31 17:08:53.945: INFO: Trying to get logs from node 26 pod downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5 container client-container: <nil>
STEP: delete the pod 01/31/23 17:08:53.962
Jan 31 17:08:53.976: INFO: Waiting for pod downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5 to disappear
Jan 31 17:08:53.985: INFO: Pod downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 17:08:53.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7812" for this suite. 01/31/23 17:08:53.992
------------------------------
â€¢ [SLOW TEST] [6.137 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:08:47.863
    Jan 31 17:08:47.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:08:47.864
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:47.883
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:47.889
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:207
    STEP: Creating a pod to test downward API volume plugin 01/31/23 17:08:47.902
    Jan 31 17:08:47.913: INFO: Waiting up to 5m0s for pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5" in namespace "projected-7812" to be "Succeeded or Failed"
    Jan 31 17:08:47.922: INFO: Pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5": Phase="Pending", Reason="", readiness=false. Elapsed: 9.059261ms
    Jan 31 17:08:49.934: INFO: Pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02030094s
    Jan 31 17:08:51.934: INFO: Pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020859401s
    Jan 31 17:08:53.934: INFO: Pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.02059115s
    STEP: Saw pod success 01/31/23 17:08:53.934
    Jan 31 17:08:53.934: INFO: Pod "downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5" satisfied condition "Succeeded or Failed"
    Jan 31 17:08:53.945: INFO: Trying to get logs from node 26 pod downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5 container client-container: <nil>
    STEP: delete the pod 01/31/23 17:08:53.962
    Jan 31 17:08:53.976: INFO: Waiting for pod downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5 to disappear
    Jan 31 17:08:53.985: INFO: Pod downwardapi-volume-69807ed9-3f4e-4977-8954-97d0044e1ff5 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:08:53.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7812" for this suite. 01/31/23 17:08:53.992
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:08:54.001
Jan 31 17:08:54.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-runtime 01/31/23 17:08:54.002
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:54.019
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:54.025
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 01/31/23 17:08:54.043
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 01/31/23 17:09:11.234
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 01/31/23 17:09:11.243
STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 01/31/23 17:09:11.262
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 01/31/23 17:09:11.263
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 01/31/23 17:09:11.306
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 01/31/23 17:09:14.344
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 01/31/23 17:09:16.383
STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 01/31/23 17:09:16.402
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 01/31/23 17:09:16.403
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 01/31/23 17:09:16.445
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 01/31/23 17:09:17.463
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 01/31/23 17:09:21.517
STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 01/31/23 17:09:21.535
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 01/31/23 17:09:21.535
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Jan 31 17:09:21.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-684" for this suite. 01/31/23 17:09:21.603
------------------------------
â€¢ [SLOW TEST] [27.622 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    when starting a container that exits
    test/e2e/common/node/runtime.go:45
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:08:54.001
    Jan 31 17:08:54.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-runtime 01/31/23 17:08:54.002
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:08:54.019
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:08:54.025
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52
    STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 01/31/23 17:08:54.043
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 01/31/23 17:09:11.234
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 01/31/23 17:09:11.243
    STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 01/31/23 17:09:11.262
    STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 01/31/23 17:09:11.263
    STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 01/31/23 17:09:11.306
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 01/31/23 17:09:14.344
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 01/31/23 17:09:16.383
    STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 01/31/23 17:09:16.402
    STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 01/31/23 17:09:16.403
    STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 01/31/23 17:09:16.445
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 01/31/23 17:09:17.463
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 01/31/23 17:09:21.517
    STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 01/31/23 17:09:21.535
    STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 01/31/23 17:09:21.535
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:09:21.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-684" for this suite. 01/31/23 17:09:21.603
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:09:21.626
Jan 31 17:09:21.626: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename csiinlinevolumes 01/31/23 17:09:21.627
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:09:21.656
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:09:21.662
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
STEP: creating 01/31/23 17:09:21.668
STEP: getting 01/31/23 17:09:21.687
STEP: listing 01/31/23 17:09:21.699
STEP: deleting 01/31/23 17:09:21.704
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:09:21.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-782" for this suite. 01/31/23 17:09:21.738
------------------------------
â€¢ [0.120 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:09:21.626
    Jan 31 17:09:21.626: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename csiinlinevolumes 01/31/23 17:09:21.627
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:09:21.656
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:09:21.662
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
      test/e2e/storage/csi_inline.go:46
    STEP: creating 01/31/23 17:09:21.668
    STEP: getting 01/31/23 17:09:21.687
    STEP: listing 01/31/23 17:09:21.699
    STEP: deleting 01/31/23 17:09:21.704
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:09:21.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-782" for this suite. 01/31/23 17:09:21.738
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:09:21.747
Jan 31 17:09:21.748: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-probe 01/31/23 17:09:21.748
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:09:21.77
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:09:21.778
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
STEP: Creating pod busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e in namespace container-probe-4042 01/31/23 17:09:21.785
Jan 31 17:09:21.801: INFO: Waiting up to 5m0s for pod "busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e" in namespace "container-probe-4042" to be "not pending"
Jan 31 17:09:21.808: INFO: Pod "busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.479889ms
Jan 31 17:09:23.819: INFO: Pod "busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e": Phase="Running", Reason="", readiness=true. Elapsed: 2.017600688s
Jan 31 17:09:23.819: INFO: Pod "busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e" satisfied condition "not pending"
Jan 31 17:09:23.819: INFO: Started pod busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e in namespace container-probe-4042
STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:09:23.819
Jan 31 17:09:23.830: INFO: Initial restart count of pod busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e is 0
Jan 31 17:10:14.105: INFO: Restart count of pod container-probe-4042/busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e is now 1 (50.275411604s elapsed)
STEP: deleting the pod 01/31/23 17:10:14.105
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 31 17:10:14.127: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-4042" for this suite. 01/31/23 17:10:14.136
------------------------------
â€¢ [SLOW TEST] [52.396 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:09:21.747
    Jan 31 17:09:21.748: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-probe 01/31/23 17:09:21.748
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:09:21.77
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:09:21.778
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:135
    STEP: Creating pod busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e in namespace container-probe-4042 01/31/23 17:09:21.785
    Jan 31 17:09:21.801: INFO: Waiting up to 5m0s for pod "busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e" in namespace "container-probe-4042" to be "not pending"
    Jan 31 17:09:21.808: INFO: Pod "busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.479889ms
    Jan 31 17:09:23.819: INFO: Pod "busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e": Phase="Running", Reason="", readiness=true. Elapsed: 2.017600688s
    Jan 31 17:09:23.819: INFO: Pod "busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e" satisfied condition "not pending"
    Jan 31 17:09:23.819: INFO: Started pod busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e in namespace container-probe-4042
    STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:09:23.819
    Jan 31 17:09:23.830: INFO: Initial restart count of pod busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e is 0
    Jan 31 17:10:14.105: INFO: Restart count of pod container-probe-4042/busybox-35dc9d3d-d16a-45e1-a3b8-169e1feab23e is now 1 (50.275411604s elapsed)
    STEP: deleting the pod 01/31/23 17:10:14.105
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:10:14.127: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-4042" for this suite. 01/31/23 17:10:14.136
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] ReplicationController
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:10:14.143
Jan 31 17:10:14.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replication-controller 01/31/23 17:10:14.144
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:14.166
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:14.172
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
STEP: Given a ReplicationController is created 01/31/23 17:10:14.179
STEP: When the matched label of one of its pods change 01/31/23 17:10:14.184
Jan 31 17:10:14.190: INFO: Pod name pod-release: Found 0 pods out of 1
Jan 31 17:10:19.204: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released 01/31/23 17:10:19.222
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 31 17:10:20.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-4075" for this suite. 01/31/23 17:10:20.247
------------------------------
â€¢ [SLOW TEST] [6.110 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:10:14.143
    Jan 31 17:10:14.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replication-controller 01/31/23 17:10:14.144
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:14.166
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:14.172
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should release no longer matching pods [Conformance]
      test/e2e/apps/rc.go:101
    STEP: Given a ReplicationController is created 01/31/23 17:10:14.179
    STEP: When the matched label of one of its pods change 01/31/23 17:10:14.184
    Jan 31 17:10:14.190: INFO: Pod name pod-release: Found 0 pods out of 1
    Jan 31 17:10:19.204: INFO: Pod name pod-release: Found 1 pods out of 1
    STEP: Then the pod is released 01/31/23 17:10:19.222
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:10:20.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-4075" for this suite. 01/31/23 17:10:20.247
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:10:20.255
Jan 31 17:10:20.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 17:10:20.256
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:20.273
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:20.278
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
STEP: creating service endpoint-test2 in namespace services-7091 01/31/23 17:10:20.286
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7091 to expose endpoints map[] 01/31/23 17:10:20.328
Jan 31 17:10:20.336: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Jan 31 17:10:21.360: INFO: successfully validated that service endpoint-test2 in namespace services-7091 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-7091 01/31/23 17:10:21.36
Jan 31 17:10:21.378: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-7091" to be "running and ready"
Jan 31 17:10:21.387: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.982324ms
Jan 31 17:10:21.387: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:10:23.394: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.016189244s
Jan 31 17:10:23.394: INFO: The phase of Pod pod1 is Running (Ready = true)
Jan 31 17:10:23.394: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7091 to expose endpoints map[pod1:[80]] 01/31/23 17:10:23.4
Jan 31 17:10:23.418: INFO: successfully validated that service endpoint-test2 in namespace services-7091 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1 01/31/23 17:10:23.418
Jan 31 17:10:23.418: INFO: Creating new exec pod
Jan 31 17:10:23.426: INFO: Waiting up to 5m0s for pod "execpodjbbb4" in namespace "services-7091" to be "running"
Jan 31 17:10:23.436: INFO: Pod "execpodjbbb4": Phase="Pending", Reason="", readiness=false. Elapsed: 10.616161ms
Jan 31 17:10:25.446: INFO: Pod "execpodjbbb4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020322392s
Jan 31 17:10:27.446: INFO: Pod "execpodjbbb4": Phase="Running", Reason="", readiness=true. Elapsed: 4.020851688s
Jan 31 17:10:27.446: INFO: Pod "execpodjbbb4" satisfied condition "running"
Jan 31 17:10:28.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Jan 31 17:10:28.685: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 31 17:10:28.685: INFO: stdout: ""
Jan 31 17:10:28.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 10.98.22.217 80'
Jan 31 17:10:28.855: INFO: stderr: "+ nc -v -z -w 2 10.98.22.217 80\nConnection to 10.98.22.217 80 port [tcp/http] succeeded!\n"
Jan 31 17:10:28.855: INFO: stdout: ""
STEP: Creating pod pod2 in namespace services-7091 01/31/23 17:10:28.855
Jan 31 17:10:28.875: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-7091" to be "running and ready"
Jan 31 17:10:28.883: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 7.843911ms
Jan 31 17:10:28.883: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:10:30.897: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022324427s
Jan 31 17:10:30.897: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:10:32.892: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.017373377s
Jan 31 17:10:32.892: INFO: The phase of Pod pod2 is Running (Ready = true)
Jan 31 17:10:32.892: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7091 to expose endpoints map[pod1:[80] pod2:[80]] 01/31/23 17:10:32.899
Jan 31 17:10:32.921: INFO: successfully validated that service endpoint-test2 in namespace services-7091 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2 01/31/23 17:10:32.922
Jan 31 17:10:33.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Jan 31 17:10:34.105: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 31 17:10:34.105: INFO: stdout: ""
Jan 31 17:10:34.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 10.98.22.217 80'
Jan 31 17:10:34.308: INFO: stderr: "+ nc -v -z -w 2 10.98.22.217 80\nConnection to 10.98.22.217 80 port [tcp/http] succeeded!\n"
Jan 31 17:10:34.308: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-7091 01/31/23 17:10:34.308
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7091 to expose endpoints map[pod2:[80]] 01/31/23 17:10:34.323
Jan 31 17:10:35.361: INFO: successfully validated that service endpoint-test2 in namespace services-7091 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2 01/31/23 17:10:35.362
Jan 31 17:10:36.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Jan 31 17:10:36.620: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 31 17:10:36.620: INFO: stdout: ""
Jan 31 17:10:36.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 10.98.22.217 80'
Jan 31 17:10:36.826: INFO: stderr: "+ nc -v -z -w 2 10.98.22.217 80\nConnection to 10.98.22.217 80 port [tcp/http] succeeded!\n"
Jan 31 17:10:36.826: INFO: stdout: ""
STEP: Deleting pod pod2 in namespace services-7091 01/31/23 17:10:36.826
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7091 to expose endpoints map[] 01/31/23 17:10:36.839
Jan 31 17:10:37.871: INFO: successfully validated that service endpoint-test2 in namespace services-7091 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 17:10:37.897: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7091" for this suite. 01/31/23 17:10:37.905
------------------------------
â€¢ [SLOW TEST] [17.659 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:10:20.255
    Jan 31 17:10:20.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 17:10:20.256
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:20.273
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:20.278
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve a basic endpoint from pods  [Conformance]
      test/e2e/network/service.go:787
    STEP: creating service endpoint-test2 in namespace services-7091 01/31/23 17:10:20.286
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7091 to expose endpoints map[] 01/31/23 17:10:20.328
    Jan 31 17:10:20.336: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
    Jan 31 17:10:21.360: INFO: successfully validated that service endpoint-test2 in namespace services-7091 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-7091 01/31/23 17:10:21.36
    Jan 31 17:10:21.378: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-7091" to be "running and ready"
    Jan 31 17:10:21.387: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.982324ms
    Jan 31 17:10:21.387: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:10:23.394: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.016189244s
    Jan 31 17:10:23.394: INFO: The phase of Pod pod1 is Running (Ready = true)
    Jan 31 17:10:23.394: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7091 to expose endpoints map[pod1:[80]] 01/31/23 17:10:23.4
    Jan 31 17:10:23.418: INFO: successfully validated that service endpoint-test2 in namespace services-7091 exposes endpoints map[pod1:[80]]
    STEP: Checking if the Service forwards traffic to pod1 01/31/23 17:10:23.418
    Jan 31 17:10:23.418: INFO: Creating new exec pod
    Jan 31 17:10:23.426: INFO: Waiting up to 5m0s for pod "execpodjbbb4" in namespace "services-7091" to be "running"
    Jan 31 17:10:23.436: INFO: Pod "execpodjbbb4": Phase="Pending", Reason="", readiness=false. Elapsed: 10.616161ms
    Jan 31 17:10:25.446: INFO: Pod "execpodjbbb4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020322392s
    Jan 31 17:10:27.446: INFO: Pod "execpodjbbb4": Phase="Running", Reason="", readiness=true. Elapsed: 4.020851688s
    Jan 31 17:10:27.446: INFO: Pod "execpodjbbb4" satisfied condition "running"
    Jan 31 17:10:28.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Jan 31 17:10:28.685: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Jan 31 17:10:28.685: INFO: stdout: ""
    Jan 31 17:10:28.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 10.98.22.217 80'
    Jan 31 17:10:28.855: INFO: stderr: "+ nc -v -z -w 2 10.98.22.217 80\nConnection to 10.98.22.217 80 port [tcp/http] succeeded!\n"
    Jan 31 17:10:28.855: INFO: stdout: ""
    STEP: Creating pod pod2 in namespace services-7091 01/31/23 17:10:28.855
    Jan 31 17:10:28.875: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-7091" to be "running and ready"
    Jan 31 17:10:28.883: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 7.843911ms
    Jan 31 17:10:28.883: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:10:30.897: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022324427s
    Jan 31 17:10:30.897: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:10:32.892: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.017373377s
    Jan 31 17:10:32.892: INFO: The phase of Pod pod2 is Running (Ready = true)
    Jan 31 17:10:32.892: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7091 to expose endpoints map[pod1:[80] pod2:[80]] 01/31/23 17:10:32.899
    Jan 31 17:10:32.921: INFO: successfully validated that service endpoint-test2 in namespace services-7091 exposes endpoints map[pod1:[80] pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod1 and pod2 01/31/23 17:10:32.922
    Jan 31 17:10:33.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Jan 31 17:10:34.105: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Jan 31 17:10:34.105: INFO: stdout: ""
    Jan 31 17:10:34.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 10.98.22.217 80'
    Jan 31 17:10:34.308: INFO: stderr: "+ nc -v -z -w 2 10.98.22.217 80\nConnection to 10.98.22.217 80 port [tcp/http] succeeded!\n"
    Jan 31 17:10:34.308: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-7091 01/31/23 17:10:34.308
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7091 to expose endpoints map[pod2:[80]] 01/31/23 17:10:34.323
    Jan 31 17:10:35.361: INFO: successfully validated that service endpoint-test2 in namespace services-7091 exposes endpoints map[pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod2 01/31/23 17:10:35.362
    Jan 31 17:10:36.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Jan 31 17:10:36.620: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Jan 31 17:10:36.620: INFO: stdout: ""
    Jan 31 17:10:36.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-7091 exec execpodjbbb4 -- /bin/sh -x -c nc -v -z -w 2 10.98.22.217 80'
    Jan 31 17:10:36.826: INFO: stderr: "+ nc -v -z -w 2 10.98.22.217 80\nConnection to 10.98.22.217 80 port [tcp/http] succeeded!\n"
    Jan 31 17:10:36.826: INFO: stdout: ""
    STEP: Deleting pod pod2 in namespace services-7091 01/31/23 17:10:36.826
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7091 to expose endpoints map[] 01/31/23 17:10:36.839
    Jan 31 17:10:37.871: INFO: successfully validated that service endpoint-test2 in namespace services-7091 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:10:37.897: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7091" for this suite. 01/31/23 17:10:37.905
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:10:37.914
Jan 31 17:10:37.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 17:10:37.915
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:37.935
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:37.943
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
STEP: Creating a pod to test emptydir 0777 on tmpfs 01/31/23 17:10:37.95
Jan 31 17:10:37.960: INFO: Waiting up to 5m0s for pod "pod-57d3d08c-6298-4b89-bc83-482236cf329f" in namespace "emptydir-9529" to be "Succeeded or Failed"
Jan 31 17:10:37.966: INFO: Pod "pod-57d3d08c-6298-4b89-bc83-482236cf329f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.183204ms
Jan 31 17:10:39.977: INFO: Pod "pod-57d3d08c-6298-4b89-bc83-482236cf329f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016557243s
Jan 31 17:10:41.983: INFO: Pod "pod-57d3d08c-6298-4b89-bc83-482236cf329f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023317623s
STEP: Saw pod success 01/31/23 17:10:41.984
Jan 31 17:10:41.984: INFO: Pod "pod-57d3d08c-6298-4b89-bc83-482236cf329f" satisfied condition "Succeeded or Failed"
Jan 31 17:10:41.993: INFO: Trying to get logs from node 26-m02 pod pod-57d3d08c-6298-4b89-bc83-482236cf329f container test-container: <nil>
STEP: delete the pod 01/31/23 17:10:42.027
Jan 31 17:10:42.046: INFO: Waiting for pod pod-57d3d08c-6298-4b89-bc83-482236cf329f to disappear
Jan 31 17:10:42.053: INFO: Pod pod-57d3d08c-6298-4b89-bc83-482236cf329f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:10:42.053: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9529" for this suite. 01/31/23 17:10:42.06
------------------------------
â€¢ [4.155 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:10:37.914
    Jan 31 17:10:37.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 17:10:37.915
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:37.935
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:37.943
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:147
    STEP: Creating a pod to test emptydir 0777 on tmpfs 01/31/23 17:10:37.95
    Jan 31 17:10:37.960: INFO: Waiting up to 5m0s for pod "pod-57d3d08c-6298-4b89-bc83-482236cf329f" in namespace "emptydir-9529" to be "Succeeded or Failed"
    Jan 31 17:10:37.966: INFO: Pod "pod-57d3d08c-6298-4b89-bc83-482236cf329f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.183204ms
    Jan 31 17:10:39.977: INFO: Pod "pod-57d3d08c-6298-4b89-bc83-482236cf329f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016557243s
    Jan 31 17:10:41.983: INFO: Pod "pod-57d3d08c-6298-4b89-bc83-482236cf329f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023317623s
    STEP: Saw pod success 01/31/23 17:10:41.984
    Jan 31 17:10:41.984: INFO: Pod "pod-57d3d08c-6298-4b89-bc83-482236cf329f" satisfied condition "Succeeded or Failed"
    Jan 31 17:10:41.993: INFO: Trying to get logs from node 26-m02 pod pod-57d3d08c-6298-4b89-bc83-482236cf329f container test-container: <nil>
    STEP: delete the pod 01/31/23 17:10:42.027
    Jan 31 17:10:42.046: INFO: Waiting for pod pod-57d3d08c-6298-4b89-bc83-482236cf329f to disappear
    Jan 31 17:10:42.053: INFO: Pod pod-57d3d08c-6298-4b89-bc83-482236cf329f no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:10:42.053: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9529" for this suite. 01/31/23 17:10:42.06
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:10:42.071
Jan 31 17:10:42.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename endpointslice 01/31/23 17:10:42.072
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:42.09
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:42.097
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
STEP: getting /apis 01/31/23 17:10:42.103
STEP: getting /apis/discovery.k8s.io 01/31/23 17:10:42.108
STEP: getting /apis/discovery.k8s.iov1 01/31/23 17:10:42.111
STEP: creating 01/31/23 17:10:42.114
STEP: getting 01/31/23 17:10:42.131
STEP: listing 01/31/23 17:10:42.139
STEP: watching 01/31/23 17:10:42.146
Jan 31 17:10:42.147: INFO: starting watch
STEP: cluster-wide listing 01/31/23 17:10:42.151
STEP: cluster-wide watching 01/31/23 17:10:42.159
Jan 31 17:10:42.159: INFO: starting watch
STEP: patching 01/31/23 17:10:42.162
STEP: updating 01/31/23 17:10:42.17
Jan 31 17:10:42.183: INFO: waiting for watch events with expected annotations
Jan 31 17:10:42.184: INFO: saw patched and updated annotations
STEP: deleting 01/31/23 17:10:42.184
STEP: deleting a collection 01/31/23 17:10:42.201
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Jan 31 17:10:42.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-6148" for this suite. 01/31/23 17:10:42.234
------------------------------
â€¢ [0.173 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:10:42.071
    Jan 31 17:10:42.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename endpointslice 01/31/23 17:10:42.072
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:42.09
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:42.097
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should support creating EndpointSlice API operations [Conformance]
      test/e2e/network/endpointslice.go:353
    STEP: getting /apis 01/31/23 17:10:42.103
    STEP: getting /apis/discovery.k8s.io 01/31/23 17:10:42.108
    STEP: getting /apis/discovery.k8s.iov1 01/31/23 17:10:42.111
    STEP: creating 01/31/23 17:10:42.114
    STEP: getting 01/31/23 17:10:42.131
    STEP: listing 01/31/23 17:10:42.139
    STEP: watching 01/31/23 17:10:42.146
    Jan 31 17:10:42.147: INFO: starting watch
    STEP: cluster-wide listing 01/31/23 17:10:42.151
    STEP: cluster-wide watching 01/31/23 17:10:42.159
    Jan 31 17:10:42.159: INFO: starting watch
    STEP: patching 01/31/23 17:10:42.162
    STEP: updating 01/31/23 17:10:42.17
    Jan 31 17:10:42.183: INFO: waiting for watch events with expected annotations
    Jan 31 17:10:42.184: INFO: saw patched and updated annotations
    STEP: deleting 01/31/23 17:10:42.184
    STEP: deleting a collection 01/31/23 17:10:42.201
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:10:42.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-6148" for this suite. 01/31/23 17:10:42.234
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:10:42.246
Jan 31 17:10:42.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:10:42.248
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:42.27
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:42.276
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
STEP: Creating the pod 01/31/23 17:10:42.284
Jan 31 17:10:42.293: INFO: Waiting up to 5m0s for pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d" in namespace "projected-9140" to be "running and ready"
Jan 31 17:10:42.299: INFO: Pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.706868ms
Jan 31 17:10:42.299: INFO: The phase of Pod annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:10:44.310: INFO: Pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016825544s
Jan 31 17:10:44.310: INFO: The phase of Pod annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:10:46.308: INFO: Pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d": Phase="Running", Reason="", readiness=true. Elapsed: 4.014622897s
Jan 31 17:10:46.308: INFO: The phase of Pod annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d is Running (Ready = true)
Jan 31 17:10:46.308: INFO: Pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d" satisfied condition "running and ready"
Jan 31 17:10:46.863: INFO: Successfully updated pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 17:10:48.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9140" for this suite. 01/31/23 17:10:48.933
------------------------------
â€¢ [SLOW TEST] [6.702 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:10:42.246
    Jan 31 17:10:42.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:10:42.248
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:42.27
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:42.276
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:162
    STEP: Creating the pod 01/31/23 17:10:42.284
    Jan 31 17:10:42.293: INFO: Waiting up to 5m0s for pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d" in namespace "projected-9140" to be "running and ready"
    Jan 31 17:10:42.299: INFO: Pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.706868ms
    Jan 31 17:10:42.299: INFO: The phase of Pod annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:10:44.310: INFO: Pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016825544s
    Jan 31 17:10:44.310: INFO: The phase of Pod annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:10:46.308: INFO: Pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d": Phase="Running", Reason="", readiness=true. Elapsed: 4.014622897s
    Jan 31 17:10:46.308: INFO: The phase of Pod annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d is Running (Ready = true)
    Jan 31 17:10:46.308: INFO: Pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d" satisfied condition "running and ready"
    Jan 31 17:10:46.863: INFO: Successfully updated pod "annotationupdate53938ecb-b2b4-427a-8fca-3397fcf0642d"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:10:48.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9140" for this suite. 01/31/23 17:10:48.933
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:10:48.949
Jan 31 17:10:48.949: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 17:10:48.95
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:48.969
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:48.975
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 17:10:49.009
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:10:49.621
STEP: Deploying the webhook pod 01/31/23 17:10:49.638
STEP: Wait for the deployment to be ready 01/31/23 17:10:49.661
Jan 31 17:10:49.676: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 17:10:51.697: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 10, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 10, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 10, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 10, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 17:10:53.706
STEP: Verifying the service has paired with the endpoint 01/31/23 17:10:53.768
Jan 31 17:10:54.768: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
STEP: Setting timeout (1s) shorter than webhook latency (5s) 01/31/23 17:10:54.784
STEP: Registering slow webhook via the AdmissionRegistration API 01/31/23 17:10:54.784
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 01/31/23 17:10:54.822
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 01/31/23 17:10:55.842
STEP: Registering slow webhook via the AdmissionRegistration API 01/31/23 17:10:55.843
STEP: Having no error when timeout is longer than webhook latency 01/31/23 17:10:56.901
STEP: Registering slow webhook via the AdmissionRegistration API 01/31/23 17:10:56.902
STEP: Having no error when timeout is empty (defaulted to 10s in v1) 01/31/23 17:11:01.963
STEP: Registering slow webhook via the AdmissionRegistration API 01/31/23 17:11:01.964
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:11:07.005: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-4486" for this suite. 01/31/23 17:11:07.075
STEP: Destroying namespace "webhook-4486-markers" for this suite. 01/31/23 17:11:07.087
------------------------------
â€¢ [SLOW TEST] [18.149 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:10:48.949
    Jan 31 17:10:48.949: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 17:10:48.95
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:10:48.969
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:10:48.975
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 17:10:49.009
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:10:49.621
    STEP: Deploying the webhook pod 01/31/23 17:10:49.638
    STEP: Wait for the deployment to be ready 01/31/23 17:10:49.661
    Jan 31 17:10:49.676: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 17:10:51.697: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 10, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 10, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 10, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 10, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 17:10:53.706
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:10:53.768
    Jan 31 17:10:54.768: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should honor timeout [Conformance]
      test/e2e/apimachinery/webhook.go:381
    STEP: Setting timeout (1s) shorter than webhook latency (5s) 01/31/23 17:10:54.784
    STEP: Registering slow webhook via the AdmissionRegistration API 01/31/23 17:10:54.784
    STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 01/31/23 17:10:54.822
    STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 01/31/23 17:10:55.842
    STEP: Registering slow webhook via the AdmissionRegistration API 01/31/23 17:10:55.843
    STEP: Having no error when timeout is longer than webhook latency 01/31/23 17:10:56.901
    STEP: Registering slow webhook via the AdmissionRegistration API 01/31/23 17:10:56.902
    STEP: Having no error when timeout is empty (defaulted to 10s in v1) 01/31/23 17:11:01.963
    STEP: Registering slow webhook via the AdmissionRegistration API 01/31/23 17:11:01.964
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:11:07.005: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-4486" for this suite. 01/31/23 17:11:07.075
    STEP: Destroying namespace "webhook-4486-markers" for this suite. 01/31/23 17:11:07.087
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:11:07.098
Jan 31 17:11:07.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:11:07.1
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:07.12
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:07.134
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 01/31/23 17:11:07.145
Jan 31 17:11:07.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 01/31/23 17:11:13.319
Jan 31 17:11:13.320: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:11:14.802: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:11:20.979: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-3097" for this suite. 01/31/23 17:11:20.989
------------------------------
â€¢ [SLOW TEST] [13.899 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:11:07.098
    Jan 31 17:11:07.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:11:07.1
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:07.12
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:07.134
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group but different versions [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:309
    STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 01/31/23 17:11:07.145
    Jan 31 17:11:07.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 01/31/23 17:11:13.319
    Jan 31 17:11:13.320: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:11:14.802: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:11:20.979: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-3097" for this suite. 01/31/23 17:11:20.989
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Downward API
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:11:20.998
Jan 31 17:11:20.998: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 17:11:20.999
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:21.017
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:21.023
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
STEP: Creating a pod to test downward api env vars 01/31/23 17:11:21.03
Jan 31 17:11:21.043: INFO: Waiting up to 5m0s for pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519" in namespace "downward-api-6905" to be "Succeeded or Failed"
Jan 31 17:11:21.052: INFO: Pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519": Phase="Pending", Reason="", readiness=false. Elapsed: 8.89091ms
Jan 31 17:11:23.062: INFO: Pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019071354s
Jan 31 17:11:25.063: INFO: Pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019598987s
Jan 31 17:11:27.068: INFO: Pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.024624331s
STEP: Saw pod success 01/31/23 17:11:27.068
Jan 31 17:11:27.068: INFO: Pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519" satisfied condition "Succeeded or Failed"
Jan 31 17:11:27.077: INFO: Trying to get logs from node 26-m02 pod downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519 container dapi-container: <nil>
STEP: delete the pod 01/31/23 17:11:27.096
Jan 31 17:11:27.109: INFO: Waiting for pod downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519 to disappear
Jan 31 17:11:27.114: INFO: Pod downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Jan 31 17:11:27.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6905" for this suite. 01/31/23 17:11:27.12
------------------------------
â€¢ [SLOW TEST] [6.130 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:11:20.998
    Jan 31 17:11:20.998: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 17:11:20.999
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:21.017
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:21.023
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:44
    STEP: Creating a pod to test downward api env vars 01/31/23 17:11:21.03
    Jan 31 17:11:21.043: INFO: Waiting up to 5m0s for pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519" in namespace "downward-api-6905" to be "Succeeded or Failed"
    Jan 31 17:11:21.052: INFO: Pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519": Phase="Pending", Reason="", readiness=false. Elapsed: 8.89091ms
    Jan 31 17:11:23.062: INFO: Pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019071354s
    Jan 31 17:11:25.063: INFO: Pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019598987s
    Jan 31 17:11:27.068: INFO: Pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.024624331s
    STEP: Saw pod success 01/31/23 17:11:27.068
    Jan 31 17:11:27.068: INFO: Pod "downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519" satisfied condition "Succeeded or Failed"
    Jan 31 17:11:27.077: INFO: Trying to get logs from node 26-m02 pod downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519 container dapi-container: <nil>
    STEP: delete the pod 01/31/23 17:11:27.096
    Jan 31 17:11:27.109: INFO: Waiting for pod downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519 to disappear
    Jan 31 17:11:27.114: INFO: Pod downward-api-c2adb2aa-51c9-41d5-bee3-a20115bfd519 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:11:27.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6905" for this suite. 01/31/23 17:11:27.12
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:11:27.129
Jan 31 17:11:27.129: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 17:11:27.13
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:27.148
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:27.154
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
STEP: Creating a pod to test emptydir 0644 on node default medium 01/31/23 17:11:27.162
Jan 31 17:11:27.173: INFO: Waiting up to 5m0s for pod "pod-f17453ad-23a5-4510-8765-0560b896fba8" in namespace "emptydir-9901" to be "Succeeded or Failed"
Jan 31 17:11:27.183: INFO: Pod "pod-f17453ad-23a5-4510-8765-0560b896fba8": Phase="Pending", Reason="", readiness=false. Elapsed: 9.753951ms
Jan 31 17:11:29.193: INFO: Pod "pod-f17453ad-23a5-4510-8765-0560b896fba8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01984312s
Jan 31 17:11:31.194: INFO: Pod "pod-f17453ad-23a5-4510-8765-0560b896fba8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020947891s
STEP: Saw pod success 01/31/23 17:11:31.195
Jan 31 17:11:31.195: INFO: Pod "pod-f17453ad-23a5-4510-8765-0560b896fba8" satisfied condition "Succeeded or Failed"
Jan 31 17:11:31.204: INFO: Trying to get logs from node 26-m02 pod pod-f17453ad-23a5-4510-8765-0560b896fba8 container test-container: <nil>
STEP: delete the pod 01/31/23 17:11:31.224
Jan 31 17:11:31.246: INFO: Waiting for pod pod-f17453ad-23a5-4510-8765-0560b896fba8 to disappear
Jan 31 17:11:31.256: INFO: Pod pod-f17453ad-23a5-4510-8765-0560b896fba8 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:11:31.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9901" for this suite. 01/31/23 17:11:31.263
------------------------------
â€¢ [4.147 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:11:27.129
    Jan 31 17:11:27.129: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 17:11:27.13
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:27.148
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:27.154
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:197
    STEP: Creating a pod to test emptydir 0644 on node default medium 01/31/23 17:11:27.162
    Jan 31 17:11:27.173: INFO: Waiting up to 5m0s for pod "pod-f17453ad-23a5-4510-8765-0560b896fba8" in namespace "emptydir-9901" to be "Succeeded or Failed"
    Jan 31 17:11:27.183: INFO: Pod "pod-f17453ad-23a5-4510-8765-0560b896fba8": Phase="Pending", Reason="", readiness=false. Elapsed: 9.753951ms
    Jan 31 17:11:29.193: INFO: Pod "pod-f17453ad-23a5-4510-8765-0560b896fba8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01984312s
    Jan 31 17:11:31.194: INFO: Pod "pod-f17453ad-23a5-4510-8765-0560b896fba8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020947891s
    STEP: Saw pod success 01/31/23 17:11:31.195
    Jan 31 17:11:31.195: INFO: Pod "pod-f17453ad-23a5-4510-8765-0560b896fba8" satisfied condition "Succeeded or Failed"
    Jan 31 17:11:31.204: INFO: Trying to get logs from node 26-m02 pod pod-f17453ad-23a5-4510-8765-0560b896fba8 container test-container: <nil>
    STEP: delete the pod 01/31/23 17:11:31.224
    Jan 31 17:11:31.246: INFO: Waiting for pod pod-f17453ad-23a5-4510-8765-0560b896fba8 to disappear
    Jan 31 17:11:31.256: INFO: Pod pod-f17453ad-23a5-4510-8765-0560b896fba8 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:11:31.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9901" for this suite. 01/31/23 17:11:31.263
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:11:31.277
Jan 31 17:11:31.277: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 17:11:31.279
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:31.302
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:31.311
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
STEP: Creating secret with name secret-test-7afbed16-11bc-41db-83f7-3c3c8143a160 01/31/23 17:11:31.318
STEP: Creating a pod to test consume secrets 01/31/23 17:11:31.326
Jan 31 17:11:31.335: INFO: Waiting up to 5m0s for pod "pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2" in namespace "secrets-7649" to be "Succeeded or Failed"
Jan 31 17:11:31.345: INFO: Pod "pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2": Phase="Pending", Reason="", readiness=false. Elapsed: 10.043973ms
Jan 31 17:11:33.358: INFO: Pod "pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022711233s
Jan 31 17:11:35.356: INFO: Pod "pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021218505s
STEP: Saw pod success 01/31/23 17:11:35.356
Jan 31 17:11:35.356: INFO: Pod "pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2" satisfied condition "Succeeded or Failed"
Jan 31 17:11:35.366: INFO: Trying to get logs from node 26-m02 pod pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2 container secret-volume-test: <nil>
STEP: delete the pod 01/31/23 17:11:35.383
Jan 31 17:11:35.407: INFO: Waiting for pod pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2 to disappear
Jan 31 17:11:35.416: INFO: Pod pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 17:11:35.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-7649" for this suite. 01/31/23 17:11:35.423
------------------------------
â€¢ [4.154 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:11:31.277
    Jan 31 17:11:31.277: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 17:11:31.279
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:31.302
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:31.311
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:68
    STEP: Creating secret with name secret-test-7afbed16-11bc-41db-83f7-3c3c8143a160 01/31/23 17:11:31.318
    STEP: Creating a pod to test consume secrets 01/31/23 17:11:31.326
    Jan 31 17:11:31.335: INFO: Waiting up to 5m0s for pod "pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2" in namespace "secrets-7649" to be "Succeeded or Failed"
    Jan 31 17:11:31.345: INFO: Pod "pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2": Phase="Pending", Reason="", readiness=false. Elapsed: 10.043973ms
    Jan 31 17:11:33.358: INFO: Pod "pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022711233s
    Jan 31 17:11:35.356: INFO: Pod "pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021218505s
    STEP: Saw pod success 01/31/23 17:11:35.356
    Jan 31 17:11:35.356: INFO: Pod "pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2" satisfied condition "Succeeded or Failed"
    Jan 31 17:11:35.366: INFO: Trying to get logs from node 26-m02 pod pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2 container secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:11:35.383
    Jan 31 17:11:35.407: INFO: Waiting for pod pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2 to disappear
    Jan 31 17:11:35.416: INFO: Pod pod-secrets-8ef91416-4811-4196-8ab2-1d74b95a6ea2 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:11:35.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-7649" for this suite. 01/31/23 17:11:35.423
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] Deployment
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:11:35.432
Jan 31 17:11:35.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename deployment 01/31/23 17:11:35.434
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:35.454
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:35.459
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
Jan 31 17:11:35.465: INFO: Creating deployment "test-recreate-deployment"
Jan 31 17:11:35.471: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Jan 31 17:11:35.483: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Jan 31 17:11:37.502: INFO: Waiting deployment "test-recreate-deployment" to complete
Jan 31 17:11:37.510: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Jan 31 17:11:37.533: INFO: Updating deployment test-recreate-deployment
Jan 31 17:11:37.533: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 31 17:11:37.621: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-3768  7dae1593-72f1-4065-8296-1787dda11b04 6768 2 2023-01-31 17:11:35 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0008964d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-31 17:11:37 +0000 UTC,LastTransitionTime:2023-01-31 17:11:37 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-01-31 17:11:37 +0000 UTC,LastTransitionTime:2023-01-31 17:11:35 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Jan 31 17:11:37.628: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-3768  30c84dd0-5a9c-4545-b234-c4c49f0ca03e 6767 1 2023-01-31 17:11:37 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 7dae1593-72f1-4065-8296-1787dda11b04 0xc000897180 0xc000897181}] [] [{k3s Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dae1593-72f1-4065-8296-1787dda11b04\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000897278 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 31 17:11:37.628: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Jan 31 17:11:37.628: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-3768  046096d9-d9d5-4375-8191-0943345df1ea 6757 2 2023-01-31 17:11:35 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 7dae1593-72f1-4065-8296-1787dda11b04 0xc000897027 0xc000897028}] [] [{k3s Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dae1593-72f1-4065-8296-1787dda11b04\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000897128 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 31 17:11:37.634: INFO: Pod "test-recreate-deployment-cff6dc657-6fdjz" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-6fdjz test-recreate-deployment-cff6dc657- deployment-3768  d177ba09-78d8-4d6c-8744-63614ea5f0d0 6769 0 2023-01-31 17:11:37 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 30c84dd0-5a9c-4545-b234-c4c49f0ca03e 0xc000897bb0 0xc000897bb1}] [] [{k3s Update v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"30c84dd0-5a9c-4545-b234-c4c49f0ca03e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cs6kx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cs6kx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 31 17:11:37.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-3768" for this suite. 01/31/23 17:11:37.64
------------------------------
â€¢ [2.216 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:11:35.432
    Jan 31 17:11:35.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename deployment 01/31/23 17:11:35.434
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:35.454
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:35.459
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RecreateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:113
    Jan 31 17:11:35.465: INFO: Creating deployment "test-recreate-deployment"
    Jan 31 17:11:35.471: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
    Jan 31 17:11:35.483: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
    Jan 31 17:11:37.502: INFO: Waiting deployment "test-recreate-deployment" to complete
    Jan 31 17:11:37.510: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
    Jan 31 17:11:37.533: INFO: Updating deployment test-recreate-deployment
    Jan 31 17:11:37.533: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 31 17:11:37.621: INFO: Deployment "test-recreate-deployment":
    &Deployment{ObjectMeta:{test-recreate-deployment  deployment-3768  7dae1593-72f1-4065-8296-1787dda11b04 6768 2 2023-01-31 17:11:35 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0008964d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-31 17:11:37 +0000 UTC,LastTransitionTime:2023-01-31 17:11:37 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-01-31 17:11:37 +0000 UTC,LastTransitionTime:2023-01-31 17:11:35 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

    Jan 31 17:11:37.628: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
    &ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-3768  30c84dd0-5a9c-4545-b234-c4c49f0ca03e 6767 1 2023-01-31 17:11:37 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 7dae1593-72f1-4065-8296-1787dda11b04 0xc000897180 0xc000897181}] [] [{k3s Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dae1593-72f1-4065-8296-1787dda11b04\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000897278 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 17:11:37.628: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
    Jan 31 17:11:37.628: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-3768  046096d9-d9d5-4375-8191-0943345df1ea 6757 2 2023-01-31 17:11:35 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 7dae1593-72f1-4065-8296-1787dda11b04 0xc000897027 0xc000897028}] [] [{k3s Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dae1593-72f1-4065-8296-1787dda11b04\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000897128 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 17:11:37.634: INFO: Pod "test-recreate-deployment-cff6dc657-6fdjz" is not available:
    &Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-6fdjz test-recreate-deployment-cff6dc657- deployment-3768  d177ba09-78d8-4d6c-8744-63614ea5f0d0 6769 0 2023-01-31 17:11:37 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 30c84dd0-5a9c-4545-b234-c4c49f0ca03e 0xc000897bb0 0xc000897bb1}] [] [{k3s Update v1 2023-01-31 17:11:37 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"30c84dd0-5a9c-4545-b234-c4c49f0ca03e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cs6kx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cs6kx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:11:37.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-3768" for this suite. 01/31/23 17:11:37.64
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:11:37.648
Jan 31 17:11:37.648: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename var-expansion 01/31/23 17:11:37.649
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:37.664
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:37.671
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
STEP: Creating a pod to test substitution in container's args 01/31/23 17:11:37.68
Jan 31 17:11:37.688: INFO: Waiting up to 5m0s for pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de" in namespace "var-expansion-8290" to be "Succeeded or Failed"
Jan 31 17:11:37.695: INFO: Pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de": Phase="Pending", Reason="", readiness=false. Elapsed: 6.745182ms
Jan 31 17:11:39.710: INFO: Pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021985704s
Jan 31 17:11:41.704: INFO: Pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de": Phase="Pending", Reason="", readiness=false. Elapsed: 4.016100618s
Jan 31 17:11:43.704: INFO: Pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.015834352s
STEP: Saw pod success 01/31/23 17:11:43.704
Jan 31 17:11:43.704: INFO: Pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de" satisfied condition "Succeeded or Failed"
Jan 31 17:11:43.711: INFO: Trying to get logs from node 26-m02 pod var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de container dapi-container: <nil>
STEP: delete the pod 01/31/23 17:11:43.732
Jan 31 17:11:43.745: INFO: Waiting for pod var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de to disappear
Jan 31 17:11:43.752: INFO: Pod var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 31 17:11:43.752: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-8290" for this suite. 01/31/23 17:11:43.759
------------------------------
â€¢ [SLOW TEST] [6.119 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:11:37.648
    Jan 31 17:11:37.648: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename var-expansion 01/31/23 17:11:37.649
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:37.664
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:37.671
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's args [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:92
    STEP: Creating a pod to test substitution in container's args 01/31/23 17:11:37.68
    Jan 31 17:11:37.688: INFO: Waiting up to 5m0s for pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de" in namespace "var-expansion-8290" to be "Succeeded or Failed"
    Jan 31 17:11:37.695: INFO: Pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de": Phase="Pending", Reason="", readiness=false. Elapsed: 6.745182ms
    Jan 31 17:11:39.710: INFO: Pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021985704s
    Jan 31 17:11:41.704: INFO: Pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de": Phase="Pending", Reason="", readiness=false. Elapsed: 4.016100618s
    Jan 31 17:11:43.704: INFO: Pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.015834352s
    STEP: Saw pod success 01/31/23 17:11:43.704
    Jan 31 17:11:43.704: INFO: Pod "var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de" satisfied condition "Succeeded or Failed"
    Jan 31 17:11:43.711: INFO: Trying to get logs from node 26-m02 pod var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de container dapi-container: <nil>
    STEP: delete the pod 01/31/23 17:11:43.732
    Jan 31 17:11:43.745: INFO: Waiting for pod var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de to disappear
    Jan 31 17:11:43.752: INFO: Pod var-expansion-74f4d5da-aea9-4c24-b8ba-001aa333d3de no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:11:43.752: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-8290" for this suite. 01/31/23 17:11:43.759
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:11:43.768
Jan 31 17:11:43.768: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:11:43.769
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:43.787
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:43.793
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
STEP: Creating a pod to test downward API volume plugin 01/31/23 17:11:43.799
Jan 31 17:11:43.811: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1" in namespace "projected-6147" to be "Succeeded or Failed"
Jan 31 17:11:43.818: INFO: Pod "downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1": Phase="Pending", Reason="", readiness=false. Elapsed: 7.768498ms
Jan 31 17:11:45.829: INFO: Pod "downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018498957s
Jan 31 17:11:47.831: INFO: Pod "downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020390793s
STEP: Saw pod success 01/31/23 17:11:47.831
Jan 31 17:11:47.831: INFO: Pod "downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1" satisfied condition "Succeeded or Failed"
Jan 31 17:11:47.841: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1 container client-container: <nil>
STEP: delete the pod 01/31/23 17:11:47.857
Jan 31 17:11:47.883: INFO: Waiting for pod downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1 to disappear
Jan 31 17:11:47.891: INFO: Pod downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 17:11:47.891: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6147" for this suite. 01/31/23 17:11:47.901
------------------------------
â€¢ [4.144 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:11:43.768
    Jan 31 17:11:43.768: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:11:43.769
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:43.787
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:43.793
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:84
    STEP: Creating a pod to test downward API volume plugin 01/31/23 17:11:43.799
    Jan 31 17:11:43.811: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1" in namespace "projected-6147" to be "Succeeded or Failed"
    Jan 31 17:11:43.818: INFO: Pod "downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1": Phase="Pending", Reason="", readiness=false. Elapsed: 7.768498ms
    Jan 31 17:11:45.829: INFO: Pod "downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018498957s
    Jan 31 17:11:47.831: INFO: Pod "downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020390793s
    STEP: Saw pod success 01/31/23 17:11:47.831
    Jan 31 17:11:47.831: INFO: Pod "downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1" satisfied condition "Succeeded or Failed"
    Jan 31 17:11:47.841: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1 container client-container: <nil>
    STEP: delete the pod 01/31/23 17:11:47.857
    Jan 31 17:11:47.883: INFO: Waiting for pod downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1 to disappear
    Jan 31 17:11:47.891: INFO: Pod downwardapi-volume-c1d9a122-edfc-4d23-8fcb-2e08df34b4b1 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:11:47.891: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6147" for this suite. 01/31/23 17:11:47.901
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:11:47.914
Jan 31 17:11:47.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 17:11:47.915
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:47.931
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:47.936
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
STEP: Creating a pod to test emptydir 0666 on node default medium 01/31/23 17:11:47.942
Jan 31 17:11:47.950: INFO: Waiting up to 5m0s for pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f" in namespace "emptydir-654" to be "Succeeded or Failed"
Jan 31 17:11:47.958: INFO: Pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f": Phase="Pending", Reason="", readiness=false. Elapsed: 8.437329ms
Jan 31 17:11:49.967: INFO: Pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016600707s
Jan 31 17:11:51.968: INFO: Pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018237701s
Jan 31 17:11:53.969: INFO: Pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019140618s
STEP: Saw pod success 01/31/23 17:11:53.969
Jan 31 17:11:53.969: INFO: Pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f" satisfied condition "Succeeded or Failed"
Jan 31 17:11:53.979: INFO: Trying to get logs from node 26-m02 pod pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f container test-container: <nil>
STEP: delete the pod 01/31/23 17:11:54.001
Jan 31 17:11:54.021: INFO: Waiting for pod pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f to disappear
Jan 31 17:11:54.030: INFO: Pod pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:11:54.030: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-654" for this suite. 01/31/23 17:11:54.037
------------------------------
â€¢ [SLOW TEST] [6.132 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:11:47.914
    Jan 31 17:11:47.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 17:11:47.915
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:47.931
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:47.936
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:177
    STEP: Creating a pod to test emptydir 0666 on node default medium 01/31/23 17:11:47.942
    Jan 31 17:11:47.950: INFO: Waiting up to 5m0s for pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f" in namespace "emptydir-654" to be "Succeeded or Failed"
    Jan 31 17:11:47.958: INFO: Pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f": Phase="Pending", Reason="", readiness=false. Elapsed: 8.437329ms
    Jan 31 17:11:49.967: INFO: Pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016600707s
    Jan 31 17:11:51.968: INFO: Pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018237701s
    Jan 31 17:11:53.969: INFO: Pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019140618s
    STEP: Saw pod success 01/31/23 17:11:53.969
    Jan 31 17:11:53.969: INFO: Pod "pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f" satisfied condition "Succeeded or Failed"
    Jan 31 17:11:53.979: INFO: Trying to get logs from node 26-m02 pod pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f container test-container: <nil>
    STEP: delete the pod 01/31/23 17:11:54.001
    Jan 31 17:11:54.021: INFO: Waiting for pod pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f to disappear
    Jan 31 17:11:54.030: INFO: Pod pod-b42c7f40-2ebe-4828-a689-2a2f29c1be8f no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:11:54.030: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-654" for this suite. 01/31/23 17:11:54.037
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:11:54.047
Jan 31 17:11:54.047: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-runtime 01/31/23 17:11:54.047
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:54.066
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:54.073
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
STEP: create the container 01/31/23 17:11:54.079
STEP: wait for the container to reach Failed 01/31/23 17:11:54.088
STEP: get the container status 01/31/23 17:11:59.145
STEP: the container should be terminated 01/31/23 17:11:59.154
STEP: the termination message should be set 01/31/23 17:11:59.154
Jan 31 17:11:59.154: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 01/31/23 17:11:59.154
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Jan 31 17:11:59.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-1056" for this suite. 01/31/23 17:11:59.192
------------------------------
â€¢ [SLOW TEST] [5.154 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:11:54.047
    Jan 31 17:11:54.047: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-runtime 01/31/23 17:11:54.047
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:54.066
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:54.073
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216
    STEP: create the container 01/31/23 17:11:54.079
    STEP: wait for the container to reach Failed 01/31/23 17:11:54.088
    STEP: get the container status 01/31/23 17:11:59.145
    STEP: the container should be terminated 01/31/23 17:11:59.154
    STEP: the termination message should be set 01/31/23 17:11:59.154
    Jan 31 17:11:59.154: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 01/31/23 17:11:59.154
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:11:59.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-1056" for this suite. 01/31/23 17:11:59.192
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace
  should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:11:59.202
Jan 31 17:11:59.202: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:11:59.203
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:59.221
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:59.228
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1734
[It] should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/31/23 17:11:59.233
Jan 31 17:11:59.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-6471 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jan 31 17:11:59.314: INFO: stderr: ""
Jan 31 17:11:59.314: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running 01/31/23 17:11:59.314
STEP: verifying the pod e2e-test-httpd-pod was created 01/31/23 17:12:04.365
Jan 31 17:12:04.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-6471 get pod e2e-test-httpd-pod -o json'
Jan 31 17:12:04.448: INFO: stderr: ""
Jan 31 17:12:04.448: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-01-31T17:11:59Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6471\",\n        \"resourceVersion\": \"6908\",\n        \"uid\": \"af547ef2-a796-4806-bfe2-8c1ae0f3dc50\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-2h9h7\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"26-m02\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-2h9h7\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-31T17:11:59Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-31T17:12:01Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-31T17:12:01Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-31T17:11:59Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"docker://dcab374bcc9401ebc18648bf029141d62813f16c19b95afef9d2a29b3574ce3a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-01-31T17:12:00Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.61.148\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.158\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.158\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-01-31T17:11:59Z\"\n    }\n}\n"
STEP: replace the image in the pod 01/31/23 17:12:04.448
Jan 31 17:12:04.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-6471 replace -f -'
Jan 31 17:12:05.018: INFO: stderr: ""
Jan 31 17:12:05.018: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 01/31/23 17:12:05.018
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1738
Jan 31 17:12:05.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-6471 delete pods e2e-test-httpd-pod'
Jan 31 17:12:06.875: INFO: stderr: ""
Jan 31 17:12:06.875: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:12:06.875: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-6471" for this suite. 01/31/23 17:12:06.885
------------------------------
â€¢ [SLOW TEST] [7.692 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1731
    should update a single-container pod's image  [Conformance]
    test/e2e/kubectl/kubectl.go:1747

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:11:59.202
    Jan 31 17:11:59.202: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:11:59.203
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:11:59.221
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:11:59.228
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1734
    [It] should update a single-container pod's image  [Conformance]
      test/e2e/kubectl/kubectl.go:1747
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/31/23 17:11:59.233
    Jan 31 17:11:59.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-6471 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Jan 31 17:11:59.314: INFO: stderr: ""
    Jan 31 17:11:59.314: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod is running 01/31/23 17:11:59.314
    STEP: verifying the pod e2e-test-httpd-pod was created 01/31/23 17:12:04.365
    Jan 31 17:12:04.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-6471 get pod e2e-test-httpd-pod -o json'
    Jan 31 17:12:04.448: INFO: stderr: ""
    Jan 31 17:12:04.448: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-01-31T17:11:59Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6471\",\n        \"resourceVersion\": \"6908\",\n        \"uid\": \"af547ef2-a796-4806-bfe2-8c1ae0f3dc50\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-2h9h7\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"26-m02\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-2h9h7\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-31T17:11:59Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-31T17:12:01Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-31T17:12:01Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-31T17:11:59Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"docker://dcab374bcc9401ebc18648bf029141d62813f16c19b95afef9d2a29b3574ce3a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-01-31T17:12:00Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.61.148\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.158\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.158\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-01-31T17:11:59Z\"\n    }\n}\n"
    STEP: replace the image in the pod 01/31/23 17:12:04.448
    Jan 31 17:12:04.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-6471 replace -f -'
    Jan 31 17:12:05.018: INFO: stderr: ""
    Jan 31 17:12:05.018: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 01/31/23 17:12:05.018
    [AfterEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1738
    Jan 31 17:12:05.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-6471 delete pods e2e-test-httpd-pod'
    Jan 31 17:12:06.875: INFO: stderr: ""
    Jan 31 17:12:06.875: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:12:06.875: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-6471" for this suite. 01/31/23 17:12:06.885
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version
  should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:12:06.896
Jan 31 17:12:06.896: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:12:06.897
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:06.915
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:06.923
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
Jan 31 17:12:06.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3355 version'
Jan 31 17:12:06.989: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Jan 31 17:12:06.989: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0\", GitCommit:\"b46a3f887ca979b1a5d14fd39cb1af43e7e5d12d\", GitTreeState:\"clean\", BuildDate:\"2022-12-08T19:58:30Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0+k3s1\", GitCommit:\"fae8817655a8ad1250d40e5b4f9a938cbb9c960a\", GitTreeState:\"clean\", BuildDate:\"2022-12-21T00:22:30Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:12:06.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-3355" for this suite. 01/31/23 17:12:06.995
------------------------------
â€¢ [0.107 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl version
  test/e2e/kubectl/kubectl.go:1679
    should check is all data is printed  [Conformance]
    test/e2e/kubectl/kubectl.go:1685

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:12:06.896
    Jan 31 17:12:06.896: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:12:06.897
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:06.915
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:06.923
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check is all data is printed  [Conformance]
      test/e2e/kubectl/kubectl.go:1685
    Jan 31 17:12:06.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3355 version'
    Jan 31 17:12:06.989: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
    Jan 31 17:12:06.989: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0\", GitCommit:\"b46a3f887ca979b1a5d14fd39cb1af43e7e5d12d\", GitTreeState:\"clean\", BuildDate:\"2022-12-08T19:58:30Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0+k3s1\", GitCommit:\"fae8817655a8ad1250d40e5b4f9a938cbb9c960a\", GitTreeState:\"clean\", BuildDate:\"2022-12-21T00:22:30Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:12:06.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-3355" for this suite. 01/31/23 17:12:06.995
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:12:07.006
Jan 31 17:12:07.006: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename podtemplate 01/31/23 17:12:07.007
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:07.024
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:07.03
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Jan 31 17:12:07.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-438" for this suite. 01/31/23 17:12:07.085
------------------------------
â€¢ [0.090 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:12:07.006
    Jan 31 17:12:07.006: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename podtemplate 01/31/23 17:12:07.007
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:07.024
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:07.03
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should run the lifecycle of PodTemplates [Conformance]
      test/e2e/common/node/podtemplates.go:53
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:12:07.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-438" for this suite. 01/31/23 17:12:07.085
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:12:07.1
Jan 31 17:12:07.100: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 17:12:07.101
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:07.128
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:07.135
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
STEP: Discovering how many secrets are in namespace by default 01/31/23 17:12:07.143
STEP: Counting existing ResourceQuota 01/31/23 17:12:12.154
STEP: Creating a ResourceQuota 01/31/23 17:12:17.166
STEP: Ensuring resource quota status is calculated 01/31/23 17:12:17.177
STEP: Creating a Secret 01/31/23 17:12:19.187
STEP: Ensuring resource quota status captures secret creation 01/31/23 17:12:19.207
STEP: Deleting a secret 01/31/23 17:12:21.218
STEP: Ensuring resource quota status released usage 01/31/23 17:12:21.233
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 17:12:23.244: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-6398" for this suite. 01/31/23 17:12:23.255
------------------------------
â€¢ [SLOW TEST] [16.169 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:12:07.1
    Jan 31 17:12:07.100: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 17:12:07.101
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:07.128
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:07.135
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a secret. [Conformance]
      test/e2e/apimachinery/resource_quota.go:160
    STEP: Discovering how many secrets are in namespace by default 01/31/23 17:12:07.143
    STEP: Counting existing ResourceQuota 01/31/23 17:12:12.154
    STEP: Creating a ResourceQuota 01/31/23 17:12:17.166
    STEP: Ensuring resource quota status is calculated 01/31/23 17:12:17.177
    STEP: Creating a Secret 01/31/23 17:12:19.187
    STEP: Ensuring resource quota status captures secret creation 01/31/23 17:12:19.207
    STEP: Deleting a secret 01/31/23 17:12:21.218
    STEP: Ensuring resource quota status released usage 01/31/23 17:12:21.233
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:12:23.244: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-6398" for this suite. 01/31/23 17:12:23.255
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:12:23.272
Jan 31 17:12:23.272: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 17:12:23.274
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:23.301
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:23.309
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
STEP: Creating a pod to test emptydir volume type on tmpfs 01/31/23 17:12:23.317
Jan 31 17:12:23.330: INFO: Waiting up to 5m0s for pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db" in namespace "emptydir-4699" to be "Succeeded or Failed"
Jan 31 17:12:23.339: INFO: Pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db": Phase="Pending", Reason="", readiness=false. Elapsed: 8.903855ms
Jan 31 17:12:25.344: INFO: Pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014379866s
Jan 31 17:12:27.349: INFO: Pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018589858s
Jan 31 17:12:29.350: INFO: Pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019940818s
STEP: Saw pod success 01/31/23 17:12:29.35
Jan 31 17:12:29.350: INFO: Pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db" satisfied condition "Succeeded or Failed"
Jan 31 17:12:29.359: INFO: Trying to get logs from node 26-m02 pod pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db container test-container: <nil>
STEP: delete the pod 01/31/23 17:12:29.38
Jan 31 17:12:29.401: INFO: Waiting for pod pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db to disappear
Jan 31 17:12:29.412: INFO: Pod pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:12:29.412: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-4699" for this suite. 01/31/23 17:12:29.422
------------------------------
â€¢ [SLOW TEST] [6.162 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:12:23.272
    Jan 31 17:12:23.272: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 17:12:23.274
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:23.301
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:23.309
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:87
    STEP: Creating a pod to test emptydir volume type on tmpfs 01/31/23 17:12:23.317
    Jan 31 17:12:23.330: INFO: Waiting up to 5m0s for pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db" in namespace "emptydir-4699" to be "Succeeded or Failed"
    Jan 31 17:12:23.339: INFO: Pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db": Phase="Pending", Reason="", readiness=false. Elapsed: 8.903855ms
    Jan 31 17:12:25.344: INFO: Pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014379866s
    Jan 31 17:12:27.349: INFO: Pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018589858s
    Jan 31 17:12:29.350: INFO: Pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019940818s
    STEP: Saw pod success 01/31/23 17:12:29.35
    Jan 31 17:12:29.350: INFO: Pod "pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db" satisfied condition "Succeeded or Failed"
    Jan 31 17:12:29.359: INFO: Trying to get logs from node 26-m02 pod pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db container test-container: <nil>
    STEP: delete the pod 01/31/23 17:12:29.38
    Jan 31 17:12:29.401: INFO: Waiting for pod pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db to disappear
    Jan 31 17:12:29.412: INFO: Pod pod-25c60a8d-1034-43d5-9725-d5fedb3ec8db no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:12:29.412: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-4699" for this suite. 01/31/23 17:12:29.422
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:12:29.435
Jan 31 17:12:29.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 17:12:29.436
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:29.456
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:29.462
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
STEP: Creating configMap with name configmap-test-volume-f1554456-413f-4ec3-a94b-bd0944e110b7 01/31/23 17:12:29.47
STEP: Creating a pod to test consume configMaps 01/31/23 17:12:29.476
Jan 31 17:12:29.485: INFO: Waiting up to 5m0s for pod "pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5" in namespace "configmap-1402" to be "Succeeded or Failed"
Jan 31 17:12:29.492: INFO: Pod "pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5": Phase="Pending", Reason="", readiness=false. Elapsed: 7.04355ms
Jan 31 17:12:31.503: INFO: Pod "pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017536198s
Jan 31 17:12:33.501: INFO: Pod "pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015411361s
STEP: Saw pod success 01/31/23 17:12:33.501
Jan 31 17:12:33.501: INFO: Pod "pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5" satisfied condition "Succeeded or Failed"
Jan 31 17:12:33.507: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5 container configmap-volume-test: <nil>
STEP: delete the pod 01/31/23 17:12:33.526
Jan 31 17:12:33.544: INFO: Waiting for pod pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5 to disappear
Jan 31 17:12:33.550: INFO: Pod pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:12:33.550: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-1402" for this suite. 01/31/23 17:12:33.557
------------------------------
â€¢ [4.130 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:12:29.435
    Jan 31 17:12:29.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 17:12:29.436
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:29.456
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:29.462
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:423
    STEP: Creating configMap with name configmap-test-volume-f1554456-413f-4ec3-a94b-bd0944e110b7 01/31/23 17:12:29.47
    STEP: Creating a pod to test consume configMaps 01/31/23 17:12:29.476
    Jan 31 17:12:29.485: INFO: Waiting up to 5m0s for pod "pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5" in namespace "configmap-1402" to be "Succeeded or Failed"
    Jan 31 17:12:29.492: INFO: Pod "pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5": Phase="Pending", Reason="", readiness=false. Elapsed: 7.04355ms
    Jan 31 17:12:31.503: INFO: Pod "pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017536198s
    Jan 31 17:12:33.501: INFO: Pod "pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015411361s
    STEP: Saw pod success 01/31/23 17:12:33.501
    Jan 31 17:12:33.501: INFO: Pod "pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5" satisfied condition "Succeeded or Failed"
    Jan 31 17:12:33.507: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5 container configmap-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:12:33.526
    Jan 31 17:12:33.544: INFO: Waiting for pod pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5 to disappear
    Jan 31 17:12:33.550: INFO: Pod pod-configmaps-03b2f995-4772-4d8f-a99c-4eb8d4c4c7c5 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:12:33.550: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-1402" for this suite. 01/31/23 17:12:33.557
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:12:33.567
Jan 31 17:12:33.567: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename proxy 01/31/23 17:12:33.568
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:33.584
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:33.59
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
Jan 31 17:12:33.597: INFO: Creating pod...
Jan 31 17:12:33.607: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-9207" to be "running"
Jan 31 17:12:33.616: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 9.242198ms
Jan 31 17:12:35.630: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.023668995s
Jan 31 17:12:35.630: INFO: Pod "agnhost" satisfied condition "running"
Jan 31 17:12:35.630: INFO: Creating service...
Jan 31 17:12:35.689: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/DELETE
Jan 31 17:12:35.703: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 31 17:12:35.703: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/GET
Jan 31 17:12:35.709: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jan 31 17:12:35.709: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/HEAD
Jan 31 17:12:35.715: INFO: http.Client request:HEAD | StatusCode:200
Jan 31 17:12:35.715: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/OPTIONS
Jan 31 17:12:35.720: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 31 17:12:35.720: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/PATCH
Jan 31 17:12:35.727: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 31 17:12:35.727: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/POST
Jan 31 17:12:35.733: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 31 17:12:35.733: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/PUT
Jan 31 17:12:35.738: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 31 17:12:35.738: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/DELETE
Jan 31 17:12:35.746: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 31 17:12:35.746: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/GET
Jan 31 17:12:35.753: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jan 31 17:12:35.753: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/HEAD
Jan 31 17:12:35.758: INFO: http.Client request:HEAD | StatusCode:200
Jan 31 17:12:35.758: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/OPTIONS
Jan 31 17:12:35.764: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 31 17:12:35.764: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/PATCH
Jan 31 17:12:35.770: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 31 17:12:35.770: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/POST
Jan 31 17:12:35.776: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 31 17:12:35.776: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/PUT
Jan 31 17:12:35.781: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Jan 31 17:12:35.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-9207" for this suite. 01/31/23 17:12:35.786
------------------------------
â€¢ [2.226 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
    test/e2e/network/proxy.go:286

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:12:33.567
    Jan 31 17:12:33.567: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename proxy 01/31/23 17:12:33.568
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:33.584
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:33.59
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
      test/e2e/network/proxy.go:286
    Jan 31 17:12:33.597: INFO: Creating pod...
    Jan 31 17:12:33.607: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-9207" to be "running"
    Jan 31 17:12:33.616: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 9.242198ms
    Jan 31 17:12:35.630: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.023668995s
    Jan 31 17:12:35.630: INFO: Pod "agnhost" satisfied condition "running"
    Jan 31 17:12:35.630: INFO: Creating service...
    Jan 31 17:12:35.689: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/DELETE
    Jan 31 17:12:35.703: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Jan 31 17:12:35.703: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/GET
    Jan 31 17:12:35.709: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Jan 31 17:12:35.709: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/HEAD
    Jan 31 17:12:35.715: INFO: http.Client request:HEAD | StatusCode:200
    Jan 31 17:12:35.715: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/OPTIONS
    Jan 31 17:12:35.720: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Jan 31 17:12:35.720: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/PATCH
    Jan 31 17:12:35.727: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Jan 31 17:12:35.727: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/POST
    Jan 31 17:12:35.733: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Jan 31 17:12:35.733: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/pods/agnhost/proxy/some/path/with/PUT
    Jan 31 17:12:35.738: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Jan 31 17:12:35.738: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/DELETE
    Jan 31 17:12:35.746: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Jan 31 17:12:35.746: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/GET
    Jan 31 17:12:35.753: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Jan 31 17:12:35.753: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/HEAD
    Jan 31 17:12:35.758: INFO: http.Client request:HEAD | StatusCode:200
    Jan 31 17:12:35.758: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/OPTIONS
    Jan 31 17:12:35.764: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Jan 31 17:12:35.764: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/PATCH
    Jan 31 17:12:35.770: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Jan 31 17:12:35.770: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/POST
    Jan 31 17:12:35.776: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Jan 31 17:12:35.776: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-9207/services/test-service/proxy/some/path/with/PUT
    Jan 31 17:12:35.781: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:12:35.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-9207" for this suite. 01/31/23 17:12:35.786
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:12:35.795
Jan 31 17:12:35.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:12:35.796
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:35.813
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:35.82
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
Jan 31 17:12:35.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 create -f -'
Jan 31 17:12:36.107: INFO: stderr: ""
Jan 31 17:12:36.107: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Jan 31 17:12:36.107: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 create -f -'
Jan 31 17:12:36.405: INFO: stderr: ""
Jan 31 17:12:36.405: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 01/31/23 17:12:36.405
Jan 31 17:12:37.414: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 17:12:37.414: INFO: Found 0 / 1
Jan 31 17:12:38.414: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 17:12:38.414: INFO: Found 1 / 1
Jan 31 17:12:38.414: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jan 31 17:12:38.421: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 31 17:12:38.422: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 31 17:12:38.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 describe pod agnhost-primary-7p54m'
Jan 31 17:12:38.536: INFO: stderr: ""
Jan 31 17:12:38.536: INFO: stdout: "Name:             agnhost-primary-7p54m\nNamespace:        kubectl-1652\nPriority:         0\nService Account:  default\nNode:             26-m02/192.168.61.148\nStart Time:       Tue, 31 Jan 2023 17:12:36 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.162\nIPs:\n  IP:           10.244.1.162\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   docker://a4c903396443204f1ff796d3121dae6c5c48499161ca7237b9748336401bb680\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 31 Jan 2023 17:12:37 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qrf2q (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-qrf2q:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-1652/agnhost-primary-7p54m to 26-m02\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Jan 31 17:12:38.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 describe rc agnhost-primary'
Jan 31 17:12:38.618: INFO: stderr: ""
Jan 31 17:12:38.618: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1652\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-7p54m\n"
Jan 31 17:12:38.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 describe service agnhost-primary'
Jan 31 17:12:38.701: INFO: stderr: ""
Jan 31 17:12:38.701: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1652\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.108.140.182\nIPs:               10.108.140.182\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.1.162:6379\nSession Affinity:  None\nEvents:            <none>\n"
Jan 31 17:12:38.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 describe node 26'
Jan 31 17:12:38.830: INFO: stderr: ""
Jan 31 17:12:38.830: INFO: stdout: "Name:               26\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=26\n                    kubernetes.io/os=linux\n                    minikube.k8s.io/commit=ddac20b4b34a9c8c857fc602203b6ba2679794d3\n                    minikube.k8s.io/name=26\n                    minikube.k8s.io/primary=true\n                    minikube.k8s.io/updated_at=2023_01_31T12_52_11_0700\n                    minikube.k8s.io/version=v1.29.0\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    vcluster.loft.sh/managed-annotations:\n                      kubeadm.alpha.kubernetes.io/cri-socket\n                      node.alpha.kubernetes.io/ttl\n                      volumes.kubernetes.io/controller-managed-attach-detach\n                    vcluster.loft.sh/managed-labels:\n                      beta.kubernetes.io/arch\n                      beta.kubernetes.io/os\n                      kubernetes.io/arch\n                      kubernetes.io/hostname\n                      kubernetes.io/os\n                      minikube.k8s.io/commit\n                      minikube.k8s.io/name\n                      minikube.k8s.io/primary\n                      minikube.k8s.io/updated_at\n                      minikube.k8s.io/version\n                      node-role.kubernetes.io/control-plane\n                      node.kubernetes.io/exclude-from-external-load-balancers\n                    vcluster.loft.sh/original-taints: []\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 31 Jan 2023 16:39:51 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:              Failed to get lease: leases.coordination.k8s.io \"26\" not found\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Tue, 31 Jan 2023 17:10:51 +0000   Tue, 31 Jan 2023 11:52:05 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Tue, 31 Jan 2023 17:10:51 +0000   Tue, 31 Jan 2023 11:52:05 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Tue, 31 Jan 2023 17:10:51 +0000   Tue, 31 Jan 2023 11:52:05 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Tue, 31 Jan 2023 17:10:51 +0000   Tue, 31 Jan 2023 11:52:37 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.61.199\n  Hostname:    26\nCapacity:\n  cpu:                10\n  ephemeral-storage:  45604772Ki\n  hugepages-2Mi:      0\n  memory:             10185832Ki\n  pods:               110\nAllocatable:\n  cpu:                9150m\n  ephemeral-storage:  45604772Ki\n  hugepages-2Mi:      0\n  memory:             9960552Ki\n  pods:               102\nSystem Info:\n  Machine ID:                 ca638081a8864ac6b387437cb06704ca\n  System UUID:                ca638081-a886-4ac6-b387-437cb06704ca\n  Boot ID:                    a55d2d94-96a5-4103-af26-1f82b4b16cc8\n  Kernel Version:             5.10.57\n  OS Image:                   Buildroot 2021.02.12\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://20.10.23\n  Kubelet Version:            v1.26.1\n  Kube-Proxy Version:         v1.26.1\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-56bfc489cf-8ptdd                                   3m (0%)       1 (10%)     16Mi (0%)        170Mi (1%)     32m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl    0 (0%)        0 (0%)      0 (0%)           0 (0%)         32m\n  sonobuoy                    sonobuoy-e2e-job-1f36c7afce724735                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         32m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests   Limits\n  --------           --------   ------\n  cpu                3m (0%)    1 (10%)\n  memory             16Mi (0%)  170Mi (1%)\n  ephemeral-storage  0 (0%)     0 (0%)\n  hugepages-2Mi      0 (0%)     0 (0%)\nEvents:              <none>\n"
Jan 31 17:12:38.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 describe namespace kubectl-1652'
Jan 31 17:12:38.922: INFO: stderr: ""
Jan 31 17:12:38.922: INFO: stdout: "Name:         kubectl-1652\nLabels:       e2e-framework=kubectl\n              e2e-run=abf1f6e0-31e2-4923-8a54-a844ae6aeab1\n              kubernetes.io/metadata.name=kubectl-1652\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:12:38.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1652" for this suite. 01/31/23 17:12:38.928
------------------------------
â€¢ [3.143 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl describe
  test/e2e/kubectl/kubectl.go:1270
    should check if kubectl describe prints relevant information for rc and pods  [Conformance]
    test/e2e/kubectl/kubectl.go:1276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:12:35.795
    Jan 31 17:12:35.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:12:35.796
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:35.813
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:35.82
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
      test/e2e/kubectl/kubectl.go:1276
    Jan 31 17:12:35.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 create -f -'
    Jan 31 17:12:36.107: INFO: stderr: ""
    Jan 31 17:12:36.107: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    Jan 31 17:12:36.107: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 create -f -'
    Jan 31 17:12:36.405: INFO: stderr: ""
    Jan 31 17:12:36.405: INFO: stdout: "service/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 01/31/23 17:12:36.405
    Jan 31 17:12:37.414: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 17:12:37.414: INFO: Found 0 / 1
    Jan 31 17:12:38.414: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 17:12:38.414: INFO: Found 1 / 1
    Jan 31 17:12:38.414: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Jan 31 17:12:38.421: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 31 17:12:38.422: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Jan 31 17:12:38.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 describe pod agnhost-primary-7p54m'
    Jan 31 17:12:38.536: INFO: stderr: ""
    Jan 31 17:12:38.536: INFO: stdout: "Name:             agnhost-primary-7p54m\nNamespace:        kubectl-1652\nPriority:         0\nService Account:  default\nNode:             26-m02/192.168.61.148\nStart Time:       Tue, 31 Jan 2023 17:12:36 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.162\nIPs:\n  IP:           10.244.1.162\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   docker://a4c903396443204f1ff796d3121dae6c5c48499161ca7237b9748336401bb680\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 31 Jan 2023 17:12:37 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qrf2q (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-qrf2q:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-1652/agnhost-primary-7p54m to 26-m02\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
    Jan 31 17:12:38.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 describe rc agnhost-primary'
    Jan 31 17:12:38.618: INFO: stderr: ""
    Jan 31 17:12:38.618: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1652\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-7p54m\n"
    Jan 31 17:12:38.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 describe service agnhost-primary'
    Jan 31 17:12:38.701: INFO: stderr: ""
    Jan 31 17:12:38.701: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1652\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.108.140.182\nIPs:               10.108.140.182\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.1.162:6379\nSession Affinity:  None\nEvents:            <none>\n"
    Jan 31 17:12:38.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 describe node 26'
    Jan 31 17:12:38.830: INFO: stderr: ""
    Jan 31 17:12:38.830: INFO: stdout: "Name:               26\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=26\n                    kubernetes.io/os=linux\n                    minikube.k8s.io/commit=ddac20b4b34a9c8c857fc602203b6ba2679794d3\n                    minikube.k8s.io/name=26\n                    minikube.k8s.io/primary=true\n                    minikube.k8s.io/updated_at=2023_01_31T12_52_11_0700\n                    minikube.k8s.io/version=v1.29.0\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    vcluster.loft.sh/managed-annotations:\n                      kubeadm.alpha.kubernetes.io/cri-socket\n                      node.alpha.kubernetes.io/ttl\n                      volumes.kubernetes.io/controller-managed-attach-detach\n                    vcluster.loft.sh/managed-labels:\n                      beta.kubernetes.io/arch\n                      beta.kubernetes.io/os\n                      kubernetes.io/arch\n                      kubernetes.io/hostname\n                      kubernetes.io/os\n                      minikube.k8s.io/commit\n                      minikube.k8s.io/name\n                      minikube.k8s.io/primary\n                      minikube.k8s.io/updated_at\n                      minikube.k8s.io/version\n                      node-role.kubernetes.io/control-plane\n                      node.kubernetes.io/exclude-from-external-load-balancers\n                    vcluster.loft.sh/original-taints: []\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 31 Jan 2023 16:39:51 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:              Failed to get lease: leases.coordination.k8s.io \"26\" not found\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Tue, 31 Jan 2023 17:10:51 +0000   Tue, 31 Jan 2023 11:52:05 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Tue, 31 Jan 2023 17:10:51 +0000   Tue, 31 Jan 2023 11:52:05 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Tue, 31 Jan 2023 17:10:51 +0000   Tue, 31 Jan 2023 11:52:05 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Tue, 31 Jan 2023 17:10:51 +0000   Tue, 31 Jan 2023 11:52:37 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.61.199\n  Hostname:    26\nCapacity:\n  cpu:                10\n  ephemeral-storage:  45604772Ki\n  hugepages-2Mi:      0\n  memory:             10185832Ki\n  pods:               110\nAllocatable:\n  cpu:                9150m\n  ephemeral-storage:  45604772Ki\n  hugepages-2Mi:      0\n  memory:             9960552Ki\n  pods:               102\nSystem Info:\n  Machine ID:                 ca638081a8864ac6b387437cb06704ca\n  System UUID:                ca638081-a886-4ac6-b387-437cb06704ca\n  Boot ID:                    a55d2d94-96a5-4103-af26-1f82b4b16cc8\n  Kernel Version:             5.10.57\n  OS Image:                   Buildroot 2021.02.12\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://20.10.23\n  Kubelet Version:            v1.26.1\n  Kube-Proxy Version:         v1.26.1\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-56bfc489cf-8ptdd                                   3m (0%)       1 (10%)     16Mi (0%)        170Mi (1%)     32m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl    0 (0%)        0 (0%)      0 (0%)           0 (0%)         32m\n  sonobuoy                    sonobuoy-e2e-job-1f36c7afce724735                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         32m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests   Limits\n  --------           --------   ------\n  cpu                3m (0%)    1 (10%)\n  memory             16Mi (0%)  170Mi (1%)\n  ephemeral-storage  0 (0%)     0 (0%)\n  hugepages-2Mi      0 (0%)     0 (0%)\nEvents:              <none>\n"
    Jan 31 17:12:38.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1652 describe namespace kubectl-1652'
    Jan 31 17:12:38.922: INFO: stderr: ""
    Jan 31 17:12:38.922: INFO: stdout: "Name:         kubectl-1652\nLabels:       e2e-framework=kubectl\n              e2e-run=abf1f6e0-31e2-4923-8a54-a844ae6aeab1\n              kubernetes.io/metadata.name=kubectl-1652\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:12:38.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1652" for this suite. 01/31/23 17:12:38.928
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] KubeletManagedEtcHosts
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:12:38.939
Jan 31 17:12:38.939: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 01/31/23 17:12:38.94
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:38.956
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:38.963
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:31
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
STEP: Setting up the test 01/31/23 17:12:38.969
STEP: Creating hostNetwork=false pod 01/31/23 17:12:38.969
Jan 31 17:12:38.984: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-8364" to be "running and ready"
Jan 31 17:12:38.990: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.357285ms
Jan 31 17:12:38.990: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:12:40.998: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013915544s
Jan 31 17:12:40.998: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:12:43.001: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.016925436s
Jan 31 17:12:43.001: INFO: The phase of Pod test-pod is Running (Ready = true)
Jan 31 17:12:43.001: INFO: Pod "test-pod" satisfied condition "running and ready"
STEP: Creating hostNetwork=true pod 01/31/23 17:12:43.011
Jan 31 17:12:43.050: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-8364" to be "running and ready"
Jan 31 17:12:43.059: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 9.193366ms
Jan 31 17:12:43.060: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:12:45.071: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.020705832s
Jan 31 17:12:45.071: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
Jan 31 17:12:45.071: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
STEP: Running the test 01/31/23 17:12:45.079
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 01/31/23 17:12:45.079
Jan 31 17:12:45.079: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:12:45.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:12:45.080: INFO: ExecWithOptions: Clientset creation
Jan 31 17:12:45.080: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 31 17:12:45.196: INFO: Exec stderr: ""
Jan 31 17:12:45.196: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:12:45.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:12:45.197: INFO: ExecWithOptions: Clientset creation
Jan 31 17:12:45.197: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 31 17:12:45.272: INFO: Exec stderr: ""
Jan 31 17:12:45.272: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:12:45.272: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:12:45.274: INFO: ExecWithOptions: Clientset creation
Jan 31 17:12:45.274: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 31 17:12:45.355: INFO: Exec stderr: ""
Jan 31 17:12:45.355: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:12:45.355: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:12:45.356: INFO: ExecWithOptions: Clientset creation
Jan 31 17:12:45.356: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 31 17:12:45.450: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 01/31/23 17:12:45.45
Jan 31 17:12:45.450: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:12:45.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:12:45.451: INFO: ExecWithOptions: Clientset creation
Jan 31 17:12:45.452: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jan 31 17:12:45.538: INFO: Exec stderr: ""
Jan 31 17:12:45.538: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:12:45.538: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:12:45.539: INFO: ExecWithOptions: Clientset creation
Jan 31 17:12:45.539: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jan 31 17:12:45.626: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 01/31/23 17:12:45.626
Jan 31 17:12:45.626: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:12:45.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:12:45.628: INFO: ExecWithOptions: Clientset creation
Jan 31 17:12:45.628: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 31 17:12:45.702: INFO: Exec stderr: ""
Jan 31 17:12:45.702: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:12:45.702: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:12:45.702: INFO: ExecWithOptions: Clientset creation
Jan 31 17:12:45.702: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 31 17:12:45.798: INFO: Exec stderr: ""
Jan 31 17:12:45.798: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:12:45.798: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:12:45.800: INFO: ExecWithOptions: Clientset creation
Jan 31 17:12:45.800: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 31 17:12:45.889: INFO: Exec stderr: ""
Jan 31 17:12:45.889: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:12:45.889: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:12:45.890: INFO: ExecWithOptions: Clientset creation
Jan 31 17:12:45.890: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 31 17:12:45.963: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/node/init/init.go:32
Jan 31 17:12:45.963: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  tear down framework | framework.go:193
STEP: Destroying namespace "e2e-kubelet-etc-hosts-8364" for this suite. 01/31/23 17:12:45.975
------------------------------
â€¢ [SLOW TEST] [7.045 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:12:38.939
    Jan 31 17:12:38.939: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 01/31/23 17:12:38.94
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:38.956
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:38.963
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:31
    [It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet_etc_hosts.go:63
    STEP: Setting up the test 01/31/23 17:12:38.969
    STEP: Creating hostNetwork=false pod 01/31/23 17:12:38.969
    Jan 31 17:12:38.984: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-8364" to be "running and ready"
    Jan 31 17:12:38.990: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.357285ms
    Jan 31 17:12:38.990: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:12:40.998: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013915544s
    Jan 31 17:12:40.998: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:12:43.001: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.016925436s
    Jan 31 17:12:43.001: INFO: The phase of Pod test-pod is Running (Ready = true)
    Jan 31 17:12:43.001: INFO: Pod "test-pod" satisfied condition "running and ready"
    STEP: Creating hostNetwork=true pod 01/31/23 17:12:43.011
    Jan 31 17:12:43.050: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-8364" to be "running and ready"
    Jan 31 17:12:43.059: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 9.193366ms
    Jan 31 17:12:43.060: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:12:45.071: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.020705832s
    Jan 31 17:12:45.071: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
    Jan 31 17:12:45.071: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
    STEP: Running the test 01/31/23 17:12:45.079
    STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 01/31/23 17:12:45.079
    Jan 31 17:12:45.079: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:12:45.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:12:45.080: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:12:45.080: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Jan 31 17:12:45.196: INFO: Exec stderr: ""
    Jan 31 17:12:45.196: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:12:45.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:12:45.197: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:12:45.197: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Jan 31 17:12:45.272: INFO: Exec stderr: ""
    Jan 31 17:12:45.272: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:12:45.272: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:12:45.274: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:12:45.274: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Jan 31 17:12:45.355: INFO: Exec stderr: ""
    Jan 31 17:12:45.355: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:12:45.355: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:12:45.356: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:12:45.356: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Jan 31 17:12:45.450: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 01/31/23 17:12:45.45
    Jan 31 17:12:45.450: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:12:45.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:12:45.451: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:12:45.452: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Jan 31 17:12:45.538: INFO: Exec stderr: ""
    Jan 31 17:12:45.538: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:12:45.538: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:12:45.539: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:12:45.539: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Jan 31 17:12:45.626: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 01/31/23 17:12:45.626
    Jan 31 17:12:45.626: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:12:45.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:12:45.628: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:12:45.628: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Jan 31 17:12:45.702: INFO: Exec stderr: ""
    Jan 31 17:12:45.702: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:12:45.702: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:12:45.702: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:12:45.702: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Jan 31 17:12:45.798: INFO: Exec stderr: ""
    Jan 31 17:12:45.798: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:12:45.798: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:12:45.800: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:12:45.800: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Jan 31 17:12:45.889: INFO: Exec stderr: ""
    Jan 31 17:12:45.889: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8364 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:12:45.889: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:12:45.890: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:12:45.890: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8364/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Jan 31 17:12:45.963: INFO: Exec stderr: ""
    [AfterEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:12:45.963: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      tear down framework | framework.go:193
    STEP: Destroying namespace "e2e-kubelet-etc-hosts-8364" for this suite. 01/31/23 17:12:45.975
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:12:45.986
Jan 31 17:12:45.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:12:45.987
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:46.01
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:46.018
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
STEP: creating a replication controller 01/31/23 17:12:46.027
Jan 31 17:12:46.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 create -f -'
Jan 31 17:12:46.292: INFO: stderr: ""
Jan 31 17:12:46.292: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 01/31/23 17:12:46.292
Jan 31 17:12:46.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 31 17:12:46.384: INFO: stderr: ""
Jan 31 17:12:46.384: INFO: stdout: "update-demo-nautilus-pjhvh update-demo-nautilus-nhnph "
Jan 31 17:12:46.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods update-demo-nautilus-pjhvh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:12:46.469: INFO: stderr: ""
Jan 31 17:12:46.469: INFO: stdout: ""
Jan 31 17:12:46.469: INFO: update-demo-nautilus-pjhvh is created but not running
Jan 31 17:12:51.470: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 31 17:12:51.573: INFO: stderr: ""
Jan 31 17:12:51.573: INFO: stdout: "update-demo-nautilus-pjhvh update-demo-nautilus-nhnph "
Jan 31 17:12:51.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods update-demo-nautilus-pjhvh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:12:51.647: INFO: stderr: ""
Jan 31 17:12:51.647: INFO: stdout: "true"
Jan 31 17:12:51.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods update-demo-nautilus-pjhvh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 31 17:12:51.720: INFO: stderr: ""
Jan 31 17:12:51.720: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 31 17:12:51.720: INFO: validating pod update-demo-nautilus-pjhvh
Jan 31 17:12:51.729: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 31 17:12:51.729: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 31 17:12:51.729: INFO: update-demo-nautilus-pjhvh is verified up and running
Jan 31 17:12:51.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods update-demo-nautilus-nhnph -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:12:51.803: INFO: stderr: ""
Jan 31 17:12:51.803: INFO: stdout: "true"
Jan 31 17:12:51.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods update-demo-nautilus-nhnph -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 31 17:12:51.887: INFO: stderr: ""
Jan 31 17:12:51.888: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 31 17:12:51.888: INFO: validating pod update-demo-nautilus-nhnph
Jan 31 17:12:51.896: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 31 17:12:51.896: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 31 17:12:51.896: INFO: update-demo-nautilus-nhnph is verified up and running
STEP: using delete to clean up resources 01/31/23 17:12:51.896
Jan 31 17:12:51.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 delete --grace-period=0 --force -f -'
Jan 31 17:12:51.987: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 31 17:12:51.987: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jan 31 17:12:51.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get rc,svc -l name=update-demo --no-headers'
Jan 31 17:12:52.089: INFO: stderr: "No resources found in kubectl-4938 namespace.\n"
Jan 31 17:12:52.090: INFO: stdout: ""
Jan 31 17:12:52.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 31 17:12:52.180: INFO: stderr: ""
Jan 31 17:12:52.180: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:12:52.180: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-4938" for this suite. 01/31/23 17:12:52.186
------------------------------
â€¢ [SLOW TEST] [6.210 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should create and stop a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:339

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:12:45.986
    Jan 31 17:12:45.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:12:45.987
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:46.01
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:46.018
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should create and stop a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:339
    STEP: creating a replication controller 01/31/23 17:12:46.027
    Jan 31 17:12:46.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 create -f -'
    Jan 31 17:12:46.292: INFO: stderr: ""
    Jan 31 17:12:46.292: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 01/31/23 17:12:46.292
    Jan 31 17:12:46.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 31 17:12:46.384: INFO: stderr: ""
    Jan 31 17:12:46.384: INFO: stdout: "update-demo-nautilus-pjhvh update-demo-nautilus-nhnph "
    Jan 31 17:12:46.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods update-demo-nautilus-pjhvh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:12:46.469: INFO: stderr: ""
    Jan 31 17:12:46.469: INFO: stdout: ""
    Jan 31 17:12:46.469: INFO: update-demo-nautilus-pjhvh is created but not running
    Jan 31 17:12:51.470: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 31 17:12:51.573: INFO: stderr: ""
    Jan 31 17:12:51.573: INFO: stdout: "update-demo-nautilus-pjhvh update-demo-nautilus-nhnph "
    Jan 31 17:12:51.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods update-demo-nautilus-pjhvh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:12:51.647: INFO: stderr: ""
    Jan 31 17:12:51.647: INFO: stdout: "true"
    Jan 31 17:12:51.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods update-demo-nautilus-pjhvh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 31 17:12:51.720: INFO: stderr: ""
    Jan 31 17:12:51.720: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 31 17:12:51.720: INFO: validating pod update-demo-nautilus-pjhvh
    Jan 31 17:12:51.729: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 31 17:12:51.729: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 31 17:12:51.729: INFO: update-demo-nautilus-pjhvh is verified up and running
    Jan 31 17:12:51.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods update-demo-nautilus-nhnph -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:12:51.803: INFO: stderr: ""
    Jan 31 17:12:51.803: INFO: stdout: "true"
    Jan 31 17:12:51.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods update-demo-nautilus-nhnph -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 31 17:12:51.887: INFO: stderr: ""
    Jan 31 17:12:51.888: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 31 17:12:51.888: INFO: validating pod update-demo-nautilus-nhnph
    Jan 31 17:12:51.896: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 31 17:12:51.896: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 31 17:12:51.896: INFO: update-demo-nautilus-nhnph is verified up and running
    STEP: using delete to clean up resources 01/31/23 17:12:51.896
    Jan 31 17:12:51.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 delete --grace-period=0 --force -f -'
    Jan 31 17:12:51.987: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 31 17:12:51.987: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Jan 31 17:12:51.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get rc,svc -l name=update-demo --no-headers'
    Jan 31 17:12:52.089: INFO: stderr: "No resources found in kubectl-4938 namespace.\n"
    Jan 31 17:12:52.090: INFO: stdout: ""
    Jan 31 17:12:52.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-4938 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Jan 31 17:12:52.180: INFO: stderr: ""
    Jan 31 17:12:52.180: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:12:52.180: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-4938" for this suite. 01/31/23 17:12:52.186
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:12:52.197
Jan 31 17:12:52.197: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename init-container 01/31/23 17:12:52.198
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:52.219
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:52.227
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
STEP: creating the pod 01/31/23 17:12:52.235
Jan 31 17:12:52.235: INFO: PodSpec: initContainers in spec.initContainers
Jan 31 17:13:36.129: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-68f12b88-700f-406f-8ea6-ac0f7bb80541", GenerateName:"", Namespace:"init-container-4801", SelfLink:"", UID:"48019015-b25b-4bd0-989a-db9eb482fc14", ResourceVersion:"7253", Generation:0, CreationTimestamp:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"235183298"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00154e4c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"vcluster", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 31, 17, 13, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00154e588), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-hqf2j", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004c19b60), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hqf2j", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hqf2j", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hqf2j", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0041f5480), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"26-m02", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0046f2930), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0041f5500)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0041f5520)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0041f5528), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0041f552c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0045da290), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.61.148", PodIP:"10.244.1.165", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.165"}}, StartTime:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0046f2a10)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0046f2a80)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"docker-pullable://registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"docker://1617f0b676bda9390e0562f8c6f0482b8da94b9f85ea20d3a1fb8d2d9e70b973", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004c19be0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004c19bc0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0041f55af)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:13:36.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-4801" for this suite. 01/31/23 17:13:36.138
------------------------------
â€¢ [SLOW TEST] [43.950 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:12:52.197
    Jan 31 17:12:52.197: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename init-container 01/31/23 17:12:52.198
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:12:52.219
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:12:52.227
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:334
    STEP: creating the pod 01/31/23 17:12:52.235
    Jan 31 17:12:52.235: INFO: PodSpec: initContainers in spec.initContainers
    Jan 31 17:13:36.129: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-68f12b88-700f-406f-8ea6-ac0f7bb80541", GenerateName:"", Namespace:"init-container-4801", SelfLink:"", UID:"48019015-b25b-4bd0-989a-db9eb482fc14", ResourceVersion:"7253", Generation:0, CreationTimestamp:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"235183298"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00154e4c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"vcluster", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 31, 17, 13, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00154e588), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-hqf2j", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004c19b60), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hqf2j", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hqf2j", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hqf2j", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0041f5480), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"26-m02", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0046f2930), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0041f5500)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0041f5520)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0041f5528), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0041f552c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0045da290), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.61.148", PodIP:"10.244.1.165", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.165"}}, StartTime:time.Date(2023, time.January, 31, 17, 12, 52, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0046f2a10)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0046f2a80)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"docker-pullable://registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"docker://1617f0b676bda9390e0562f8c6f0482b8da94b9f85ea20d3a1fb8d2d9e70b973", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004c19be0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004c19bc0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0041f55af)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:13:36.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-4801" for this suite. 01/31/23 17:13:36.138
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:13:36.153
Jan 31 17:13:36.153: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:13:36.154
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:13:36.169
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:13:36.175
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1700
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/31/23 17:13:36.181
Jan 31 17:13:36.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1091 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
Jan 31 17:13:36.290: INFO: stderr: ""
Jan 31 17:13:36.290: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created 01/31/23 17:13:36.29
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1704
Jan 31 17:13:36.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1091 delete pods e2e-test-httpd-pod'
Jan 31 17:13:39.381: INFO: stderr: ""
Jan 31 17:13:39.381: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:13:39.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1091" for this suite. 01/31/23 17:13:39.387
------------------------------
â€¢ [3.242 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl run pod
  test/e2e/kubectl/kubectl.go:1697
    should create a pod from an image when restart is Never  [Conformance]
    test/e2e/kubectl/kubectl.go:1713

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:13:36.153
    Jan 31 17:13:36.153: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:13:36.154
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:13:36.169
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:13:36.175
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1700
    [It] should create a pod from an image when restart is Never  [Conformance]
      test/e2e/kubectl/kubectl.go:1713
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/31/23 17:13:36.181
    Jan 31 17:13:36.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1091 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
    Jan 31 17:13:36.290: INFO: stderr: ""
    Jan 31 17:13:36.290: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod was created 01/31/23 17:13:36.29
    [AfterEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1704
    Jan 31 17:13:36.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1091 delete pods e2e-test-httpd-pod'
    Jan 31 17:13:39.381: INFO: stderr: ""
    Jan 31 17:13:39.381: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:13:39.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1091" for this suite. 01/31/23 17:13:39.387
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch
  watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:13:39.395
Jan 31 17:13:39.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-watch 01/31/23 17:13:39.396
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:13:39.413
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:13:39.419
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
Jan 31 17:13:39.425: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Creating first CR  01/31/23 17:13:42.021
Jan 31 17:13:42.033: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:42Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:13:42Z]] name:name1 resourceVersion:7291 uid:7f4bc860-c8f3-4921-910f-6618749e862e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR 01/31/23 17:13:52.035
Jan 31 17:13:52.046: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:52Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:13:52Z]] name:name2 resourceVersion:7307 uid:84dbca7c-e829-43bd-b9fa-fd3276687b4d] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR 01/31/23 17:14:02.047
Jan 31 17:14:02.066: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:14:02Z]] name:name1 resourceVersion:7309 uid:7f4bc860-c8f3-4921-910f-6618749e862e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR 01/31/23 17:14:12.067
Jan 31 17:14:12.080: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:14:12Z]] name:name2 resourceVersion:7311 uid:84dbca7c-e829-43bd-b9fa-fd3276687b4d] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR 01/31/23 17:14:22.08
Jan 31 17:14:22.096: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:14:02Z]] name:name1 resourceVersion:7313 uid:7f4bc860-c8f3-4921-910f-6618749e862e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR 01/31/23 17:14:32.097
Jan 31 17:14:32.112: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:14:12Z]] name:name2 resourceVersion:7315 uid:84dbca7c-e829-43bd-b9fa-fd3276687b4d] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:14:42.652: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-watch-4588" for this suite. 01/31/23 17:14:42.663
------------------------------
â€¢ [SLOW TEST] [63.286 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/apimachinery/crd_watch.go:51

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:13:39.395
    Jan 31 17:13:39.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-watch 01/31/23 17:13:39.396
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:13:39.413
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:13:39.419
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] watch on custom resource definition objects [Conformance]
      test/e2e/apimachinery/crd_watch.go:51
    Jan 31 17:13:39.425: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Creating first CR  01/31/23 17:13:42.021
    Jan 31 17:13:42.033: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:42Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:13:42Z]] name:name1 resourceVersion:7291 uid:7f4bc860-c8f3-4921-910f-6618749e862e] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Creating second CR 01/31/23 17:13:52.035
    Jan 31 17:13:52.046: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:52Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:13:52Z]] name:name2 resourceVersion:7307 uid:84dbca7c-e829-43bd-b9fa-fd3276687b4d] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying first CR 01/31/23 17:14:02.047
    Jan 31 17:14:02.066: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:14:02Z]] name:name1 resourceVersion:7309 uid:7f4bc860-c8f3-4921-910f-6618749e862e] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying second CR 01/31/23 17:14:12.067
    Jan 31 17:14:12.080: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:14:12Z]] name:name2 resourceVersion:7311 uid:84dbca7c-e829-43bd-b9fa-fd3276687b4d] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting first CR 01/31/23 17:14:22.08
    Jan 31 17:14:22.096: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:14:02Z]] name:name1 resourceVersion:7313 uid:7f4bc860-c8f3-4921-910f-6618749e862e] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting second CR 01/31/23 17:14:32.097
    Jan 31 17:14:32.112: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-31T17:13:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-31T17:14:12Z]] name:name2 resourceVersion:7315 uid:84dbca7c-e829-43bd-b9fa-fd3276687b4d] num:map[num1:9223372036854775807 num2:1000000]]}
    [AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:14:42.652: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-watch-4588" for this suite. 01/31/23 17:14:42.663
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:14:42.688
Jan 31 17:14:42.688: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:14:42.689
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:14:42.718
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:14:42.725
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
STEP: Creating configMap with name projected-configmap-test-volume-52894aa2-5589-45f7-98f7-8afc30bdc197 01/31/23 17:14:42.732
STEP: Creating a pod to test consume configMaps 01/31/23 17:14:42.737
Jan 31 17:14:42.748: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1" in namespace "projected-8070" to be "Succeeded or Failed"
Jan 31 17:14:42.754: INFO: Pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.797111ms
Jan 31 17:14:44.766: INFO: Pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018477065s
Jan 31 17:14:46.768: INFO: Pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019945227s
Jan 31 17:14:48.766: INFO: Pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018427622s
STEP: Saw pod success 01/31/23 17:14:48.766
Jan 31 17:14:48.767: INFO: Pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1" satisfied condition "Succeeded or Failed"
Jan 31 17:14:48.777: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1 container projected-configmap-volume-test: <nil>
STEP: delete the pod 01/31/23 17:14:48.81
Jan 31 17:14:48.825: INFO: Waiting for pod pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1 to disappear
Jan 31 17:14:48.832: INFO: Pod pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:14:48.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8070" for this suite. 01/31/23 17:14:48.84
------------------------------
â€¢ [SLOW TEST] [6.159 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:14:42.688
    Jan 31 17:14:42.688: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:14:42.689
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:14:42.718
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:14:42.725
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:375
    STEP: Creating configMap with name projected-configmap-test-volume-52894aa2-5589-45f7-98f7-8afc30bdc197 01/31/23 17:14:42.732
    STEP: Creating a pod to test consume configMaps 01/31/23 17:14:42.737
    Jan 31 17:14:42.748: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1" in namespace "projected-8070" to be "Succeeded or Failed"
    Jan 31 17:14:42.754: INFO: Pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.797111ms
    Jan 31 17:14:44.766: INFO: Pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018477065s
    Jan 31 17:14:46.768: INFO: Pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019945227s
    Jan 31 17:14:48.766: INFO: Pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018427622s
    STEP: Saw pod success 01/31/23 17:14:48.766
    Jan 31 17:14:48.767: INFO: Pod "pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1" satisfied condition "Succeeded or Failed"
    Jan 31 17:14:48.777: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1 container projected-configmap-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:14:48.81
    Jan 31 17:14:48.825: INFO: Waiting for pod pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1 to disappear
    Jan 31 17:14:48.832: INFO: Pod pod-projected-configmaps-27da4923-69e7-4d4f-b7d3-036d98be5bf1 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:14:48.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8070" for this suite. 01/31/23 17:14:48.84
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:14:48.847
Jan 31 17:14:48.847: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 17:14:48.848
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:14:48.863
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:14:48.869
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
STEP: Creating a pod to test downward API volume plugin 01/31/23 17:14:48.875
Jan 31 17:14:48.884: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f" in namespace "downward-api-9729" to be "Succeeded or Failed"
Jan 31 17:14:48.892: INFO: Pod "downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f": Phase="Pending", Reason="", readiness=false. Elapsed: 7.354671ms
Jan 31 17:14:50.901: INFO: Pod "downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016699155s
Jan 31 17:14:52.907: INFO: Pod "downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023162503s
STEP: Saw pod success 01/31/23 17:14:52.907
Jan 31 17:14:52.908: INFO: Pod "downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f" satisfied condition "Succeeded or Failed"
Jan 31 17:14:52.917: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f container client-container: <nil>
STEP: delete the pod 01/31/23 17:14:52.937
Jan 31 17:14:52.957: INFO: Waiting for pod downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f to disappear
Jan 31 17:14:52.967: INFO: Pod downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 17:14:52.967: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9729" for this suite. 01/31/23 17:14:52.976
------------------------------
â€¢ [4.140 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:14:48.847
    Jan 31 17:14:48.847: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 17:14:48.848
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:14:48.863
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:14:48.869
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:249
    STEP: Creating a pod to test downward API volume plugin 01/31/23 17:14:48.875
    Jan 31 17:14:48.884: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f" in namespace "downward-api-9729" to be "Succeeded or Failed"
    Jan 31 17:14:48.892: INFO: Pod "downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f": Phase="Pending", Reason="", readiness=false. Elapsed: 7.354671ms
    Jan 31 17:14:50.901: INFO: Pod "downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016699155s
    Jan 31 17:14:52.907: INFO: Pod "downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023162503s
    STEP: Saw pod success 01/31/23 17:14:52.907
    Jan 31 17:14:52.908: INFO: Pod "downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f" satisfied condition "Succeeded or Failed"
    Jan 31 17:14:52.917: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f container client-container: <nil>
    STEP: delete the pod 01/31/23 17:14:52.937
    Jan 31 17:14:52.957: INFO: Waiting for pod downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f to disappear
    Jan 31 17:14:52.967: INFO: Pod downwardapi-volume-8e3b4c80-be50-434c-ab81-44031ecf2b3f no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:14:52.967: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9729" for this suite. 01/31/23 17:14:52.976
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] ReplicationController
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:14:52.988
Jan 31 17:14:52.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replication-controller 01/31/23 17:14:52.989
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:14:53.007
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:14:53.013
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
Jan 31 17:14:53.021: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 01/31/23 17:14:54.04
STEP: Checking rc "condition-test" has the desired failure condition set 01/31/23 17:14:54.051
STEP: Scaling down rc "condition-test" to satisfy pod quota 01/31/23 17:14:55.065
Jan 31 17:14:55.079: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set 01/31/23 17:14:55.079
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 31 17:14:56.096: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-4337" for this suite. 01/31/23 17:14:56.109
------------------------------
â€¢ [3.130 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:14:52.988
    Jan 31 17:14:52.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replication-controller 01/31/23 17:14:52.989
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:14:53.007
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:14:53.013
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should surface a failure condition on a common issue like exceeded quota [Conformance]
      test/e2e/apps/rc.go:83
    Jan 31 17:14:53.021: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
    STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 01/31/23 17:14:54.04
    STEP: Checking rc "condition-test" has the desired failure condition set 01/31/23 17:14:54.051
    STEP: Scaling down rc "condition-test" to satisfy pod quota 01/31/23 17:14:55.065
    Jan 31 17:14:55.079: INFO: Updating replication controller "condition-test"
    STEP: Checking rc "condition-test" has no failure condition set 01/31/23 17:14:55.079
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:14:56.096: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-4337" for this suite. 01/31/23 17:14:56.109
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:14:56.12
Jan 31 17:14:56.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 17:14:56.121
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:14:56.142
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:14:56.15
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
Jan 31 17:14:56.171: INFO: Waiting up to 5m0s for pod "server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb" in namespace "pods-2739" to be "running and ready"
Jan 31 17:14:56.178: INFO: Pod "server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb": Phase="Pending", Reason="", readiness=false. Elapsed: 6.579698ms
Jan 31 17:14:56.178: INFO: The phase of Pod server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:14:58.189: INFO: Pod "server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018272266s
Jan 31 17:14:58.189: INFO: The phase of Pod server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:15:00.187: INFO: Pod "server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb": Phase="Running", Reason="", readiness=true. Elapsed: 4.015925817s
Jan 31 17:15:00.187: INFO: The phase of Pod server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb is Running (Ready = true)
Jan 31 17:15:00.187: INFO: Pod "server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb" satisfied condition "running and ready"
Jan 31 17:15:00.285: INFO: Waiting up to 5m0s for pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76" in namespace "pods-2739" to be "Succeeded or Failed"
Jan 31 17:15:00.292: INFO: Pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76": Phase="Pending", Reason="", readiness=false. Elapsed: 7.340455ms
Jan 31 17:15:02.302: INFO: Pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016647859s
Jan 31 17:15:04.308: INFO: Pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022981741s
Jan 31 17:15:06.303: INFO: Pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017906766s
STEP: Saw pod success 01/31/23 17:15:06.303
Jan 31 17:15:06.303: INFO: Pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76" satisfied condition "Succeeded or Failed"
Jan 31 17:15:06.313: INFO: Trying to get logs from node 26-m02 pod client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76 container env3cont: <nil>
STEP: delete the pod 01/31/23 17:15:06.333
Jan 31 17:15:06.347: INFO: Waiting for pod client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76 to disappear
Jan 31 17:15:06.351: INFO: Pod client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 31 17:15:06.352: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-2739" for this suite. 01/31/23 17:15:06.357
------------------------------
â€¢ [SLOW TEST] [10.244 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:14:56.12
    Jan 31 17:14:56.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 17:14:56.121
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:14:56.142
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:14:56.15
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should contain environment variables for services [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:444
    Jan 31 17:14:56.171: INFO: Waiting up to 5m0s for pod "server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb" in namespace "pods-2739" to be "running and ready"
    Jan 31 17:14:56.178: INFO: Pod "server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb": Phase="Pending", Reason="", readiness=false. Elapsed: 6.579698ms
    Jan 31 17:14:56.178: INFO: The phase of Pod server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:14:58.189: INFO: Pod "server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018272266s
    Jan 31 17:14:58.189: INFO: The phase of Pod server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:15:00.187: INFO: Pod "server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb": Phase="Running", Reason="", readiness=true. Elapsed: 4.015925817s
    Jan 31 17:15:00.187: INFO: The phase of Pod server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb is Running (Ready = true)
    Jan 31 17:15:00.187: INFO: Pod "server-envvars-cce8dd4f-f3a3-48d5-81f5-db30a25bc6fb" satisfied condition "running and ready"
    Jan 31 17:15:00.285: INFO: Waiting up to 5m0s for pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76" in namespace "pods-2739" to be "Succeeded or Failed"
    Jan 31 17:15:00.292: INFO: Pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76": Phase="Pending", Reason="", readiness=false. Elapsed: 7.340455ms
    Jan 31 17:15:02.302: INFO: Pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016647859s
    Jan 31 17:15:04.308: INFO: Pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022981741s
    Jan 31 17:15:06.303: INFO: Pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017906766s
    STEP: Saw pod success 01/31/23 17:15:06.303
    Jan 31 17:15:06.303: INFO: Pod "client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76" satisfied condition "Succeeded or Failed"
    Jan 31 17:15:06.313: INFO: Trying to get logs from node 26-m02 pod client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76 container env3cont: <nil>
    STEP: delete the pod 01/31/23 17:15:06.333
    Jan 31 17:15:06.347: INFO: Waiting for pod client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76 to disappear
    Jan 31 17:15:06.351: INFO: Pod client-envvars-be1f6f5e-4c0e-40b4-8f5e-0b6320c03f76 no longer exists
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:15:06.352: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-2739" for this suite. 01/31/23 17:15:06.357
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
[BeforeEach] [sig-api-machinery] server version
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:15:06.365
Jan 31 17:15:06.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename server-version 01/31/23 17:15:06.365
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:06.386
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:06.393
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:31
[It] should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
STEP: Request ServerVersion 01/31/23 17:15:06.401
STEP: Confirm major version 01/31/23 17:15:06.404
Jan 31 17:15:06.404: INFO: Major version: 1
STEP: Confirm minor version 01/31/23 17:15:06.404
Jan 31 17:15:06.404: INFO: cleanMinorVersion: 26
Jan 31 17:15:06.404: INFO: Minor version: 26
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/node/init/init.go:32
Jan 31 17:15:06.404: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] server version
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] server version
  tear down framework | framework.go:193
STEP: Destroying namespace "server-version-848" for this suite. 01/31/23 17:15:06.41
------------------------------
â€¢ [0.052 seconds]
[sig-api-machinery] server version
test/e2e/apimachinery/framework.go:23
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] server version
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:15:06.365
    Jan 31 17:15:06.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename server-version 01/31/23 17:15:06.365
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:06.386
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:06.393
    [BeforeEach] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:31
    [It] should find the server version [Conformance]
      test/e2e/apimachinery/server_version.go:39
    STEP: Request ServerVersion 01/31/23 17:15:06.401
    STEP: Confirm major version 01/31/23 17:15:06.404
    Jan 31 17:15:06.404: INFO: Major version: 1
    STEP: Confirm minor version 01/31/23 17:15:06.404
    Jan 31 17:15:06.404: INFO: cleanMinorVersion: 26
    Jan 31 17:15:06.404: INFO: Minor version: 26
    [AfterEach] [sig-api-machinery] server version
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:15:06.404: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] server version
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] server version
      tear down framework | framework.go:193
    STEP: Destroying namespace "server-version-848" for this suite. 01/31/23 17:15:06.41
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:15:06.418
Jan 31 17:15:06.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename watch 01/31/23 17:15:06.419
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:06.434
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:06.441
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
STEP: getting a starting resourceVersion 01/31/23 17:15:06.449
STEP: starting a background goroutine to produce watch events 01/31/23 17:15:06.455
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 01/31/23 17:15:06.455
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Jan 31 17:15:09.230: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-824" for this suite. 01/31/23 17:15:09.28
------------------------------
â€¢ [2.918 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:15:06.418
    Jan 31 17:15:06.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename watch 01/31/23 17:15:06.419
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:06.434
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:06.441
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should receive events on concurrent watches in same order [Conformance]
      test/e2e/apimachinery/watch.go:334
    STEP: getting a starting resourceVersion 01/31/23 17:15:06.449
    STEP: starting a background goroutine to produce watch events 01/31/23 17:15:06.455
    STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 01/31/23 17:15:06.455
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:15:09.230: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-824" for this suite. 01/31/23 17:15:09.28
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Secrets
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:15:09.337
Jan 31 17:15:09.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 17:15:09.339
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:09.367
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:09.376
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
STEP: creating a secret 01/31/23 17:15:09.387
STEP: listing secrets in all namespaces to ensure that there are more than zero 01/31/23 17:15:09.394
STEP: patching the secret 01/31/23 17:15:09.402
STEP: deleting the secret using a LabelSelector 01/31/23 17:15:09.418
STEP: listing secrets in all namespaces, searching for label name and value in patch 01/31/23 17:15:09.429
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 17:15:09.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-8034" for this suite. 01/31/23 17:15:09.445
------------------------------
â€¢ [0.117 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:15:09.337
    Jan 31 17:15:09.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 17:15:09.339
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:09.367
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:09.376
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a secret [Conformance]
      test/e2e/common/node/secrets.go:154
    STEP: creating a secret 01/31/23 17:15:09.387
    STEP: listing secrets in all namespaces to ensure that there are more than zero 01/31/23 17:15:09.394
    STEP: patching the secret 01/31/23 17:15:09.402
    STEP: deleting the secret using a LabelSelector 01/31/23 17:15:09.418
    STEP: listing secrets in all namespaces, searching for label name and value in patch 01/31/23 17:15:09.429
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:15:09.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-8034" for this suite. 01/31/23 17:15:09.445
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:15:09.456
Jan 31 17:15:09.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-runtime 01/31/23 17:15:09.458
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:09.474
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:09.481
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
STEP: create the container 01/31/23 17:15:09.49
STEP: wait for the container to reach Succeeded 01/31/23 17:15:09.503
STEP: get the container status 01/31/23 17:15:14.605
STEP: the container should be terminated 01/31/23 17:15:14.612
STEP: the termination message should be set 01/31/23 17:15:14.613
Jan 31 17:15:14.613: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container 01/31/23 17:15:14.613
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Jan 31 17:15:14.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-1251" for this suite. 01/31/23 17:15:14.656
------------------------------
â€¢ [SLOW TEST] [5.215 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:15:09.456
    Jan 31 17:15:09.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-runtime 01/31/23 17:15:09.458
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:09.474
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:09.481
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232
    STEP: create the container 01/31/23 17:15:09.49
    STEP: wait for the container to reach Succeeded 01/31/23 17:15:09.503
    STEP: get the container status 01/31/23 17:15:14.605
    STEP: the container should be terminated 01/31/23 17:15:14.612
    STEP: the termination message should be set 01/31/23 17:15:14.613
    Jan 31 17:15:14.613: INFO: Expected: &{} to match Container's Termination Message:  --
    STEP: delete the container 01/31/23 17:15:14.613
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:15:14.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-1251" for this suite. 01/31/23 17:15:14.656
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:15:14.671
Jan 31 17:15:14.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:15:14.672
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:14.694
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:14.7
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/31/23 17:15:14.708
Jan 31 17:15:14.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-883 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jan 31 17:15:14.786: INFO: stderr: ""
Jan 31 17:15:14.786: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run 01/31/23 17:15:14.786
Jan 31 17:15:14.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-883 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
Jan 31 17:15:15.560: INFO: stderr: ""
Jan 31 17:15:15.560: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/31/23 17:15:15.56
Jan 31 17:15:15.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-883 delete pods e2e-test-httpd-pod'
Jan 31 17:15:18.033: INFO: stderr: ""
Jan 31 17:15:18.033: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:15:18.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-883" for this suite. 01/31/23 17:15:18.039
------------------------------
â€¢ [3.373 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl server-side dry-run
  test/e2e/kubectl/kubectl.go:956
    should check if kubectl can dry-run update Pods [Conformance]
    test/e2e/kubectl/kubectl.go:962

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:15:14.671
    Jan 31 17:15:14.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:15:14.672
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:14.694
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:14.7
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl can dry-run update Pods [Conformance]
      test/e2e/kubectl/kubectl.go:962
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/31/23 17:15:14.708
    Jan 31 17:15:14.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-883 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Jan 31 17:15:14.786: INFO: stderr: ""
    Jan 31 17:15:14.786: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: replace the image in the pod with server-side dry-run 01/31/23 17:15:14.786
    Jan 31 17:15:14.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-883 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
    Jan 31 17:15:15.560: INFO: stderr: ""
    Jan 31 17:15:15.560: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/31/23 17:15:15.56
    Jan 31 17:15:15.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-883 delete pods e2e-test-httpd-pod'
    Jan 31 17:15:18.033: INFO: stderr: ""
    Jan 31 17:15:18.033: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:15:18.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-883" for this suite. 01/31/23 17:15:18.039
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:15:18.048
Jan 31 17:15:18.048: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 17:15:18.049
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:18.063
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:18.07
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
STEP: Creating a pod to test emptydir 0666 on node default medium 01/31/23 17:15:18.076
Jan 31 17:15:18.084: INFO: Waiting up to 5m0s for pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374" in namespace "emptydir-4254" to be "Succeeded or Failed"
Jan 31 17:15:18.091: INFO: Pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374": Phase="Pending", Reason="", readiness=false. Elapsed: 7.609345ms
Jan 31 17:15:20.104: INFO: Pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020643103s
Jan 31 17:15:22.101: INFO: Pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01742208s
Jan 31 17:15:24.103: INFO: Pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019116543s
STEP: Saw pod success 01/31/23 17:15:24.103
Jan 31 17:15:24.103: INFO: Pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374" satisfied condition "Succeeded or Failed"
Jan 31 17:15:24.112: INFO: Trying to get logs from node 26-m02 pod pod-7e5c27e6-212a-4853-8963-1db9d17af374 container test-container: <nil>
STEP: delete the pod 01/31/23 17:15:24.133
Jan 31 17:15:24.150: INFO: Waiting for pod pod-7e5c27e6-212a-4853-8963-1db9d17af374 to disappear
Jan 31 17:15:24.157: INFO: Pod pod-7e5c27e6-212a-4853-8963-1db9d17af374 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:15:24.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-4254" for this suite. 01/31/23 17:15:24.163
------------------------------
â€¢ [SLOW TEST] [6.125 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:15:18.048
    Jan 31 17:15:18.048: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 17:15:18.049
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:18.063
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:18.07
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:207
    STEP: Creating a pod to test emptydir 0666 on node default medium 01/31/23 17:15:18.076
    Jan 31 17:15:18.084: INFO: Waiting up to 5m0s for pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374" in namespace "emptydir-4254" to be "Succeeded or Failed"
    Jan 31 17:15:18.091: INFO: Pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374": Phase="Pending", Reason="", readiness=false. Elapsed: 7.609345ms
    Jan 31 17:15:20.104: INFO: Pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020643103s
    Jan 31 17:15:22.101: INFO: Pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01742208s
    Jan 31 17:15:24.103: INFO: Pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019116543s
    STEP: Saw pod success 01/31/23 17:15:24.103
    Jan 31 17:15:24.103: INFO: Pod "pod-7e5c27e6-212a-4853-8963-1db9d17af374" satisfied condition "Succeeded or Failed"
    Jan 31 17:15:24.112: INFO: Trying to get logs from node 26-m02 pod pod-7e5c27e6-212a-4853-8963-1db9d17af374 container test-container: <nil>
    STEP: delete the pod 01/31/23 17:15:24.133
    Jan 31 17:15:24.150: INFO: Waiting for pod pod-7e5c27e6-212a-4853-8963-1db9d17af374 to disappear
    Jan 31 17:15:24.157: INFO: Pod pod-7e5c27e6-212a-4853-8963-1db9d17af374 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:15:24.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-4254" for this suite. 01/31/23 17:15:24.163
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-architecture] Conformance Tests
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
[BeforeEach] [sig-architecture] Conformance Tests
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:15:24.174
Jan 31 17:15:24.174: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename conformance-tests 01/31/23 17:15:24.175
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:24.234
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:24.24
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:31
[It] should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
STEP: Getting node addresses 01/31/23 17:15:24.247
Jan 31 17:15:24.247: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/node/init/init.go:32
Jan 31 17:15:24.255: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  tear down framework | framework.go:193
STEP: Destroying namespace "conformance-tests-662" for this suite. 01/31/23 17:15:24.26
------------------------------
â€¢ [0.093 seconds]
[sig-architecture] Conformance Tests
test/e2e/architecture/framework.go:23
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-architecture] Conformance Tests
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:15:24.174
    Jan 31 17:15:24.174: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename conformance-tests 01/31/23 17:15:24.175
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:24.234
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:24.24
    [BeforeEach] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:31
    [It] should have at least two untainted nodes [Conformance]
      test/e2e/architecture/conformance.go:38
    STEP: Getting node addresses 01/31/23 17:15:24.247
    Jan 31 17:15:24.247: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    [AfterEach] [sig-architecture] Conformance Tests
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:15:24.255: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      tear down framework | framework.go:193
    STEP: Destroying namespace "conformance-tests-662" for this suite. 01/31/23 17:15:24.26
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Pods
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:15:24.268
Jan 31 17:15:24.268: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 17:15:24.269
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:24.285
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:24.291
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
STEP: creating the pod 01/31/23 17:15:24.297
STEP: setting up watch 01/31/23 17:15:24.297
STEP: submitting the pod to kubernetes 01/31/23 17:15:24.403
STEP: verifying the pod is in kubernetes 01/31/23 17:15:24.422
STEP: verifying pod creation was observed 01/31/23 17:15:24.44
Jan 31 17:15:24.440: INFO: Waiting up to 5m0s for pod "pod-submit-remove-00703e6f-16a2-4b89-a0b8-b78d5c456267" in namespace "pods-3601" to be "running"
Jan 31 17:15:24.448: INFO: Pod "pod-submit-remove-00703e6f-16a2-4b89-a0b8-b78d5c456267": Phase="Pending", Reason="", readiness=false. Elapsed: 7.533621ms
Jan 31 17:15:26.457: INFO: Pod "pod-submit-remove-00703e6f-16a2-4b89-a0b8-b78d5c456267": Phase="Running", Reason="", readiness=true. Elapsed: 2.016325114s
Jan 31 17:15:26.457: INFO: Pod "pod-submit-remove-00703e6f-16a2-4b89-a0b8-b78d5c456267" satisfied condition "running"
STEP: deleting the pod gracefully 01/31/23 17:15:26.466
STEP: verifying pod deletion was observed 01/31/23 17:15:26.477
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 31 17:15:29.591: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-3601" for this suite. 01/31/23 17:15:29.598
------------------------------
â€¢ [SLOW TEST] [5.339 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:15:24.268
    Jan 31 17:15:24.268: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 17:15:24.269
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:24.285
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:24.291
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be submitted and removed [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:226
    STEP: creating the pod 01/31/23 17:15:24.297
    STEP: setting up watch 01/31/23 17:15:24.297
    STEP: submitting the pod to kubernetes 01/31/23 17:15:24.403
    STEP: verifying the pod is in kubernetes 01/31/23 17:15:24.422
    STEP: verifying pod creation was observed 01/31/23 17:15:24.44
    Jan 31 17:15:24.440: INFO: Waiting up to 5m0s for pod "pod-submit-remove-00703e6f-16a2-4b89-a0b8-b78d5c456267" in namespace "pods-3601" to be "running"
    Jan 31 17:15:24.448: INFO: Pod "pod-submit-remove-00703e6f-16a2-4b89-a0b8-b78d5c456267": Phase="Pending", Reason="", readiness=false. Elapsed: 7.533621ms
    Jan 31 17:15:26.457: INFO: Pod "pod-submit-remove-00703e6f-16a2-4b89-a0b8-b78d5c456267": Phase="Running", Reason="", readiness=true. Elapsed: 2.016325114s
    Jan 31 17:15:26.457: INFO: Pod "pod-submit-remove-00703e6f-16a2-4b89-a0b8-b78d5c456267" satisfied condition "running"
    STEP: deleting the pod gracefully 01/31/23 17:15:26.466
    STEP: verifying pod deletion was observed 01/31/23 17:15:26.477
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:15:29.591: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-3601" for this suite. 01/31/23 17:15:29.598
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:15:29.607
Jan 31 17:15:29.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename cronjob 01/31/23 17:15:29.608
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:29.625
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:29.633
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
STEP: Creating a cronjob 01/31/23 17:15:29.64
STEP: Ensuring more than one job is running at a time 01/31/23 17:15:29.646
STEP: Ensuring at least two running jobs exists by listing jobs explicitly 01/31/23 17:17:01.657
STEP: Removing cronjob 01/31/23 17:17:01.667
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:01.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-2823" for this suite. 01/31/23 17:17:01.691
------------------------------
â€¢ [SLOW TEST] [92.097 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:15:29.607
    Jan 31 17:15:29.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename cronjob 01/31/23 17:15:29.608
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:15:29.625
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:15:29.633
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule multiple jobs concurrently [Conformance]
      test/e2e/apps/cronjob.go:69
    STEP: Creating a cronjob 01/31/23 17:15:29.64
    STEP: Ensuring more than one job is running at a time 01/31/23 17:15:29.646
    STEP: Ensuring at least two running jobs exists by listing jobs explicitly 01/31/23 17:17:01.657
    STEP: Removing cronjob 01/31/23 17:17:01.667
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:01.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-2823" for this suite. 01/31/23 17:17:01.691
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:01.707
Jan 31 17:17:01.708: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replication-controller 01/31/23 17:17:01.709
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:01.731
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:01.739
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
STEP: Creating ReplicationController "e2e-rc-rt9ld" 01/31/23 17:17:01.749
Jan 31 17:17:01.756: INFO: Get Replication Controller "e2e-rc-rt9ld" to confirm replicas
Jan 31 17:17:02.763: INFO: Get Replication Controller "e2e-rc-rt9ld" to confirm replicas
Jan 31 17:17:02.769: INFO: Found 1 replicas for "e2e-rc-rt9ld" replication controller
STEP: Getting scale subresource for ReplicationController "e2e-rc-rt9ld" 01/31/23 17:17:02.769
STEP: Updating a scale subresource 01/31/23 17:17:02.776
STEP: Verifying replicas where modified for replication controller "e2e-rc-rt9ld" 01/31/23 17:17:02.783
Jan 31 17:17:02.783: INFO: Get Replication Controller "e2e-rc-rt9ld" to confirm replicas
Jan 31 17:17:03.792: INFO: Get Replication Controller "e2e-rc-rt9ld" to confirm replicas
Jan 31 17:17:03.801: INFO: Found 2 replicas for "e2e-rc-rt9ld" replication controller
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:03.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-6043" for this suite. 01/31/23 17:17:03.809
------------------------------
â€¢ [2.112 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:01.707
    Jan 31 17:17:01.708: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replication-controller 01/31/23 17:17:01.709
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:01.731
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:01.739
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should get and update a ReplicationController scale [Conformance]
      test/e2e/apps/rc.go:402
    STEP: Creating ReplicationController "e2e-rc-rt9ld" 01/31/23 17:17:01.749
    Jan 31 17:17:01.756: INFO: Get Replication Controller "e2e-rc-rt9ld" to confirm replicas
    Jan 31 17:17:02.763: INFO: Get Replication Controller "e2e-rc-rt9ld" to confirm replicas
    Jan 31 17:17:02.769: INFO: Found 1 replicas for "e2e-rc-rt9ld" replication controller
    STEP: Getting scale subresource for ReplicationController "e2e-rc-rt9ld" 01/31/23 17:17:02.769
    STEP: Updating a scale subresource 01/31/23 17:17:02.776
    STEP: Verifying replicas where modified for replication controller "e2e-rc-rt9ld" 01/31/23 17:17:02.783
    Jan 31 17:17:02.783: INFO: Get Replication Controller "e2e-rc-rt9ld" to confirm replicas
    Jan 31 17:17:03.792: INFO: Get Replication Controller "e2e-rc-rt9ld" to confirm replicas
    Jan 31 17:17:03.801: INFO: Found 2 replicas for "e2e-rc-rt9ld" replication controller
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:03.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-6043" for this suite. 01/31/23 17:17:03.809
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:03.82
Jan 31 17:17:03.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename daemonsets 01/31/23 17:17:03.821
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:03.861
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:03.868
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374
Jan 31 17:17:03.910: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 17:17:03.918
Jan 31 17:17:03.933: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:17:03.933: INFO: Node 26-m02 is running 0 daemon pod, expected 1
Jan 31 17:17:04.949: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:17:04.949: INFO: Node 26-m02 is running 0 daemon pod, expected 1
Jan 31 17:17:05.954: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 31 17:17:05.954: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Update daemon pods image. 01/31/23 17:17:05.993
STEP: Check that daemon pods images are updated. 01/31/23 17:17:06.016
Jan 31 17:17:06.025: INFO: Wrong image for pod: daemon-set-mq2zt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Jan 31 17:17:06.025: INFO: Wrong image for pod: daemon-set-ctnpg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Jan 31 17:17:07.045: INFO: Wrong image for pod: daemon-set-ctnpg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Jan 31 17:17:08.048: INFO: Wrong image for pod: daemon-set-ctnpg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Jan 31 17:17:08.048: INFO: Pod daemon-set-ttdgz is not available
Jan 31 17:17:09.045: INFO: Wrong image for pod: daemon-set-ctnpg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Jan 31 17:17:09.045: INFO: Pod daemon-set-ttdgz is not available
Jan 31 17:17:11.043: INFO: Pod daemon-set-pmt9d is not available
STEP: Check that daemon pods are still running on every node of the cluster. 01/31/23 17:17:11.049
Jan 31 17:17:11.061: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 17:17:11.061: INFO: Node 26-m02 is running 0 daemon pod, expected 1
Jan 31 17:17:12.083: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 17:17:12.083: INFO: Node 26-m02 is running 0 daemon pod, expected 1
Jan 31 17:17:13.081: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 31 17:17:13.081: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/31/23 17:17:13.114
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3247, will wait for the garbage collector to delete the pods 01/31/23 17:17:13.114
Jan 31 17:17:13.185: INFO: Deleting DaemonSet.extensions daemon-set took: 14.289884ms
Jan 31 17:17:13.285: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.745001ms
Jan 31 17:17:15.793: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:17:15.793: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 31 17:17:15.800: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7956"},"items":null}

Jan 31 17:17:15.808: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7956"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:15.830: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-3247" for this suite. 01/31/23 17:17:15.845
------------------------------
â€¢ [SLOW TEST] [12.035 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:03.82
    Jan 31 17:17:03.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename daemonsets 01/31/23 17:17:03.821
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:03.861
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:03.868
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
      test/e2e/apps/daemon_set.go:374
    Jan 31 17:17:03.910: INFO: Creating simple daemon set daemon-set
    STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 17:17:03.918
    Jan 31 17:17:03.933: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:17:03.933: INFO: Node 26-m02 is running 0 daemon pod, expected 1
    Jan 31 17:17:04.949: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:17:04.949: INFO: Node 26-m02 is running 0 daemon pod, expected 1
    Jan 31 17:17:05.954: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 31 17:17:05.954: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Update daemon pods image. 01/31/23 17:17:05.993
    STEP: Check that daemon pods images are updated. 01/31/23 17:17:06.016
    Jan 31 17:17:06.025: INFO: Wrong image for pod: daemon-set-mq2zt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Jan 31 17:17:06.025: INFO: Wrong image for pod: daemon-set-ctnpg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Jan 31 17:17:07.045: INFO: Wrong image for pod: daemon-set-ctnpg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Jan 31 17:17:08.048: INFO: Wrong image for pod: daemon-set-ctnpg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Jan 31 17:17:08.048: INFO: Pod daemon-set-ttdgz is not available
    Jan 31 17:17:09.045: INFO: Wrong image for pod: daemon-set-ctnpg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Jan 31 17:17:09.045: INFO: Pod daemon-set-ttdgz is not available
    Jan 31 17:17:11.043: INFO: Pod daemon-set-pmt9d is not available
    STEP: Check that daemon pods are still running on every node of the cluster. 01/31/23 17:17:11.049
    Jan 31 17:17:11.061: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 17:17:11.061: INFO: Node 26-m02 is running 0 daemon pod, expected 1
    Jan 31 17:17:12.083: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 17:17:12.083: INFO: Node 26-m02 is running 0 daemon pod, expected 1
    Jan 31 17:17:13.081: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 31 17:17:13.081: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/31/23 17:17:13.114
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3247, will wait for the garbage collector to delete the pods 01/31/23 17:17:13.114
    Jan 31 17:17:13.185: INFO: Deleting DaemonSet.extensions daemon-set took: 14.289884ms
    Jan 31 17:17:13.285: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.745001ms
    Jan 31 17:17:15.793: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:17:15.793: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 31 17:17:15.800: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7956"},"items":null}

    Jan 31 17:17:15.808: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7956"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:15.830: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-3247" for this suite. 01/31/23 17:17:15.845
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
[BeforeEach] [sig-storage] CSIStorageCapacity
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:15.857
Jan 31 17:17:15.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename csistoragecapacity 01/31/23 17:17:15.858
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:15.879
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:15.885
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:31
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
STEP: getting /apis 01/31/23 17:17:15.891
STEP: getting /apis/storage.k8s.io 01/31/23 17:17:15.896
STEP: getting /apis/storage.k8s.io/v1 01/31/23 17:17:15.898
STEP: creating 01/31/23 17:17:15.901
STEP: watching 01/31/23 17:17:15.921
Jan 31 17:17:15.921: INFO: starting watch
STEP: getting 01/31/23 17:17:15.932
STEP: listing in namespace 01/31/23 17:17:15.936
STEP: listing across namespaces 01/31/23 17:17:15.941
STEP: patching 01/31/23 17:17:15.945
STEP: updating 01/31/23 17:17:15.952
Jan 31 17:17:15.958: INFO: waiting for watch events with expected annotations in namespace
Jan 31 17:17:15.958: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting 01/31/23 17:17:15.958
STEP: deleting a collection 01/31/23 17:17:15.975
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:16.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  tear down framework | framework.go:193
STEP: Destroying namespace "csistoragecapacity-3575" for this suite. 01/31/23 17:17:16.008
------------------------------
â€¢ [0.159 seconds]
[sig-storage] CSIStorageCapacity
test/e2e/storage/utils/framework.go:23
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIStorageCapacity
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:15.857
    Jan 31 17:17:15.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename csistoragecapacity 01/31/23 17:17:15.858
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:15.879
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:15.885
    [BeforeEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support CSIStorageCapacities API operations [Conformance]
      test/e2e/storage/csistoragecapacity.go:49
    STEP: getting /apis 01/31/23 17:17:15.891
    STEP: getting /apis/storage.k8s.io 01/31/23 17:17:15.896
    STEP: getting /apis/storage.k8s.io/v1 01/31/23 17:17:15.898
    STEP: creating 01/31/23 17:17:15.901
    STEP: watching 01/31/23 17:17:15.921
    Jan 31 17:17:15.921: INFO: starting watch
    STEP: getting 01/31/23 17:17:15.932
    STEP: listing in namespace 01/31/23 17:17:15.936
    STEP: listing across namespaces 01/31/23 17:17:15.941
    STEP: patching 01/31/23 17:17:15.945
    STEP: updating 01/31/23 17:17:15.952
    Jan 31 17:17:15.958: INFO: waiting for watch events with expected annotations in namespace
    Jan 31 17:17:15.958: INFO: waiting for watch events with expected annotations across namespace
    STEP: deleting 01/31/23 17:17:15.958
    STEP: deleting a collection 01/31/23 17:17:15.975
    [AfterEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:16.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      tear down framework | framework.go:193
    STEP: Destroying namespace "csistoragecapacity-3575" for this suite. 01/31/23 17:17:16.008
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial]
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:16.018
Jan 31 17:17:16.018: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename daemonsets 01/31/23 17:17:16.02
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:16.04
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:16.046
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294
STEP: Creating a simple DaemonSet "daemon-set" 01/31/23 17:17:16.077
STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 17:17:16.083
Jan 31 17:17:16.097: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:17:16.097: INFO: Node 26-m02 is running 0 daemon pod, expected 1
Jan 31 17:17:17.111: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:17:17.111: INFO: Node 26-m02 is running 0 daemon pod, expected 1
Jan 31 17:17:18.115: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:17:18.115: INFO: Node 26-m02 is running 0 daemon pod, expected 1
Jan 31 17:17:19.118: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 31 17:17:19.118: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 01/31/23 17:17:19.127
Jan 31 17:17:19.161: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 17:17:19.161: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 17:17:20.174: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 17:17:20.174: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 17:17:21.177: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 17:17:21.177: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 17:17:22.183: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 31 17:17:22.183: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted. 01/31/23 17:17:22.183
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/31/23 17:17:22.202
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6242, will wait for the garbage collector to delete the pods 01/31/23 17:17:22.202
Jan 31 17:17:22.279: INFO: Deleting DaemonSet.extensions daemon-set took: 17.02309ms
Jan 31 17:17:22.380: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.183644ms
Jan 31 17:17:24.493: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 17:17:24.493: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 31 17:17:24.503: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8062"},"items":null}

Jan 31 17:17:24.513: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8062"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:24.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-6242" for this suite. 01/31/23 17:17:24.539
------------------------------
â€¢ [SLOW TEST] [8.529 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:16.018
    Jan 31 17:17:16.018: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename daemonsets 01/31/23 17:17:16.02
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:16.04
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:16.046
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should retry creating failed daemon pods [Conformance]
      test/e2e/apps/daemon_set.go:294
    STEP: Creating a simple DaemonSet "daemon-set" 01/31/23 17:17:16.077
    STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 17:17:16.083
    Jan 31 17:17:16.097: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:17:16.097: INFO: Node 26-m02 is running 0 daemon pod, expected 1
    Jan 31 17:17:17.111: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:17:17.111: INFO: Node 26-m02 is running 0 daemon pod, expected 1
    Jan 31 17:17:18.115: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:17:18.115: INFO: Node 26-m02 is running 0 daemon pod, expected 1
    Jan 31 17:17:19.118: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 31 17:17:19.118: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 01/31/23 17:17:19.127
    Jan 31 17:17:19.161: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 17:17:19.161: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 17:17:20.174: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 17:17:20.174: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 17:17:21.177: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 17:17:21.177: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 17:17:22.183: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 31 17:17:22.183: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Wait for the failed daemon pod to be completely deleted. 01/31/23 17:17:22.183
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/31/23 17:17:22.202
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6242, will wait for the garbage collector to delete the pods 01/31/23 17:17:22.202
    Jan 31 17:17:22.279: INFO: Deleting DaemonSet.extensions daemon-set took: 17.02309ms
    Jan 31 17:17:22.380: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.183644ms
    Jan 31 17:17:24.493: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 17:17:24.493: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 31 17:17:24.503: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8062"},"items":null}

    Jan 31 17:17:24.513: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8062"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:24.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-6242" for this suite. 01/31/23 17:17:24.539
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:24.549
Jan 31 17:17:24.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename security-context-test 01/31/23 17:17:24.55
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:24.571
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:24.58
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
Jan 31 17:17:24.600: INFO: Waiting up to 5m0s for pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21" in namespace "security-context-test-1756" to be "Succeeded or Failed"
Jan 31 17:17:24.611: INFO: Pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21": Phase="Pending", Reason="", readiness=false. Elapsed: 10.81601ms
Jan 31 17:17:26.623: INFO: Pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022689254s
Jan 31 17:17:28.621: INFO: Pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020765118s
Jan 31 17:17:30.618: INFO: Pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.01817097s
Jan 31 17:17:30.618: INFO: Pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:30.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-1756" for this suite. 01/31/23 17:17:30.625
------------------------------
â€¢ [SLOW TEST] [6.084 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a container with runAsUser
  test/e2e/common/node/security_context.go:309
    should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:24.549
    Jan 31 17:17:24.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename security-context-test 01/31/23 17:17:24.55
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:24.571
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:24.58
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:347
    Jan 31 17:17:24.600: INFO: Waiting up to 5m0s for pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21" in namespace "security-context-test-1756" to be "Succeeded or Failed"
    Jan 31 17:17:24.611: INFO: Pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21": Phase="Pending", Reason="", readiness=false. Elapsed: 10.81601ms
    Jan 31 17:17:26.623: INFO: Pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022689254s
    Jan 31 17:17:28.621: INFO: Pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020765118s
    Jan 31 17:17:30.618: INFO: Pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.01817097s
    Jan 31 17:17:30.618: INFO: Pod "busybox-user-65534-c317af64-e3be-45fc-8583-43830c197f21" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:30.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-1756" for this suite. 01/31/23 17:17:30.625
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:30.635
Jan 31 17:17:30.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:17:30.635
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:30.653
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:30.659
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 01/31/23 17:17:30.666
Jan 31 17:17:30.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:17:32.213: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:38.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-3263" for this suite. 01/31/23 17:17:38.328
------------------------------
â€¢ [SLOW TEST] [7.700 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:30.635
    Jan 31 17:17:30.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:17:30.635
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:30.653
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:30.659
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of different groups [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:276
    STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 01/31/23 17:17:30.666
    Jan 31 17:17:30.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:17:32.213: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:38.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-3263" for this suite. 01/31/23 17:17:38.328
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected downwardAPI
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:38.335
Jan 31 17:17:38.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:17:38.336
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:38.353
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:38.36
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
STEP: Creating a pod to test downward API volume plugin 01/31/23 17:17:38.365
Jan 31 17:17:38.375: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9" in namespace "projected-3470" to be "Succeeded or Failed"
Jan 31 17:17:38.381: INFO: Pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.348409ms
Jan 31 17:17:40.392: INFO: Pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017222242s
Jan 31 17:17:42.395: INFO: Pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019967702s
Jan 31 17:17:44.391: INFO: Pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.016747314s
STEP: Saw pod success 01/31/23 17:17:44.392
Jan 31 17:17:44.392: INFO: Pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9" satisfied condition "Succeeded or Failed"
Jan 31 17:17:44.402: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9 container client-container: <nil>
STEP: delete the pod 01/31/23 17:17:44.434
Jan 31 17:17:44.457: INFO: Waiting for pod downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9 to disappear
Jan 31 17:17:44.467: INFO: Pod downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:44.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3470" for this suite. 01/31/23 17:17:44.475
------------------------------
â€¢ [SLOW TEST] [6.147 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:38.335
    Jan 31 17:17:38.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:17:38.336
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:38.353
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:38.36
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:68
    STEP: Creating a pod to test downward API volume plugin 01/31/23 17:17:38.365
    Jan 31 17:17:38.375: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9" in namespace "projected-3470" to be "Succeeded or Failed"
    Jan 31 17:17:38.381: INFO: Pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.348409ms
    Jan 31 17:17:40.392: INFO: Pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017222242s
    Jan 31 17:17:42.395: INFO: Pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019967702s
    Jan 31 17:17:44.391: INFO: Pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.016747314s
    STEP: Saw pod success 01/31/23 17:17:44.392
    Jan 31 17:17:44.392: INFO: Pod "downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9" satisfied condition "Succeeded or Failed"
    Jan 31 17:17:44.402: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9 container client-container: <nil>
    STEP: delete the pod 01/31/23 17:17:44.434
    Jan 31 17:17:44.457: INFO: Waiting for pod downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9 to disappear
    Jan 31 17:17:44.467: INFO: Pod downwardapi-volume-ce813cde-e44f-45a0-a7f2-6759423458b9 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:44.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3470" for this suite. 01/31/23 17:17:44.475
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:44.489
Jan 31 17:17:44.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename runtimeclass 01/31/23 17:17:44.491
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:44.515
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:44.522
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
Jan 31 17:17:44.548: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-862 to be scheduled
Jan 31 17:17:44.560: INFO: 1 pods are not scheduled: [runtimeclass-862/test-runtimeclass-runtimeclass-862-preconfigured-handler-fkjk7(a6aa839b-e58d-4278-91e3-e65039906ae5)]
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:46.585: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-862" for this suite. 01/31/23 17:17:46.596
------------------------------
â€¢ [2.115 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:44.489
    Jan 31 17:17:44.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename runtimeclass 01/31/23 17:17:44.491
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:44.515
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:44.522
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:104
    Jan 31 17:17:44.548: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-862 to be scheduled
    Jan 31 17:17:44.560: INFO: 1 pods are not scheduled: [runtimeclass-862/test-runtimeclass-runtimeclass-862-preconfigured-handler-fkjk7(a6aa839b-e58d-4278-91e3-e65039906ae5)]
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:46.585: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-862" for this suite. 01/31/23 17:17:46.596
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:46.606
Jan 31 17:17:46.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:17:46.607
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:46.627
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:46.633
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
STEP: Creating projection with secret that has name projected-secret-test-4964af6a-5838-452b-a1cb-f047949d67c7 01/31/23 17:17:46.64
STEP: Creating a pod to test consume secrets 01/31/23 17:17:46.647
Jan 31 17:17:46.658: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e" in namespace "projected-568" to be "Succeeded or Failed"
Jan 31 17:17:46.665: INFO: Pod "pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e": Phase="Pending", Reason="", readiness=false. Elapsed: 7.123973ms
Jan 31 17:17:48.679: INFO: Pod "pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020480254s
Jan 31 17:17:50.671: INFO: Pod "pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013312322s
STEP: Saw pod success 01/31/23 17:17:50.671
Jan 31 17:17:50.672: INFO: Pod "pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e" satisfied condition "Succeeded or Failed"
Jan 31 17:17:50.677: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e container projected-secret-volume-test: <nil>
STEP: delete the pod 01/31/23 17:17:50.692
Jan 31 17:17:50.704: INFO: Waiting for pod pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e to disappear
Jan 31 17:17:50.712: INFO: Pod pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:50.712: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-568" for this suite. 01/31/23 17:17:50.719
------------------------------
â€¢ [4.119 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:46.606
    Jan 31 17:17:46.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:17:46.607
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:46.627
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:46.633
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:46
    STEP: Creating projection with secret that has name projected-secret-test-4964af6a-5838-452b-a1cb-f047949d67c7 01/31/23 17:17:46.64
    STEP: Creating a pod to test consume secrets 01/31/23 17:17:46.647
    Jan 31 17:17:46.658: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e" in namespace "projected-568" to be "Succeeded or Failed"
    Jan 31 17:17:46.665: INFO: Pod "pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e": Phase="Pending", Reason="", readiness=false. Elapsed: 7.123973ms
    Jan 31 17:17:48.679: INFO: Pod "pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020480254s
    Jan 31 17:17:50.671: INFO: Pod "pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013312322s
    STEP: Saw pod success 01/31/23 17:17:50.671
    Jan 31 17:17:50.672: INFO: Pod "pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e" satisfied condition "Succeeded or Failed"
    Jan 31 17:17:50.677: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e container projected-secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:17:50.692
    Jan 31 17:17:50.704: INFO: Waiting for pod pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e to disappear
    Jan 31 17:17:50.712: INFO: Pod pod-projected-secrets-d23a3274-6f32-4dc2-9b04-a8bae90e194e no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:50.712: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-568" for this suite. 01/31/23 17:17:50.719
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] CronJob
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:50.727
Jan 31 17:17:50.728: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename cronjob 01/31/23 17:17:50.728
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:50.746
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:50.753
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
STEP: Creating a cronjob 01/31/23 17:17:50.76
STEP: creating 01/31/23 17:17:50.76
STEP: getting 01/31/23 17:17:50.769
STEP: listing 01/31/23 17:17:50.775
STEP: watching 01/31/23 17:17:50.781
Jan 31 17:17:50.782: INFO: starting watch
STEP: cluster-wide listing 01/31/23 17:17:50.785
STEP: cluster-wide watching 01/31/23 17:17:50.79
Jan 31 17:17:50.790: INFO: starting watch
STEP: patching 01/31/23 17:17:50.794
STEP: updating 01/31/23 17:17:50.802
Jan 31 17:17:50.817: INFO: waiting for watch events with expected annotations
Jan 31 17:17:50.817: INFO: saw patched and updated annotations
STEP: patching /status 01/31/23 17:17:50.817
STEP: updating /status 01/31/23 17:17:50.825
STEP: get /status 01/31/23 17:17:50.839
STEP: deleting 01/31/23 17:17:50.844
STEP: deleting a collection 01/31/23 17:17:50.86
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:50.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-6707" for this suite. 01/31/23 17:17:50.883
------------------------------
â€¢ [0.163 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:50.727
    Jan 31 17:17:50.728: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename cronjob 01/31/23 17:17:50.728
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:50.746
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:50.753
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CronJob API operations [Conformance]
      test/e2e/apps/cronjob.go:319
    STEP: Creating a cronjob 01/31/23 17:17:50.76
    STEP: creating 01/31/23 17:17:50.76
    STEP: getting 01/31/23 17:17:50.769
    STEP: listing 01/31/23 17:17:50.775
    STEP: watching 01/31/23 17:17:50.781
    Jan 31 17:17:50.782: INFO: starting watch
    STEP: cluster-wide listing 01/31/23 17:17:50.785
    STEP: cluster-wide watching 01/31/23 17:17:50.79
    Jan 31 17:17:50.790: INFO: starting watch
    STEP: patching 01/31/23 17:17:50.794
    STEP: updating 01/31/23 17:17:50.802
    Jan 31 17:17:50.817: INFO: waiting for watch events with expected annotations
    Jan 31 17:17:50.817: INFO: saw patched and updated annotations
    STEP: patching /status 01/31/23 17:17:50.817
    STEP: updating /status 01/31/23 17:17:50.825
    STEP: get /status 01/31/23 17:17:50.839
    STEP: deleting 01/31/23 17:17:50.844
    STEP: deleting a collection 01/31/23 17:17:50.86
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:50.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-6707" for this suite. 01/31/23 17:17:50.883
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:50.902
Jan 31 17:17:50.902: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubelet-test 01/31/23 17:17:50.903
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:50.941
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:50.949
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:55.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-9227" for this suite. 01/31/23 17:17:55.017
------------------------------
â€¢ [4.135 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should have an terminated reason [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:50.902
    Jan 31 17:17:50.902: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubelet-test 01/31/23 17:17:50.903
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:50.941
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:50.949
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should have an terminated reason [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:110
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:55.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-9227" for this suite. 01/31/23 17:17:55.017
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Lease
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[BeforeEach] [sig-node] Lease
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:55.038
Jan 31 17:17:55.038: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename lease-test 01/31/23 17:17:55.039
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:55.071
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:55.079
[BeforeEach] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:31
[It] lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[AfterEach] [sig-node] Lease
  test/e2e/framework/node/init/init.go:32
Jan 31 17:17:55.162: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Lease
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Lease
  tear down framework | framework.go:193
STEP: Destroying namespace "lease-test-5209" for this suite. 01/31/23 17:17:55.169
------------------------------
â€¢ [0.139 seconds]
[sig-node] Lease
test/e2e/common/node/framework.go:23
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Lease
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:55.038
    Jan 31 17:17:55.038: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename lease-test 01/31/23 17:17:55.039
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:55.071
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:55.079
    [BeforeEach] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:31
    [It] lease API should be available [Conformance]
      test/e2e/common/node/lease.go:72
    [AfterEach] [sig-node] Lease
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:17:55.162: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Lease
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Lease
      tear down framework | framework.go:193
    STEP: Destroying namespace "lease-test-5209" for this suite. 01/31/23 17:17:55.169
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:17:55.182
Jan 31 17:17:55.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename job 01/31/23 17:17:55.183
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:55.198
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:55.204
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
STEP: Creating a job 01/31/23 17:17:55.212
STEP: Ensuring active pods == parallelism 01/31/23 17:17:55.219
STEP: Orphaning one of the Job's Pods 01/31/23 17:17:59.232
Jan 31 17:17:59.769: INFO: Successfully updated pod "adopt-release-xk6sh"
STEP: Checking that the Job readopts the Pod 01/31/23 17:17:59.769
Jan 31 17:17:59.769: INFO: Waiting up to 15m0s for pod "adopt-release-xk6sh" in namespace "job-6250" to be "adopted"
Jan 31 17:17:59.784: INFO: Pod "adopt-release-xk6sh": Phase="Running", Reason="", readiness=true. Elapsed: 14.206476ms
Jan 31 17:18:01.794: INFO: Pod "adopt-release-xk6sh": Phase="Running", Reason="", readiness=true. Elapsed: 2.024370188s
Jan 31 17:18:01.794: INFO: Pod "adopt-release-xk6sh" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod 01/31/23 17:18:01.794
Jan 31 17:18:02.345: INFO: Successfully updated pod "adopt-release-xk6sh"
STEP: Checking that the Job releases the Pod 01/31/23 17:18:02.345
Jan 31 17:18:02.345: INFO: Waiting up to 15m0s for pod "adopt-release-xk6sh" in namespace "job-6250" to be "released"
Jan 31 17:18:02.356: INFO: Pod "adopt-release-xk6sh": Phase="Running", Reason="", readiness=true. Elapsed: 10.538935ms
Jan 31 17:18:04.367: INFO: Pod "adopt-release-xk6sh": Phase="Running", Reason="", readiness=true. Elapsed: 2.021873172s
Jan 31 17:18:04.367: INFO: Pod "adopt-release-xk6sh" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 31 17:18:04.368: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-6250" for this suite. 01/31/23 17:18:04.378
------------------------------
â€¢ [SLOW TEST] [9.210 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:17:55.182
    Jan 31 17:17:55.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename job 01/31/23 17:17:55.183
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:17:55.198
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:17:55.204
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching orphans and release non-matching pods [Conformance]
      test/e2e/apps/job.go:507
    STEP: Creating a job 01/31/23 17:17:55.212
    STEP: Ensuring active pods == parallelism 01/31/23 17:17:55.219
    STEP: Orphaning one of the Job's Pods 01/31/23 17:17:59.232
    Jan 31 17:17:59.769: INFO: Successfully updated pod "adopt-release-xk6sh"
    STEP: Checking that the Job readopts the Pod 01/31/23 17:17:59.769
    Jan 31 17:17:59.769: INFO: Waiting up to 15m0s for pod "adopt-release-xk6sh" in namespace "job-6250" to be "adopted"
    Jan 31 17:17:59.784: INFO: Pod "adopt-release-xk6sh": Phase="Running", Reason="", readiness=true. Elapsed: 14.206476ms
    Jan 31 17:18:01.794: INFO: Pod "adopt-release-xk6sh": Phase="Running", Reason="", readiness=true. Elapsed: 2.024370188s
    Jan 31 17:18:01.794: INFO: Pod "adopt-release-xk6sh" satisfied condition "adopted"
    STEP: Removing the labels from the Job's Pod 01/31/23 17:18:01.794
    Jan 31 17:18:02.345: INFO: Successfully updated pod "adopt-release-xk6sh"
    STEP: Checking that the Job releases the Pod 01/31/23 17:18:02.345
    Jan 31 17:18:02.345: INFO: Waiting up to 15m0s for pod "adopt-release-xk6sh" in namespace "job-6250" to be "released"
    Jan 31 17:18:02.356: INFO: Pod "adopt-release-xk6sh": Phase="Running", Reason="", readiness=true. Elapsed: 10.538935ms
    Jan 31 17:18:04.367: INFO: Pod "adopt-release-xk6sh": Phase="Running", Reason="", readiness=true. Elapsed: 2.021873172s
    Jan 31 17:18:04.367: INFO: Pod "adopt-release-xk6sh" satisfied condition "released"
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:18:04.368: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-6250" for this suite. 01/31/23 17:18:04.378
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:18:04.393
Jan 31 17:18:04.393: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:18:04.394
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:04.41
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:04.418
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
STEP: Creating configMap with name projected-configmap-test-volume-bc0d5f3c-6b02-47fc-ae8d-f50d98622091 01/31/23 17:18:04.424
STEP: Creating a pod to test consume configMaps 01/31/23 17:18:04.43
Jan 31 17:18:04.442: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149" in namespace "projected-5329" to be "Succeeded or Failed"
Jan 31 17:18:04.452: INFO: Pod "pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149": Phase="Pending", Reason="", readiness=false. Elapsed: 10.582998ms
Jan 31 17:18:06.465: INFO: Pod "pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023371491s
Jan 31 17:18:08.463: INFO: Pod "pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021389246s
STEP: Saw pod success 01/31/23 17:18:08.463
Jan 31 17:18:08.463: INFO: Pod "pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149" satisfied condition "Succeeded or Failed"
Jan 31 17:18:08.472: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 17:18:08.495
Jan 31 17:18:08.508: INFO: Waiting for pod pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149 to disappear
Jan 31 17:18:08.520: INFO: Pod pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:18:08.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5329" for this suite. 01/31/23 17:18:08.53
------------------------------
â€¢ [4.143 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:18:04.393
    Jan 31 17:18:04.393: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:18:04.394
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:04.41
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:04.418
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:57
    STEP: Creating configMap with name projected-configmap-test-volume-bc0d5f3c-6b02-47fc-ae8d-f50d98622091 01/31/23 17:18:04.424
    STEP: Creating a pod to test consume configMaps 01/31/23 17:18:04.43
    Jan 31 17:18:04.442: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149" in namespace "projected-5329" to be "Succeeded or Failed"
    Jan 31 17:18:04.452: INFO: Pod "pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149": Phase="Pending", Reason="", readiness=false. Elapsed: 10.582998ms
    Jan 31 17:18:06.465: INFO: Pod "pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023371491s
    Jan 31 17:18:08.463: INFO: Pod "pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021389246s
    STEP: Saw pod success 01/31/23 17:18:08.463
    Jan 31 17:18:08.463: INFO: Pod "pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149" satisfied condition "Succeeded or Failed"
    Jan 31 17:18:08.472: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 17:18:08.495
    Jan 31 17:18:08.508: INFO: Waiting for pod pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149 to disappear
    Jan 31 17:18:08.520: INFO: Pod pod-projected-configmaps-cc4c3b65-2715-4f57-bf2f-e373af927149 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:18:08.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5329" for this suite. 01/31/23 17:18:08.53
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:18:08.538
Jan 31 17:18:08.538: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename podtemplate 01/31/23 17:18:08.539
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:08.555
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:08.561
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
STEP: Create a pod template 01/31/23 17:18:08.566
STEP: Replace a pod template 01/31/23 17:18:08.572
Jan 31 17:18:08.582: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Jan 31 17:18:08.582: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-3309" for this suite. 01/31/23 17:18:08.588
------------------------------
â€¢ [0.058 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:18:08.538
    Jan 31 17:18:08.538: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename podtemplate 01/31/23 17:18:08.539
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:08.555
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:08.561
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace a pod template [Conformance]
      test/e2e/common/node/podtemplates.go:176
    STEP: Create a pod template 01/31/23 17:18:08.566
    STEP: Replace a pod template 01/31/23 17:18:08.572
    Jan 31 17:18:08.582: INFO: Found updated podtemplate annotation: "true"

    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:18:08.582: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-3309" for this suite. 01/31/23 17:18:08.588
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:18:08.597
Jan 31 17:18:08.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 17:18:08.598
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:08.62
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:08.628
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
STEP: Counting existing ResourceQuota 01/31/23 17:18:25.646
STEP: Creating a ResourceQuota 01/31/23 17:18:30.658
STEP: Ensuring resource quota status is calculated 01/31/23 17:18:30.669
STEP: Creating a ConfigMap 01/31/23 17:18:32.682
STEP: Ensuring resource quota status captures configMap creation 01/31/23 17:18:32.693
STEP: Deleting a ConfigMap 01/31/23 17:18:34.703
STEP: Ensuring resource quota status released usage 01/31/23 17:18:34.717
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 17:18:36.728: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-8008" for this suite. 01/31/23 17:18:36.739
------------------------------
â€¢ [SLOW TEST] [28.153 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:18:08.597
    Jan 31 17:18:08.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 17:18:08.598
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:08.62
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:08.628
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
      test/e2e/apimachinery/resource_quota.go:326
    STEP: Counting existing ResourceQuota 01/31/23 17:18:25.646
    STEP: Creating a ResourceQuota 01/31/23 17:18:30.658
    STEP: Ensuring resource quota status is calculated 01/31/23 17:18:30.669
    STEP: Creating a ConfigMap 01/31/23 17:18:32.682
    STEP: Ensuring resource quota status captures configMap creation 01/31/23 17:18:32.693
    STEP: Deleting a ConfigMap 01/31/23 17:18:34.703
    STEP: Ensuring resource quota status released usage 01/31/23 17:18:34.717
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:18:36.728: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-8008" for this suite. 01/31/23 17:18:36.739
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:18:36.751
Jan 31 17:18:36.751: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 17:18:36.752
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:36.777
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:36.786
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
STEP: Creating Pod 01/31/23 17:18:36.795
Jan 31 17:18:36.812: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49" in namespace "emptydir-2707" to be "running"
Jan 31 17:18:36.821: INFO: Pod "pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49": Phase="Pending", Reason="", readiness=false. Elapsed: 8.284608ms
Jan 31 17:18:38.834: INFO: Pod "pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49": Phase="Running", Reason="", readiness=false. Elapsed: 2.021770626s
Jan 31 17:18:38.834: INFO: Pod "pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49" satisfied condition "running"
STEP: Reading file content from the nginx-container 01/31/23 17:18:38.834
Jan 31 17:18:38.834: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2707 PodName:pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:18:38.835: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:18:38.836: INFO: ExecWithOptions: Clientset creation
Jan 31 17:18:38.836: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/emptydir-2707/pods/pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Jan 31 17:18:38.978: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:18:38.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-2707" for this suite. 01/31/23 17:18:38.987
------------------------------
â€¢ [2.246 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:18:36.751
    Jan 31 17:18:36.751: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 17:18:36.752
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:36.777
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:36.786
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] pod should support shared volumes between containers [Conformance]
      test/e2e/common/storage/empty_dir.go:227
    STEP: Creating Pod 01/31/23 17:18:36.795
    Jan 31 17:18:36.812: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49" in namespace "emptydir-2707" to be "running"
    Jan 31 17:18:36.821: INFO: Pod "pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49": Phase="Pending", Reason="", readiness=false. Elapsed: 8.284608ms
    Jan 31 17:18:38.834: INFO: Pod "pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49": Phase="Running", Reason="", readiness=false. Elapsed: 2.021770626s
    Jan 31 17:18:38.834: INFO: Pod "pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49" satisfied condition "running"
    STEP: Reading file content from the nginx-container 01/31/23 17:18:38.834
    Jan 31 17:18:38.834: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2707 PodName:pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:18:38.835: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:18:38.836: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:18:38.836: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/emptydir-2707/pods/pod-sharedvolume-81716d09-f143-478b-bb2b-cad216d3ca49/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
    Jan 31 17:18:38.978: INFO: Exec stderr: ""
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:18:38.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-2707" for this suite. 01/31/23 17:18:38.987
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:18:38.997
Jan 31 17:18:38.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 17:18:38.999
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:39.022
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:39.028
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
STEP: creating a service externalname-service with the type=ExternalName in namespace services-9773 01/31/23 17:18:39.036
STEP: changing the ExternalName service to type=ClusterIP 01/31/23 17:18:39.064
STEP: creating replication controller externalname-service in namespace services-9773 01/31/23 17:18:39.11
I0131 17:18:39.119270      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-9773, replica count: 2
I0131 17:18:42.170680      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 31 17:18:42.170: INFO: Creating new exec pod
Jan 31 17:18:42.180: INFO: Waiting up to 5m0s for pod "execpod68p6w" in namespace "services-9773" to be "running"
Jan 31 17:18:42.193: INFO: Pod "execpod68p6w": Phase="Pending", Reason="", readiness=false. Elapsed: 12.718347ms
Jan 31 17:18:44.205: INFO: Pod "execpod68p6w": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024955491s
Jan 31 17:18:46.201: INFO: Pod "execpod68p6w": Phase="Running", Reason="", readiness=true. Elapsed: 4.02094518s
Jan 31 17:18:46.201: INFO: Pod "execpod68p6w" satisfied condition "running"
Jan 31 17:18:47.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-9773 exec execpod68p6w -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Jan 31 17:18:47.428: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 31 17:18:47.428: INFO: stdout: ""
Jan 31 17:18:47.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-9773 exec execpod68p6w -- /bin/sh -x -c nc -v -z -w 2 10.98.201.191 80'
Jan 31 17:18:47.589: INFO: stderr: "+ nc -v -z -w 2 10.98.201.191 80\nConnection to 10.98.201.191 80 port [tcp/http] succeeded!\n"
Jan 31 17:18:47.589: INFO: stdout: ""
Jan 31 17:18:47.589: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 17:18:47.617: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-9773" for this suite. 01/31/23 17:18:47.628
------------------------------
â€¢ [SLOW TEST] [8.641 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:18:38.997
    Jan 31 17:18:38.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 17:18:38.999
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:39.022
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:39.028
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to ClusterIP [Conformance]
      test/e2e/network/service.go:1438
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-9773 01/31/23 17:18:39.036
    STEP: changing the ExternalName service to type=ClusterIP 01/31/23 17:18:39.064
    STEP: creating replication controller externalname-service in namespace services-9773 01/31/23 17:18:39.11
    I0131 17:18:39.119270      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-9773, replica count: 2
    I0131 17:18:42.170680      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 31 17:18:42.170: INFO: Creating new exec pod
    Jan 31 17:18:42.180: INFO: Waiting up to 5m0s for pod "execpod68p6w" in namespace "services-9773" to be "running"
    Jan 31 17:18:42.193: INFO: Pod "execpod68p6w": Phase="Pending", Reason="", readiness=false. Elapsed: 12.718347ms
    Jan 31 17:18:44.205: INFO: Pod "execpod68p6w": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024955491s
    Jan 31 17:18:46.201: INFO: Pod "execpod68p6w": Phase="Running", Reason="", readiness=true. Elapsed: 4.02094518s
    Jan 31 17:18:46.201: INFO: Pod "execpod68p6w" satisfied condition "running"
    Jan 31 17:18:47.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-9773 exec execpod68p6w -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Jan 31 17:18:47.428: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Jan 31 17:18:47.428: INFO: stdout: ""
    Jan 31 17:18:47.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-9773 exec execpod68p6w -- /bin/sh -x -c nc -v -z -w 2 10.98.201.191 80'
    Jan 31 17:18:47.589: INFO: stderr: "+ nc -v -z -w 2 10.98.201.191 80\nConnection to 10.98.201.191 80 port [tcp/http] succeeded!\n"
    Jan 31 17:18:47.589: INFO: stdout: ""
    Jan 31 17:18:47.589: INFO: Cleaning up the ExternalName to ClusterIP test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:18:47.617: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-9773" for this suite. 01/31/23 17:18:47.628
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:18:47.64
Jan 31 17:18:47.640: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename security-context 01/31/23 17:18:47.641
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:47.661
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:47.669
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 01/31/23 17:18:47.676
Jan 31 17:18:47.689: INFO: Waiting up to 5m0s for pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84" in namespace "security-context-3673" to be "Succeeded or Failed"
Jan 31 17:18:47.698: INFO: Pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84": Phase="Pending", Reason="", readiness=false. Elapsed: 9.552648ms
Jan 31 17:18:49.706: INFO: Pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01738001s
Jan 31 17:18:51.710: INFO: Pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84": Phase="Pending", Reason="", readiness=false. Elapsed: 4.021057734s
Jan 31 17:18:53.708: INFO: Pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019784825s
STEP: Saw pod success 01/31/23 17:18:53.708
Jan 31 17:18:53.709: INFO: Pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84" satisfied condition "Succeeded or Failed"
Jan 31 17:18:53.718: INFO: Trying to get logs from node 26-m02 pod security-context-fce34f78-341e-4bae-acd2-e97b9b195e84 container test-container: <nil>
STEP: delete the pod 01/31/23 17:18:53.731
Jan 31 17:18:53.749: INFO: Waiting for pod security-context-fce34f78-341e-4bae-acd2-e97b9b195e84 to disappear
Jan 31 17:18:53.755: INFO: Pod security-context-fce34f78-341e-4bae-acd2-e97b9b195e84 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 31 17:18:53.756: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-3673" for this suite. 01/31/23 17:18:53.762
------------------------------
â€¢ [SLOW TEST] [6.132 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:18:47.64
    Jan 31 17:18:47.640: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename security-context 01/31/23 17:18:47.641
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:47.661
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:47.669
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:164
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 01/31/23 17:18:47.676
    Jan 31 17:18:47.689: INFO: Waiting up to 5m0s for pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84" in namespace "security-context-3673" to be "Succeeded or Failed"
    Jan 31 17:18:47.698: INFO: Pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84": Phase="Pending", Reason="", readiness=false. Elapsed: 9.552648ms
    Jan 31 17:18:49.706: INFO: Pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01738001s
    Jan 31 17:18:51.710: INFO: Pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84": Phase="Pending", Reason="", readiness=false. Elapsed: 4.021057734s
    Jan 31 17:18:53.708: INFO: Pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019784825s
    STEP: Saw pod success 01/31/23 17:18:53.708
    Jan 31 17:18:53.709: INFO: Pod "security-context-fce34f78-341e-4bae-acd2-e97b9b195e84" satisfied condition "Succeeded or Failed"
    Jan 31 17:18:53.718: INFO: Trying to get logs from node 26-m02 pod security-context-fce34f78-341e-4bae-acd2-e97b9b195e84 container test-container: <nil>
    STEP: delete the pod 01/31/23 17:18:53.731
    Jan 31 17:18:53.749: INFO: Waiting for pod security-context-fce34f78-341e-4bae-acd2-e97b9b195e84 to disappear
    Jan 31 17:18:53.755: INFO: Pod security-context-fce34f78-341e-4bae-acd2-e97b9b195e84 no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:18:53.756: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-3673" for this suite. 01/31/23 17:18:53.762
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:18:53.773
Jan 31 17:18:53.773: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename security-context 01/31/23 17:18:53.774
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:53.791
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:53.797
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 01/31/23 17:18:53.804
Jan 31 17:18:53.814: INFO: Waiting up to 5m0s for pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c" in namespace "security-context-4859" to be "Succeeded or Failed"
Jan 31 17:18:53.823: INFO: Pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c": Phase="Pending", Reason="", readiness=false. Elapsed: 8.546717ms
Jan 31 17:18:55.836: INFO: Pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02133002s
Jan 31 17:18:57.835: INFO: Pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020664708s
Jan 31 17:18:59.835: INFO: Pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.02042233s
STEP: Saw pod success 01/31/23 17:18:59.835
Jan 31 17:18:59.835: INFO: Pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c" satisfied condition "Succeeded or Failed"
Jan 31 17:18:59.845: INFO: Trying to get logs from node 26-m02 pod security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c container test-container: <nil>
STEP: delete the pod 01/31/23 17:18:59.863
Jan 31 17:18:59.884: INFO: Waiting for pod security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c to disappear
Jan 31 17:18:59.895: INFO: Pod security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 31 17:18:59.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-4859" for this suite. 01/31/23 17:18:59.906
------------------------------
â€¢ [SLOW TEST] [6.139 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:18:53.773
    Jan 31 17:18:53.773: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename security-context 01/31/23 17:18:53.774
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:53.791
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:53.797
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:129
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 01/31/23 17:18:53.804
    Jan 31 17:18:53.814: INFO: Waiting up to 5m0s for pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c" in namespace "security-context-4859" to be "Succeeded or Failed"
    Jan 31 17:18:53.823: INFO: Pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c": Phase="Pending", Reason="", readiness=false. Elapsed: 8.546717ms
    Jan 31 17:18:55.836: INFO: Pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02133002s
    Jan 31 17:18:57.835: INFO: Pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020664708s
    Jan 31 17:18:59.835: INFO: Pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.02042233s
    STEP: Saw pod success 01/31/23 17:18:59.835
    Jan 31 17:18:59.835: INFO: Pod "security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c" satisfied condition "Succeeded or Failed"
    Jan 31 17:18:59.845: INFO: Trying to get logs from node 26-m02 pod security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c container test-container: <nil>
    STEP: delete the pod 01/31/23 17:18:59.863
    Jan 31 17:18:59.884: INFO: Waiting for pod security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c to disappear
    Jan 31 17:18:59.895: INFO: Pod security-context-affb917e-9a5a-4b75-a4f1-6b8cecd63b8c no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:18:59.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-4859" for this suite. 01/31/23 17:18:59.906
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions
  should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:18:59.913
Jan 31 17:18:59.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:18:59.914
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:59.933
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:59.941
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
STEP: validating api versions 01/31/23 17:18:59.949
Jan 31 17:18:59.949: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8139 api-versions'
Jan 31 17:19:00.087: INFO: stderr: ""
Jan 31 17:19:00.087: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:19:00.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8139" for this suite. 01/31/23 17:19:00.094
------------------------------
â€¢ [0.190 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl api-versions
  test/e2e/kubectl/kubectl.go:818
    should check if v1 is in available api versions  [Conformance]
    test/e2e/kubectl/kubectl.go:824

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:18:59.913
    Jan 31 17:18:59.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:18:59.914
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:18:59.933
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:18:59.941
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if v1 is in available api versions  [Conformance]
      test/e2e/kubectl/kubectl.go:824
    STEP: validating api versions 01/31/23 17:18:59.949
    Jan 31 17:18:59.949: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8139 api-versions'
    Jan 31 17:19:00.087: INFO: stderr: ""
    Jan 31 17:19:00.087: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:19:00.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8139" for this suite. 01/31/23 17:19:00.094
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:19:00.103
Jan 31 17:19:00.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename svcaccounts 01/31/23 17:19:00.103
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:00.121
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:00.128
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
STEP: creating a ServiceAccount 01/31/23 17:19:00.137
STEP: watching for the ServiceAccount to be added 01/31/23 17:19:00.15
STEP: patching the ServiceAccount 01/31/23 17:19:00.153
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 01/31/23 17:19:00.16
STEP: deleting the ServiceAccount 01/31/23 17:19:00.168
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 31 17:19:00.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-1649" for this suite. 01/31/23 17:19:00.194
------------------------------
â€¢ [0.099 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:19:00.103
    Jan 31 17:19:00.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename svcaccounts 01/31/23 17:19:00.103
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:00.121
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:00.128
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through the lifecycle of a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:649
    STEP: creating a ServiceAccount 01/31/23 17:19:00.137
    STEP: watching for the ServiceAccount to be added 01/31/23 17:19:00.15
    STEP: patching the ServiceAccount 01/31/23 17:19:00.153
    STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 01/31/23 17:19:00.16
    STEP: deleting the ServiceAccount 01/31/23 17:19:00.168
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:19:00.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-1649" for this suite. 01/31/23 17:19:00.194
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:19:00.205
Jan 31 17:19:00.205: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 17:19:00.206
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:00.227
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:00.236
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
STEP: creating service nodeport-test with type=NodePort in namespace services-6781 01/31/23 17:19:00.245
STEP: creating replication controller nodeport-test in namespace services-6781 01/31/23 17:19:00.336
I0131 17:19:00.346018      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-6781, replica count: 2
I0131 17:19:03.397706      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 31 17:19:03.397: INFO: Creating new exec pod
Jan 31 17:19:03.411: INFO: Waiting up to 5m0s for pod "execpodkbtbv" in namespace "services-6781" to be "running"
Jan 31 17:19:03.419: INFO: Pod "execpodkbtbv": Phase="Pending", Reason="", readiness=false. Elapsed: 7.980229ms
Jan 31 17:19:05.429: INFO: Pod "execpodkbtbv": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018429686s
Jan 31 17:19:07.430: INFO: Pod "execpodkbtbv": Phase="Running", Reason="", readiness=true. Elapsed: 4.018910252s
Jan 31 17:19:07.430: INFO: Pod "execpodkbtbv" satisfied condition "running"
Jan 31 17:19:08.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-6781 exec execpodkbtbv -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
Jan 31 17:19:08.640: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 31 17:19:08.640: INFO: stdout: ""
Jan 31 17:19:08.640: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-6781 exec execpodkbtbv -- /bin/sh -x -c nc -v -z -w 2 10.106.160.233 80'
Jan 31 17:19:08.803: INFO: stderr: "+ nc -v -z -w 2 10.106.160.233 80\nConnection to 10.106.160.233 80 port [tcp/http] succeeded!\n"
Jan 31 17:19:08.803: INFO: stdout: ""
Jan 31 17:19:08.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-6781 exec execpodkbtbv -- /bin/sh -x -c nc -v -z -w 2 192.168.61.199 32020'
Jan 31 17:19:08.987: INFO: stderr: "+ nc -v -z -w 2 192.168.61.199 32020\nConnection to 192.168.61.199 32020 port [tcp/*] succeeded!\n"
Jan 31 17:19:08.987: INFO: stdout: ""
Jan 31 17:19:08.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-6781 exec execpodkbtbv -- /bin/sh -x -c nc -v -z -w 2 192.168.61.148 32020'
Jan 31 17:19:09.165: INFO: stderr: "+ nc -v -z -w 2 192.168.61.148 32020\nConnection to 192.168.61.148 32020 port [tcp/*] succeeded!\n"
Jan 31 17:19:09.165: INFO: stdout: ""
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 17:19:09.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6781" for this suite. 01/31/23 17:19:09.174
------------------------------
â€¢ [SLOW TEST] [8.976 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:19:00.205
    Jan 31 17:19:00.205: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 17:19:00.206
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:00.227
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:00.236
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to create a functioning NodePort service [Conformance]
      test/e2e/network/service.go:1302
    STEP: creating service nodeport-test with type=NodePort in namespace services-6781 01/31/23 17:19:00.245
    STEP: creating replication controller nodeport-test in namespace services-6781 01/31/23 17:19:00.336
    I0131 17:19:00.346018      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-6781, replica count: 2
    I0131 17:19:03.397706      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 31 17:19:03.397: INFO: Creating new exec pod
    Jan 31 17:19:03.411: INFO: Waiting up to 5m0s for pod "execpodkbtbv" in namespace "services-6781" to be "running"
    Jan 31 17:19:03.419: INFO: Pod "execpodkbtbv": Phase="Pending", Reason="", readiness=false. Elapsed: 7.980229ms
    Jan 31 17:19:05.429: INFO: Pod "execpodkbtbv": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018429686s
    Jan 31 17:19:07.430: INFO: Pod "execpodkbtbv": Phase="Running", Reason="", readiness=true. Elapsed: 4.018910252s
    Jan 31 17:19:07.430: INFO: Pod "execpodkbtbv" satisfied condition "running"
    Jan 31 17:19:08.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-6781 exec execpodkbtbv -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
    Jan 31 17:19:08.640: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
    Jan 31 17:19:08.640: INFO: stdout: ""
    Jan 31 17:19:08.640: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-6781 exec execpodkbtbv -- /bin/sh -x -c nc -v -z -w 2 10.106.160.233 80'
    Jan 31 17:19:08.803: INFO: stderr: "+ nc -v -z -w 2 10.106.160.233 80\nConnection to 10.106.160.233 80 port [tcp/http] succeeded!\n"
    Jan 31 17:19:08.803: INFO: stdout: ""
    Jan 31 17:19:08.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-6781 exec execpodkbtbv -- /bin/sh -x -c nc -v -z -w 2 192.168.61.199 32020'
    Jan 31 17:19:08.987: INFO: stderr: "+ nc -v -z -w 2 192.168.61.199 32020\nConnection to 192.168.61.199 32020 port [tcp/*] succeeded!\n"
    Jan 31 17:19:08.987: INFO: stdout: ""
    Jan 31 17:19:08.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-6781 exec execpodkbtbv -- /bin/sh -x -c nc -v -z -w 2 192.168.61.148 32020'
    Jan 31 17:19:09.165: INFO: stderr: "+ nc -v -z -w 2 192.168.61.148 32020\nConnection to 192.168.61.148 32020 port [tcp/*] succeeded!\n"
    Jan 31 17:19:09.165: INFO: stdout: ""
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:19:09.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6781" for this suite. 01/31/23 17:19:09.174
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:19:09.183
Jan 31 17:19:09.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 17:19:09.184
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:09.2
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:09.207
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
STEP: Creating a pod to test downward api env vars 01/31/23 17:19:09.215
Jan 31 17:19:09.226: INFO: Waiting up to 5m0s for pod "downward-api-40b91992-904c-42cd-963b-fa2e9c117085" in namespace "downward-api-4402" to be "Succeeded or Failed"
Jan 31 17:19:09.238: INFO: Pod "downward-api-40b91992-904c-42cd-963b-fa2e9c117085": Phase="Pending", Reason="", readiness=false. Elapsed: 11.471537ms
Jan 31 17:19:11.252: INFO: Pod "downward-api-40b91992-904c-42cd-963b-fa2e9c117085": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026052737s
Jan 31 17:19:13.249: INFO: Pod "downward-api-40b91992-904c-42cd-963b-fa2e9c117085": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023242047s
STEP: Saw pod success 01/31/23 17:19:13.249
Jan 31 17:19:13.250: INFO: Pod "downward-api-40b91992-904c-42cd-963b-fa2e9c117085" satisfied condition "Succeeded or Failed"
Jan 31 17:19:13.258: INFO: Trying to get logs from node 26 pod downward-api-40b91992-904c-42cd-963b-fa2e9c117085 container dapi-container: <nil>
STEP: delete the pod 01/31/23 17:19:13.294
Jan 31 17:19:13.317: INFO: Waiting for pod downward-api-40b91992-904c-42cd-963b-fa2e9c117085 to disappear
Jan 31 17:19:13.327: INFO: Pod downward-api-40b91992-904c-42cd-963b-fa2e9c117085 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Jan 31 17:19:13.327: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-4402" for this suite. 01/31/23 17:19:13.336
------------------------------
â€¢ [4.161 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:19:09.183
    Jan 31 17:19:09.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 17:19:09.184
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:09.2
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:09.207
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide host IP as an env var [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:90
    STEP: Creating a pod to test downward api env vars 01/31/23 17:19:09.215
    Jan 31 17:19:09.226: INFO: Waiting up to 5m0s for pod "downward-api-40b91992-904c-42cd-963b-fa2e9c117085" in namespace "downward-api-4402" to be "Succeeded or Failed"
    Jan 31 17:19:09.238: INFO: Pod "downward-api-40b91992-904c-42cd-963b-fa2e9c117085": Phase="Pending", Reason="", readiness=false. Elapsed: 11.471537ms
    Jan 31 17:19:11.252: INFO: Pod "downward-api-40b91992-904c-42cd-963b-fa2e9c117085": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026052737s
    Jan 31 17:19:13.249: INFO: Pod "downward-api-40b91992-904c-42cd-963b-fa2e9c117085": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023242047s
    STEP: Saw pod success 01/31/23 17:19:13.249
    Jan 31 17:19:13.250: INFO: Pod "downward-api-40b91992-904c-42cd-963b-fa2e9c117085" satisfied condition "Succeeded or Failed"
    Jan 31 17:19:13.258: INFO: Trying to get logs from node 26 pod downward-api-40b91992-904c-42cd-963b-fa2e9c117085 container dapi-container: <nil>
    STEP: delete the pod 01/31/23 17:19:13.294
    Jan 31 17:19:13.317: INFO: Waiting for pod downward-api-40b91992-904c-42cd-963b-fa2e9c117085 to disappear
    Jan 31 17:19:13.327: INFO: Pod downward-api-40b91992-904c-42cd-963b-fa2e9c117085 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:19:13.327: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-4402" for this suite. 01/31/23 17:19:13.336
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] HostPort
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
[BeforeEach] [sig-network] HostPort
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:19:13.345
Jan 31 17:19:13.345: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename hostport 01/31/23 17:19:13.346
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:13.363
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:13.369
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 01/31/23 17:19:13.384
Jan 31 17:19:13.395: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-9714" to be "running and ready"
Jan 31 17:19:13.404: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 9.126068ms
Jan 31 17:19:13.404: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:19:15.485: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.089936065s
Jan 31 17:19:15.485: INFO: The phase of Pod pod1 is Running (Ready = true)
Jan 31 17:19:15.485: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.61.148 on the node which pod1 resides and expect scheduled 01/31/23 17:19:15.485
Jan 31 17:19:15.496: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-9714" to be "running and ready"
Jan 31 17:19:15.503: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 7.562496ms
Jan 31 17:19:15.503: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:19:17.517: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021320071s
Jan 31 17:19:17.517: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:19:19.514: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.018212465s
Jan 31 17:19:19.514: INFO: The phase of Pod pod2 is Running (Ready = true)
Jan 31 17:19:19.514: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.61.148 but use UDP protocol on the node which pod2 resides 01/31/23 17:19:19.514
Jan 31 17:19:19.525: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-9714" to be "running and ready"
Jan 31 17:19:19.533: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 7.51191ms
Jan 31 17:19:19.533: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:19:21.543: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 2.017935587s
Jan 31 17:19:21.543: INFO: The phase of Pod pod3 is Running (Ready = true)
Jan 31 17:19:21.543: INFO: Pod "pod3" satisfied condition "running and ready"
Jan 31 17:19:21.555: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-9714" to be "running and ready"
Jan 31 17:19:21.560: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 5.638098ms
Jan 31 17:19:21.560: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:19:23.572: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.017020688s
Jan 31 17:19:23.572: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
Jan 31 17:19:23.572: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 01/31/23 17:19:23.581
Jan 31 17:19:23.581: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.61.148 http://127.0.0.1:54323/hostname] Namespace:hostport-9714 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:19:23.581: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:19:23.581: INFO: ExecWithOptions: Clientset creation
Jan 31 17:19:23.581: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/hostport-9714/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.61.148+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.61.148, port: 54323 01/31/23 17:19:23.701
Jan 31 17:19:23.701: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.61.148:54323/hostname] Namespace:hostport-9714 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:19:23.701: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:19:23.703: INFO: ExecWithOptions: Clientset creation
Jan 31 17:19:23.703: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/hostport-9714/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.61.148%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.61.148, port: 54323 UDP 01/31/23 17:19:23.815
Jan 31 17:19:23.815: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.61.148 54323] Namespace:hostport-9714 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:19:23.815: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:19:23.815: INFO: ExecWithOptions: Clientset creation
Jan 31 17:19:23.816: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/hostport-9714/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.61.148+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/node/init/init.go:32
Jan 31 17:19:28.900: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] HostPort
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] HostPort
  tear down framework | framework.go:193
STEP: Destroying namespace "hostport-9714" for this suite. 01/31/23 17:19:28.917
------------------------------
â€¢ [SLOW TEST] [15.580 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] HostPort
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:19:13.345
    Jan 31 17:19:13.345: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename hostport 01/31/23 17:19:13.346
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:13.363
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:13.369
    [BeforeEach] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] HostPort
      test/e2e/network/hostport.go:49
    [It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
      test/e2e/network/hostport.go:63
    STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 01/31/23 17:19:13.384
    Jan 31 17:19:13.395: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-9714" to be "running and ready"
    Jan 31 17:19:13.404: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 9.126068ms
    Jan 31 17:19:13.404: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:19:15.485: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.089936065s
    Jan 31 17:19:15.485: INFO: The phase of Pod pod1 is Running (Ready = true)
    Jan 31 17:19:15.485: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.61.148 on the node which pod1 resides and expect scheduled 01/31/23 17:19:15.485
    Jan 31 17:19:15.496: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-9714" to be "running and ready"
    Jan 31 17:19:15.503: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 7.562496ms
    Jan 31 17:19:15.503: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:19:17.517: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021320071s
    Jan 31 17:19:17.517: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:19:19.514: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.018212465s
    Jan 31 17:19:19.514: INFO: The phase of Pod pod2 is Running (Ready = true)
    Jan 31 17:19:19.514: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.61.148 but use UDP protocol on the node which pod2 resides 01/31/23 17:19:19.514
    Jan 31 17:19:19.525: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-9714" to be "running and ready"
    Jan 31 17:19:19.533: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 7.51191ms
    Jan 31 17:19:19.533: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:19:21.543: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 2.017935587s
    Jan 31 17:19:21.543: INFO: The phase of Pod pod3 is Running (Ready = true)
    Jan 31 17:19:21.543: INFO: Pod "pod3" satisfied condition "running and ready"
    Jan 31 17:19:21.555: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-9714" to be "running and ready"
    Jan 31 17:19:21.560: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 5.638098ms
    Jan 31 17:19:21.560: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:19:23.572: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.017020688s
    Jan 31 17:19:23.572: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
    Jan 31 17:19:23.572: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 01/31/23 17:19:23.581
    Jan 31 17:19:23.581: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.61.148 http://127.0.0.1:54323/hostname] Namespace:hostport-9714 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:19:23.581: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:19:23.581: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:19:23.581: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/hostport-9714/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.61.148+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.61.148, port: 54323 01/31/23 17:19:23.701
    Jan 31 17:19:23.701: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.61.148:54323/hostname] Namespace:hostport-9714 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:19:23.701: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:19:23.703: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:19:23.703: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/hostport-9714/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.61.148%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.61.148, port: 54323 UDP 01/31/23 17:19:23.815
    Jan 31 17:19:23.815: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.61.148 54323] Namespace:hostport-9714 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:19:23.815: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:19:23.815: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:19:23.816: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/hostport-9714/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.61.148+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    [AfterEach] [sig-network] HostPort
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:19:28.900: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] HostPort
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] HostPort
      tear down framework | framework.go:193
    STEP: Destroying namespace "hostport-9714" for this suite. 01/31/23 17:19:28.917
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:19:28.928
Jan 31 17:19:28.928: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 17:19:28.929
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:28.948
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:28.956
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
STEP: Creating secret with name secret-test-17e38fc9-336d-4f7a-9c26-8e7e656dc3be 01/31/23 17:19:28.964
STEP: Creating a pod to test consume secrets 01/31/23 17:19:28.97
Jan 31 17:19:28.981: INFO: Waiting up to 5m0s for pod "pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9" in namespace "secrets-4814" to be "Succeeded or Failed"
Jan 31 17:19:28.991: INFO: Pod "pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9": Phase="Pending", Reason="", readiness=false. Elapsed: 9.399408ms
Jan 31 17:19:31.000: INFO: Pod "pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018687296s
Jan 31 17:19:32.999: INFO: Pod "pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017943675s
STEP: Saw pod success 01/31/23 17:19:32.999
Jan 31 17:19:33.000: INFO: Pod "pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9" satisfied condition "Succeeded or Failed"
Jan 31 17:19:33.005: INFO: Trying to get logs from node 26 pod pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9 container secret-volume-test: <nil>
STEP: delete the pod 01/31/23 17:19:33.017
Jan 31 17:19:33.031: INFO: Waiting for pod pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9 to disappear
Jan 31 17:19:33.041: INFO: Pod pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 17:19:33.041: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4814" for this suite. 01/31/23 17:19:33.049
------------------------------
â€¢ [4.129 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:19:28.928
    Jan 31 17:19:28.928: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 17:19:28.929
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:28.948
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:28.956
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:125
    STEP: Creating secret with name secret-test-17e38fc9-336d-4f7a-9c26-8e7e656dc3be 01/31/23 17:19:28.964
    STEP: Creating a pod to test consume secrets 01/31/23 17:19:28.97
    Jan 31 17:19:28.981: INFO: Waiting up to 5m0s for pod "pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9" in namespace "secrets-4814" to be "Succeeded or Failed"
    Jan 31 17:19:28.991: INFO: Pod "pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9": Phase="Pending", Reason="", readiness=false. Elapsed: 9.399408ms
    Jan 31 17:19:31.000: INFO: Pod "pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018687296s
    Jan 31 17:19:32.999: INFO: Pod "pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017943675s
    STEP: Saw pod success 01/31/23 17:19:32.999
    Jan 31 17:19:33.000: INFO: Pod "pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9" satisfied condition "Succeeded or Failed"
    Jan 31 17:19:33.005: INFO: Trying to get logs from node 26 pod pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9 container secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:19:33.017
    Jan 31 17:19:33.031: INFO: Waiting for pod pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9 to disappear
    Jan 31 17:19:33.041: INFO: Pod pod-secrets-1f37ded4-4dcd-43a6-861a-d3e3601c5ef9 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:19:33.041: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4814" for this suite. 01/31/23 17:19:33.049
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Downward API volume
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:19:33.057
Jan 31 17:19:33.057: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 17:19:33.058
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:33.076
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:33.082
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
STEP: Creating a pod to test downward API volume plugin 01/31/23 17:19:33.089
Jan 31 17:19:33.099: INFO: Waiting up to 5m0s for pod "downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469" in namespace "downward-api-8477" to be "Succeeded or Failed"
Jan 31 17:19:33.108: INFO: Pod "downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469": Phase="Pending", Reason="", readiness=false. Elapsed: 8.562777ms
Jan 31 17:19:35.122: INFO: Pod "downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022435632s
Jan 31 17:19:37.119: INFO: Pod "downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02000813s
STEP: Saw pod success 01/31/23 17:19:37.119
Jan 31 17:19:37.120: INFO: Pod "downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469" satisfied condition "Succeeded or Failed"
Jan 31 17:19:37.129: INFO: Trying to get logs from node 26 pod downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469 container client-container: <nil>
STEP: delete the pod 01/31/23 17:19:37.153
Jan 31 17:19:37.182: INFO: Waiting for pod downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469 to disappear
Jan 31 17:19:37.190: INFO: Pod downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 17:19:37.190: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-8477" for this suite. 01/31/23 17:19:37.198
------------------------------
â€¢ [4.149 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:19:33.057
    Jan 31 17:19:33.057: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 17:19:33.058
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:33.076
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:33.082
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:84
    STEP: Creating a pod to test downward API volume plugin 01/31/23 17:19:33.089
    Jan 31 17:19:33.099: INFO: Waiting up to 5m0s for pod "downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469" in namespace "downward-api-8477" to be "Succeeded or Failed"
    Jan 31 17:19:33.108: INFO: Pod "downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469": Phase="Pending", Reason="", readiness=false. Elapsed: 8.562777ms
    Jan 31 17:19:35.122: INFO: Pod "downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022435632s
    Jan 31 17:19:37.119: INFO: Pod "downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02000813s
    STEP: Saw pod success 01/31/23 17:19:37.119
    Jan 31 17:19:37.120: INFO: Pod "downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469" satisfied condition "Succeeded or Failed"
    Jan 31 17:19:37.129: INFO: Trying to get logs from node 26 pod downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469 container client-container: <nil>
    STEP: delete the pod 01/31/23 17:19:37.153
    Jan 31 17:19:37.182: INFO: Waiting for pod downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469 to disappear
    Jan 31 17:19:37.190: INFO: Pod downwardapi-volume-95c942ea-25e3-43e7-8401-2753b3689469 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:19:37.190: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-8477" for this suite. 01/31/23 17:19:37.198
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:19:37.206
Jan 31 17:19:37.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-lifecycle-hook 01/31/23 17:19:37.207
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:37.223
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:37.229
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 01/31/23 17:19:37.241
Jan 31 17:19:37.252: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-2005" to be "running and ready"
Jan 31 17:19:37.259: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 7.418773ms
Jan 31 17:19:37.259: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:19:39.269: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017529205s
Jan 31 17:19:39.269: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:19:41.269: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.017692769s
Jan 31 17:19:41.269: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Jan 31 17:19:41.269: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
STEP: create the pod with lifecycle hook 01/31/23 17:19:41.279
Jan 31 17:19:41.292: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-2005" to be "running and ready"
Jan 31 17:19:41.307: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 15.383834ms
Jan 31 17:19:41.307: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:19:43.317: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.025632319s
Jan 31 17:19:43.317: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
Jan 31 17:19:43.317: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 01/31/23 17:19:43.326
Jan 31 17:19:43.341: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 31 17:19:43.351: INFO: Pod pod-with-prestop-exec-hook still exists
Jan 31 17:19:45.352: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 31 17:19:45.360: INFO: Pod pod-with-prestop-exec-hook still exists
Jan 31 17:19:47.352: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 31 17:19:47.361: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook 01/31/23 17:19:47.362
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Jan 31 17:19:47.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-2005" for this suite. 01/31/23 17:19:47.392
------------------------------
â€¢ [SLOW TEST] [10.199 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:151

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:19:37.206
    Jan 31 17:19:37.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-lifecycle-hook 01/31/23 17:19:37.207
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:37.223
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:37.229
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 01/31/23 17:19:37.241
    Jan 31 17:19:37.252: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-2005" to be "running and ready"
    Jan 31 17:19:37.259: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 7.418773ms
    Jan 31 17:19:37.259: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:19:39.269: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017529205s
    Jan 31 17:19:39.269: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:19:41.269: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.017692769s
    Jan 31 17:19:41.269: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Jan 31 17:19:41.269: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:151
    STEP: create the pod with lifecycle hook 01/31/23 17:19:41.279
    Jan 31 17:19:41.292: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-2005" to be "running and ready"
    Jan 31 17:19:41.307: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 15.383834ms
    Jan 31 17:19:41.307: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:19:43.317: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.025632319s
    Jan 31 17:19:43.317: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
    Jan 31 17:19:43.317: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 01/31/23 17:19:43.326
    Jan 31 17:19:43.341: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Jan 31 17:19:43.351: INFO: Pod pod-with-prestop-exec-hook still exists
    Jan 31 17:19:45.352: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Jan 31 17:19:45.360: INFO: Pod pod-with-prestop-exec-hook still exists
    Jan 31 17:19:47.352: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Jan 31 17:19:47.361: INFO: Pod pod-with-prestop-exec-hook no longer exists
    STEP: check prestop hook 01/31/23 17:19:47.362
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:19:47.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-2005" for this suite. 01/31/23 17:19:47.392
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:19:47.406
Jan 31 17:19:47.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir-wrapper 01/31/23 17:19:47.409
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:47.44
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:47.446
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
STEP: Creating 50 configmaps 01/31/23 17:19:47.454
STEP: Creating RC which spawns configmap-volume pods 01/31/23 17:19:47.765
Jan 31 17:19:47.781: INFO: Pod name wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5: Found 0 pods out of 5
Jan 31 17:19:52.794: INFO: Pod name wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5: Found 5 pods out of 5
STEP: Ensuring each pod is running 01/31/23 17:19:52.794
Jan 31 17:19:52.795: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:19:52.802: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Pending", Reason="", readiness=false. Elapsed: 7.286421ms
Jan 31 17:19:54.814: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019159254s
Jan 31 17:19:56.814: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018979414s
Jan 31 17:19:58.815: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Pending", Reason="", readiness=false. Elapsed: 6.019958858s
Jan 31 17:20:00.813: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Pending", Reason="", readiness=false. Elapsed: 8.017965483s
Jan 31 17:20:02.820: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Running", Reason="", readiness=true. Elapsed: 10.024909075s
Jan 31 17:20:02.820: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb" satisfied condition "running"
Jan 31 17:20:02.820: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-n8rlv" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:02.831: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-n8rlv": Phase="Running", Reason="", readiness=true. Elapsed: 11.728175ms
Jan 31 17:20:02.832: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-n8rlv" satisfied condition "running"
Jan 31 17:20:02.832: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-lxtqs" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:02.840: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-lxtqs": Phase="Running", Reason="", readiness=true. Elapsed: 7.882063ms
Jan 31 17:20:02.840: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-lxtqs" satisfied condition "running"
Jan 31 17:20:02.840: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-9g24w" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:02.848: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-9g24w": Phase="Running", Reason="", readiness=true. Elapsed: 7.881192ms
Jan 31 17:20:02.848: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-9g24w" satisfied condition "running"
Jan 31 17:20:02.848: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-gjgx9" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:02.854: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-gjgx9": Phase="Running", Reason="", readiness=true. Elapsed: 6.155711ms
Jan 31 17:20:02.854: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-gjgx9" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5 in namespace emptydir-wrapper-2305, will wait for the garbage collector to delete the pods 01/31/23 17:20:02.854
Jan 31 17:20:02.921: INFO: Deleting ReplicationController wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5 took: 9.603666ms
Jan 31 17:20:03.121: INFO: Terminating ReplicationController wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5 pods took: 200.263879ms
STEP: Creating RC which spawns configmap-volume pods 01/31/23 17:20:15.758
Jan 31 17:20:15.777: INFO: Pod name wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407: Found 0 pods out of 5
Jan 31 17:20:20.795: INFO: Pod name wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407: Found 5 pods out of 5
STEP: Ensuring each pod is running 01/31/23 17:20:20.795
Jan 31 17:20:20.795: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:20.807: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Pending", Reason="", readiness=false. Elapsed: 11.196915ms
Jan 31 17:20:22.818: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022825522s
Jan 31 17:20:24.820: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024431378s
Jan 31 17:20:26.818: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.022916563s
Jan 31 17:20:28.815: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Pending", Reason="", readiness=false. Elapsed: 8.019771537s
Jan 31 17:20:30.821: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Running", Reason="", readiness=true. Elapsed: 10.025407332s
Jan 31 17:20:30.821: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8" satisfied condition "running"
Jan 31 17:20:30.821: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-x2z28" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:30.834: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-x2z28": Phase="Running", Reason="", readiness=true. Elapsed: 12.739506ms
Jan 31 17:20:30.834: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-x2z28" satisfied condition "running"
Jan 31 17:20:30.834: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-6jn9j" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:30.844: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-6jn9j": Phase="Running", Reason="", readiness=true. Elapsed: 10.714177ms
Jan 31 17:20:30.844: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-6jn9j" satisfied condition "running"
Jan 31 17:20:30.844: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-snvk9" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:30.853: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-snvk9": Phase="Running", Reason="", readiness=true. Elapsed: 8.425898ms
Jan 31 17:20:30.853: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-snvk9" satisfied condition "running"
Jan 31 17:20:30.853: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-9pjwz" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:30.862: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-9pjwz": Phase="Running", Reason="", readiness=true. Elapsed: 8.479789ms
Jan 31 17:20:30.862: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-9pjwz" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407 in namespace emptydir-wrapper-2305, will wait for the garbage collector to delete the pods 01/31/23 17:20:30.862
Jan 31 17:20:30.935: INFO: Deleting ReplicationController wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407 took: 16.346022ms
Jan 31 17:20:31.036: INFO: Terminating ReplicationController wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407 pods took: 100.827107ms
STEP: Creating RC which spawns configmap-volume pods 01/31/23 17:20:35.244
Jan 31 17:20:35.272: INFO: Pod name wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0: Found 0 pods out of 5
Jan 31 17:20:40.292: INFO: Pod name wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0: Found 5 pods out of 5
STEP: Ensuring each pod is running 01/31/23 17:20:40.292
Jan 31 17:20:40.292: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:40.302: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Pending", Reason="", readiness=false. Elapsed: 10.14217ms
Jan 31 17:20:42.315: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023042325s
Jan 31 17:20:44.316: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024144151s
Jan 31 17:20:46.316: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.024191644s
Jan 31 17:20:48.315: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Pending", Reason="", readiness=false. Elapsed: 8.023076377s
Jan 31 17:20:50.315: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Running", Reason="", readiness=true. Elapsed: 10.022848466s
Jan 31 17:20:50.315: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c" satisfied condition "running"
Jan 31 17:20:50.315: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-gx4h6" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:50.325: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-gx4h6": Phase="Running", Reason="", readiness=true. Elapsed: 9.71658ms
Jan 31 17:20:50.325: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-gx4h6" satisfied condition "running"
Jan 31 17:20:50.325: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-n886g" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:50.331: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-n886g": Phase="Running", Reason="", readiness=true. Elapsed: 6.510997ms
Jan 31 17:20:50.331: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-n886g" satisfied condition "running"
Jan 31 17:20:50.331: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-w7k9k" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:50.339: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-w7k9k": Phase="Running", Reason="", readiness=true. Elapsed: 7.722279ms
Jan 31 17:20:50.339: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-w7k9k" satisfied condition "running"
Jan 31 17:20:50.339: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-856s7" in namespace "emptydir-wrapper-2305" to be "running"
Jan 31 17:20:50.344: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-856s7": Phase="Running", Reason="", readiness=true. Elapsed: 4.827346ms
Jan 31 17:20:50.344: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-856s7" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0 in namespace emptydir-wrapper-2305, will wait for the garbage collector to delete the pods 01/31/23 17:20:50.344
Jan 31 17:20:50.414: INFO: Deleting ReplicationController wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0 took: 14.165258ms
Jan 31 17:20:50.514: INFO: Terminating ReplicationController wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0 pods took: 100.34503ms
STEP: Cleaning up the configMaps 01/31/23 17:20:54.815
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:20:55.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-2305" for this suite. 01/31/23 17:20:55.237
------------------------------
â€¢ [SLOW TEST] [67.839 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:19:47.406
    Jan 31 17:19:47.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir-wrapper 01/31/23 17:19:47.409
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:19:47.44
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:19:47.446
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not cause race condition when used for configmaps [Serial] [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:189
    STEP: Creating 50 configmaps 01/31/23 17:19:47.454
    STEP: Creating RC which spawns configmap-volume pods 01/31/23 17:19:47.765
    Jan 31 17:19:47.781: INFO: Pod name wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5: Found 0 pods out of 5
    Jan 31 17:19:52.794: INFO: Pod name wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5: Found 5 pods out of 5
    STEP: Ensuring each pod is running 01/31/23 17:19:52.794
    Jan 31 17:19:52.795: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:19:52.802: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Pending", Reason="", readiness=false. Elapsed: 7.286421ms
    Jan 31 17:19:54.814: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019159254s
    Jan 31 17:19:56.814: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018979414s
    Jan 31 17:19:58.815: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Pending", Reason="", readiness=false. Elapsed: 6.019958858s
    Jan 31 17:20:00.813: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Pending", Reason="", readiness=false. Elapsed: 8.017965483s
    Jan 31 17:20:02.820: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb": Phase="Running", Reason="", readiness=true. Elapsed: 10.024909075s
    Jan 31 17:20:02.820: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-bk7tb" satisfied condition "running"
    Jan 31 17:20:02.820: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-n8rlv" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:02.831: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-n8rlv": Phase="Running", Reason="", readiness=true. Elapsed: 11.728175ms
    Jan 31 17:20:02.832: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-n8rlv" satisfied condition "running"
    Jan 31 17:20:02.832: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-lxtqs" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:02.840: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-lxtqs": Phase="Running", Reason="", readiness=true. Elapsed: 7.882063ms
    Jan 31 17:20:02.840: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-lxtqs" satisfied condition "running"
    Jan 31 17:20:02.840: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-9g24w" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:02.848: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-9g24w": Phase="Running", Reason="", readiness=true. Elapsed: 7.881192ms
    Jan 31 17:20:02.848: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-9g24w" satisfied condition "running"
    Jan 31 17:20:02.848: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-gjgx9" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:02.854: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-gjgx9": Phase="Running", Reason="", readiness=true. Elapsed: 6.155711ms
    Jan 31 17:20:02.854: INFO: Pod "wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5-gjgx9" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5 in namespace emptydir-wrapper-2305, will wait for the garbage collector to delete the pods 01/31/23 17:20:02.854
    Jan 31 17:20:02.921: INFO: Deleting ReplicationController wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5 took: 9.603666ms
    Jan 31 17:20:03.121: INFO: Terminating ReplicationController wrapped-volume-race-d17d45c2-4b91-47ce-a1bf-8a620b6365e5 pods took: 200.263879ms
    STEP: Creating RC which spawns configmap-volume pods 01/31/23 17:20:15.758
    Jan 31 17:20:15.777: INFO: Pod name wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407: Found 0 pods out of 5
    Jan 31 17:20:20.795: INFO: Pod name wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407: Found 5 pods out of 5
    STEP: Ensuring each pod is running 01/31/23 17:20:20.795
    Jan 31 17:20:20.795: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:20.807: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Pending", Reason="", readiness=false. Elapsed: 11.196915ms
    Jan 31 17:20:22.818: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022825522s
    Jan 31 17:20:24.820: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024431378s
    Jan 31 17:20:26.818: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.022916563s
    Jan 31 17:20:28.815: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Pending", Reason="", readiness=false. Elapsed: 8.019771537s
    Jan 31 17:20:30.821: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8": Phase="Running", Reason="", readiness=true. Elapsed: 10.025407332s
    Jan 31 17:20:30.821: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-lqkz8" satisfied condition "running"
    Jan 31 17:20:30.821: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-x2z28" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:30.834: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-x2z28": Phase="Running", Reason="", readiness=true. Elapsed: 12.739506ms
    Jan 31 17:20:30.834: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-x2z28" satisfied condition "running"
    Jan 31 17:20:30.834: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-6jn9j" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:30.844: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-6jn9j": Phase="Running", Reason="", readiness=true. Elapsed: 10.714177ms
    Jan 31 17:20:30.844: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-6jn9j" satisfied condition "running"
    Jan 31 17:20:30.844: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-snvk9" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:30.853: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-snvk9": Phase="Running", Reason="", readiness=true. Elapsed: 8.425898ms
    Jan 31 17:20:30.853: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-snvk9" satisfied condition "running"
    Jan 31 17:20:30.853: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-9pjwz" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:30.862: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-9pjwz": Phase="Running", Reason="", readiness=true. Elapsed: 8.479789ms
    Jan 31 17:20:30.862: INFO: Pod "wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407-9pjwz" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407 in namespace emptydir-wrapper-2305, will wait for the garbage collector to delete the pods 01/31/23 17:20:30.862
    Jan 31 17:20:30.935: INFO: Deleting ReplicationController wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407 took: 16.346022ms
    Jan 31 17:20:31.036: INFO: Terminating ReplicationController wrapped-volume-race-15b33c82-bf5f-4fec-ba45-777e16839407 pods took: 100.827107ms
    STEP: Creating RC which spawns configmap-volume pods 01/31/23 17:20:35.244
    Jan 31 17:20:35.272: INFO: Pod name wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0: Found 0 pods out of 5
    Jan 31 17:20:40.292: INFO: Pod name wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0: Found 5 pods out of 5
    STEP: Ensuring each pod is running 01/31/23 17:20:40.292
    Jan 31 17:20:40.292: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:40.302: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Pending", Reason="", readiness=false. Elapsed: 10.14217ms
    Jan 31 17:20:42.315: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023042325s
    Jan 31 17:20:44.316: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024144151s
    Jan 31 17:20:46.316: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.024191644s
    Jan 31 17:20:48.315: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Pending", Reason="", readiness=false. Elapsed: 8.023076377s
    Jan 31 17:20:50.315: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c": Phase="Running", Reason="", readiness=true. Elapsed: 10.022848466s
    Jan 31 17:20:50.315: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-lql4c" satisfied condition "running"
    Jan 31 17:20:50.315: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-gx4h6" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:50.325: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-gx4h6": Phase="Running", Reason="", readiness=true. Elapsed: 9.71658ms
    Jan 31 17:20:50.325: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-gx4h6" satisfied condition "running"
    Jan 31 17:20:50.325: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-n886g" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:50.331: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-n886g": Phase="Running", Reason="", readiness=true. Elapsed: 6.510997ms
    Jan 31 17:20:50.331: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-n886g" satisfied condition "running"
    Jan 31 17:20:50.331: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-w7k9k" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:50.339: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-w7k9k": Phase="Running", Reason="", readiness=true. Elapsed: 7.722279ms
    Jan 31 17:20:50.339: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-w7k9k" satisfied condition "running"
    Jan 31 17:20:50.339: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-856s7" in namespace "emptydir-wrapper-2305" to be "running"
    Jan 31 17:20:50.344: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-856s7": Phase="Running", Reason="", readiness=true. Elapsed: 4.827346ms
    Jan 31 17:20:50.344: INFO: Pod "wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0-856s7" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0 in namespace emptydir-wrapper-2305, will wait for the garbage collector to delete the pods 01/31/23 17:20:50.344
    Jan 31 17:20:50.414: INFO: Deleting ReplicationController wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0 took: 14.165258ms
    Jan 31 17:20:50.514: INFO: Terminating ReplicationController wrapped-volume-race-cdd0f8f0-3fa4-41af-a2de-038f94be1df0 pods took: 100.34503ms
    STEP: Cleaning up the configMaps 01/31/23 17:20:54.815
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:20:55.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-2305" for this suite. 01/31/23 17:20:55.237
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:20:55.254
Jan 31 17:20:55.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 17:20:55.255
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:20:55.274
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:20:55.28
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 17:20:55.304
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:20:55.544
STEP: Deploying the webhook pod 01/31/23 17:20:55.559
STEP: Wait for the deployment to be ready 01/31/23 17:20:55.582
Jan 31 17:20:55.601: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 17:20:57.631: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 20, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 20, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 20, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 20, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 17:20:59.641
STEP: Verifying the service has paired with the endpoint 01/31/23 17:20:59.692
Jan 31 17:21:00.693: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
STEP: Registering the crd webhook via the AdmissionRegistration API 01/31/23 17:21:00.7
STEP: Creating a custom resource definition that should be denied by the webhook 01/31/23 17:21:00.73
Jan 31 17:21:00.731: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:21:00.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-8979" for this suite. 01/31/23 17:21:00.837
STEP: Destroying namespace "webhook-8979-markers" for this suite. 01/31/23 17:21:00.85
------------------------------
â€¢ [SLOW TEST] [5.606 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:20:55.254
    Jan 31 17:20:55.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 17:20:55.255
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:20:55.274
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:20:55.28
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 17:20:55.304
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:20:55.544
    STEP: Deploying the webhook pod 01/31/23 17:20:55.559
    STEP: Wait for the deployment to be ready 01/31/23 17:20:55.582
    Jan 31 17:20:55.601: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 17:20:57.631: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 20, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 20, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 20, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 20, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 17:20:59.641
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:20:59.692
    Jan 31 17:21:00.693: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should deny crd creation [Conformance]
      test/e2e/apimachinery/webhook.go:308
    STEP: Registering the crd webhook via the AdmissionRegistration API 01/31/23 17:21:00.7
    STEP: Creating a custom resource definition that should be denied by the webhook 01/31/23 17:21:00.73
    Jan 31 17:21:00.731: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:21:00.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-8979" for this suite. 01/31/23 17:21:00.837
    STEP: Destroying namespace "webhook-8979-markers" for this suite. 01/31/23 17:21:00.85
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:21:00.861
Jan 31 17:21:00.861: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename subpath 01/31/23 17:21:00.865
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:21:00.887
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:21:00.896
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 01/31/23 17:21:00.902
[It] should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
STEP: Creating pod pod-subpath-test-secret-4sr2 01/31/23 17:21:00.917
STEP: Creating a pod to test atomic-volume-subpath 01/31/23 17:21:00.917
Jan 31 17:21:00.929: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-4sr2" in namespace "subpath-4320" to be "Succeeded or Failed"
Jan 31 17:21:00.940: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Pending", Reason="", readiness=false. Elapsed: 10.759123ms
Jan 31 17:21:02.954: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 2.024926867s
Jan 31 17:21:04.953: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 4.023981444s
Jan 31 17:21:06.955: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 6.026457083s
Jan 31 17:21:08.950: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 8.020855809s
Jan 31 17:21:10.949: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 10.020308141s
Jan 31 17:21:12.956: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 12.027101548s
Jan 31 17:21:14.950: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 14.020778881s
Jan 31 17:21:16.948: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 16.01862554s
Jan 31 17:21:18.957: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 18.027781528s
Jan 31 17:21:20.953: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 20.023614479s
Jan 31 17:21:22.953: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=false. Elapsed: 22.023728038s
Jan 31 17:21:24.952: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.022749019s
STEP: Saw pod success 01/31/23 17:21:24.952
Jan 31 17:21:24.952: INFO: Pod "pod-subpath-test-secret-4sr2" satisfied condition "Succeeded or Failed"
Jan 31 17:21:24.958: INFO: Trying to get logs from node 26-m02 pod pod-subpath-test-secret-4sr2 container test-container-subpath-secret-4sr2: <nil>
STEP: delete the pod 01/31/23 17:21:24.98
Jan 31 17:21:24.992: INFO: Waiting for pod pod-subpath-test-secret-4sr2 to disappear
Jan 31 17:21:25.002: INFO: Pod pod-subpath-test-secret-4sr2 no longer exists
STEP: Deleting pod pod-subpath-test-secret-4sr2 01/31/23 17:21:25.002
Jan 31 17:21:25.002: INFO: Deleting pod "pod-subpath-test-secret-4sr2" in namespace "subpath-4320"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Jan 31 17:21:25.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-4320" for this suite. 01/31/23 17:21:25.013
------------------------------
â€¢ [SLOW TEST] [24.160 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/storage/subpath.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:21:00.861
    Jan 31 17:21:00.861: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename subpath 01/31/23 17:21:00.865
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:21:00.887
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:21:00.896
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 01/31/23 17:21:00.902
    [It] should support subpaths with secret pod [Conformance]
      test/e2e/storage/subpath.go:60
    STEP: Creating pod pod-subpath-test-secret-4sr2 01/31/23 17:21:00.917
    STEP: Creating a pod to test atomic-volume-subpath 01/31/23 17:21:00.917
    Jan 31 17:21:00.929: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-4sr2" in namespace "subpath-4320" to be "Succeeded or Failed"
    Jan 31 17:21:00.940: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Pending", Reason="", readiness=false. Elapsed: 10.759123ms
    Jan 31 17:21:02.954: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 2.024926867s
    Jan 31 17:21:04.953: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 4.023981444s
    Jan 31 17:21:06.955: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 6.026457083s
    Jan 31 17:21:08.950: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 8.020855809s
    Jan 31 17:21:10.949: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 10.020308141s
    Jan 31 17:21:12.956: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 12.027101548s
    Jan 31 17:21:14.950: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 14.020778881s
    Jan 31 17:21:16.948: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 16.01862554s
    Jan 31 17:21:18.957: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 18.027781528s
    Jan 31 17:21:20.953: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=true. Elapsed: 20.023614479s
    Jan 31 17:21:22.953: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Running", Reason="", readiness=false. Elapsed: 22.023728038s
    Jan 31 17:21:24.952: INFO: Pod "pod-subpath-test-secret-4sr2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.022749019s
    STEP: Saw pod success 01/31/23 17:21:24.952
    Jan 31 17:21:24.952: INFO: Pod "pod-subpath-test-secret-4sr2" satisfied condition "Succeeded or Failed"
    Jan 31 17:21:24.958: INFO: Trying to get logs from node 26-m02 pod pod-subpath-test-secret-4sr2 container test-container-subpath-secret-4sr2: <nil>
    STEP: delete the pod 01/31/23 17:21:24.98
    Jan 31 17:21:24.992: INFO: Waiting for pod pod-subpath-test-secret-4sr2 to disappear
    Jan 31 17:21:25.002: INFO: Pod pod-subpath-test-secret-4sr2 no longer exists
    STEP: Deleting pod pod-subpath-test-secret-4sr2 01/31/23 17:21:25.002
    Jan 31 17:21:25.002: INFO: Deleting pod "pod-subpath-test-secret-4sr2" in namespace "subpath-4320"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:21:25.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-4320" for this suite. 01/31/23 17:21:25.013
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] Job
  should delete a job [Conformance]
  test/e2e/apps/job.go:481
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:21:25.021
Jan 31 17:21:25.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename job 01/31/23 17:21:25.022
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:21:25.04
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:21:25.048
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a job [Conformance]
  test/e2e/apps/job.go:481
STEP: Creating a job 01/31/23 17:21:25.056
STEP: Ensuring active pods == parallelism 01/31/23 17:21:25.064
STEP: delete a job 01/31/23 17:21:29.075
STEP: deleting Job.batch foo in namespace job-933, will wait for the garbage collector to delete the pods 01/31/23 17:21:29.075
Jan 31 17:21:29.143: INFO: Deleting Job.batch foo took: 8.484558ms
Jan 31 17:21:29.244: INFO: Terminating Job.batch foo pods took: 100.281881ms
STEP: Ensuring job was deleted 01/31/23 17:21:59.946
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 31 17:21:59.954: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-933" for this suite. 01/31/23 17:21:59.965
------------------------------
â€¢ [SLOW TEST] [34.958 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/apps/job.go:481

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:21:25.021
    Jan 31 17:21:25.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename job 01/31/23 17:21:25.022
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:21:25.04
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:21:25.048
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a job [Conformance]
      test/e2e/apps/job.go:481
    STEP: Creating a job 01/31/23 17:21:25.056
    STEP: Ensuring active pods == parallelism 01/31/23 17:21:25.064
    STEP: delete a job 01/31/23 17:21:29.075
    STEP: deleting Job.batch foo in namespace job-933, will wait for the garbage collector to delete the pods 01/31/23 17:21:29.075
    Jan 31 17:21:29.143: INFO: Deleting Job.batch foo took: 8.484558ms
    Jan 31 17:21:29.244: INFO: Terminating Job.batch foo pods took: 100.281881ms
    STEP: Ensuring job was deleted 01/31/23 17:21:59.946
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:21:59.954: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-933" for this suite. 01/31/23 17:21:59.965
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:21:59.983
Jan 31 17:21:59.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 17:21:59.984
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:22:00.008
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:22:00.015
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
STEP: Creating configMap with name configmap-test-volume-map-e61f2e37-b08d-4adc-bbd3-8b1fde3adcda 01/31/23 17:22:00.022
STEP: Creating a pod to test consume configMaps 01/31/23 17:22:00.029
Jan 31 17:22:00.039: INFO: Waiting up to 5m0s for pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced" in namespace "configmap-6084" to be "Succeeded or Failed"
Jan 31 17:22:00.048: INFO: Pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced": Phase="Pending", Reason="", readiness=false. Elapsed: 9.204117ms
Jan 31 17:22:02.060: INFO: Pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02140444s
Jan 31 17:22:04.058: INFO: Pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018742413s
Jan 31 17:22:06.058: INFO: Pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019577404s
STEP: Saw pod success 01/31/23 17:22:06.059
Jan 31 17:22:06.059: INFO: Pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced" satisfied condition "Succeeded or Failed"
Jan 31 17:22:06.068: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced container agnhost-container: <nil>
STEP: delete the pod 01/31/23 17:22:06.088
Jan 31 17:22:06.112: INFO: Waiting for pod pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced to disappear
Jan 31 17:22:06.124: INFO: Pod pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:22:06.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-6084" for this suite. 01/31/23 17:22:06.133
------------------------------
â€¢ [SLOW TEST] [6.159 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:21:59.983
    Jan 31 17:21:59.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 17:21:59.984
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:22:00.008
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:22:00.015
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:99
    STEP: Creating configMap with name configmap-test-volume-map-e61f2e37-b08d-4adc-bbd3-8b1fde3adcda 01/31/23 17:22:00.022
    STEP: Creating a pod to test consume configMaps 01/31/23 17:22:00.029
    Jan 31 17:22:00.039: INFO: Waiting up to 5m0s for pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced" in namespace "configmap-6084" to be "Succeeded or Failed"
    Jan 31 17:22:00.048: INFO: Pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced": Phase="Pending", Reason="", readiness=false. Elapsed: 9.204117ms
    Jan 31 17:22:02.060: INFO: Pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02140444s
    Jan 31 17:22:04.058: INFO: Pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018742413s
    Jan 31 17:22:06.058: INFO: Pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019577404s
    STEP: Saw pod success 01/31/23 17:22:06.059
    Jan 31 17:22:06.059: INFO: Pod "pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced" satisfied condition "Succeeded or Failed"
    Jan 31 17:22:06.068: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 17:22:06.088
    Jan 31 17:22:06.112: INFO: Waiting for pod pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced to disappear
    Jan 31 17:22:06.124: INFO: Pod pod-configmaps-2445db7c-91e3-4248-817f-ec4b7e882ced no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:22:06.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-6084" for this suite. 01/31/23 17:22:06.133
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:22:06.142
Jan 31 17:22:06.142: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:22:06.143
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:22:06.162
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:22:06.172
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
STEP: set up a multi version CRD 01/31/23 17:22:06.178
Jan 31 17:22:06.179: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: mark a version not serverd 01/31/23 17:22:10.038
STEP: check the unserved version gets removed 01/31/23 17:22:10.066
STEP: check the other version is not changed 01/31/23 17:22:11.457
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:22:14.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-4389" for this suite. 01/31/23 17:22:14.562
------------------------------
â€¢ [SLOW TEST] [8.427 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:22:06.142
    Jan 31 17:22:06.142: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:22:06.143
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:22:06.162
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:22:06.172
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] removes definition from spec when one version gets changed to not be served [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:442
    STEP: set up a multi version CRD 01/31/23 17:22:06.178
    Jan 31 17:22:06.179: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: mark a version not serverd 01/31/23 17:22:10.038
    STEP: check the unserved version gets removed 01/31/23 17:22:10.066
    STEP: check the other version is not changed 01/31/23 17:22:11.457
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:22:14.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-4389" for this suite. 01/31/23 17:22:14.562
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:22:14.57
Jan 31 17:22:14.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 17:22:14.57
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:22:14.587
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:22:14.597
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
STEP: Creating configMap with name configmap-test-volume-map-f551ad76-105a-4d6c-b08c-097bd596f6fd 01/31/23 17:22:14.604
STEP: Creating a pod to test consume configMaps 01/31/23 17:22:14.61
Jan 31 17:22:14.622: INFO: Waiting up to 5m0s for pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7" in namespace "configmap-893" to be "Succeeded or Failed"
Jan 31 17:22:14.630: INFO: Pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7": Phase="Pending", Reason="", readiness=false. Elapsed: 7.838731ms
Jan 31 17:22:16.637: INFO: Pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014790589s
Jan 31 17:22:18.646: INFO: Pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024192025s
Jan 31 17:22:20.636: INFO: Pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.014538918s
STEP: Saw pod success 01/31/23 17:22:20.636
Jan 31 17:22:20.636: INFO: Pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7" satisfied condition "Succeeded or Failed"
Jan 31 17:22:20.643: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 17:22:20.663
Jan 31 17:22:20.683: INFO: Waiting for pod pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7 to disappear
Jan 31 17:22:20.692: INFO: Pod pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:22:20.692: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-893" for this suite. 01/31/23 17:22:20.704
------------------------------
â€¢ [SLOW TEST] [6.145 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:22:14.57
    Jan 31 17:22:14.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 17:22:14.57
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:22:14.587
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:22:14.597
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:89
    STEP: Creating configMap with name configmap-test-volume-map-f551ad76-105a-4d6c-b08c-097bd596f6fd 01/31/23 17:22:14.604
    STEP: Creating a pod to test consume configMaps 01/31/23 17:22:14.61
    Jan 31 17:22:14.622: INFO: Waiting up to 5m0s for pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7" in namespace "configmap-893" to be "Succeeded or Failed"
    Jan 31 17:22:14.630: INFO: Pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7": Phase="Pending", Reason="", readiness=false. Elapsed: 7.838731ms
    Jan 31 17:22:16.637: INFO: Pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014790589s
    Jan 31 17:22:18.646: INFO: Pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024192025s
    Jan 31 17:22:20.636: INFO: Pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.014538918s
    STEP: Saw pod success 01/31/23 17:22:20.636
    Jan 31 17:22:20.636: INFO: Pod "pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7" satisfied condition "Succeeded or Failed"
    Jan 31 17:22:20.643: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 17:22:20.663
    Jan 31 17:22:20.683: INFO: Waiting for pod pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7 to disappear
    Jan 31 17:22:20.692: INFO: Pod pod-configmaps-d69507c4-4c31-4dd7-852c-e01f00423fd7 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:22:20.692: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-893" for this suite. 01/31/23 17:22:20.704
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:22:20.719
Jan 31 17:22:20.719: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 17:22:20.72
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:22:20.737
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:22:20.744
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
STEP: Creating configMap with name configmap-test-upd-6905056c-7541-42e5-a753-432676b76293 01/31/23 17:22:20.756
STEP: Creating the pod 01/31/23 17:22:20.764
Jan 31 17:22:20.778: INFO: Waiting up to 5m0s for pod "pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a" in namespace "configmap-3874" to be "running and ready"
Jan 31 17:22:20.787: INFO: Pod "pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a": Phase="Pending", Reason="", readiness=false. Elapsed: 9.732552ms
Jan 31 17:22:20.788: INFO: The phase of Pod pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:22:22.799: INFO: Pod "pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020980237s
Jan 31 17:22:22.799: INFO: The phase of Pod pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:22:24.804: INFO: Pod "pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a": Phase="Running", Reason="", readiness=true. Elapsed: 4.026346722s
Jan 31 17:22:24.804: INFO: The phase of Pod pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a is Running (Ready = true)
Jan 31 17:22:24.804: INFO: Pod "pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a" satisfied condition "running and ready"
STEP: Updating configmap configmap-test-upd-6905056c-7541-42e5-a753-432676b76293 01/31/23 17:22:24.831
STEP: waiting to observe update in volume 01/31/23 17:22:24.84
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:23:41.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-3874" for this suite. 01/31/23 17:23:41.744
------------------------------
â€¢ [SLOW TEST] [81.040 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:22:20.719
    Jan 31 17:22:20.719: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 17:22:20.72
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:22:20.737
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:22:20.744
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:124
    STEP: Creating configMap with name configmap-test-upd-6905056c-7541-42e5-a753-432676b76293 01/31/23 17:22:20.756
    STEP: Creating the pod 01/31/23 17:22:20.764
    Jan 31 17:22:20.778: INFO: Waiting up to 5m0s for pod "pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a" in namespace "configmap-3874" to be "running and ready"
    Jan 31 17:22:20.787: INFO: Pod "pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a": Phase="Pending", Reason="", readiness=false. Elapsed: 9.732552ms
    Jan 31 17:22:20.788: INFO: The phase of Pod pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:22:22.799: INFO: Pod "pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020980237s
    Jan 31 17:22:22.799: INFO: The phase of Pod pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:22:24.804: INFO: Pod "pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a": Phase="Running", Reason="", readiness=true. Elapsed: 4.026346722s
    Jan 31 17:22:24.804: INFO: The phase of Pod pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a is Running (Ready = true)
    Jan 31 17:22:24.804: INFO: Pod "pod-configmaps-b69270eb-100b-4be8-89e2-6598a9ec424a" satisfied condition "running and ready"
    STEP: Updating configmap configmap-test-upd-6905056c-7541-42e5-a753-432676b76293 01/31/23 17:22:24.831
    STEP: waiting to observe update in volume 01/31/23 17:22:24.84
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:23:41.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-3874" for this suite. 01/31/23 17:23:41.744
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Deployment
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:23:41.759
Jan 31 17:23:41.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename deployment 01/31/23 17:23:41.761
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:23:41.793
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:23:41.8
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
Jan 31 17:23:41.822: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Jan 31 17:23:46.837: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/31/23 17:23:46.837
Jan 31 17:23:46.837: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 01/31/23 17:23:46.852
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 31 17:23:46.870: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-999  e2fe9af0-fb7c-4ca3-aaef-9d5d98359853 9905 1 2023-01-31 17:23:46 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] [{e2e.test Update apps/v1 2023-01-31 17:23:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00474d748 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Jan 31 17:23:46.880: INFO: New ReplicaSet "test-cleanup-deployment-7698ff6f6b" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-7698ff6f6b  deployment-999  e135a3f2-9587-4d4d-af59-f4d760545219 9907 1 2023-01-31 17:23:46 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment e2fe9af0-fb7c-4ca3-aaef-9d5d98359853 0xc00474dbb7 0xc00474dbb8}] [] [{k3s Update apps/v1 2023-01-31 17:23:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e2fe9af0-fb7c-4ca3-aaef-9d5d98359853\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 7698ff6f6b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00474dc48 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:0,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 31 17:23:46.880: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
Jan 31 17:23:46.880: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-999  1aaf8b6b-16d3-4cf9-8232-5e2a69d42b17 9906 1 2023-01-31 17:23:41 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment e2fe9af0-fb7c-4ca3-aaef-9d5d98359853 0xc00474da7f 0xc00474da90}] [] [{e2e.test Update apps/v1 2023-01-31 17:23:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:23:43 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {k3s Update apps/v1 2023-01-31 17:23:46 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"e2fe9af0-fb7c-4ca3-aaef-9d5d98359853\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00474db58 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 31 17:23:46.896: INFO: Pod "test-cleanup-controller-z8p47" is available:
&Pod{ObjectMeta:{test-cleanup-controller-z8p47 test-cleanup-controller- deployment-999  ffa40fe4-ce9b-43c1-9c90-b11608ef68b0 9901 0 2023-01-31 17:23:41 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 ReplicaSet test-cleanup-controller 1aaf8b6b-16d3-4cf9-8232-5e2a69d42b17 0xc004b524bf 0xc004b52530}] [] [{k3s Update v1 2023-01-31 17:23:41 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1aaf8b6b-16d3-4cf9-8232-5e2a69d42b17\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:23:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.209\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-r48lt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-r48lt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:23:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:23:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:23:41 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.209,StartTime:2023-01-31 17:23:41 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:23:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://d67a86090f094839fe9c9d9238929982f8e145a33f369254043058aa40990691,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.209,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:23:46.896: INFO: Pod "test-cleanup-deployment-7698ff6f6b-kr8r2" is not available:
&Pod{ObjectMeta:{test-cleanup-deployment-7698ff6f6b-kr8r2 test-cleanup-deployment-7698ff6f6b- deployment-999  23cb6b7c-76d5-4d26-87aa-794d28dafeae 9913 0 2023-01-31 17:23:46 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [{apps/v1 ReplicaSet test-cleanup-deployment-7698ff6f6b e135a3f2-9587-4d4d-af59-f4d760545219 0xc004b52bd7 0xc004b52bd8}] [] [{k3s Update v1 2023-01-31 17:23:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e135a3f2-9587-4d4d-af59-f4d760545219\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v5pk8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v5pk8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:23:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 31 17:23:46.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-999" for this suite. 01/31/23 17:23:46.907
------------------------------
â€¢ [SLOW TEST] [5.159 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:23:41.759
    Jan 31 17:23:41.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename deployment 01/31/23 17:23:41.761
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:23:41.793
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:23:41.8
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should delete old replica sets [Conformance]
      test/e2e/apps/deployment.go:122
    Jan 31 17:23:41.822: INFO: Pod name cleanup-pod: Found 0 pods out of 1
    Jan 31 17:23:46.837: INFO: Pod name cleanup-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/31/23 17:23:46.837
    Jan 31 17:23:46.837: INFO: Creating deployment test-cleanup-deployment
    STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 01/31/23 17:23:46.852
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 31 17:23:46.870: INFO: Deployment "test-cleanup-deployment":
    &Deployment{ObjectMeta:{test-cleanup-deployment  deployment-999  e2fe9af0-fb7c-4ca3-aaef-9d5d98359853 9905 1 2023-01-31 17:23:46 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] [{e2e.test Update apps/v1 2023-01-31 17:23:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00474d748 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

    Jan 31 17:23:46.880: INFO: New ReplicaSet "test-cleanup-deployment-7698ff6f6b" of Deployment "test-cleanup-deployment":
    &ReplicaSet{ObjectMeta:{test-cleanup-deployment-7698ff6f6b  deployment-999  e135a3f2-9587-4d4d-af59-f4d760545219 9907 1 2023-01-31 17:23:46 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment e2fe9af0-fb7c-4ca3-aaef-9d5d98359853 0xc00474dbb7 0xc00474dbb8}] [] [{k3s Update apps/v1 2023-01-31 17:23:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e2fe9af0-fb7c-4ca3-aaef-9d5d98359853\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 7698ff6f6b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00474dc48 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:0,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 17:23:46.880: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
    Jan 31 17:23:46.880: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-999  1aaf8b6b-16d3-4cf9-8232-5e2a69d42b17 9906 1 2023-01-31 17:23:41 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment e2fe9af0-fb7c-4ca3-aaef-9d5d98359853 0xc00474da7f 0xc00474da90}] [] [{e2e.test Update apps/v1 2023-01-31 17:23:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:23:43 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {k3s Update apps/v1 2023-01-31 17:23:46 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"e2fe9af0-fb7c-4ca3-aaef-9d5d98359853\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00474db58 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 17:23:46.896: INFO: Pod "test-cleanup-controller-z8p47" is available:
    &Pod{ObjectMeta:{test-cleanup-controller-z8p47 test-cleanup-controller- deployment-999  ffa40fe4-ce9b-43c1-9c90-b11608ef68b0 9901 0 2023-01-31 17:23:41 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 ReplicaSet test-cleanup-controller 1aaf8b6b-16d3-4cf9-8232-5e2a69d42b17 0xc004b524bf 0xc004b52530}] [] [{k3s Update v1 2023-01-31 17:23:41 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1aaf8b6b-16d3-4cf9-8232-5e2a69d42b17\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:23:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.209\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-r48lt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-r48lt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:23:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:23:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:23:41 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.209,StartTime:2023-01-31 17:23:41 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:23:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://d67a86090f094839fe9c9d9238929982f8e145a33f369254043058aa40990691,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.209,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:23:46.896: INFO: Pod "test-cleanup-deployment-7698ff6f6b-kr8r2" is not available:
    &Pod{ObjectMeta:{test-cleanup-deployment-7698ff6f6b-kr8r2 test-cleanup-deployment-7698ff6f6b- deployment-999  23cb6b7c-76d5-4d26-87aa-794d28dafeae 9913 0 2023-01-31 17:23:46 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [{apps/v1 ReplicaSet test-cleanup-deployment-7698ff6f6b e135a3f2-9587-4d4d-af59-f4d760545219 0xc004b52bd7 0xc004b52bd8}] [] [{k3s Update v1 2023-01-31 17:23:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e135a3f2-9587-4d4d-af59-f4d760545219\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v5pk8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v5pk8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:23:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:23:46.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-999" for this suite. 01/31/23 17:23:46.907
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl label
  should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:23:46.919
Jan 31 17:23:46.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:23:46.92
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:23:46.947
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:23:46.954
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1494
STEP: creating the pod 01/31/23 17:23:46.964
Jan 31 17:23:46.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 create -f -'
Jan 31 17:23:47.584: INFO: stderr: ""
Jan 31 17:23:47.584: INFO: stdout: "pod/pause created\n"
Jan 31 17:23:47.584: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Jan 31 17:23:47.584: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-2202" to be "running and ready"
Jan 31 17:23:47.590: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 6.648269ms
Jan 31 17:23:47.590: INFO: Error evaluating pod condition running and ready: want pod 'pause' on '26-m02' to be 'Running' but was 'Pending'
Jan 31 17:23:49.596: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.012427378s
Jan 31 17:23:49.596: INFO: Pod "pause" satisfied condition "running and ready"
Jan 31 17:23:49.596: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
STEP: adding the label testing-label with value testing-label-value to a pod 01/31/23 17:23:49.596
Jan 31 17:23:49.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 label pods pause testing-label=testing-label-value'
Jan 31 17:23:49.745: INFO: stderr: ""
Jan 31 17:23:49.745: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value 01/31/23 17:23:49.745
Jan 31 17:23:49.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 get pod pause -L testing-label'
Jan 31 17:23:49.865: INFO: stderr: ""
Jan 31 17:23:49.865: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod 01/31/23 17:23:49.865
Jan 31 17:23:49.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 label pods pause testing-label-'
Jan 31 17:23:49.977: INFO: stderr: ""
Jan 31 17:23:49.977: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label 01/31/23 17:23:49.977
Jan 31 17:23:49.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 get pod pause -L testing-label'
Jan 31 17:23:50.073: INFO: stderr: ""
Jan 31 17:23:50.073: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1500
STEP: using delete to clean up resources 01/31/23 17:23:50.073
Jan 31 17:23:50.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 delete --grace-period=0 --force -f -'
Jan 31 17:23:50.204: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 31 17:23:50.204: INFO: stdout: "pod \"pause\" force deleted\n"
Jan 31 17:23:50.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 get rc,svc -l name=pause --no-headers'
Jan 31 17:23:50.299: INFO: stderr: "No resources found in kubectl-2202 namespace.\n"
Jan 31 17:23:50.299: INFO: stdout: ""
Jan 31 17:23:50.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 31 17:23:50.398: INFO: stderr: ""
Jan 31 17:23:50.398: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:23:50.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-2202" for this suite. 01/31/23 17:23:50.404
------------------------------
â€¢ [3.494 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl label
  test/e2e/kubectl/kubectl.go:1492
    should update the label on a resource  [Conformance]
    test/e2e/kubectl/kubectl.go:1509

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:23:46.919
    Jan 31 17:23:46.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:23:46.92
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:23:46.947
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:23:46.954
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1494
    STEP: creating the pod 01/31/23 17:23:46.964
    Jan 31 17:23:46.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 create -f -'
    Jan 31 17:23:47.584: INFO: stderr: ""
    Jan 31 17:23:47.584: INFO: stdout: "pod/pause created\n"
    Jan 31 17:23:47.584: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
    Jan 31 17:23:47.584: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-2202" to be "running and ready"
    Jan 31 17:23:47.590: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 6.648269ms
    Jan 31 17:23:47.590: INFO: Error evaluating pod condition running and ready: want pod 'pause' on '26-m02' to be 'Running' but was 'Pending'
    Jan 31 17:23:49.596: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.012427378s
    Jan 31 17:23:49.596: INFO: Pod "pause" satisfied condition "running and ready"
    Jan 31 17:23:49.596: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
    [It] should update the label on a resource  [Conformance]
      test/e2e/kubectl/kubectl.go:1509
    STEP: adding the label testing-label with value testing-label-value to a pod 01/31/23 17:23:49.596
    Jan 31 17:23:49.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 label pods pause testing-label=testing-label-value'
    Jan 31 17:23:49.745: INFO: stderr: ""
    Jan 31 17:23:49.745: INFO: stdout: "pod/pause labeled\n"
    STEP: verifying the pod has the label testing-label with the value testing-label-value 01/31/23 17:23:49.745
    Jan 31 17:23:49.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 get pod pause -L testing-label'
    Jan 31 17:23:49.865: INFO: stderr: ""
    Jan 31 17:23:49.865: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
    STEP: removing the label testing-label of a pod 01/31/23 17:23:49.865
    Jan 31 17:23:49.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 label pods pause testing-label-'
    Jan 31 17:23:49.977: INFO: stderr: ""
    Jan 31 17:23:49.977: INFO: stdout: "pod/pause unlabeled\n"
    STEP: verifying the pod doesn't have the label testing-label 01/31/23 17:23:49.977
    Jan 31 17:23:49.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 get pod pause -L testing-label'
    Jan 31 17:23:50.073: INFO: stderr: ""
    Jan 31 17:23:50.073: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
    [AfterEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1500
    STEP: using delete to clean up resources 01/31/23 17:23:50.073
    Jan 31 17:23:50.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 delete --grace-period=0 --force -f -'
    Jan 31 17:23:50.204: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 31 17:23:50.204: INFO: stdout: "pod \"pause\" force deleted\n"
    Jan 31 17:23:50.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 get rc,svc -l name=pause --no-headers'
    Jan 31 17:23:50.299: INFO: stderr: "No resources found in kubectl-2202 namespace.\n"
    Jan 31 17:23:50.299: INFO: stdout: ""
    Jan 31 17:23:50.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-2202 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Jan 31 17:23:50.398: INFO: stderr: ""
    Jan 31 17:23:50.398: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:23:50.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-2202" for this suite. 01/31/23 17:23:50.404
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:23:50.416
Jan 31 17:23:50.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 17:23:50.417
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:23:50.446
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:23:50.453
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 17:23:50.479
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:23:50.91
STEP: Deploying the webhook pod 01/31/23 17:23:50.929
STEP: Wait for the deployment to be ready 01/31/23 17:23:50.951
Jan 31 17:23:50.979: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 17:23:53.004: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 23, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 23, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 23, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 17:23:55.018
STEP: Verifying the service has paired with the endpoint 01/31/23 17:23:55.062
Jan 31 17:23:56.062: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 01/31/23 17:23:56.075
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 01/31/23 17:23:56.109
STEP: Creating a dummy validating-webhook-configuration object 01/31/23 17:23:56.138
STEP: Deleting the validating-webhook-configuration, which should be possible to remove 01/31/23 17:23:56.152
STEP: Creating a dummy mutating-webhook-configuration object 01/31/23 17:23:56.163
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 01/31/23 17:23:56.181
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:23:56.212: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1234" for this suite. 01/31/23 17:23:56.291
STEP: Destroying namespace "webhook-1234-markers" for this suite. 01/31/23 17:23:56.301
------------------------------
â€¢ [SLOW TEST] [5.900 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:23:50.416
    Jan 31 17:23:50.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 17:23:50.417
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:23:50.446
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:23:50.453
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 17:23:50.479
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:23:50.91
    STEP: Deploying the webhook pod 01/31/23 17:23:50.929
    STEP: Wait for the deployment to be ready 01/31/23 17:23:50.951
    Jan 31 17:23:50.979: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 17:23:53.004: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 23, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 23, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 23, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 17:23:55.018
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:23:55.062
    Jan 31 17:23:56.062: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
      test/e2e/apimachinery/webhook.go:277
    STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 01/31/23 17:23:56.075
    STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 01/31/23 17:23:56.109
    STEP: Creating a dummy validating-webhook-configuration object 01/31/23 17:23:56.138
    STEP: Deleting the validating-webhook-configuration, which should be possible to remove 01/31/23 17:23:56.152
    STEP: Creating a dummy mutating-webhook-configuration object 01/31/23 17:23:56.163
    STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 01/31/23 17:23:56.181
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:23:56.212: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1234" for this suite. 01/31/23 17:23:56.291
    STEP: Destroying namespace "webhook-1234-markers" for this suite. 01/31/23 17:23:56.301
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] DisruptionController
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:23:56.316
Jan 31 17:23:56.317: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename disruption 01/31/23 17:23:56.317
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:23:56.339
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:23:56.345
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
STEP: Waiting for the pdb to be processed 01/31/23 17:23:56.365
STEP: Updating PodDisruptionBudget status 01/31/23 17:23:58.382
STEP: Waiting for all pods to be running 01/31/23 17:23:58.399
Jan 31 17:23:58.410: INFO: running pods: 0 < 1
Jan 31 17:24:00.421: INFO: running pods: 0 < 1
STEP: locating a running pod 01/31/23 17:24:02.426
STEP: Waiting for the pdb to be processed 01/31/23 17:24:02.456
STEP: Patching PodDisruptionBudget status 01/31/23 17:24:02.478
STEP: Waiting for the pdb to be processed 01/31/23 17:24:02.493
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Jan 31 17:24:02.500: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-155" for this suite. 01/31/23 17:24:02.506
------------------------------
â€¢ [SLOW TEST] [6.199 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:23:56.316
    Jan 31 17:23:56.317: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename disruption 01/31/23 17:23:56.317
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:23:56.339
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:23:56.345
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should update/patch PodDisruptionBudget status [Conformance]
      test/e2e/apps/disruption.go:164
    STEP: Waiting for the pdb to be processed 01/31/23 17:23:56.365
    STEP: Updating PodDisruptionBudget status 01/31/23 17:23:58.382
    STEP: Waiting for all pods to be running 01/31/23 17:23:58.399
    Jan 31 17:23:58.410: INFO: running pods: 0 < 1
    Jan 31 17:24:00.421: INFO: running pods: 0 < 1
    STEP: locating a running pod 01/31/23 17:24:02.426
    STEP: Waiting for the pdb to be processed 01/31/23 17:24:02.456
    STEP: Patching PodDisruptionBudget status 01/31/23 17:24:02.478
    STEP: Waiting for the pdb to be processed 01/31/23 17:24:02.493
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:24:02.500: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-155" for this suite. 01/31/23 17:24:02.506
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:24:02.516
Jan 31 17:24:02.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-probe 01/31/23 17:24:02.517
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:24:02.538
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:24:02.547
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
STEP: Creating pod liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9 in namespace container-probe-6803 01/31/23 17:24:02.553
Jan 31 17:24:02.564: INFO: Waiting up to 5m0s for pod "liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9" in namespace "container-probe-6803" to be "not pending"
Jan 31 17:24:02.572: INFO: Pod "liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9": Phase="Pending", Reason="", readiness=false. Elapsed: 7.408793ms
Jan 31 17:24:04.583: INFO: Pod "liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019151528s
Jan 31 17:24:06.584: INFO: Pod "liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9": Phase="Running", Reason="", readiness=true. Elapsed: 4.019406557s
Jan 31 17:24:06.584: INFO: Pod "liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9" satisfied condition "not pending"
Jan 31 17:24:06.584: INFO: Started pod liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9 in namespace container-probe-6803
STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:24:06.584
Jan 31 17:24:06.593: INFO: Initial restart count of pod liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9 is 0
STEP: deleting the pod 01/31/23 17:28:07.9
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 31 17:28:07.920: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-6803" for this suite. 01/31/23 17:28:07.933
------------------------------
â€¢ [SLOW TEST] [245.427 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:24:02.516
    Jan 31 17:24:02.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-probe 01/31/23 17:24:02.517
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:24:02.538
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:24:02.547
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:184
    STEP: Creating pod liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9 in namespace container-probe-6803 01/31/23 17:24:02.553
    Jan 31 17:24:02.564: INFO: Waiting up to 5m0s for pod "liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9" in namespace "container-probe-6803" to be "not pending"
    Jan 31 17:24:02.572: INFO: Pod "liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9": Phase="Pending", Reason="", readiness=false. Elapsed: 7.408793ms
    Jan 31 17:24:04.583: INFO: Pod "liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019151528s
    Jan 31 17:24:06.584: INFO: Pod "liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9": Phase="Running", Reason="", readiness=true. Elapsed: 4.019406557s
    Jan 31 17:24:06.584: INFO: Pod "liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9" satisfied condition "not pending"
    Jan 31 17:24:06.584: INFO: Started pod liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9 in namespace container-probe-6803
    STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:24:06.584
    Jan 31 17:24:06.593: INFO: Initial restart count of pod liveness-d44f082c-94ef-47d4-a94f-6be204fec2e9 is 0
    STEP: deleting the pod 01/31/23 17:28:07.9
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:28:07.920: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-6803" for this suite. 01/31/23 17:28:07.933
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:28:07.948
Jan 31 17:28:07.948: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename custom-resource-definition 01/31/23 17:28:07.948
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:28:07.979
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:28:07.987
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
Jan 31 17:28:07.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:28:11.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-133" for this suite. 01/31/23 17:28:11.197
------------------------------
â€¢ [3.264 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:28:07.948
    Jan 31 17:28:07.948: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename custom-resource-definition 01/31/23 17:28:07.948
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:28:07.979
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:28:07.987
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] custom resource defaulting for requests and from storage works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:269
    Jan 31 17:28:07.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:28:11.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-133" for this suite. 01/31/23 17:28:11.197
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:28:11.212
Jan 31 17:28:11.212: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pod-network-test 01/31/23 17:28:11.213
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:28:11.242
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:28:11.25
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
STEP: Performing setup for networking test in namespace pod-network-test-4515 01/31/23 17:28:11.263
STEP: creating a selector 01/31/23 17:28:11.263
STEP: Creating the service pods in kubernetes 01/31/23 17:28:11.263
Jan 31 17:28:11.263: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 31 17:28:11.294: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-4515" to be "running and ready"
Jan 31 17:28:11.303: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 8.578819ms
Jan 31 17:28:11.303: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:28:13.309: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.014687364s
Jan 31 17:28:13.309: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 17:28:15.317: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.022946508s
Jan 31 17:28:15.317: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 17:28:17.316: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.021979995s
Jan 31 17:28:17.316: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 17:28:19.313: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.018932876s
Jan 31 17:28:19.313: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 17:28:21.313: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.018805578s
Jan 31 17:28:21.313: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 17:28:23.319: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.024910205s
Jan 31 17:28:23.319: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 17:28:25.311: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.016857591s
Jan 31 17:28:25.311: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 17:28:27.313: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.01839664s
Jan 31 17:28:27.313: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 17:28:29.318: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.023209353s
Jan 31 17:28:29.318: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 17:28:31.314: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.019437436s
Jan 31 17:28:31.314: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 17:28:33.314: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.019530856s
Jan 31 17:28:33.314: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Jan 31 17:28:33.314: INFO: Pod "netserver-0" satisfied condition "running and ready"
Jan 31 17:28:33.323: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-4515" to be "running and ready"
Jan 31 17:28:33.336: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 12.816444ms
Jan 31 17:28:33.336: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Jan 31 17:28:33.336: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 01/31/23 17:28:33.344
Jan 31 17:28:33.358: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-4515" to be "running"
Jan 31 17:28:33.367: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 8.712342ms
Jan 31 17:28:35.372: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014037949s
Jan 31 17:28:37.377: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.019246754s
Jan 31 17:28:37.378: INFO: Pod "test-container-pod" satisfied condition "running"
Jan 31 17:28:37.386: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-4515" to be "running"
Jan 31 17:28:37.395: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 9.360022ms
Jan 31 17:28:37.396: INFO: Pod "host-test-container-pod" satisfied condition "running"
Jan 31 17:28:37.405: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jan 31 17:28:37.405: INFO: Going to poll 10.244.0.120 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Jan 31 17:28:37.413: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.120:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4515 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:28:37.413: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:28:37.415: INFO: ExecWithOptions: Clientset creation
Jan 31 17:28:37.415: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-4515/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.120%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 31 17:28:37.531: INFO: Found all 1 expected endpoints: [netserver-0]
Jan 31 17:28:37.531: INFO: Going to poll 10.244.1.215 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Jan 31 17:28:37.536: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.215:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4515 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:28:37.536: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:28:37.537: INFO: ExecWithOptions: Clientset creation
Jan 31 17:28:37.537: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-4515/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.215%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 31 17:28:37.624: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Jan 31 17:28:37.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-4515" for this suite. 01/31/23 17:28:37.63
------------------------------
â€¢ [SLOW TEST] [26.425 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:28:11.212
    Jan 31 17:28:11.212: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pod-network-test 01/31/23 17:28:11.213
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:28:11.242
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:28:11.25
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:105
    STEP: Performing setup for networking test in namespace pod-network-test-4515 01/31/23 17:28:11.263
    STEP: creating a selector 01/31/23 17:28:11.263
    STEP: Creating the service pods in kubernetes 01/31/23 17:28:11.263
    Jan 31 17:28:11.263: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Jan 31 17:28:11.294: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-4515" to be "running and ready"
    Jan 31 17:28:11.303: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 8.578819ms
    Jan 31 17:28:11.303: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:28:13.309: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.014687364s
    Jan 31 17:28:13.309: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 17:28:15.317: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.022946508s
    Jan 31 17:28:15.317: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 17:28:17.316: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.021979995s
    Jan 31 17:28:17.316: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 17:28:19.313: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.018932876s
    Jan 31 17:28:19.313: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 17:28:21.313: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.018805578s
    Jan 31 17:28:21.313: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 17:28:23.319: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.024910205s
    Jan 31 17:28:23.319: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 17:28:25.311: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.016857591s
    Jan 31 17:28:25.311: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 17:28:27.313: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.01839664s
    Jan 31 17:28:27.313: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 17:28:29.318: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.023209353s
    Jan 31 17:28:29.318: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 17:28:31.314: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.019437436s
    Jan 31 17:28:31.314: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 17:28:33.314: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.019530856s
    Jan 31 17:28:33.314: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Jan 31 17:28:33.314: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Jan 31 17:28:33.323: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-4515" to be "running and ready"
    Jan 31 17:28:33.336: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 12.816444ms
    Jan 31 17:28:33.336: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Jan 31 17:28:33.336: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 01/31/23 17:28:33.344
    Jan 31 17:28:33.358: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-4515" to be "running"
    Jan 31 17:28:33.367: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 8.712342ms
    Jan 31 17:28:35.372: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014037949s
    Jan 31 17:28:37.377: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.019246754s
    Jan 31 17:28:37.378: INFO: Pod "test-container-pod" satisfied condition "running"
    Jan 31 17:28:37.386: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-4515" to be "running"
    Jan 31 17:28:37.395: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 9.360022ms
    Jan 31 17:28:37.396: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Jan 31 17:28:37.405: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Jan 31 17:28:37.405: INFO: Going to poll 10.244.0.120 on port 8083 at least 0 times, with a maximum of 34 tries before failing
    Jan 31 17:28:37.413: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.120:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4515 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:28:37.413: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:28:37.415: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:28:37.415: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-4515/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.120%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Jan 31 17:28:37.531: INFO: Found all 1 expected endpoints: [netserver-0]
    Jan 31 17:28:37.531: INFO: Going to poll 10.244.1.215 on port 8083 at least 0 times, with a maximum of 34 tries before failing
    Jan 31 17:28:37.536: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.215:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4515 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:28:37.536: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:28:37.537: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:28:37.537: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-4515/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.215%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Jan 31 17:28:37.624: INFO: Found all 1 expected endpoints: [netserver-1]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:28:37.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-4515" for this suite. 01/31/23 17:28:37.63
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Secrets
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:28:37.638
Jan 31 17:28:37.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 17:28:37.639
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:28:37.655
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:28:37.662
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
STEP: Creating secret with name secret-test-778d4261-35d5-4da2-9d44-e9d693ad5136 01/31/23 17:28:37.669
STEP: Creating a pod to test consume secrets 01/31/23 17:28:37.675
Jan 31 17:28:37.685: INFO: Waiting up to 5m0s for pod "pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533" in namespace "secrets-6879" to be "Succeeded or Failed"
Jan 31 17:28:37.693: INFO: Pod "pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533": Phase="Pending", Reason="", readiness=false. Elapsed: 7.925966ms
Jan 31 17:28:39.703: INFO: Pod "pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018126139s
Jan 31 17:28:41.706: INFO: Pod "pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021309103s
STEP: Saw pod success 01/31/23 17:28:41.706
Jan 31 17:28:41.706: INFO: Pod "pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533" satisfied condition "Succeeded or Failed"
Jan 31 17:28:41.717: INFO: Trying to get logs from node 26 pod pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533 container secret-env-test: <nil>
STEP: delete the pod 01/31/23 17:28:41.749
Jan 31 17:28:41.766: INFO: Waiting for pod pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533 to disappear
Jan 31 17:28:41.773: INFO: Pod pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 17:28:41.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-6879" for this suite. 01/31/23 17:28:41.781
------------------------------
â€¢ [4.156 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:28:37.638
    Jan 31 17:28:37.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 17:28:37.639
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:28:37.655
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:28:37.662
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in env vars [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:46
    STEP: Creating secret with name secret-test-778d4261-35d5-4da2-9d44-e9d693ad5136 01/31/23 17:28:37.669
    STEP: Creating a pod to test consume secrets 01/31/23 17:28:37.675
    Jan 31 17:28:37.685: INFO: Waiting up to 5m0s for pod "pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533" in namespace "secrets-6879" to be "Succeeded or Failed"
    Jan 31 17:28:37.693: INFO: Pod "pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533": Phase="Pending", Reason="", readiness=false. Elapsed: 7.925966ms
    Jan 31 17:28:39.703: INFO: Pod "pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018126139s
    Jan 31 17:28:41.706: INFO: Pod "pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021309103s
    STEP: Saw pod success 01/31/23 17:28:41.706
    Jan 31 17:28:41.706: INFO: Pod "pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533" satisfied condition "Succeeded or Failed"
    Jan 31 17:28:41.717: INFO: Trying to get logs from node 26 pod pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533 container secret-env-test: <nil>
    STEP: delete the pod 01/31/23 17:28:41.749
    Jan 31 17:28:41.766: INFO: Waiting for pod pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533 to disappear
    Jan 31 17:28:41.773: INFO: Pod pod-secrets-ac96842f-000b-4445-80bb-4f2dee088533 no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:28:41.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-6879" for this suite. 01/31/23 17:28:41.781
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:129
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:28:41.796
Jan 31 17:28:41.796: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sched-preemption 01/31/23 17:28:41.797
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:28:41.815
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:28:41.821
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Jan 31 17:28:41.843: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 31 17:29:41.893: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:129
STEP: Create pods that use 4/5 of node resources. 01/31/23 17:29:41.9
Jan 31 17:29:41.940: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jan 31 17:29:41.960: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jan 31 17:29:41.986: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jan 31 17:29:41.999: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 01/31/23 17:29:41.999
Jan 31 17:29:42.000: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-8313" to be "running"
Jan 31 17:29:42.013: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 13.290995ms
Jan 31 17:29:44.021: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021911244s
Jan 31 17:29:46.023: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 4.023076564s
Jan 31 17:29:46.023: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Jan 31 17:29:46.023: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-8313" to be "running"
Jan 31 17:29:46.031: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 8.683466ms
Jan 31 17:29:46.032: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Jan 31 17:29:46.032: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-8313" to be "running"
Jan 31 17:29:46.041: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 9.189178ms
Jan 31 17:29:46.041: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Jan 31 17:29:46.041: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-8313" to be "running"
Jan 31 17:29:46.051: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 9.559472ms
Jan 31 17:29:46.051: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a high priority pod that has same requirements as that of lower priority pod 01/31/23 17:29:46.051
Jan 31 17:29:46.064: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-8313" to be "running"
Jan 31 17:29:46.075: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 11.426892ms
Jan 31 17:29:48.091: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026975633s
Jan 31 17:29:50.083: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01912866s
Jan 31 17:29:52.086: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.022572871s
Jan 31 17:29:52.086: INFO: Pod "preemptor-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:29:52.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-8313" for this suite. 01/31/23 17:29:52.189
------------------------------
â€¢ [SLOW TEST] [70.401 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:28:41.796
    Jan 31 17:28:41.796: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sched-preemption 01/31/23 17:28:41.797
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:28:41.815
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:28:41.821
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Jan 31 17:28:41.843: INFO: Waiting up to 1m0s for all nodes to be ready
    Jan 31 17:29:41.893: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates basic preemption works [Conformance]
      test/e2e/scheduling/preemption.go:129
    STEP: Create pods that use 4/5 of node resources. 01/31/23 17:29:41.9
    Jan 31 17:29:41.940: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Jan 31 17:29:41.960: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Jan 31 17:29:41.986: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Jan 31 17:29:41.999: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 01/31/23 17:29:41.999
    Jan 31 17:29:42.000: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-8313" to be "running"
    Jan 31 17:29:42.013: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 13.290995ms
    Jan 31 17:29:44.021: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021911244s
    Jan 31 17:29:46.023: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 4.023076564s
    Jan 31 17:29:46.023: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Jan 31 17:29:46.023: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-8313" to be "running"
    Jan 31 17:29:46.031: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 8.683466ms
    Jan 31 17:29:46.032: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Jan 31 17:29:46.032: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-8313" to be "running"
    Jan 31 17:29:46.041: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 9.189178ms
    Jan 31 17:29:46.041: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Jan 31 17:29:46.041: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-8313" to be "running"
    Jan 31 17:29:46.051: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 9.559472ms
    Jan 31 17:29:46.051: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a high priority pod that has same requirements as that of lower priority pod 01/31/23 17:29:46.051
    Jan 31 17:29:46.064: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-8313" to be "running"
    Jan 31 17:29:46.075: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 11.426892ms
    Jan 31 17:29:48.091: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026975633s
    Jan 31 17:29:50.083: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01912866s
    Jan 31 17:29:52.086: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.022572871s
    Jan 31 17:29:52.086: INFO: Pod "preemptor-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:29:52.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-8313" for this suite. 01/31/23 17:29:52.189
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:29:52.197
Jan 31 17:29:52.197: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubelet-test 01/31/23 17:29:52.198
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:29:52.217
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:29:52.223
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
Jan 31 17:29:52.238: INFO: Waiting up to 5m0s for pod "busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417" in namespace "kubelet-test-7371" to be "running and ready"
Jan 31 17:29:52.246: INFO: Pod "busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417": Phase="Pending", Reason="", readiness=false. Elapsed: 7.856875ms
Jan 31 17:29:52.246: INFO: The phase of Pod busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:29:54.258: INFO: Pod "busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417": Phase="Running", Reason="", readiness=true. Elapsed: 2.020295995s
Jan 31 17:29:54.258: INFO: The phase of Pod busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417 is Running (Ready = true)
Jan 31 17:29:54.258: INFO: Pod "busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Jan 31 17:29:54.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-7371" for this suite. 01/31/23 17:29:54.311
------------------------------
â€¢ [2.126 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a read only busybox container
  test/e2e/common/node/kubelet.go:175
    should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:29:52.197
    Jan 31 17:29:52.197: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubelet-test 01/31/23 17:29:52.198
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:29:52.217
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:29:52.223
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:184
    Jan 31 17:29:52.238: INFO: Waiting up to 5m0s for pod "busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417" in namespace "kubelet-test-7371" to be "running and ready"
    Jan 31 17:29:52.246: INFO: Pod "busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417": Phase="Pending", Reason="", readiness=false. Elapsed: 7.856875ms
    Jan 31 17:29:52.246: INFO: The phase of Pod busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:29:54.258: INFO: Pod "busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417": Phase="Running", Reason="", readiness=true. Elapsed: 2.020295995s
    Jan 31 17:29:54.258: INFO: The phase of Pod busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417 is Running (Ready = true)
    Jan 31 17:29:54.258: INFO: Pod "busybox-readonly-fs7c2ee02d-bd16-42ed-837c-606066cb3417" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:29:54.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-7371" for this suite. 01/31/23 17:29:54.311
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:29:54.326
Jan 31 17:29:54.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 17:29:54.33
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:29:54.35
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:29:54.36
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
STEP: creating the pod 01/31/23 17:29:54.367
STEP: submitting the pod to kubernetes 01/31/23 17:29:54.368
Jan 31 17:29:54.377: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d" in namespace "pods-8880" to be "running and ready"
Jan 31 17:29:54.384: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Pending", Reason="", readiness=false. Elapsed: 7.064229ms
Jan 31 17:29:54.384: INFO: The phase of Pod pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:29:56.396: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018447631s
Jan 31 17:29:56.396: INFO: The phase of Pod pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:29:58.392: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Running", Reason="", readiness=true. Elapsed: 4.015133575s
Jan 31 17:29:58.392: INFO: The phase of Pod pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d is Running (Ready = true)
Jan 31 17:29:58.392: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 01/31/23 17:29:58.401
STEP: updating the pod 01/31/23 17:29:58.406
Jan 31 17:29:58.922: INFO: Successfully updated pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d"
Jan 31 17:29:58.922: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d" in namespace "pods-8880" to be "terminated with reason DeadlineExceeded"
Jan 31 17:29:58.928: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Running", Reason="", readiness=true. Elapsed: 6.400086ms
Jan 31 17:30:00.936: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Running", Reason="", readiness=false. Elapsed: 2.01448078s
Jan 31 17:30:02.937: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.015507055s
Jan 31 17:30:02.937: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d" satisfied condition "terminated with reason DeadlineExceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 31 17:30:02.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-8880" for this suite. 01/31/23 17:30:02.945
------------------------------
â€¢ [SLOW TEST] [8.627 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:29:54.326
    Jan 31 17:29:54.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 17:29:54.33
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:29:54.35
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:29:54.36
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:398
    STEP: creating the pod 01/31/23 17:29:54.367
    STEP: submitting the pod to kubernetes 01/31/23 17:29:54.368
    Jan 31 17:29:54.377: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d" in namespace "pods-8880" to be "running and ready"
    Jan 31 17:29:54.384: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Pending", Reason="", readiness=false. Elapsed: 7.064229ms
    Jan 31 17:29:54.384: INFO: The phase of Pod pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:29:56.396: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018447631s
    Jan 31 17:29:56.396: INFO: The phase of Pod pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:29:58.392: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Running", Reason="", readiness=true. Elapsed: 4.015133575s
    Jan 31 17:29:58.392: INFO: The phase of Pod pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d is Running (Ready = true)
    Jan 31 17:29:58.392: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 01/31/23 17:29:58.401
    STEP: updating the pod 01/31/23 17:29:58.406
    Jan 31 17:29:58.922: INFO: Successfully updated pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d"
    Jan 31 17:29:58.922: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d" in namespace "pods-8880" to be "terminated with reason DeadlineExceeded"
    Jan 31 17:29:58.928: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Running", Reason="", readiness=true. Elapsed: 6.400086ms
    Jan 31 17:30:00.936: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Running", Reason="", readiness=false. Elapsed: 2.01448078s
    Jan 31 17:30:02.937: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.015507055s
    Jan 31 17:30:02.937: INFO: Pod "pod-update-activedeadlineseconds-9c374dd8-ea8c-4455-8806-080d18aa9d2d" satisfied condition "terminated with reason DeadlineExceeded"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:30:02.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-8880" for this suite. 01/31/23 17:30:02.945
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:30:02.954
Jan 31 17:30:02.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:30:02.955
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:30:02.975
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:30:02.98
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
STEP: Creating a pod to test downward API volume plugin 01/31/23 17:30:02.986
Jan 31 17:30:02.997: INFO: Waiting up to 5m0s for pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52" in namespace "projected-6327" to be "Succeeded or Failed"
Jan 31 17:30:03.005: INFO: Pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52": Phase="Pending", Reason="", readiness=false. Elapsed: 8.443921ms
Jan 31 17:30:05.014: INFO: Pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016803076s
Jan 31 17:30:07.019: INFO: Pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022318474s
Jan 31 17:30:09.014: INFO: Pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017310368s
STEP: Saw pod success 01/31/23 17:30:09.014
Jan 31 17:30:09.015: INFO: Pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52" satisfied condition "Succeeded or Failed"
Jan 31 17:30:09.024: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52 container client-container: <nil>
STEP: delete the pod 01/31/23 17:30:09.043
Jan 31 17:30:09.067: INFO: Waiting for pod downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52 to disappear
Jan 31 17:30:09.075: INFO: Pod downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 17:30:09.075: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6327" for this suite. 01/31/23 17:30:09.082
------------------------------
â€¢ [SLOW TEST] [6.142 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:30:02.954
    Jan 31 17:30:02.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:30:02.955
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:30:02.975
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:30:02.98
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:193
    STEP: Creating a pod to test downward API volume plugin 01/31/23 17:30:02.986
    Jan 31 17:30:02.997: INFO: Waiting up to 5m0s for pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52" in namespace "projected-6327" to be "Succeeded or Failed"
    Jan 31 17:30:03.005: INFO: Pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52": Phase="Pending", Reason="", readiness=false. Elapsed: 8.443921ms
    Jan 31 17:30:05.014: INFO: Pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016803076s
    Jan 31 17:30:07.019: INFO: Pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022318474s
    Jan 31 17:30:09.014: INFO: Pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017310368s
    STEP: Saw pod success 01/31/23 17:30:09.014
    Jan 31 17:30:09.015: INFO: Pod "downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52" satisfied condition "Succeeded or Failed"
    Jan 31 17:30:09.024: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52 container client-container: <nil>
    STEP: delete the pod 01/31/23 17:30:09.043
    Jan 31 17:30:09.067: INFO: Waiting for pod downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52 to disappear
    Jan 31 17:30:09.075: INFO: Pod downwardapi-volume-924868d2-5bc2-4f7a-94f0-0544ddf9fa52 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:30:09.075: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6327" for this suite. 01/31/23 17:30:09.082
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:30:09.101
Jan 31 17:30:09.102: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename statefulset 01/31/23 17:30:09.102
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:30:09.118
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:30:09.124
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-2216 01/31/23 17:30:09.13
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
STEP: Initializing watcher for selector baz=blah,foo=bar 01/31/23 17:30:09.144
STEP: Creating stateful set ss in namespace statefulset-2216 01/31/23 17:30:09.152
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2216 01/31/23 17:30:09.16
Jan 31 17:30:09.166: INFO: Found 0 stateful pods, waiting for 1
Jan 31 17:30:19.177: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:30:29.179: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:30:39.178: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 01/31/23 17:30:39.178
Jan 31 17:30:39.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 31 17:30:39.403: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 31 17:30:39.403: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 31 17:30:39.403: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 31 17:30:39.410: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jan 31 17:30:49.421: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 31 17:30:49.421: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 17:30:49.458: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999469s
Jan 31 17:30:50.472: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.988520786s
Jan 31 17:30:51.481: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.975216424s
Jan 31 17:30:52.492: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.96596229s
Jan 31 17:30:53.507: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.955146427s
Jan 31 17:30:54.517: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.939911113s
Jan 31 17:30:55.533: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.929993528s
Jan 31 17:30:56.543: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.914431393s
Jan 31 17:30:57.553: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.90441469s
Jan 31 17:30:58.563: INFO: Verifying statefulset ss doesn't scale past 1 for another 894.215169ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2216 01/31/23 17:30:59.564
Jan 31 17:30:59.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 17:30:59.802: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 31 17:30:59.802: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 31 17:30:59.802: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 31 17:30:59.807: INFO: Found 1 stateful pods, waiting for 3
Jan 31 17:31:09.820: INFO: Found 2 stateful pods, waiting for 3
Jan 31 17:31:19.825: INFO: Found 2 stateful pods, waiting for 3
Jan 31 17:31:29.820: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:31:29.820: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:31:29.820: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:31:39.821: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:31:39.821: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:31:39.821: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:31:49.821: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:31:49.822: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:31:49.822: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order 01/31/23 17:31:49.822
STEP: Scale down will halt with unhealthy stateful pod 01/31/23 17:31:49.822
Jan 31 17:31:49.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 31 17:31:50.043: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 31 17:31:50.043: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 31 17:31:50.043: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 31 17:31:50.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 31 17:31:50.258: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 31 17:31:50.258: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 31 17:31:50.258: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 31 17:31:50.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 31 17:31:50.459: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 31 17:31:50.459: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 31 17:31:50.459: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 31 17:31:50.459: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 17:31:50.464: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Jan 31 17:32:00.483: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 31 17:32:00.483: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jan 31 17:32:00.483: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jan 31 17:32:00.515: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999429s
Jan 31 17:32:01.526: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.98748441s
Jan 31 17:32:02.536: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.977128609s
Jan 31 17:32:03.548: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.967214611s
Jan 31 17:32:04.556: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.95584114s
Jan 31 17:32:05.572: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.946218178s
Jan 31 17:32:06.584: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.931132879s
Jan 31 17:32:07.594: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.918608972s
Jan 31 17:32:08.605: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.908783114s
Jan 31 17:32:09.617: INFO: Verifying statefulset ss doesn't scale past 3 for another 898.245791ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2216 01/31/23 17:32:10.618
Jan 31 17:32:10.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 17:32:10.840: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 31 17:32:10.840: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 31 17:32:10.840: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 31 17:32:10.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 17:32:10.995: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 31 17:32:10.995: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 31 17:32:10.995: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 31 17:32:10.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 17:32:11.151: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 31 17:32:11.151: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 31 17:32:11.151: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 31 17:32:11.151: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order 01/31/23 17:32:21.179
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 31 17:32:21.179: INFO: Deleting all statefulset in ns statefulset-2216
Jan 31 17:32:21.188: INFO: Scaling statefulset ss to 0
Jan 31 17:32:21.219: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 17:32:21.229: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 31 17:32:21.259: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-2216" for this suite. 01/31/23 17:32:21.266
------------------------------
â€¢ [SLOW TEST] [132.171 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/apps/statefulset.go:587

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:30:09.101
    Jan 31 17:30:09.102: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename statefulset 01/31/23 17:30:09.102
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:30:09.118
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:30:09.124
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-2216 01/31/23 17:30:09.13
    [It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
      test/e2e/apps/statefulset.go:587
    STEP: Initializing watcher for selector baz=blah,foo=bar 01/31/23 17:30:09.144
    STEP: Creating stateful set ss in namespace statefulset-2216 01/31/23 17:30:09.152
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2216 01/31/23 17:30:09.16
    Jan 31 17:30:09.166: INFO: Found 0 stateful pods, waiting for 1
    Jan 31 17:30:19.177: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:30:29.179: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:30:39.178: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 01/31/23 17:30:39.178
    Jan 31 17:30:39.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 31 17:30:39.403: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 31 17:30:39.403: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 31 17:30:39.403: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 31 17:30:39.410: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Jan 31 17:30:49.421: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Jan 31 17:30:49.421: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 17:30:49.458: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999469s
    Jan 31 17:30:50.472: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.988520786s
    Jan 31 17:30:51.481: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.975216424s
    Jan 31 17:30:52.492: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.96596229s
    Jan 31 17:30:53.507: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.955146427s
    Jan 31 17:30:54.517: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.939911113s
    Jan 31 17:30:55.533: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.929993528s
    Jan 31 17:30:56.543: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.914431393s
    Jan 31 17:30:57.553: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.90441469s
    Jan 31 17:30:58.563: INFO: Verifying statefulset ss doesn't scale past 1 for another 894.215169ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2216 01/31/23 17:30:59.564
    Jan 31 17:30:59.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 17:30:59.802: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 31 17:30:59.802: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 31 17:30:59.802: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 31 17:30:59.807: INFO: Found 1 stateful pods, waiting for 3
    Jan 31 17:31:09.820: INFO: Found 2 stateful pods, waiting for 3
    Jan 31 17:31:19.825: INFO: Found 2 stateful pods, waiting for 3
    Jan 31 17:31:29.820: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:31:29.820: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:31:29.820: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:31:39.821: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:31:39.821: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:31:39.821: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:31:49.821: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:31:49.822: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:31:49.822: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Verifying that stateful set ss was scaled up in order 01/31/23 17:31:49.822
    STEP: Scale down will halt with unhealthy stateful pod 01/31/23 17:31:49.822
    Jan 31 17:31:49.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 31 17:31:50.043: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 31 17:31:50.043: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 31 17:31:50.043: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 31 17:31:50.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 31 17:31:50.258: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 31 17:31:50.258: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 31 17:31:50.258: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 31 17:31:50.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 31 17:31:50.459: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 31 17:31:50.459: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 31 17:31:50.459: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 31 17:31:50.459: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 17:31:50.464: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
    Jan 31 17:32:00.483: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Jan 31 17:32:00.483: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Jan 31 17:32:00.483: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Jan 31 17:32:00.515: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999429s
    Jan 31 17:32:01.526: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.98748441s
    Jan 31 17:32:02.536: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.977128609s
    Jan 31 17:32:03.548: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.967214611s
    Jan 31 17:32:04.556: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.95584114s
    Jan 31 17:32:05.572: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.946218178s
    Jan 31 17:32:06.584: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.931132879s
    Jan 31 17:32:07.594: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.918608972s
    Jan 31 17:32:08.605: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.908783114s
    Jan 31 17:32:09.617: INFO: Verifying statefulset ss doesn't scale past 3 for another 898.245791ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2216 01/31/23 17:32:10.618
    Jan 31 17:32:10.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 17:32:10.840: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 31 17:32:10.840: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 31 17:32:10.840: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 31 17:32:10.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 17:32:10.995: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 31 17:32:10.995: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 31 17:32:10.995: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 31 17:32:10.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-2216 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 17:32:11.151: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 31 17:32:11.151: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 31 17:32:11.151: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 31 17:32:11.151: INFO: Scaling statefulset ss to 0
    STEP: Verifying that stateful set ss was scaled down in reverse order 01/31/23 17:32:21.179
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 31 17:32:21.179: INFO: Deleting all statefulset in ns statefulset-2216
    Jan 31 17:32:21.188: INFO: Scaling statefulset ss to 0
    Jan 31 17:32:21.219: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 17:32:21.229: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:32:21.259: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-2216" for this suite. 01/31/23 17:32:21.266
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:32:21.273
Jan 31 17:32:21.273: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 17:32:21.274
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:21.29
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:21.297
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
STEP: Creating a pod to test emptydir 0777 on node default medium 01/31/23 17:32:21.303
Jan 31 17:32:21.332: INFO: Waiting up to 5m0s for pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644" in namespace "emptydir-2780" to be "Succeeded or Failed"
Jan 31 17:32:21.342: INFO: Pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644": Phase="Pending", Reason="", readiness=false. Elapsed: 10.15382ms
Jan 31 17:32:23.351: INFO: Pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019242776s
Jan 31 17:32:25.356: INFO: Pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023571649s
Jan 31 17:32:27.353: INFO: Pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021304924s
STEP: Saw pod success 01/31/23 17:32:27.353
Jan 31 17:32:27.354: INFO: Pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644" satisfied condition "Succeeded or Failed"
Jan 31 17:32:27.363: INFO: Trying to get logs from node 26-m02 pod pod-58ffd06f-e37a-4519-91ef-30e6841db644 container test-container: <nil>
STEP: delete the pod 01/31/23 17:32:27.391
Jan 31 17:32:27.408: INFO: Waiting for pod pod-58ffd06f-e37a-4519-91ef-30e6841db644 to disappear
Jan 31 17:32:27.417: INFO: Pod pod-58ffd06f-e37a-4519-91ef-30e6841db644 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:32:27.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-2780" for this suite. 01/31/23 17:32:27.423
------------------------------
â€¢ [SLOW TEST] [6.159 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:32:21.273
    Jan 31 17:32:21.273: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 17:32:21.274
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:21.29
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:21.297
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:187
    STEP: Creating a pod to test emptydir 0777 on node default medium 01/31/23 17:32:21.303
    Jan 31 17:32:21.332: INFO: Waiting up to 5m0s for pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644" in namespace "emptydir-2780" to be "Succeeded or Failed"
    Jan 31 17:32:21.342: INFO: Pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644": Phase="Pending", Reason="", readiness=false. Elapsed: 10.15382ms
    Jan 31 17:32:23.351: INFO: Pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019242776s
    Jan 31 17:32:25.356: INFO: Pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023571649s
    Jan 31 17:32:27.353: INFO: Pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021304924s
    STEP: Saw pod success 01/31/23 17:32:27.353
    Jan 31 17:32:27.354: INFO: Pod "pod-58ffd06f-e37a-4519-91ef-30e6841db644" satisfied condition "Succeeded or Failed"
    Jan 31 17:32:27.363: INFO: Trying to get logs from node 26-m02 pod pod-58ffd06f-e37a-4519-91ef-30e6841db644 container test-container: <nil>
    STEP: delete the pod 01/31/23 17:32:27.391
    Jan 31 17:32:27.408: INFO: Waiting for pod pod-58ffd06f-e37a-4519-91ef-30e6841db644 to disappear
    Jan 31 17:32:27.417: INFO: Pod pod-58ffd06f-e37a-4519-91ef-30e6841db644 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:32:27.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-2780" for this suite. 01/31/23 17:32:27.423
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:32:27.435
Jan 31 17:32:27.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-webhook 01/31/23 17:32:27.437
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:27.453
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:27.458
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 01/31/23 17:32:27.465
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 01/31/23 17:32:28.094
STEP: Deploying the custom resource conversion webhook pod 01/31/23 17:32:28.109
STEP: Wait for the deployment to be ready 01/31/23 17:32:28.129
Jan 31 17:32:28.143: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
STEP: Deploying the webhook service 01/31/23 17:32:30.171
STEP: Verifying the service has paired with the endpoint 01/31/23 17:32:30.239
Jan 31 17:32:31.241: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
Jan 31 17:32:31.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Creating a v1 custom resource 01/31/23 17:32:33.909
STEP: v2 custom resource should be converted 01/31/23 17:32:33.916
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:32:34.472: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-9367" for this suite. 01/31/23 17:32:34.553
------------------------------
â€¢ [SLOW TEST] [7.129 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:32:27.435
    Jan 31 17:32:27.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-webhook 01/31/23 17:32:27.437
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:27.453
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:27.458
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 01/31/23 17:32:27.465
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 01/31/23 17:32:28.094
    STEP: Deploying the custom resource conversion webhook pod 01/31/23 17:32:28.109
    STEP: Wait for the deployment to be ready 01/31/23 17:32:28.129
    Jan 31 17:32:28.143: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
    STEP: Deploying the webhook service 01/31/23 17:32:30.171
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:32:30.239
    Jan 31 17:32:31.241: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert from CR v1 to CR v2 [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:149
    Jan 31 17:32:31.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Creating a v1 custom resource 01/31/23 17:32:33.909
    STEP: v2 custom resource should be converted 01/31/23 17:32:33.916
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:32:34.472: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-9367" for this suite. 01/31/23 17:32:34.553
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:32:34.573
Jan 31 17:32:34.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 17:32:34.574
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:34.596
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:34.606
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
STEP: Creating a pod to test emptydir 0777 on node default medium 01/31/23 17:32:34.62
Jan 31 17:32:34.632: INFO: Waiting up to 5m0s for pod "pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280" in namespace "emptydir-5736" to be "Succeeded or Failed"
Jan 31 17:32:34.644: INFO: Pod "pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280": Phase="Pending", Reason="", readiness=false. Elapsed: 12.151434ms
Jan 31 17:32:36.654: INFO: Pod "pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022216101s
Jan 31 17:32:38.653: INFO: Pod "pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020524079s
STEP: Saw pod success 01/31/23 17:32:38.653
Jan 31 17:32:38.653: INFO: Pod "pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280" satisfied condition "Succeeded or Failed"
Jan 31 17:32:38.661: INFO: Trying to get logs from node 26-m02 pod pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280 container test-container: <nil>
STEP: delete the pod 01/31/23 17:32:38.677
Jan 31 17:32:38.692: INFO: Waiting for pod pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280 to disappear
Jan 31 17:32:38.698: INFO: Pod pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:32:38.699: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-5736" for this suite. 01/31/23 17:32:38.705
------------------------------
â€¢ [4.143 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:32:34.573
    Jan 31 17:32:34.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 17:32:34.574
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:34.596
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:34.606
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:217
    STEP: Creating a pod to test emptydir 0777 on node default medium 01/31/23 17:32:34.62
    Jan 31 17:32:34.632: INFO: Waiting up to 5m0s for pod "pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280" in namespace "emptydir-5736" to be "Succeeded or Failed"
    Jan 31 17:32:34.644: INFO: Pod "pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280": Phase="Pending", Reason="", readiness=false. Elapsed: 12.151434ms
    Jan 31 17:32:36.654: INFO: Pod "pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022216101s
    Jan 31 17:32:38.653: INFO: Pod "pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020524079s
    STEP: Saw pod success 01/31/23 17:32:38.653
    Jan 31 17:32:38.653: INFO: Pod "pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280" satisfied condition "Succeeded or Failed"
    Jan 31 17:32:38.661: INFO: Trying to get logs from node 26-m02 pod pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280 container test-container: <nil>
    STEP: delete the pod 01/31/23 17:32:38.677
    Jan 31 17:32:38.692: INFO: Waiting for pod pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280 to disappear
    Jan 31 17:32:38.698: INFO: Pod pod-bb24b189-9fcc-4ad7-b326-abbc9a61c280 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:32:38.699: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-5736" for this suite. 01/31/23 17:32:38.705
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:32:38.719
Jan 31 17:32:38.719: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:32:38.721
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:38.739
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:38.745
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
STEP: Creating projection with secret that has name projected-secret-test-0ba2e887-f8e2-45e8-8e95-3b9ff864e50c 01/31/23 17:32:38.751
STEP: Creating a pod to test consume secrets 01/31/23 17:32:38.757
Jan 31 17:32:38.766: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f" in namespace "projected-7768" to be "Succeeded or Failed"
Jan 31 17:32:38.774: INFO: Pod "pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f": Phase="Pending", Reason="", readiness=false. Elapsed: 8.257299ms
Jan 31 17:32:40.784: INFO: Pod "pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018457933s
Jan 31 17:32:42.789: INFO: Pod "pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022831817s
STEP: Saw pod success 01/31/23 17:32:42.789
Jan 31 17:32:42.789: INFO: Pod "pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f" satisfied condition "Succeeded or Failed"
Jan 31 17:32:42.797: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f container projected-secret-volume-test: <nil>
STEP: delete the pod 01/31/23 17:32:42.81
Jan 31 17:32:42.821: INFO: Waiting for pod pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f to disappear
Jan 31 17:32:42.831: INFO: Pod pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 31 17:32:42.831: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7768" for this suite. 01/31/23 17:32:42.838
------------------------------
â€¢ [4.128 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:32:38.719
    Jan 31 17:32:38.719: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:32:38.721
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:38.739
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:38.745
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:67
    STEP: Creating projection with secret that has name projected-secret-test-0ba2e887-f8e2-45e8-8e95-3b9ff864e50c 01/31/23 17:32:38.751
    STEP: Creating a pod to test consume secrets 01/31/23 17:32:38.757
    Jan 31 17:32:38.766: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f" in namespace "projected-7768" to be "Succeeded or Failed"
    Jan 31 17:32:38.774: INFO: Pod "pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f": Phase="Pending", Reason="", readiness=false. Elapsed: 8.257299ms
    Jan 31 17:32:40.784: INFO: Pod "pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018457933s
    Jan 31 17:32:42.789: INFO: Pod "pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022831817s
    STEP: Saw pod success 01/31/23 17:32:42.789
    Jan 31 17:32:42.789: INFO: Pod "pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f" satisfied condition "Succeeded or Failed"
    Jan 31 17:32:42.797: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f container projected-secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:32:42.81
    Jan 31 17:32:42.821: INFO: Waiting for pod pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f to disappear
    Jan 31 17:32:42.831: INFO: Pod pod-projected-secrets-83f425a6-abb8-452e-a208-5deae21c3c0f no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:32:42.831: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7768" for this suite. 01/31/23 17:32:42.838
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:32:42.848
Jan 31 17:32:42.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 17:32:42.849
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:42.865
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:42.871
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
STEP: Creating secret with name secret-test-18b3f220-2755-45ce-b1b7-28820471def4 01/31/23 17:32:42.878
STEP: Creating a pod to test consume secrets 01/31/23 17:32:42.886
Jan 31 17:32:42.897: INFO: Waiting up to 5m0s for pod "pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8" in namespace "secrets-7917" to be "Succeeded or Failed"
Jan 31 17:32:42.905: INFO: Pod "pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8": Phase="Pending", Reason="", readiness=false. Elapsed: 7.059747ms
Jan 31 17:32:44.915: INFO: Pod "pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017151534s
Jan 31 17:32:46.915: INFO: Pod "pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017244155s
STEP: Saw pod success 01/31/23 17:32:46.915
Jan 31 17:32:46.915: INFO: Pod "pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8" satisfied condition "Succeeded or Failed"
Jan 31 17:32:46.926: INFO: Trying to get logs from node 26-m02 pod pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8 container secret-volume-test: <nil>
STEP: delete the pod 01/31/23 17:32:46.948
Jan 31 17:32:46.981: INFO: Waiting for pod pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8 to disappear
Jan 31 17:32:46.990: INFO: Pod pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 17:32:46.990: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-7917" for this suite. 01/31/23 17:32:46.997
------------------------------
â€¢ [4.159 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:32:42.848
    Jan 31 17:32:42.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 17:32:42.849
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:42.865
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:42.871
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:57
    STEP: Creating secret with name secret-test-18b3f220-2755-45ce-b1b7-28820471def4 01/31/23 17:32:42.878
    STEP: Creating a pod to test consume secrets 01/31/23 17:32:42.886
    Jan 31 17:32:42.897: INFO: Waiting up to 5m0s for pod "pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8" in namespace "secrets-7917" to be "Succeeded or Failed"
    Jan 31 17:32:42.905: INFO: Pod "pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8": Phase="Pending", Reason="", readiness=false. Elapsed: 7.059747ms
    Jan 31 17:32:44.915: INFO: Pod "pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017151534s
    Jan 31 17:32:46.915: INFO: Pod "pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017244155s
    STEP: Saw pod success 01/31/23 17:32:46.915
    Jan 31 17:32:46.915: INFO: Pod "pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8" satisfied condition "Succeeded or Failed"
    Jan 31 17:32:46.926: INFO: Trying to get logs from node 26-m02 pod pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8 container secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:32:46.948
    Jan 31 17:32:46.981: INFO: Waiting for pod pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8 to disappear
    Jan 31 17:32:46.990: INFO: Pod pod-secrets-0227e975-dbf5-4281-b2b9-da0c9b7d37d8 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:32:46.990: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-7917" for this suite. 01/31/23 17:32:46.997
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:32:47.012
Jan 31 17:32:47.012: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-probe 01/31/23 17:32:47.013
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:47.033
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:47.039
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
STEP: Creating pod liveness-c6f1b877-5219-4379-b45b-1853409a90fa in namespace container-probe-1869 01/31/23 17:32:47.046
Jan 31 17:32:47.055: INFO: Waiting up to 5m0s for pod "liveness-c6f1b877-5219-4379-b45b-1853409a90fa" in namespace "container-probe-1869" to be "not pending"
Jan 31 17:32:47.064: INFO: Pod "liveness-c6f1b877-5219-4379-b45b-1853409a90fa": Phase="Pending", Reason="", readiness=false. Elapsed: 9.019817ms
Jan 31 17:32:49.077: INFO: Pod "liveness-c6f1b877-5219-4379-b45b-1853409a90fa": Phase="Running", Reason="", readiness=true. Elapsed: 2.021880541s
Jan 31 17:32:49.077: INFO: Pod "liveness-c6f1b877-5219-4379-b45b-1853409a90fa" satisfied condition "not pending"
Jan 31 17:32:49.077: INFO: Started pod liveness-c6f1b877-5219-4379-b45b-1853409a90fa in namespace container-probe-1869
STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:32:49.077
Jan 31 17:32:49.085: INFO: Initial restart count of pod liveness-c6f1b877-5219-4379-b45b-1853409a90fa is 0
Jan 31 17:33:09.197: INFO: Restart count of pod container-probe-1869/liveness-c6f1b877-5219-4379-b45b-1853409a90fa is now 1 (20.112003379s elapsed)
STEP: deleting the pod 01/31/23 17:33:09.197
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 31 17:33:09.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-1869" for this suite. 01/31/23 17:33:09.232
------------------------------
â€¢ [SLOW TEST] [22.238 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:32:47.012
    Jan 31 17:32:47.012: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-probe 01/31/23 17:32:47.013
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:32:47.033
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:32:47.039
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:169
    STEP: Creating pod liveness-c6f1b877-5219-4379-b45b-1853409a90fa in namespace container-probe-1869 01/31/23 17:32:47.046
    Jan 31 17:32:47.055: INFO: Waiting up to 5m0s for pod "liveness-c6f1b877-5219-4379-b45b-1853409a90fa" in namespace "container-probe-1869" to be "not pending"
    Jan 31 17:32:47.064: INFO: Pod "liveness-c6f1b877-5219-4379-b45b-1853409a90fa": Phase="Pending", Reason="", readiness=false. Elapsed: 9.019817ms
    Jan 31 17:32:49.077: INFO: Pod "liveness-c6f1b877-5219-4379-b45b-1853409a90fa": Phase="Running", Reason="", readiness=true. Elapsed: 2.021880541s
    Jan 31 17:32:49.077: INFO: Pod "liveness-c6f1b877-5219-4379-b45b-1853409a90fa" satisfied condition "not pending"
    Jan 31 17:32:49.077: INFO: Started pod liveness-c6f1b877-5219-4379-b45b-1853409a90fa in namespace container-probe-1869
    STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:32:49.077
    Jan 31 17:32:49.085: INFO: Initial restart count of pod liveness-c6f1b877-5219-4379-b45b-1853409a90fa is 0
    Jan 31 17:33:09.197: INFO: Restart count of pod container-probe-1869/liveness-c6f1b877-5219-4379-b45b-1853409a90fa is now 1 (20.112003379s elapsed)
    STEP: deleting the pod 01/31/23 17:33:09.197
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:33:09.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-1869" for this suite. 01/31/23 17:33:09.232
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:33:09.251
Jan 31 17:33:09.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 17:33:09.252
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:33:09.269
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:33:09.275
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 17:33:09.301
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:33:09.751
STEP: Deploying the webhook pod 01/31/23 17:33:09.769
STEP: Wait for the deployment to be ready 01/31/23 17:33:09.788
Jan 31 17:33:09.804: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 17:33:11.822: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 33, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 33, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 33, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 33, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 17:33:13.831
STEP: Verifying the service has paired with the endpoint 01/31/23 17:33:13.891
Jan 31 17:33:14.892: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
STEP: Creating a validating webhook configuration 01/31/23 17:33:14.898
STEP: Creating a configMap that does not comply to the validation webhook rules 01/31/23 17:33:14.922
STEP: Updating a validating webhook configuration's rules to not include the create operation 01/31/23 17:33:14.936
STEP: Creating a configMap that does not comply to the validation webhook rules 01/31/23 17:33:14.952
STEP: Patching a validating webhook configuration's rules to include the create operation 01/31/23 17:33:14.967
STEP: Creating a configMap that does not comply to the validation webhook rules 01/31/23 17:33:14.976
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:33:14.992: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-7458" for this suite. 01/31/23 17:33:15.067
STEP: Destroying namespace "webhook-7458-markers" for this suite. 01/31/23 17:33:15.077
------------------------------
â€¢ [SLOW TEST] [5.837 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:33:09.251
    Jan 31 17:33:09.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 17:33:09.252
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:33:09.269
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:33:09.275
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 17:33:09.301
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:33:09.751
    STEP: Deploying the webhook pod 01/31/23 17:33:09.769
    STEP: Wait for the deployment to be ready 01/31/23 17:33:09.788
    Jan 31 17:33:09.804: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 17:33:11.822: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 33, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 33, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 33, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 33, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 17:33:13.831
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:33:13.891
    Jan 31 17:33:14.892: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a validating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:413
    STEP: Creating a validating webhook configuration 01/31/23 17:33:14.898
    STEP: Creating a configMap that does not comply to the validation webhook rules 01/31/23 17:33:14.922
    STEP: Updating a validating webhook configuration's rules to not include the create operation 01/31/23 17:33:14.936
    STEP: Creating a configMap that does not comply to the validation webhook rules 01/31/23 17:33:14.952
    STEP: Patching a validating webhook configuration's rules to include the create operation 01/31/23 17:33:14.967
    STEP: Creating a configMap that does not comply to the validation webhook rules 01/31/23 17:33:14.976
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:33:14.992: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-7458" for this suite. 01/31/23 17:33:15.067
    STEP: Destroying namespace "webhook-7458-markers" for this suite. 01/31/23 17:33:15.077
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:33:15.09
Jan 31 17:33:15.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sched-pred 01/31/23 17:33:15.091
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:33:15.11
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:33:15.118
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Jan 31 17:33:15.124: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 31 17:33:15.141: INFO: Waiting for terminating namespaces to be deleted...
Jan 31 17:33:15.146: INFO: 
Logging pods the apiserver thinks is on node 26 before test
Jan 31 17:33:15.153: INFO: coredns-56bfc489cf-8ptdd from kube-system started at 2023-01-31 16:39:52 +0000 UTC (1 container statuses recorded)
Jan 31 17:33:15.153: INFO: 	Container coredns ready: true, restart count 0
Jan 31 17:33:15.153: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 17:33:15.153: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 17:33:15.153: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 31 17:33:15.153: INFO: sonobuoy-e2e-job-1f36c7afce724735 from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 17:33:15.153: INFO: 	Container e2e ready: true, restart count 0
Jan 31 17:33:15.153: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 17:33:15.153: INFO: 
Logging pods the apiserver thinks is on node 26-m02 before test
Jan 31 17:33:15.159: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-2s64n from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 17:33:15.159: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 17:33:15.159: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 31 17:33:15.159: INFO: sonobuoy from sonobuoy started at 2023-01-31 16:39:57 +0000 UTC (1 container statuses recorded)
Jan 31 17:33:15.159: INFO: 	Container kube-sonobuoy ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
STEP: Trying to schedule Pod with nonempty NodeSelector. 01/31/23 17:33:15.159
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.173f7526a220750a], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling..] 01/31/23 17:33:15.203
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:33:16.200: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-7486" for this suite. 01/31/23 17:33:16.212
------------------------------
â€¢ [1.136 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:33:15.09
    Jan 31 17:33:15.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sched-pred 01/31/23 17:33:15.091
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:33:15.11
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:33:15.118
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Jan 31 17:33:15.124: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Jan 31 17:33:15.141: INFO: Waiting for terminating namespaces to be deleted...
    Jan 31 17:33:15.146: INFO: 
    Logging pods the apiserver thinks is on node 26 before test
    Jan 31 17:33:15.153: INFO: coredns-56bfc489cf-8ptdd from kube-system started at 2023-01-31 16:39:52 +0000 UTC (1 container statuses recorded)
    Jan 31 17:33:15.153: INFO: 	Container coredns ready: true, restart count 0
    Jan 31 17:33:15.153: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 17:33:15.153: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 17:33:15.153: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 31 17:33:15.153: INFO: sonobuoy-e2e-job-1f36c7afce724735 from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 17:33:15.153: INFO: 	Container e2e ready: true, restart count 0
    Jan 31 17:33:15.153: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 17:33:15.153: INFO: 
    Logging pods the apiserver thinks is on node 26-m02 before test
    Jan 31 17:33:15.159: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-2s64n from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 17:33:15.159: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 17:33:15.159: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 31 17:33:15.159: INFO: sonobuoy from sonobuoy started at 2023-01-31 16:39:57 +0000 UTC (1 container statuses recorded)
    Jan 31 17:33:15.159: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    [It] validates that NodeSelector is respected if not matching  [Conformance]
      test/e2e/scheduling/predicates.go:443
    STEP: Trying to schedule Pod with nonempty NodeSelector. 01/31/23 17:33:15.159
    STEP: Considering event: 
    Type = [Warning], Name = [restricted-pod.173f7526a220750a], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling..] 01/31/23 17:33:15.203
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:33:16.200: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-7486" for this suite. 01/31/23 17:33:16.212
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:616
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:33:16.227
Jan 31 17:33:16.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sched-preemption 01/31/23 17:33:16.229
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:33:16.251
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:33:16.259
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Jan 31 17:33:16.287: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 31 17:34:16.337: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:34:16.344
Jan 31 17:34:16.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sched-preemption-path 01/31/23 17:34:16.346
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:34:16.362
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:34:16.369
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:569
STEP: Finding an available node 01/31/23 17:34:16.375
STEP: Trying to launch a pod without a label to get a node which can launch it. 01/31/23 17:34:16.375
Jan 31 17:34:16.386: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-5943" to be "running"
Jan 31 17:34:16.405: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 18.56579ms
Jan 31 17:34:18.413: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027220189s
Jan 31 17:34:20.416: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 4.029734228s
Jan 31 17:34:20.416: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 01/31/23 17:34:20.426
Jan 31 17:34:20.446: INFO: found a healthy node: 26-m02
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:616
Jan 31 17:34:28.591: INFO: pods created so far: [1 1 1]
Jan 31 17:34:28.591: INFO: length of pods created so far: 3
Jan 31 17:34:30.611: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/node/init/init.go:32
Jan 31 17:34:37.612: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:543
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:34:37.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PreemptionExecutionPath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PreemptionExecutionPath
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-5943" for this suite. 01/31/23 17:34:37.733
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-4756" for this suite. 01/31/23 17:34:37.741
------------------------------
â€¢ [SLOW TEST] [81.522 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:531
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/scheduling/preemption.go:616

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:33:16.227
    Jan 31 17:33:16.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sched-preemption 01/31/23 17:33:16.229
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:33:16.251
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:33:16.259
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Jan 31 17:33:16.287: INFO: Waiting up to 1m0s for all nodes to be ready
    Jan 31 17:34:16.337: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PreemptionExecutionPath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:34:16.344
    Jan 31 17:34:16.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sched-preemption-path 01/31/23 17:34:16.346
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:34:16.362
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:34:16.369
    [BeforeEach] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:569
    STEP: Finding an available node 01/31/23 17:34:16.375
    STEP: Trying to launch a pod without a label to get a node which can launch it. 01/31/23 17:34:16.375
    Jan 31 17:34:16.386: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-5943" to be "running"
    Jan 31 17:34:16.405: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 18.56579ms
    Jan 31 17:34:18.413: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027220189s
    Jan 31 17:34:20.416: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 4.029734228s
    Jan 31 17:34:20.416: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 01/31/23 17:34:20.426
    Jan 31 17:34:20.446: INFO: found a healthy node: 26-m02
    [It] runs ReplicaSets to verify preemption running path [Conformance]
      test/e2e/scheduling/preemption.go:616
    Jan 31 17:34:28.591: INFO: pods created so far: [1 1 1]
    Jan 31 17:34:28.591: INFO: length of pods created so far: 3
    Jan 31 17:34:30.611: INFO: pods created so far: [2 2 1]
    [AfterEach] PreemptionExecutionPath
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:34:37.612: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:543
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:34:37.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PreemptionExecutionPath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PreemptionExecutionPath
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-5943" for this suite. 01/31/23 17:34:37.733
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-4756" for this suite. 01/31/23 17:34:37.741
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin]
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:34:37.75
Jan 31 17:34:37.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename certificates 01/31/23 17:34:37.751
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:34:37.786
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:34:37.793
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
STEP: getting /apis 01/31/23 17:34:38.339
STEP: getting /apis/certificates.k8s.io 01/31/23 17:34:38.349
STEP: getting /apis/certificates.k8s.io/v1 01/31/23 17:34:38.355
STEP: creating 01/31/23 17:34:38.36
STEP: getting 01/31/23 17:34:38.386
STEP: listing 01/31/23 17:34:38.393
STEP: watching 01/31/23 17:34:38.402
Jan 31 17:34:38.402: INFO: starting watch
STEP: patching 01/31/23 17:34:38.406
STEP: updating 01/31/23 17:34:38.42
Jan 31 17:34:38.427: INFO: waiting for watch events with expected annotations
Jan 31 17:34:38.427: INFO: saw patched and updated annotations
STEP: getting /approval 01/31/23 17:34:38.427
STEP: patching /approval 01/31/23 17:34:38.434
STEP: updating /approval 01/31/23 17:34:38.442
STEP: getting /status 01/31/23 17:34:38.449
STEP: patching /status 01/31/23 17:34:38.454
STEP: updating /status 01/31/23 17:34:38.462
STEP: deleting 01/31/23 17:34:38.469
STEP: deleting a collection 01/31/23 17:34:38.488
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:34:38.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "certificates-5155" for this suite. 01/31/23 17:34:38.519
------------------------------
â€¢ [0.777 seconds]
[sig-auth] Certificates API [Privileged:ClusterAdmin]
test/e2e/auth/framework.go:23
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:34:37.75
    Jan 31 17:34:37.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename certificates 01/31/23 17:34:37.751
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:34:37.786
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:34:37.793
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSR API operations [Conformance]
      test/e2e/auth/certificates.go:200
    STEP: getting /apis 01/31/23 17:34:38.339
    STEP: getting /apis/certificates.k8s.io 01/31/23 17:34:38.349
    STEP: getting /apis/certificates.k8s.io/v1 01/31/23 17:34:38.355
    STEP: creating 01/31/23 17:34:38.36
    STEP: getting 01/31/23 17:34:38.386
    STEP: listing 01/31/23 17:34:38.393
    STEP: watching 01/31/23 17:34:38.402
    Jan 31 17:34:38.402: INFO: starting watch
    STEP: patching 01/31/23 17:34:38.406
    STEP: updating 01/31/23 17:34:38.42
    Jan 31 17:34:38.427: INFO: waiting for watch events with expected annotations
    Jan 31 17:34:38.427: INFO: saw patched and updated annotations
    STEP: getting /approval 01/31/23 17:34:38.427
    STEP: patching /approval 01/31/23 17:34:38.434
    STEP: updating /approval 01/31/23 17:34:38.442
    STEP: getting /status 01/31/23 17:34:38.449
    STEP: patching /status 01/31/23 17:34:38.454
    STEP: updating /status 01/31/23 17:34:38.462
    STEP: deleting 01/31/23 17:34:38.469
    STEP: deleting a collection 01/31/23 17:34:38.488
    [AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:34:38.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "certificates-5155" for this suite. 01/31/23 17:34:38.519
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:34:38.529
Jan 31 17:34:38.529: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename svcaccounts 01/31/23 17:34:38.53
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:34:38.549
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:34:38.555
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
Jan 31 17:34:38.571: INFO: Got root ca configmap in namespace "svcaccounts-9870"
Jan 31 17:34:38.582: INFO: Deleted root ca configmap in namespace "svcaccounts-9870"
STEP: waiting for a new root ca configmap created 01/31/23 17:34:39.082
Jan 31 17:34:39.092: INFO: Recreated root ca configmap in namespace "svcaccounts-9870"
Jan 31 17:34:39.103: INFO: Updated root ca configmap in namespace "svcaccounts-9870"
STEP: waiting for the root ca configmap reconciled 01/31/23 17:34:39.605
Jan 31 17:34:39.615: INFO: Reconciled root ca configmap in namespace "svcaccounts-9870"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 31 17:34:39.615: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-9870" for this suite. 01/31/23 17:34:39.627
------------------------------
â€¢ [1.109 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:34:38.529
    Jan 31 17:34:38.529: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename svcaccounts 01/31/23 17:34:38.53
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:34:38.549
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:34:38.555
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
      test/e2e/auth/service_accounts.go:742
    Jan 31 17:34:38.571: INFO: Got root ca configmap in namespace "svcaccounts-9870"
    Jan 31 17:34:38.582: INFO: Deleted root ca configmap in namespace "svcaccounts-9870"
    STEP: waiting for a new root ca configmap created 01/31/23 17:34:39.082
    Jan 31 17:34:39.092: INFO: Recreated root ca configmap in namespace "svcaccounts-9870"
    Jan 31 17:34:39.103: INFO: Updated root ca configmap in namespace "svcaccounts-9870"
    STEP: waiting for the root ca configmap reconciled 01/31/23 17:34:39.605
    Jan 31 17:34:39.615: INFO: Reconciled root ca configmap in namespace "svcaccounts-9870"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:34:39.615: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-9870" for this suite. 01/31/23 17:34:39.627
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:34:39.641
Jan 31 17:34:39.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename dns 01/31/23 17:34:39.643
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:34:39.665
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:34:39.672
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
STEP: Creating a test headless service 01/31/23 17:34:39.68
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-895.svc.cluster.local;sleep 1; done
 01/31/23 17:34:39.712
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-895.svc.cluster.local;sleep 1; done
 01/31/23 17:34:39.712
STEP: creating a pod to probe DNS 01/31/23 17:34:39.712
STEP: submitting the pod to kubernetes 01/31/23 17:34:39.712
Jan 31 17:34:39.728: INFO: Waiting up to 15m0s for pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1" in namespace "dns-895" to be "running"
Jan 31 17:34:39.736: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.404111ms
Jan 31 17:34:41.747: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019623134s
Jan 31 17:34:43.744: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.016705199s
Jan 31 17:34:45.746: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.018536806s
Jan 31 17:34:47.747: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.019500143s
Jan 31 17:34:49.748: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 10.02000427s
Jan 31 17:34:51.752: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 12.024386473s
Jan 31 17:34:53.745: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 14.017648847s
Jan 31 17:34:55.745: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 16.017717851s
Jan 31 17:34:57.751: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 18.023471964s
Jan 31 17:34:59.747: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 20.019348106s
Jan 31 17:35:01.747: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 22.018943412s
Jan 31 17:35:03.751: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Running", Reason="", readiness=true. Elapsed: 24.023754136s
Jan 31 17:35:03.751: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1" satisfied condition "running"
STEP: retrieving the pod 01/31/23 17:35:03.751
STEP: looking for the results for each expected name from probers 01/31/23 17:35:03.761
Jan 31 17:35:03.775: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
Jan 31 17:35:03.786: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
Jan 31 17:35:03.795: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
Jan 31 17:35:03.803: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
Jan 31 17:35:03.810: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
Jan 31 17:35:03.818: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
Jan 31 17:35:03.824: INFO: Unable to read jessie_udp@dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
Jan 31 17:35:03.831: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
Jan 31 17:35:03.831: INFO: Lookups using dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local wheezy_udp@dns-test-service-2.dns-895.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-895.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local jessie_udp@dns-test-service-2.dns-895.svc.cluster.local jessie_tcp@dns-test-service-2.dns-895.svc.cluster.local]

Jan 31 17:35:08.896: INFO: DNS probes using dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1 succeeded

STEP: deleting the pod 01/31/23 17:35:08.896
STEP: deleting the test headless service 01/31/23 17:35:08.921
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:08.940: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-895" for this suite. 01/31/23 17:35:08.947
------------------------------
â€¢ [SLOW TEST] [29.317 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:34:39.641
    Jan 31 17:34:39.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename dns 01/31/23 17:34:39.643
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:34:39.665
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:34:39.672
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Subdomain [Conformance]
      test/e2e/network/dns.go:290
    STEP: Creating a test headless service 01/31/23 17:34:39.68
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-895.svc.cluster.local;sleep 1; done
     01/31/23 17:34:39.712
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-895.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-895.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-895.svc.cluster.local;sleep 1; done
     01/31/23 17:34:39.712
    STEP: creating a pod to probe DNS 01/31/23 17:34:39.712
    STEP: submitting the pod to kubernetes 01/31/23 17:34:39.712
    Jan 31 17:34:39.728: INFO: Waiting up to 15m0s for pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1" in namespace "dns-895" to be "running"
    Jan 31 17:34:39.736: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.404111ms
    Jan 31 17:34:41.747: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019623134s
    Jan 31 17:34:43.744: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.016705199s
    Jan 31 17:34:45.746: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.018536806s
    Jan 31 17:34:47.747: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.019500143s
    Jan 31 17:34:49.748: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 10.02000427s
    Jan 31 17:34:51.752: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 12.024386473s
    Jan 31 17:34:53.745: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 14.017648847s
    Jan 31 17:34:55.745: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 16.017717851s
    Jan 31 17:34:57.751: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 18.023471964s
    Jan 31 17:34:59.747: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 20.019348106s
    Jan 31 17:35:01.747: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Pending", Reason="", readiness=false. Elapsed: 22.018943412s
    Jan 31 17:35:03.751: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1": Phase="Running", Reason="", readiness=true. Elapsed: 24.023754136s
    Jan 31 17:35:03.751: INFO: Pod "dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1" satisfied condition "running"
    STEP: retrieving the pod 01/31/23 17:35:03.751
    STEP: looking for the results for each expected name from probers 01/31/23 17:35:03.761
    Jan 31 17:35:03.775: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
    Jan 31 17:35:03.786: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
    Jan 31 17:35:03.795: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
    Jan 31 17:35:03.803: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
    Jan 31 17:35:03.810: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
    Jan 31 17:35:03.818: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
    Jan 31 17:35:03.824: INFO: Unable to read jessie_udp@dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
    Jan 31 17:35:03.831: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-895.svc.cluster.local from pod dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1: the server could not find the requested resource (get pods dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1)
    Jan 31 17:35:03.831: INFO: Lookups using dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local wheezy_udp@dns-test-service-2.dns-895.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-895.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-895.svc.cluster.local jessie_udp@dns-test-service-2.dns-895.svc.cluster.local jessie_tcp@dns-test-service-2.dns-895.svc.cluster.local]

    Jan 31 17:35:08.896: INFO: DNS probes using dns-895/dns-test-94a81c24-3187-4a5f-a732-80f9fe6fd4c1 succeeded

    STEP: deleting the pod 01/31/23 17:35:08.896
    STEP: deleting the test headless service 01/31/23 17:35:08.921
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:08.940: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-895" for this suite. 01/31/23 17:35:08.947
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:08.964
Jan 31 17:35:08.964: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename proxy 01/31/23 17:35:08.966
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:08.991
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:08.997
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
Jan 31 17:35:09.003: INFO: Creating pod...
Jan 31 17:35:09.012: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-1803" to be "running"
Jan 31 17:35:09.021: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 8.136323ms
Jan 31 17:35:11.028: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.015509982s
Jan 31 17:35:11.028: INFO: Pod "agnhost" satisfied condition "running"
Jan 31 17:35:11.028: INFO: Creating service...
Jan 31 17:35:11.078: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=DELETE
Jan 31 17:35:11.089: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 31 17:35:11.089: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=OPTIONS
Jan 31 17:35:11.095: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 31 17:35:11.095: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=PATCH
Jan 31 17:35:11.100: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 31 17:35:11.100: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=POST
Jan 31 17:35:11.106: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 31 17:35:11.106: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=PUT
Jan 31 17:35:11.112: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 31 17:35:11.112: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=DELETE
Jan 31 17:35:11.119: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 31 17:35:11.119: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=OPTIONS
Jan 31 17:35:11.125: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 31 17:35:11.125: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=PATCH
Jan 31 17:35:11.132: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 31 17:35:11.132: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=POST
Jan 31 17:35:11.138: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 31 17:35:11.138: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=PUT
Jan 31 17:35:11.145: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 31 17:35:11.145: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=GET
Jan 31 17:35:11.149: INFO: http.Client request:GET StatusCode:301
Jan 31 17:35:11.149: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=GET
Jan 31 17:35:11.154: INFO: http.Client request:GET StatusCode:301
Jan 31 17:35:11.154: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=HEAD
Jan 31 17:35:11.159: INFO: http.Client request:HEAD StatusCode:301
Jan 31 17:35:11.159: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=HEAD
Jan 31 17:35:11.166: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:11.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-1803" for this suite. 01/31/23 17:35:11.171
------------------------------
â€¢ [2.214 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service Proxy [Conformance]
    test/e2e/network/proxy.go:380

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:08.964
    Jan 31 17:35:08.964: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename proxy 01/31/23 17:35:08.966
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:08.991
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:08.997
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service Proxy [Conformance]
      test/e2e/network/proxy.go:380
    Jan 31 17:35:09.003: INFO: Creating pod...
    Jan 31 17:35:09.012: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-1803" to be "running"
    Jan 31 17:35:09.021: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 8.136323ms
    Jan 31 17:35:11.028: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.015509982s
    Jan 31 17:35:11.028: INFO: Pod "agnhost" satisfied condition "running"
    Jan 31 17:35:11.028: INFO: Creating service...
    Jan 31 17:35:11.078: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=DELETE
    Jan 31 17:35:11.089: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Jan 31 17:35:11.089: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=OPTIONS
    Jan 31 17:35:11.095: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Jan 31 17:35:11.095: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=PATCH
    Jan 31 17:35:11.100: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Jan 31 17:35:11.100: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=POST
    Jan 31 17:35:11.106: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Jan 31 17:35:11.106: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=PUT
    Jan 31 17:35:11.112: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Jan 31 17:35:11.112: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=DELETE
    Jan 31 17:35:11.119: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Jan 31 17:35:11.119: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=OPTIONS
    Jan 31 17:35:11.125: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Jan 31 17:35:11.125: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=PATCH
    Jan 31 17:35:11.132: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Jan 31 17:35:11.132: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=POST
    Jan 31 17:35:11.138: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Jan 31 17:35:11.138: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=PUT
    Jan 31 17:35:11.145: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Jan 31 17:35:11.145: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=GET
    Jan 31 17:35:11.149: INFO: http.Client request:GET StatusCode:301
    Jan 31 17:35:11.149: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=GET
    Jan 31 17:35:11.154: INFO: http.Client request:GET StatusCode:301
    Jan 31 17:35:11.154: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/pods/agnhost/proxy?method=HEAD
    Jan 31 17:35:11.159: INFO: http.Client request:HEAD StatusCode:301
    Jan 31 17:35:11.159: INFO: Starting http.Client for https://10.104.126.18:443/api/v1/namespaces/proxy-1803/services/e2e-proxy-test-service/proxy?method=HEAD
    Jan 31 17:35:11.166: INFO: http.Client request:HEAD StatusCode:301
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:11.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-1803" for this suite. 01/31/23 17:35:11.171
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:11.178
Jan 31 17:35:11.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 17:35:11.18
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:11.195
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:11.203
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
STEP: Creating secret with name secret-test-map-a1dd5fe7-df8c-47ba-9e5c-a1973484378f 01/31/23 17:35:11.21
STEP: Creating a pod to test consume secrets 01/31/23 17:35:11.217
Jan 31 17:35:11.226: INFO: Waiting up to 5m0s for pod "pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24" in namespace "secrets-8401" to be "Succeeded or Failed"
Jan 31 17:35:11.232: INFO: Pod "pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24": Phase="Pending", Reason="", readiness=false. Elapsed: 6.030734ms
Jan 31 17:35:13.242: INFO: Pod "pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016090999s
Jan 31 17:35:15.241: INFO: Pod "pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014915181s
STEP: Saw pod success 01/31/23 17:35:15.241
Jan 31 17:35:15.241: INFO: Pod "pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24" satisfied condition "Succeeded or Failed"
Jan 31 17:35:15.250: INFO: Trying to get logs from node 26-m02 pod pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24 container secret-volume-test: <nil>
STEP: delete the pod 01/31/23 17:35:15.274
Jan 31 17:35:15.293: INFO: Waiting for pod pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24 to disappear
Jan 31 17:35:15.299: INFO: Pod pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:15.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-8401" for this suite. 01/31/23 17:35:15.307
------------------------------
â€¢ [4.138 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:11.178
    Jan 31 17:35:11.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 17:35:11.18
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:11.195
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:11.203
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:89
    STEP: Creating secret with name secret-test-map-a1dd5fe7-df8c-47ba-9e5c-a1973484378f 01/31/23 17:35:11.21
    STEP: Creating a pod to test consume secrets 01/31/23 17:35:11.217
    Jan 31 17:35:11.226: INFO: Waiting up to 5m0s for pod "pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24" in namespace "secrets-8401" to be "Succeeded or Failed"
    Jan 31 17:35:11.232: INFO: Pod "pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24": Phase="Pending", Reason="", readiness=false. Elapsed: 6.030734ms
    Jan 31 17:35:13.242: INFO: Pod "pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016090999s
    Jan 31 17:35:15.241: INFO: Pod "pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014915181s
    STEP: Saw pod success 01/31/23 17:35:15.241
    Jan 31 17:35:15.241: INFO: Pod "pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24" satisfied condition "Succeeded or Failed"
    Jan 31 17:35:15.250: INFO: Trying to get logs from node 26-m02 pod pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24 container secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:35:15.274
    Jan 31 17:35:15.293: INFO: Waiting for pod pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24 to disappear
    Jan 31 17:35:15.299: INFO: Pod pod-secrets-85cbf8f0-c6b3-4322-a16b-19a221e4dc24 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:15.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-8401" for this suite. 01/31/23 17:35:15.307
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:15.316
Jan 31 17:35:15.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename disruption 01/31/23 17:35:15.317
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:15.333
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:15.339
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
STEP: Waiting for the pdb to be processed 01/31/23 17:35:15.351
STEP: Waiting for all pods to be running 01/31/23 17:35:17.403
Jan 31 17:35:17.412: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:19.428: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-1744" for this suite. 01/31/23 17:35:19.437
------------------------------
â€¢ [4.131 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:15.316
    Jan 31 17:35:15.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename disruption 01/31/23 17:35:15.317
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:15.333
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:15.339
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should observe PodDisruptionBudget status updated [Conformance]
      test/e2e/apps/disruption.go:141
    STEP: Waiting for the pdb to be processed 01/31/23 17:35:15.351
    STEP: Waiting for all pods to be running 01/31/23 17:35:17.403
    Jan 31 17:35:17.412: INFO: running pods: 0 < 3
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:19.428: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-1744" for this suite. 01/31/23 17:35:19.437
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:19.448
Jan 31 17:35:19.448: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 17:35:19.449
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:19.467
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:19.476
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 17:35:19.504
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:35:19.77
STEP: Deploying the webhook pod 01/31/23 17:35:19.787
STEP: Wait for the deployment to be ready 01/31/23 17:35:19.803
Jan 31 17:35:19.820: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/31/23 17:35:21.841
STEP: Verifying the service has paired with the endpoint 01/31/23 17:35:21.887
Jan 31 17:35:22.888: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
STEP: Listing all of the created validation webhooks 01/31/23 17:35:22.986
STEP: Creating a configMap that should be mutated 01/31/23 17:35:23.01
STEP: Deleting the collection of validation webhooks 01/31/23 17:35:23.043
STEP: Creating a configMap that should not be mutated 01/31/23 17:35:23.092
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:23.104: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-7989" for this suite. 01/31/23 17:35:23.165
STEP: Destroying namespace "webhook-7989-markers" for this suite. 01/31/23 17:35:23.174
------------------------------
â€¢ [3.737 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:19.448
    Jan 31 17:35:19.448: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 17:35:19.449
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:19.467
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:19.476
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 17:35:19.504
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:35:19.77
    STEP: Deploying the webhook pod 01/31/23 17:35:19.787
    STEP: Wait for the deployment to be ready 01/31/23 17:35:19.803
    Jan 31 17:35:19.820: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/31/23 17:35:21.841
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:35:21.887
    Jan 31 17:35:22.888: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing mutating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:656
    STEP: Listing all of the created validation webhooks 01/31/23 17:35:22.986
    STEP: Creating a configMap that should be mutated 01/31/23 17:35:23.01
    STEP: Deleting the collection of validation webhooks 01/31/23 17:35:23.043
    STEP: Creating a configMap that should not be mutated 01/31/23 17:35:23.092
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:23.104: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-7989" for this suite. 01/31/23 17:35:23.165
    STEP: Destroying namespace "webhook-7989-markers" for this suite. 01/31/23 17:35:23.174
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:23.186
Jan 31 17:35:23.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename podtemplate 01/31/23 17:35:23.187
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:23.207
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:23.214
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
STEP: Create set of pod templates 01/31/23 17:35:23.222
Jan 31 17:35:23.228: INFO: created test-podtemplate-1
Jan 31 17:35:23.234: INFO: created test-podtemplate-2
Jan 31 17:35:23.241: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace 01/31/23 17:35:23.241
STEP: delete collection of pod templates 01/31/23 17:35:23.246
Jan 31 17:35:23.246: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity 01/31/23 17:35:23.286
Jan 31 17:35:23.286: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:23.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-2979" for this suite. 01/31/23 17:35:23.296
------------------------------
â€¢ [0.120 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:23.186
    Jan 31 17:35:23.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename podtemplate 01/31/23 17:35:23.187
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:23.207
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:23.214
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of pod templates [Conformance]
      test/e2e/common/node/podtemplates.go:122
    STEP: Create set of pod templates 01/31/23 17:35:23.222
    Jan 31 17:35:23.228: INFO: created test-podtemplate-1
    Jan 31 17:35:23.234: INFO: created test-podtemplate-2
    Jan 31 17:35:23.241: INFO: created test-podtemplate-3
    STEP: get a list of pod templates with a label in the current namespace 01/31/23 17:35:23.241
    STEP: delete collection of pod templates 01/31/23 17:35:23.246
    Jan 31 17:35:23.246: INFO: requesting DeleteCollection of pod templates
    STEP: check that the list of pod templates matches the requested quantity 01/31/23 17:35:23.286
    Jan 31 17:35:23.286: INFO: requesting list of pod templates to confirm quantity
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:23.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-2979" for this suite. 01/31/23 17:35:23.296
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:23.307
Jan 31 17:35:23.307: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename watch 01/31/23 17:35:23.309
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:23.33
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:23.338
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
STEP: creating a new configmap 01/31/23 17:35:23.372
STEP: modifying the configmap once 01/31/23 17:35:23.434
STEP: modifying the configmap a second time 01/31/23 17:35:23.48
STEP: deleting the configmap 01/31/23 17:35:23.494
STEP: creating a watch on configmaps from the resource version returned by the first update 01/31/23 17:35:23.501
STEP: Expecting to observe notifications for all changes to the configmap after the first update 01/31/23 17:35:23.505
Jan 31 17:35:23.505: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8534  642b976f-5438-4e81-b350-49a34777f7ff 11463 0 2023-01-31 17:35:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-01-31 17:35:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:35:23.505: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8534  642b976f-5438-4e81-b350-49a34777f7ff 11464 0 2023-01-31 17:35:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-01-31 17:35:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:23.505: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-8534" for this suite. 01/31/23 17:35:23.511
------------------------------
â€¢ [0.210 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:23.307
    Jan 31 17:35:23.307: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename watch 01/31/23 17:35:23.309
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:23.33
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:23.338
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to start watching from a specific resource version [Conformance]
      test/e2e/apimachinery/watch.go:142
    STEP: creating a new configmap 01/31/23 17:35:23.372
    STEP: modifying the configmap once 01/31/23 17:35:23.434
    STEP: modifying the configmap a second time 01/31/23 17:35:23.48
    STEP: deleting the configmap 01/31/23 17:35:23.494
    STEP: creating a watch on configmaps from the resource version returned by the first update 01/31/23 17:35:23.501
    STEP: Expecting to observe notifications for all changes to the configmap after the first update 01/31/23 17:35:23.505
    Jan 31 17:35:23.505: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8534  642b976f-5438-4e81-b350-49a34777f7ff 11463 0 2023-01-31 17:35:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-01-31 17:35:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:35:23.505: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8534  642b976f-5438-4e81-b350-49a34777f7ff 11464 0 2023-01-31 17:35:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-01-31 17:35:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:23.505: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-8534" for this suite. 01/31/23 17:35:23.511
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:23.519
Jan 31 17:35:23.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 17:35:23.519
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:23.533
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:23.539
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
STEP: Counting existing ResourceQuota 01/31/23 17:35:23.545
STEP: Creating a ResourceQuota 01/31/23 17:35:28.556
STEP: Ensuring resource quota status is calculated 01/31/23 17:35:28.573
STEP: Creating a ReplicationController 01/31/23 17:35:30.586
STEP: Ensuring resource quota status captures replication controller creation 01/31/23 17:35:30.606
STEP: Deleting a ReplicationController 01/31/23 17:35:32.613
STEP: Ensuring resource quota status released usage 01/31/23 17:35:32.621
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:34.632: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-1240" for this suite. 01/31/23 17:35:34.642
------------------------------
â€¢ [SLOW TEST] [11.135 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:23.519
    Jan 31 17:35:23.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 17:35:23.519
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:23.533
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:23.539
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
      test/e2e/apimachinery/resource_quota.go:392
    STEP: Counting existing ResourceQuota 01/31/23 17:35:23.545
    STEP: Creating a ResourceQuota 01/31/23 17:35:28.556
    STEP: Ensuring resource quota status is calculated 01/31/23 17:35:28.573
    STEP: Creating a ReplicationController 01/31/23 17:35:30.586
    STEP: Ensuring resource quota status captures replication controller creation 01/31/23 17:35:30.606
    STEP: Deleting a ReplicationController 01/31/23 17:35:32.613
    STEP: Ensuring resource quota status released usage 01/31/23 17:35:32.621
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:34.632: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-1240" for this suite. 01/31/23 17:35:34.642
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
[BeforeEach] [sig-network] EndpointSliceMirroring
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:34.654
Jan 31 17:35:34.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename endpointslicemirroring 01/31/23 17:35:34.655
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:34.677
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:34.686
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
STEP: mirroring a new custom Endpoint 01/31/23 17:35:34.728
Jan 31 17:35:34.741: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint 01/31/23 17:35:36.751
STEP: mirroring deletion of a custom Endpoint 01/31/23 17:35:36.764
Jan 31 17:35:36.783: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:38.793: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslicemirroring-8606" for this suite. 01/31/23 17:35:38.801
------------------------------
â€¢ [4.159 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSliceMirroring
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:34.654
    Jan 31 17:35:34.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename endpointslicemirroring 01/31/23 17:35:34.655
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:34.677
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:34.686
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/network/endpointslicemirroring.go:41
    [It] should mirror a custom Endpoints resource through create update and delete [Conformance]
      test/e2e/network/endpointslicemirroring.go:53
    STEP: mirroring a new custom Endpoint 01/31/23 17:35:34.728
    Jan 31 17:35:34.741: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
    STEP: mirroring an update to a custom Endpoint 01/31/23 17:35:36.751
    STEP: mirroring deletion of a custom Endpoint 01/31/23 17:35:36.764
    Jan 31 17:35:36.783: INFO: Waiting for 0 EndpointSlices to exist, got 1
    [AfterEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:38.793: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslicemirroring-8606" for this suite. 01/31/23 17:35:38.801
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:38.813
Jan 31 17:35:38.814: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 17:35:38.815
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:38.837
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:38.847
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
STEP: Creating configMap with name configmap-test-volume-63bd61bf-af47-4212-a6f5-a384ec3de43e 01/31/23 17:35:38.857
STEP: Creating a pod to test consume configMaps 01/31/23 17:35:38.862
Jan 31 17:35:38.876: INFO: Waiting up to 5m0s for pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1" in namespace "configmap-8071" to be "Succeeded or Failed"
Jan 31 17:35:38.893: INFO: Pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1": Phase="Pending", Reason="", readiness=false. Elapsed: 17.367417ms
Jan 31 17:35:40.902: INFO: Pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026688199s
Jan 31 17:35:42.907: INFO: Pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.030952195s
Jan 31 17:35:44.900: INFO: Pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.023815236s
STEP: Saw pod success 01/31/23 17:35:44.9
Jan 31 17:35:44.901: INFO: Pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1" satisfied condition "Succeeded or Failed"
Jan 31 17:35:44.907: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 17:35:44.919
Jan 31 17:35:44.933: INFO: Waiting for pod pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1 to disappear
Jan 31 17:35:44.940: INFO: Pod pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:44.940: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8071" for this suite. 01/31/23 17:35:44.947
------------------------------
â€¢ [SLOW TEST] [6.142 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:38.813
    Jan 31 17:35:38.814: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 17:35:38.815
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:38.837
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:38.847
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:57
    STEP: Creating configMap with name configmap-test-volume-63bd61bf-af47-4212-a6f5-a384ec3de43e 01/31/23 17:35:38.857
    STEP: Creating a pod to test consume configMaps 01/31/23 17:35:38.862
    Jan 31 17:35:38.876: INFO: Waiting up to 5m0s for pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1" in namespace "configmap-8071" to be "Succeeded or Failed"
    Jan 31 17:35:38.893: INFO: Pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1": Phase="Pending", Reason="", readiness=false. Elapsed: 17.367417ms
    Jan 31 17:35:40.902: INFO: Pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026688199s
    Jan 31 17:35:42.907: INFO: Pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.030952195s
    Jan 31 17:35:44.900: INFO: Pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.023815236s
    STEP: Saw pod success 01/31/23 17:35:44.9
    Jan 31 17:35:44.901: INFO: Pod "pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1" satisfied condition "Succeeded or Failed"
    Jan 31 17:35:44.907: INFO: Trying to get logs from node 26-m02 pod pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 17:35:44.919
    Jan 31 17:35:44.933: INFO: Waiting for pod pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1 to disappear
    Jan 31 17:35:44.940: INFO: Pod pod-configmaps-7cd431c5-6a9d-442c-a797-73b8158e05b1 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:44.940: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8071" for this suite. 01/31/23 17:35:44.947
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:44.958
Jan 31 17:35:44.958: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename csiinlinevolumes 01/31/23 17:35:44.959
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:44.977
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:44.983
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
STEP: creating 01/31/23 17:35:44.99
STEP: getting 01/31/23 17:35:45.01
STEP: listing in namespace 01/31/23 17:35:45.016
STEP: patching 01/31/23 17:35:45.023
STEP: deleting 01/31/23 17:35:45.032
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:45.055: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-3086" for this suite. 01/31/23 17:35:45.063
------------------------------
â€¢ [0.113 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:44.958
    Jan 31 17:35:44.958: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename csiinlinevolumes 01/31/23 17:35:44.959
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:44.977
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:44.983
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSIVolumeSource in Pod API [Conformance]
      test/e2e/storage/csi_inline.go:131
    STEP: creating 01/31/23 17:35:44.99
    STEP: getting 01/31/23 17:35:45.01
    STEP: listing in namespace 01/31/23 17:35:45.016
    STEP: patching 01/31/23 17:35:45.023
    STEP: deleting 01/31/23 17:35:45.032
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:45.055: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-3086" for this suite. 01/31/23 17:35:45.063
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:45.072
Jan 31 17:35:45.072: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sysctl 01/31/23 17:35:45.073
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:45.09
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:45.097
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
STEP: Creating a pod with one valid and two invalid sysctls 01/31/23 17:35:45.103
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:45.111: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-7399" for this suite. 01/31/23 17:35:45.116
------------------------------
â€¢ [0.052 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:45.072
    Jan 31 17:35:45.072: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sysctl 01/31/23 17:35:45.073
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:45.09
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:45.097
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:123
    STEP: Creating a pod with one valid and two invalid sysctls 01/31/23 17:35:45.103
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:45.111: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-7399" for this suite. 01/31/23 17:35:45.116
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:45.124
Jan 31 17:35:45.124: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir-wrapper 01/31/23 17:35:45.125
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:45.141
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:45.147
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
Jan 31 17:35:45.178: INFO: Waiting up to 5m0s for pod "pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d" in namespace "emptydir-wrapper-5599" to be "running and ready"
Jan 31 17:35:45.190: INFO: Pod "pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d": Phase="Pending", Reason="", readiness=false. Elapsed: 11.335431ms
Jan 31 17:35:45.190: INFO: The phase of Pod pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:35:47.200: INFO: Pod "pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021453448s
Jan 31 17:35:47.200: INFO: The phase of Pod pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:35:49.204: INFO: Pod "pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d": Phase="Running", Reason="", readiness=true. Elapsed: 4.025816713s
Jan 31 17:35:49.204: INFO: The phase of Pod pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d is Running (Ready = true)
Jan 31 17:35:49.204: INFO: Pod "pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d" satisfied condition "running and ready"
STEP: Cleaning up the secret 01/31/23 17:35:49.211
STEP: Cleaning up the configmap 01/31/23 17:35:49.221
STEP: Cleaning up the pod 01/31/23 17:35:49.235
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:35:49.254: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-5599" for this suite. 01/31/23 17:35:49.263
------------------------------
â€¢ [4.150 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:45.124
    Jan 31 17:35:45.124: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir-wrapper 01/31/23 17:35:45.125
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:45.141
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:45.147
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not conflict [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:67
    Jan 31 17:35:45.178: INFO: Waiting up to 5m0s for pod "pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d" in namespace "emptydir-wrapper-5599" to be "running and ready"
    Jan 31 17:35:45.190: INFO: Pod "pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d": Phase="Pending", Reason="", readiness=false. Elapsed: 11.335431ms
    Jan 31 17:35:45.190: INFO: The phase of Pod pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:35:47.200: INFO: Pod "pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021453448s
    Jan 31 17:35:47.200: INFO: The phase of Pod pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:35:49.204: INFO: Pod "pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d": Phase="Running", Reason="", readiness=true. Elapsed: 4.025816713s
    Jan 31 17:35:49.204: INFO: The phase of Pod pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d is Running (Ready = true)
    Jan 31 17:35:49.204: INFO: Pod "pod-secrets-adc5c066-1002-4ad3-897c-3578fcfba01d" satisfied condition "running and ready"
    STEP: Cleaning up the secret 01/31/23 17:35:49.211
    STEP: Cleaning up the configmap 01/31/23 17:35:49.221
    STEP: Cleaning up the pod 01/31/23 17:35:49.235
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:35:49.254: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-5599" for this suite. 01/31/23 17:35:49.263
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:35:49.276
Jan 31 17:35:49.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 17:35:49.276
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:49.295
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:49.303
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
STEP: Counting existing ResourceQuota 01/31/23 17:35:49.311
STEP: Creating a ResourceQuota 01/31/23 17:35:54.327
STEP: Ensuring resource quota status is calculated 01/31/23 17:35:54.334
STEP: Creating a Pod that fits quota 01/31/23 17:35:56.344
STEP: Ensuring ResourceQuota status captures the pod usage 01/31/23 17:35:56.37
STEP: Not allowing a pod to be created that exceeds remaining quota 01/31/23 17:35:58.381
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 01/31/23 17:35:58.389
STEP: Ensuring a pod cannot update its resource requirements 01/31/23 17:35:58.398
STEP: Ensuring attempts to update pod resource requirements did not change quota usage 01/31/23 17:35:58.408
STEP: Deleting the pod 01/31/23 17:36:00.419
STEP: Ensuring resource quota status released the pod usage 01/31/23 17:36:00.446
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 17:36:02.457: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-139" for this suite. 01/31/23 17:36:02.467
------------------------------
â€¢ [SLOW TEST] [13.201 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:35:49.276
    Jan 31 17:35:49.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 17:35:49.276
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:35:49.295
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:35:49.303
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a pod. [Conformance]
      test/e2e/apimachinery/resource_quota.go:230
    STEP: Counting existing ResourceQuota 01/31/23 17:35:49.311
    STEP: Creating a ResourceQuota 01/31/23 17:35:54.327
    STEP: Ensuring resource quota status is calculated 01/31/23 17:35:54.334
    STEP: Creating a Pod that fits quota 01/31/23 17:35:56.344
    STEP: Ensuring ResourceQuota status captures the pod usage 01/31/23 17:35:56.37
    STEP: Not allowing a pod to be created that exceeds remaining quota 01/31/23 17:35:58.381
    STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 01/31/23 17:35:58.389
    STEP: Ensuring a pod cannot update its resource requirements 01/31/23 17:35:58.398
    STEP: Ensuring attempts to update pod resource requirements did not change quota usage 01/31/23 17:35:58.408
    STEP: Deleting the pod 01/31/23 17:36:00.419
    STEP: Ensuring resource quota status released the pod usage 01/31/23 17:36:00.446
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:36:02.457: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-139" for this suite. 01/31/23 17:36:02.467
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:36:02.478
Jan 31 17:36:02.479: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:36:02.479
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:36:02.501
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:36:02.509
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
Jan 31 17:36:02.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/31/23 17:36:04.032
Jan 31 17:36:04.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 create -f -'
Jan 31 17:36:04.721: INFO: stderr: ""
Jan 31 17:36:04.721: INFO: stdout: "e2e-test-crd-publish-openapi-9588-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jan 31 17:36:04.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 delete e2e-test-crd-publish-openapi-9588-crds test-cr'
Jan 31 17:36:04.820: INFO: stderr: ""
Jan 31 17:36:04.821: INFO: stdout: "e2e-test-crd-publish-openapi-9588-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Jan 31 17:36:04.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 apply -f -'
Jan 31 17:36:05.097: INFO: stderr: ""
Jan 31 17:36:05.097: INFO: stdout: "e2e-test-crd-publish-openapi-9588-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jan 31 17:36:05.097: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 delete e2e-test-crd-publish-openapi-9588-crds test-cr'
Jan 31 17:36:05.204: INFO: stderr: ""
Jan 31 17:36:05.204: INFO: stdout: "e2e-test-crd-publish-openapi-9588-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 01/31/23 17:36:05.204
Jan 31 17:36:05.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-7069 explain e2e-test-crd-publish-openapi-9588-crds'
Jan 31 17:36:05.451: INFO: stderr: ""
Jan 31 17:36:05.451: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9588-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:36:06.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-7069" for this suite. 01/31/23 17:36:06.97
------------------------------
â€¢ [4.499 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:36:02.478
    Jan 31 17:36:02.479: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:36:02.479
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:36:02.501
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:36:02.509
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields at the schema root [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:194
    Jan 31 17:36:02.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/31/23 17:36:04.032
    Jan 31 17:36:04.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 create -f -'
    Jan 31 17:36:04.721: INFO: stderr: ""
    Jan 31 17:36:04.721: INFO: stdout: "e2e-test-crd-publish-openapi-9588-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Jan 31 17:36:04.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 delete e2e-test-crd-publish-openapi-9588-crds test-cr'
    Jan 31 17:36:04.820: INFO: stderr: ""
    Jan 31 17:36:04.821: INFO: stdout: "e2e-test-crd-publish-openapi-9588-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    Jan 31 17:36:04.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 apply -f -'
    Jan 31 17:36:05.097: INFO: stderr: ""
    Jan 31 17:36:05.097: INFO: stdout: "e2e-test-crd-publish-openapi-9588-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Jan 31 17:36:05.097: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 delete e2e-test-crd-publish-openapi-9588-crds test-cr'
    Jan 31 17:36:05.204: INFO: stderr: ""
    Jan 31 17:36:05.204: INFO: stdout: "e2e-test-crd-publish-openapi-9588-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 01/31/23 17:36:05.204
    Jan 31 17:36:05.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-7069 explain e2e-test-crd-publish-openapi-9588-crds'
    Jan 31 17:36:05.451: INFO: stderr: ""
    Jan 31 17:36:05.451: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9588-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:36:06.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-7069" for this suite. 01/31/23 17:36:06.97
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:36:06.98
Jan 31 17:36:06.980: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-runtime 01/31/23 17:36:06.98
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:36:07.001
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:36:07.007
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
STEP: create the container 01/31/23 17:36:07.014
STEP: wait for the container to reach Succeeded 01/31/23 17:36:07.023
STEP: get the container status 01/31/23 17:36:11.071
STEP: the container should be terminated 01/31/23 17:36:11.08
STEP: the termination message should be set 01/31/23 17:36:11.08
Jan 31 17:36:11.080: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container 01/31/23 17:36:11.08
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Jan 31 17:36:11.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-1064" for this suite. 01/31/23 17:36:11.114
------------------------------
â€¢ [4.142 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:36:06.98
    Jan 31 17:36:06.980: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-runtime 01/31/23 17:36:06.98
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:36:07.001
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:36:07.007
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248
    STEP: create the container 01/31/23 17:36:07.014
    STEP: wait for the container to reach Succeeded 01/31/23 17:36:07.023
    STEP: get the container status 01/31/23 17:36:11.071
    STEP: the container should be terminated 01/31/23 17:36:11.08
    STEP: the termination message should be set 01/31/23 17:36:11.08
    Jan 31 17:36:11.080: INFO: Expected: &{OK} to match Container's Termination Message: OK --
    STEP: delete the container 01/31/23 17:36:11.08
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:36:11.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-1064" for this suite. 01/31/23 17:36:11.114
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] ReplicaSet
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:36:11.122
Jan 31 17:36:11.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replicaset 01/31/23 17:36:11.123
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:36:11.142
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:36:11.152
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
STEP: Create a Replicaset 01/31/23 17:36:11.165
STEP: Verify that the required pods have come up. 01/31/23 17:36:11.172
Jan 31 17:36:11.178: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 31 17:36:16.193: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/31/23 17:36:16.193
STEP: Getting /status 01/31/23 17:36:16.193
Jan 31 17:36:16.204: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status 01/31/23 17:36:16.204
Jan 31 17:36:16.222: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated 01/31/23 17:36:16.222
Jan 31 17:36:16.226: INFO: Observed &ReplicaSet event: ADDED
Jan 31 17:36:16.226: INFO: Observed &ReplicaSet event: MODIFIED
Jan 31 17:36:16.226: INFO: Observed &ReplicaSet event: MODIFIED
Jan 31 17:36:16.226: INFO: Observed &ReplicaSet event: MODIFIED
Jan 31 17:36:16.227: INFO: Found replicaset test-rs in namespace replicaset-1976 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 31 17:36:16.227: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status 01/31/23 17:36:16.227
Jan 31 17:36:16.227: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 31 17:36:16.235: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched 01/31/23 17:36:16.235
Jan 31 17:36:16.239: INFO: Observed &ReplicaSet event: ADDED
Jan 31 17:36:16.239: INFO: Observed &ReplicaSet event: MODIFIED
Jan 31 17:36:16.239: INFO: Observed &ReplicaSet event: MODIFIED
Jan 31 17:36:16.240: INFO: Observed &ReplicaSet event: MODIFIED
Jan 31 17:36:16.240: INFO: Observed replicaset test-rs in namespace replicaset-1976 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 31 17:36:16.240: INFO: Observed &ReplicaSet event: MODIFIED
Jan 31 17:36:16.240: INFO: Found replicaset test-rs in namespace replicaset-1976 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Jan 31 17:36:16.240: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 31 17:36:16.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-1976" for this suite. 01/31/23 17:36:16.247
------------------------------
â€¢ [SLOW TEST] [5.132 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:36:11.122
    Jan 31 17:36:11.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replicaset 01/31/23 17:36:11.123
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:36:11.142
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:36:11.152
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should validate Replicaset Status endpoints [Conformance]
      test/e2e/apps/replica_set.go:176
    STEP: Create a Replicaset 01/31/23 17:36:11.165
    STEP: Verify that the required pods have come up. 01/31/23 17:36:11.172
    Jan 31 17:36:11.178: INFO: Pod name sample-pod: Found 0 pods out of 1
    Jan 31 17:36:16.193: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/31/23 17:36:16.193
    STEP: Getting /status 01/31/23 17:36:16.193
    Jan 31 17:36:16.204: INFO: Replicaset test-rs has Conditions: []
    STEP: updating the Replicaset Status 01/31/23 17:36:16.204
    Jan 31 17:36:16.222: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the ReplicaSet status to be updated 01/31/23 17:36:16.222
    Jan 31 17:36:16.226: INFO: Observed &ReplicaSet event: ADDED
    Jan 31 17:36:16.226: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 31 17:36:16.226: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 31 17:36:16.226: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 31 17:36:16.227: INFO: Found replicaset test-rs in namespace replicaset-1976 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Jan 31 17:36:16.227: INFO: Replicaset test-rs has an updated status
    STEP: patching the Replicaset Status 01/31/23 17:36:16.227
    Jan 31 17:36:16.227: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Jan 31 17:36:16.235: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Replicaset status to be patched 01/31/23 17:36:16.235
    Jan 31 17:36:16.239: INFO: Observed &ReplicaSet event: ADDED
    Jan 31 17:36:16.239: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 31 17:36:16.239: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 31 17:36:16.240: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 31 17:36:16.240: INFO: Observed replicaset test-rs in namespace replicaset-1976 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Jan 31 17:36:16.240: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 31 17:36:16.240: INFO: Found replicaset test-rs in namespace replicaset-1976 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
    Jan 31 17:36:16.240: INFO: Replicaset test-rs has a patched status
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:36:16.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-1976" for this suite. 01/31/23 17:36:16.247
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:36:16.255
Jan 31 17:36:16.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:36:16.256
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:36:16.273
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:36:16.28
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
STEP: set up a multi version CRD 01/31/23 17:36:16.288
Jan 31 17:36:16.288: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: rename a version 01/31/23 17:36:20.654
STEP: check the new version name is served 01/31/23 17:36:20.673
STEP: check the old version name is removed 01/31/23 17:36:22.269
STEP: check the other version is not changed 01/31/23 17:36:23.027
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:36:26.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-4220" for this suite. 01/31/23 17:36:26.034
------------------------------
â€¢ [SLOW TEST] [9.786 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:36:16.255
    Jan 31 17:36:16.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 17:36:16.256
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:36:16.273
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:36:16.28
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] updates the published spec when one version gets renamed [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:391
    STEP: set up a multi version CRD 01/31/23 17:36:16.288
    Jan 31 17:36:16.288: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: rename a version 01/31/23 17:36:20.654
    STEP: check the new version name is served 01/31/23 17:36:20.673
    STEP: check the old version name is removed 01/31/23 17:36:22.269
    STEP: check the other version is not changed 01/31/23 17:36:23.027
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:36:26.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-4220" for this suite. 01/31/23 17:36:26.034
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:36:26.042
Jan 31 17:36:26.042: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename statefulset 01/31/23 17:36:26.043
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:36:26.058
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:36:26.064
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-47 01/31/23 17:36:26.07
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
STEP: Creating stateful set ss in namespace statefulset-47 01/31/23 17:36:26.111
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-47 01/31/23 17:36:26.123
Jan 31 17:36:26.130: INFO: Found 0 stateful pods, waiting for 1
Jan 31 17:36:36.144: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:36:46.140: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:36:56.134: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 01/31/23 17:36:56.135
Jan 31 17:36:56.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 31 17:36:56.322: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 31 17:36:56.322: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 31 17:36:56.322: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 31 17:36:56.329: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jan 31 17:37:06.341: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 31 17:37:06.341: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 17:37:06.378: INFO: POD   NODE    PHASE    GRACE  CONDITIONS
Jan 31 17:37:06.378: INFO: ss-0  26-m02  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:26 +0000 UTC  }]
Jan 31 17:37:06.378: INFO: 
Jan 31 17:37:06.378: INFO: StatefulSet ss has not reached scale 3, at 1
Jan 31 17:37:07.386: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99138885s
Jan 31 17:37:08.393: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.983125548s
Jan 31 17:37:09.404: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.976470239s
Jan 31 17:37:10.413: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.96549409s
Jan 31 17:37:11.423: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.956586407s
Jan 31 17:37:12.433: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.947377459s
Jan 31 17:37:13.443: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.93703013s
Jan 31 17:37:14.454: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.927108865s
Jan 31 17:37:15.472: INFO: Verifying statefulset ss doesn't scale past 3 for another 915.348735ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-47 01/31/23 17:37:16.472
Jan 31 17:37:16.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 17:37:16.650: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 31 17:37:16.650: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 31 17:37:16.650: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 31 17:37:16.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 17:37:16.763: INFO: rc: 1
Jan 31 17:37:16.763: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
error: unable to upgrade connection: container not found ("webserver")

error:
exit status 1
Jan 31 17:37:26.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 17:37:26.929: INFO: rc: 1
Jan 31 17:37:26.929: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
error: unable to upgrade connection: container not found ("webserver")

error:
exit status 1
Jan 31 17:37:36.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 17:37:37.127: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jan 31 17:37:37.127: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 31 17:37:37.127: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 31 17:37:37.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 31 17:37:37.336: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jan 31 17:37:37.336: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 31 17:37:37.336: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 31 17:37:37.341: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:37:37.341: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:37:37.341: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod 01/31/23 17:37:37.341
Jan 31 17:37:37.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 31 17:37:37.542: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 31 17:37:37.542: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 31 17:37:37.542: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 31 17:37:37.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 31 17:37:37.705: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 31 17:37:37.705: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 31 17:37:37.705: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 31 17:37:37.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 31 17:37:37.874: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 31 17:37:37.874: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 31 17:37:37.874: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 31 17:37:37.874: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 17:37:37.879: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Jan 31 17:37:47.898: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 31 17:37:47.898: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jan 31 17:37:47.898: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jan 31 17:37:47.923: INFO: POD   NODE    PHASE    GRACE  CONDITIONS
Jan 31 17:37:47.923: INFO: ss-2  26-m02  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:06 +0000 UTC  }]
Jan 31 17:37:47.923: INFO: ss-0  26-m02  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:26 +0000 UTC  }]
Jan 31 17:37:47.923: INFO: ss-1  26      Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:06 +0000 UTC  }]
Jan 31 17:37:47.923: INFO: 
Jan 31 17:37:47.923: INFO: StatefulSet ss has not reached scale 0, at 3
Jan 31 17:37:48.930: INFO: POD   NODE    PHASE    GRACE  CONDITIONS
Jan 31 17:37:48.930: INFO: ss-2  26-m02  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:06 +0000 UTC  }]
Jan 31 17:37:48.930: INFO: ss-1  26      Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:06 +0000 UTC  }]
Jan 31 17:37:48.930: INFO: ss-0  26-m02  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:26 +0000 UTC  }]
Jan 31 17:37:48.930: INFO: 
Jan 31 17:37:48.930: INFO: StatefulSet ss has not reached scale 0, at 3
Jan 31 17:37:49.941: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.984731099s
Jan 31 17:37:50.950: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.973681409s
Jan 31 17:37:51.962: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.964717137s
Jan 31 17:37:52.977: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.952499974s
Jan 31 17:37:53.988: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.937999993s
Jan 31 17:37:54.998: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.926461047s
Jan 31 17:37:56.014: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.916220602s
Jan 31 17:37:57.027: INFO: Verifying statefulset ss doesn't scale past 0 for another 900.247877ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-47 01/31/23 17:37:58.027
Jan 31 17:37:58.039: INFO: Scaling statefulset ss to 0
Jan 31 17:37:58.072: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 31 17:37:58.082: INFO: Deleting all statefulset in ns statefulset-47
Jan 31 17:37:58.089: INFO: Scaling statefulset ss to 0
Jan 31 17:37:58.116: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 17:37:58.124: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 31 17:37:58.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-47" for this suite. 01/31/23 17:37:58.164
------------------------------
â€¢ [SLOW TEST] [92.129 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/apps/statefulset.go:697

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:36:26.042
    Jan 31 17:36:26.042: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename statefulset 01/31/23 17:36:26.043
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:36:26.058
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:36:26.064
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-47 01/31/23 17:36:26.07
    [It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
      test/e2e/apps/statefulset.go:697
    STEP: Creating stateful set ss in namespace statefulset-47 01/31/23 17:36:26.111
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-47 01/31/23 17:36:26.123
    Jan 31 17:36:26.130: INFO: Found 0 stateful pods, waiting for 1
    Jan 31 17:36:36.144: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:36:46.140: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:36:56.134: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 01/31/23 17:36:56.135
    Jan 31 17:36:56.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 31 17:36:56.322: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 31 17:36:56.322: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 31 17:36:56.322: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 31 17:36:56.329: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Jan 31 17:37:06.341: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Jan 31 17:37:06.341: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 17:37:06.378: INFO: POD   NODE    PHASE    GRACE  CONDITIONS
    Jan 31 17:37:06.378: INFO: ss-0  26-m02  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:26 +0000 UTC  }]
    Jan 31 17:37:06.378: INFO: 
    Jan 31 17:37:06.378: INFO: StatefulSet ss has not reached scale 3, at 1
    Jan 31 17:37:07.386: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99138885s
    Jan 31 17:37:08.393: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.983125548s
    Jan 31 17:37:09.404: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.976470239s
    Jan 31 17:37:10.413: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.96549409s
    Jan 31 17:37:11.423: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.956586407s
    Jan 31 17:37:12.433: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.947377459s
    Jan 31 17:37:13.443: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.93703013s
    Jan 31 17:37:14.454: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.927108865s
    Jan 31 17:37:15.472: INFO: Verifying statefulset ss doesn't scale past 3 for another 915.348735ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-47 01/31/23 17:37:16.472
    Jan 31 17:37:16.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 17:37:16.650: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 31 17:37:16.650: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 31 17:37:16.650: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 31 17:37:16.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 17:37:16.763: INFO: rc: 1
    Jan 31 17:37:16.763: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    error: unable to upgrade connection: container not found ("webserver")

    error:
    exit status 1
    Jan 31 17:37:26.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 17:37:26.929: INFO: rc: 1
    Jan 31 17:37:26.929: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    error: unable to upgrade connection: container not found ("webserver")

    error:
    exit status 1
    Jan 31 17:37:36.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 17:37:37.127: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Jan 31 17:37:37.127: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 31 17:37:37.127: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 31 17:37:37.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 31 17:37:37.336: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Jan 31 17:37:37.336: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 31 17:37:37.336: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 31 17:37:37.341: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:37:37.341: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:37:37.341: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Scale down will not halt with unhealthy stateful pod 01/31/23 17:37:37.341
    Jan 31 17:37:37.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 31 17:37:37.542: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 31 17:37:37.542: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 31 17:37:37.542: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 31 17:37:37.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 31 17:37:37.705: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 31 17:37:37.705: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 31 17:37:37.705: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 31 17:37:37.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=statefulset-47 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 31 17:37:37.874: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 31 17:37:37.874: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 31 17:37:37.874: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 31 17:37:37.874: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 17:37:37.879: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
    Jan 31 17:37:47.898: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Jan 31 17:37:47.898: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Jan 31 17:37:47.898: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Jan 31 17:37:47.923: INFO: POD   NODE    PHASE    GRACE  CONDITIONS
    Jan 31 17:37:47.923: INFO: ss-2  26-m02  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:06 +0000 UTC  }]
    Jan 31 17:37:47.923: INFO: ss-0  26-m02  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:26 +0000 UTC  }]
    Jan 31 17:37:47.923: INFO: ss-1  26      Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:06 +0000 UTC  }]
    Jan 31 17:37:47.923: INFO: 
    Jan 31 17:37:47.923: INFO: StatefulSet ss has not reached scale 0, at 3
    Jan 31 17:37:48.930: INFO: POD   NODE    PHASE    GRACE  CONDITIONS
    Jan 31 17:37:48.930: INFO: ss-2  26-m02  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:06 +0000 UTC  }]
    Jan 31 17:37:48.930: INFO: ss-1  26      Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:06 +0000 UTC  }]
    Jan 31 17:37:48.930: INFO: ss-0  26-m02  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:37:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 17:36:26 +0000 UTC  }]
    Jan 31 17:37:48.930: INFO: 
    Jan 31 17:37:48.930: INFO: StatefulSet ss has not reached scale 0, at 3
    Jan 31 17:37:49.941: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.984731099s
    Jan 31 17:37:50.950: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.973681409s
    Jan 31 17:37:51.962: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.964717137s
    Jan 31 17:37:52.977: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.952499974s
    Jan 31 17:37:53.988: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.937999993s
    Jan 31 17:37:54.998: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.926461047s
    Jan 31 17:37:56.014: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.916220602s
    Jan 31 17:37:57.027: INFO: Verifying statefulset ss doesn't scale past 0 for another 900.247877ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-47 01/31/23 17:37:58.027
    Jan 31 17:37:58.039: INFO: Scaling statefulset ss to 0
    Jan 31 17:37:58.072: INFO: Waiting for statefulset status.replicas updated to 0
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 31 17:37:58.082: INFO: Deleting all statefulset in ns statefulset-47
    Jan 31 17:37:58.089: INFO: Scaling statefulset ss to 0
    Jan 31 17:37:58.116: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 17:37:58.124: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:37:58.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-47" for this suite. 01/31/23 17:37:58.164
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:37:58.172
Jan 31 17:37:58.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename statefulset 01/31/23 17:37:58.173
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:37:58.196
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:37:58.205
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-462 01/31/23 17:37:58.214
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
STEP: Creating a new StatefulSet 01/31/23 17:37:58.241
Jan 31 17:37:58.255: INFO: Found 0 stateful pods, waiting for 3
Jan 31 17:38:08.266: INFO: Found 1 stateful pods, waiting for 3
Jan 31 17:38:18.272: INFO: Found 1 stateful pods, waiting for 3
Jan 31 17:38:28.268: INFO: Found 2 stateful pods, waiting for 3
Jan 31 17:38:38.267: INFO: Found 2 stateful pods, waiting for 3
Jan 31 17:38:48.264: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:38:48.264: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:38:48.264: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:38:58.268: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:38:58.268: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:38:58.268: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:39:08.267: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:39:08.267: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:39:08.268: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:39:18.266: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:39:18.266: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:39:18.266: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 01/31/23 17:39:18.296
Jan 31 17:39:18.327: INFO: Updating stateful set ss2
STEP: Creating a new revision 01/31/23 17:39:18.327
STEP: Not applying an update when the partition is greater than the number of replicas 01/31/23 17:39:28.362
STEP: Performing a canary update 01/31/23 17:39:28.362
Jan 31 17:39:28.396: INFO: Updating stateful set ss2
Jan 31 17:39:28.420: INFO: Waiting for Pod statefulset-462/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
STEP: Restoring Pods to the correct revision when they are deleted 01/31/23 17:39:38.44
Jan 31 17:39:38.539: INFO: Found 2 stateful pods, waiting for 3
Jan 31 17:39:48.551: INFO: Found 2 stateful pods, waiting for 3
Jan 31 17:39:58.552: INFO: Found 2 stateful pods, waiting for 3
Jan 31 17:40:08.549: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:40:08.549: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:40:08.549: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:40:18.553: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:40:18.553: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:40:18.553: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 17:40:28.552: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:40:28.552: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 17:40:28.552: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update 01/31/23 17:40:28.569
Jan 31 17:40:28.596: INFO: Updating stateful set ss2
Jan 31 17:40:28.618: INFO: Waiting for Pod statefulset-462/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 31 17:40:38.669: INFO: Updating stateful set ss2
Jan 31 17:40:38.680: INFO: Waiting for StatefulSet statefulset-462/ss2 to complete update
Jan 31 17:40:38.680: INFO: Waiting for Pod statefulset-462/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 31 17:40:48.702: INFO: Waiting for StatefulSet statefulset-462/ss2 to complete update
Jan 31 17:40:48.702: INFO: Waiting for Pod statefulset-462/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 31 17:40:58.697: INFO: Waiting for StatefulSet statefulset-462/ss2 to complete update
Jan 31 17:41:08.697: INFO: Waiting for StatefulSet statefulset-462/ss2 to complete update
Jan 31 17:41:18.704: INFO: Waiting for StatefulSet statefulset-462/ss2 to complete update
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 31 17:41:28.704: INFO: Deleting all statefulset in ns statefulset-462
Jan 31 17:41:28.714: INFO: Scaling statefulset ss2 to 0
Jan 31 17:41:38.755: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 17:41:38.762: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 31 17:41:38.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-462" for this suite. 01/31/23 17:41:38.813
------------------------------
â€¢ [SLOW TEST] [220.648 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/apps/statefulset.go:317

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:37:58.172
    Jan 31 17:37:58.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename statefulset 01/31/23 17:37:58.173
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:37:58.196
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:37:58.205
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-462 01/31/23 17:37:58.214
    [It] should perform canary updates and phased rolling updates of template modifications [Conformance]
      test/e2e/apps/statefulset.go:317
    STEP: Creating a new StatefulSet 01/31/23 17:37:58.241
    Jan 31 17:37:58.255: INFO: Found 0 stateful pods, waiting for 3
    Jan 31 17:38:08.266: INFO: Found 1 stateful pods, waiting for 3
    Jan 31 17:38:18.272: INFO: Found 1 stateful pods, waiting for 3
    Jan 31 17:38:28.268: INFO: Found 2 stateful pods, waiting for 3
    Jan 31 17:38:38.267: INFO: Found 2 stateful pods, waiting for 3
    Jan 31 17:38:48.264: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:38:48.264: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:38:48.264: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:38:58.268: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:38:58.268: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:38:58.268: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:39:08.267: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:39:08.267: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:39:08.268: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:39:18.266: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:39:18.266: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:39:18.266: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 01/31/23 17:39:18.296
    Jan 31 17:39:18.327: INFO: Updating stateful set ss2
    STEP: Creating a new revision 01/31/23 17:39:18.327
    STEP: Not applying an update when the partition is greater than the number of replicas 01/31/23 17:39:28.362
    STEP: Performing a canary update 01/31/23 17:39:28.362
    Jan 31 17:39:28.396: INFO: Updating stateful set ss2
    Jan 31 17:39:28.420: INFO: Waiting for Pod statefulset-462/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    STEP: Restoring Pods to the correct revision when they are deleted 01/31/23 17:39:38.44
    Jan 31 17:39:38.539: INFO: Found 2 stateful pods, waiting for 3
    Jan 31 17:39:48.551: INFO: Found 2 stateful pods, waiting for 3
    Jan 31 17:39:58.552: INFO: Found 2 stateful pods, waiting for 3
    Jan 31 17:40:08.549: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:40:08.549: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:40:08.549: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:40:18.553: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:40:18.553: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:40:18.553: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 17:40:28.552: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:40:28.552: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 17:40:28.552: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Performing a phased rolling update 01/31/23 17:40:28.569
    Jan 31 17:40:28.596: INFO: Updating stateful set ss2
    Jan 31 17:40:28.618: INFO: Waiting for Pod statefulset-462/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 31 17:40:38.669: INFO: Updating stateful set ss2
    Jan 31 17:40:38.680: INFO: Waiting for StatefulSet statefulset-462/ss2 to complete update
    Jan 31 17:40:38.680: INFO: Waiting for Pod statefulset-462/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 31 17:40:48.702: INFO: Waiting for StatefulSet statefulset-462/ss2 to complete update
    Jan 31 17:40:48.702: INFO: Waiting for Pod statefulset-462/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 31 17:40:58.697: INFO: Waiting for StatefulSet statefulset-462/ss2 to complete update
    Jan 31 17:41:08.697: INFO: Waiting for StatefulSet statefulset-462/ss2 to complete update
    Jan 31 17:41:18.704: INFO: Waiting for StatefulSet statefulset-462/ss2 to complete update
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 31 17:41:28.704: INFO: Deleting all statefulset in ns statefulset-462
    Jan 31 17:41:28.714: INFO: Scaling statefulset ss2 to 0
    Jan 31 17:41:38.755: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 17:41:38.762: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:41:38.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-462" for this suite. 01/31/23 17:41:38.813
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:41:38.823
Jan 31 17:41:38.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:41:38.824
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:41:38.839
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:41:38.846
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
STEP: Creating projection with configMap that has name projected-configmap-test-upd-0d21fedf-7d4d-4375-ae59-813c80981e78 01/31/23 17:41:38.861
STEP: Creating the pod 01/31/23 17:41:38.87
Jan 31 17:41:38.880: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d" in namespace "projected-3137" to be "running and ready"
Jan 31 17:41:38.888: INFO: Pod "pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d": Phase="Pending", Reason="", readiness=false. Elapsed: 7.72591ms
Jan 31 17:41:38.888: INFO: The phase of Pod pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:41:40.899: INFO: Pod "pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d": Phase="Running", Reason="", readiness=true. Elapsed: 2.018291689s
Jan 31 17:41:40.899: INFO: The phase of Pod pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d is Running (Ready = true)
Jan 31 17:41:40.899: INFO: Pod "pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d" satisfied condition "running and ready"
STEP: Updating configmap projected-configmap-test-upd-0d21fedf-7d4d-4375-ae59-813c80981e78 01/31/23 17:41:40.948
STEP: waiting to observe update in volume 01/31/23 17:41:40.959
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:41:43.004: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3137" for this suite. 01/31/23 17:41:43.016
------------------------------
â€¢ [4.208 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:41:38.823
    Jan 31 17:41:38.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:41:38.824
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:41:38.839
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:41:38.846
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:124
    STEP: Creating projection with configMap that has name projected-configmap-test-upd-0d21fedf-7d4d-4375-ae59-813c80981e78 01/31/23 17:41:38.861
    STEP: Creating the pod 01/31/23 17:41:38.87
    Jan 31 17:41:38.880: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d" in namespace "projected-3137" to be "running and ready"
    Jan 31 17:41:38.888: INFO: Pod "pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d": Phase="Pending", Reason="", readiness=false. Elapsed: 7.72591ms
    Jan 31 17:41:38.888: INFO: The phase of Pod pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:41:40.899: INFO: Pod "pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d": Phase="Running", Reason="", readiness=true. Elapsed: 2.018291689s
    Jan 31 17:41:40.899: INFO: The phase of Pod pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d is Running (Ready = true)
    Jan 31 17:41:40.899: INFO: Pod "pod-projected-configmaps-9a67d3a5-b742-4b85-8356-04c61aaa5c3d" satisfied condition "running and ready"
    STEP: Updating configmap projected-configmap-test-upd-0d21fedf-7d4d-4375-ae59-813c80981e78 01/31/23 17:41:40.948
    STEP: waiting to observe update in volume 01/31/23 17:41:40.959
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:41:43.004: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3137" for this suite. 01/31/23 17:41:43.016
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:41:43.032
Jan 31 17:41:43.032: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 17:41:43.033
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:41:43.056
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:41:43.064
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
STEP: fetching services 01/31/23 17:41:43.072
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 17:41:43.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6438" for this suite. 01/31/23 17:41:43.085
------------------------------
â€¢ [0.063 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:41:43.032
    Jan 31 17:41:43.032: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 17:41:43.033
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:41:43.056
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:41:43.064
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should find a service from listing all namespaces [Conformance]
      test/e2e/network/service.go:3219
    STEP: fetching services 01/31/23 17:41:43.072
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:41:43.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6438" for this suite. 01/31/23 17:41:43.085
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:41:43.095
Jan 31 17:41:43.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename custom-resource-definition 01/31/23 17:41:43.096
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:41:43.115
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:41:43.123
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
Jan 31 17:41:43.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:41:49.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-7780" for this suite. 01/31/23 17:41:49.599
------------------------------
â€¢ [SLOW TEST] [6.517 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:85

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:41:43.095
    Jan 31 17:41:43.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename custom-resource-definition 01/31/23 17:41:43.096
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:41:43.115
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:41:43.123
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] listing custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:85
    Jan 31 17:41:43.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:41:49.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-7780" for this suite. 01/31/23 17:41:49.599
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:41:49.616
Jan 31 17:41:49.616: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 17:41:49.618
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:41:49.645
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:41:49.652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
STEP: creating a ConfigMap 01/31/23 17:41:49.661
STEP: fetching the ConfigMap 01/31/23 17:41:49.668
STEP: patching the ConfigMap 01/31/23 17:41:49.673
STEP: listing all ConfigMaps in all namespaces with a label selector 01/31/23 17:41:49.679
STEP: deleting the ConfigMap by collection with a label selector 01/31/23 17:41:49.684
STEP: listing all ConfigMaps in test namespace 01/31/23 17:41:49.692
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:41:49.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8808" for this suite. 01/31/23 17:41:49.702
------------------------------
â€¢ [0.094 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:41:49.616
    Jan 31 17:41:49.616: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 17:41:49.618
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:41:49.645
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:41:49.652
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through a ConfigMap lifecycle [Conformance]
      test/e2e/common/node/configmap.go:169
    STEP: creating a ConfigMap 01/31/23 17:41:49.661
    STEP: fetching the ConfigMap 01/31/23 17:41:49.668
    STEP: patching the ConfigMap 01/31/23 17:41:49.673
    STEP: listing all ConfigMaps in all namespaces with a label selector 01/31/23 17:41:49.679
    STEP: deleting the ConfigMap by collection with a label selector 01/31/23 17:41:49.684
    STEP: listing all ConfigMaps in test namespace 01/31/23 17:41:49.692
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:41:49.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8808" for this suite. 01/31/23 17:41:49.702
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:41:49.712
Jan 31 17:41:49.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 17:41:49.713
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:41:49.736
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:41:49.744
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
STEP: Counting existing ResourceQuota 01/31/23 17:41:49.751
STEP: Creating a ResourceQuota 01/31/23 17:41:54.76
STEP: Ensuring resource quota status is calculated 01/31/23 17:41:54.767
STEP: Creating a Service 01/31/23 17:41:56.783
STEP: Creating a NodePort Service 01/31/23 17:41:56.839
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 01/31/23 17:41:56.886
STEP: Ensuring resource quota status captures service creation 01/31/23 17:41:56.964
STEP: Deleting Services 01/31/23 17:41:58.977
STEP: Ensuring resource quota status released usage 01/31/23 17:41:59.072
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 17:42:01.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-2569" for this suite. 01/31/23 17:42:01.086
------------------------------
â€¢ [SLOW TEST] [11.386 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:41:49.712
    Jan 31 17:41:49.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 17:41:49.713
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:41:49.736
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:41:49.744
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a service. [Conformance]
      test/e2e/apimachinery/resource_quota.go:100
    STEP: Counting existing ResourceQuota 01/31/23 17:41:49.751
    STEP: Creating a ResourceQuota 01/31/23 17:41:54.76
    STEP: Ensuring resource quota status is calculated 01/31/23 17:41:54.767
    STEP: Creating a Service 01/31/23 17:41:56.783
    STEP: Creating a NodePort Service 01/31/23 17:41:56.839
    STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 01/31/23 17:41:56.886
    STEP: Ensuring resource quota status captures service creation 01/31/23 17:41:56.964
    STEP: Deleting Services 01/31/23 17:41:58.977
    STEP: Ensuring resource quota status released usage 01/31/23 17:41:59.072
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:42:01.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-2569" for this suite. 01/31/23 17:42:01.086
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:42:01.1
Jan 31 17:42:01.100: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename namespaces 01/31/23 17:42:01.101
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:01.118
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:01.125
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
STEP: Creating a test namespace 01/31/23 17:42:01.132
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:01.152
STEP: Creating a pod in the namespace 01/31/23 17:42:01.158
STEP: Waiting for the pod to have running status 01/31/23 17:42:01.167
Jan 31 17:42:01.167: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-3108" to be "running"
Jan 31 17:42:01.176: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 9.122743ms
Jan 31 17:42:03.190: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023460584s
Jan 31 17:42:05.187: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.019593316s
Jan 31 17:42:05.187: INFO: Pod "test-pod" satisfied condition "running"
STEP: Deleting the namespace 01/31/23 17:42:05.187
STEP: Waiting for the namespace to be removed. 01/31/23 17:42:05.202
STEP: Recreating the namespace 01/31/23 17:42:16.211
STEP: Verifying there are no pods in the namespace 01/31/23 17:42:16.227
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:42:16.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-6636" for this suite. 01/31/23 17:42:16.238
STEP: Destroying namespace "nsdeletetest-3108" for this suite. 01/31/23 17:42:16.247
Jan 31 17:42:16.253: INFO: Namespace nsdeletetest-3108 was already deleted
STEP: Destroying namespace "nsdeletetest-1458" for this suite. 01/31/23 17:42:16.253
------------------------------
â€¢ [SLOW TEST] [15.160 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:42:01.1
    Jan 31 17:42:01.100: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename namespaces 01/31/23 17:42:01.101
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:01.118
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:01.125
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all pods are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:243
    STEP: Creating a test namespace 01/31/23 17:42:01.132
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:01.152
    STEP: Creating a pod in the namespace 01/31/23 17:42:01.158
    STEP: Waiting for the pod to have running status 01/31/23 17:42:01.167
    Jan 31 17:42:01.167: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-3108" to be "running"
    Jan 31 17:42:01.176: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 9.122743ms
    Jan 31 17:42:03.190: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023460584s
    Jan 31 17:42:05.187: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.019593316s
    Jan 31 17:42:05.187: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Deleting the namespace 01/31/23 17:42:05.187
    STEP: Waiting for the namespace to be removed. 01/31/23 17:42:05.202
    STEP: Recreating the namespace 01/31/23 17:42:16.211
    STEP: Verifying there are no pods in the namespace 01/31/23 17:42:16.227
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:42:16.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-6636" for this suite. 01/31/23 17:42:16.238
    STEP: Destroying namespace "nsdeletetest-3108" for this suite. 01/31/23 17:42:16.247
    Jan 31 17:42:16.253: INFO: Namespace nsdeletetest-3108 was already deleted
    STEP: Destroying namespace "nsdeletetest-1458" for this suite. 01/31/23 17:42:16.253
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:42:16.26
Jan 31 17:42:16.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replicaset 01/31/23 17:42:16.261
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:16.278
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:16.285
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
STEP: Given a Pod with a 'name' label pod-adoption-release is created 01/31/23 17:42:16.291
Jan 31 17:42:16.303: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-9988" to be "running and ready"
Jan 31 17:42:16.317: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 13.741019ms
Jan 31 17:42:16.317: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:42:18.327: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.023763233s
Jan 31 17:42:18.327: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
Jan 31 17:42:18.327: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
STEP: When a replicaset with a matching selector is created 01/31/23 17:42:18.332
STEP: Then the orphan pod is adopted 01/31/23 17:42:18.34
STEP: When the matched label of one of its pods change 01/31/23 17:42:19.355
Jan 31 17:42:19.363: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released 01/31/23 17:42:19.385
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 31 17:42:20.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-9988" for this suite. 01/31/23 17:42:20.403
------------------------------
â€¢ [4.151 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:42:16.26
    Jan 31 17:42:16.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replicaset 01/31/23 17:42:16.261
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:16.278
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:16.285
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching pods on creation and release no longer matching pods [Conformance]
      test/e2e/apps/replica_set.go:131
    STEP: Given a Pod with a 'name' label pod-adoption-release is created 01/31/23 17:42:16.291
    Jan 31 17:42:16.303: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-9988" to be "running and ready"
    Jan 31 17:42:16.317: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 13.741019ms
    Jan 31 17:42:16.317: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:42:18.327: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.023763233s
    Jan 31 17:42:18.327: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
    Jan 31 17:42:18.327: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
    STEP: When a replicaset with a matching selector is created 01/31/23 17:42:18.332
    STEP: Then the orphan pod is adopted 01/31/23 17:42:18.34
    STEP: When the matched label of one of its pods change 01/31/23 17:42:19.355
    Jan 31 17:42:19.363: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
    STEP: Then the pod is released 01/31/23 17:42:19.385
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:42:20.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-9988" for this suite. 01/31/23 17:42:20.403
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:42:20.412
Jan 31 17:42:20.413: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 17:42:20.413
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:20.432
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:20.441
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 17:42:20.468
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:42:21.042
STEP: Deploying the webhook pod 01/31/23 17:42:21.072
STEP: Wait for the deployment to be ready 01/31/23 17:42:21.091
Jan 31 17:42:21.111: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/31/23 17:42:23.138
STEP: Verifying the service has paired with the endpoint 01/31/23 17:42:23.186
Jan 31 17:42:24.188: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
STEP: Listing all of the created validation webhooks 01/31/23 17:42:24.288
STEP: Creating a configMap that does not comply to the validation webhook rules 01/31/23 17:42:24.326
STEP: Deleting the collection of validation webhooks 01/31/23 17:42:24.357
STEP: Creating a configMap that does not comply to the validation webhook rules 01/31/23 17:42:24.395
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:42:24.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-2762" for this suite. 01/31/23 17:42:24.463
STEP: Destroying namespace "webhook-2762-markers" for this suite. 01/31/23 17:42:24.475
------------------------------
â€¢ [4.073 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:42:20.412
    Jan 31 17:42:20.413: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 17:42:20.413
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:20.432
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:20.441
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 17:42:20.468
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:42:21.042
    STEP: Deploying the webhook pod 01/31/23 17:42:21.072
    STEP: Wait for the deployment to be ready 01/31/23 17:42:21.091
    Jan 31 17:42:21.111: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/31/23 17:42:23.138
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:42:23.186
    Jan 31 17:42:24.188: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing validating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:582
    STEP: Listing all of the created validation webhooks 01/31/23 17:42:24.288
    STEP: Creating a configMap that does not comply to the validation webhook rules 01/31/23 17:42:24.326
    STEP: Deleting the collection of validation webhooks 01/31/23 17:42:24.357
    STEP: Creating a configMap that does not comply to the validation webhook rules 01/31/23 17:42:24.395
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:42:24.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-2762" for this suite. 01/31/23 17:42:24.463
    STEP: Destroying namespace "webhook-2762-markers" for this suite. 01/31/23 17:42:24.475
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:42:24.488
Jan 31 17:42:24.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 17:42:24.489
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:24.509
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:24.514
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
STEP: creating a service nodeport-service with the type=NodePort in namespace services-756 01/31/23 17:42:24.521
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 01/31/23 17:42:24.562
STEP: creating service externalsvc in namespace services-756 01/31/23 17:42:24.562
STEP: creating replication controller externalsvc in namespace services-756 01/31/23 17:42:24.602
I0131 17:42:24.610059      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-756, replica count: 2
I0131 17:42:27.661562      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName 01/31/23 17:42:27.667
Jan 31 17:42:27.701: INFO: Creating new exec pod
Jan 31 17:42:27.713: INFO: Waiting up to 5m0s for pod "execpodxdqpd" in namespace "services-756" to be "running"
Jan 31 17:42:27.720: INFO: Pod "execpodxdqpd": Phase="Pending", Reason="", readiness=false. Elapsed: 6.641559ms
Jan 31 17:42:29.730: INFO: Pod "execpodxdqpd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01726959s
Jan 31 17:42:31.732: INFO: Pod "execpodxdqpd": Phase="Running", Reason="", readiness=true. Elapsed: 4.018884849s
Jan 31 17:42:31.732: INFO: Pod "execpodxdqpd" satisfied condition "running"
Jan 31 17:42:31.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-756 exec execpodxdqpd -- /bin/sh -x -c nslookup nodeport-service.services-756.svc.cluster.local'
Jan 31 17:42:31.951: INFO: stderr: "+ nslookup nodeport-service.services-756.svc.cluster.local\n"
Jan 31 17:42:31.951: INFO: stdout: "Server:\t\t10.111.243.110\nAddress:\t10.111.243.110#53\n\nnodeport-service.services-756.svc.cluster.local\tcanonical name = externalsvc.services-756.svc.cluster.local.\nName:\texternalsvc.services-756.svc.cluster.local\nAddress: 10.101.98.151\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-756, will wait for the garbage collector to delete the pods 01/31/23 17:42:31.951
Jan 31 17:42:32.021: INFO: Deleting ReplicationController externalsvc took: 13.74139ms
Jan 31 17:42:32.122: INFO: Terminating ReplicationController externalsvc pods took: 100.702987ms
Jan 31 17:42:34.251: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 17:42:34.281: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-756" for this suite. 01/31/23 17:42:34.287
------------------------------
â€¢ [SLOW TEST] [9.806 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:42:24.488
    Jan 31 17:42:24.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 17:42:24.489
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:24.509
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:24.514
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from NodePort to ExternalName [Conformance]
      test/e2e/network/service.go:1557
    STEP: creating a service nodeport-service with the type=NodePort in namespace services-756 01/31/23 17:42:24.521
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 01/31/23 17:42:24.562
    STEP: creating service externalsvc in namespace services-756 01/31/23 17:42:24.562
    STEP: creating replication controller externalsvc in namespace services-756 01/31/23 17:42:24.602
    I0131 17:42:24.610059      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-756, replica count: 2
    I0131 17:42:27.661562      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the NodePort service to type=ExternalName 01/31/23 17:42:27.667
    Jan 31 17:42:27.701: INFO: Creating new exec pod
    Jan 31 17:42:27.713: INFO: Waiting up to 5m0s for pod "execpodxdqpd" in namespace "services-756" to be "running"
    Jan 31 17:42:27.720: INFO: Pod "execpodxdqpd": Phase="Pending", Reason="", readiness=false. Elapsed: 6.641559ms
    Jan 31 17:42:29.730: INFO: Pod "execpodxdqpd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01726959s
    Jan 31 17:42:31.732: INFO: Pod "execpodxdqpd": Phase="Running", Reason="", readiness=true. Elapsed: 4.018884849s
    Jan 31 17:42:31.732: INFO: Pod "execpodxdqpd" satisfied condition "running"
    Jan 31 17:42:31.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-756 exec execpodxdqpd -- /bin/sh -x -c nslookup nodeport-service.services-756.svc.cluster.local'
    Jan 31 17:42:31.951: INFO: stderr: "+ nslookup nodeport-service.services-756.svc.cluster.local\n"
    Jan 31 17:42:31.951: INFO: stdout: "Server:\t\t10.111.243.110\nAddress:\t10.111.243.110#53\n\nnodeport-service.services-756.svc.cluster.local\tcanonical name = externalsvc.services-756.svc.cluster.local.\nName:\texternalsvc.services-756.svc.cluster.local\nAddress: 10.101.98.151\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-756, will wait for the garbage collector to delete the pods 01/31/23 17:42:31.951
    Jan 31 17:42:32.021: INFO: Deleting ReplicationController externalsvc took: 13.74139ms
    Jan 31 17:42:32.122: INFO: Terminating ReplicationController externalsvc pods took: 100.702987ms
    Jan 31 17:42:34.251: INFO: Cleaning up the NodePort to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:42:34.281: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-756" for this suite. 01/31/23 17:42:34.287
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:42:34.295
Jan 31 17:42:34.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename security-context-test 01/31/23 17:42:34.296
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:34.316
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:34.323
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
Jan 31 17:42:34.338: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0" in namespace "security-context-test-7722" to be "Succeeded or Failed"
Jan 31 17:42:34.346: INFO: Pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.464143ms
Jan 31 17:42:36.355: INFO: Pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016244848s
Jan 31 17:42:38.356: INFO: Pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017680472s
Jan 31 17:42:40.356: INFO: Pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017435075s
Jan 31 17:42:40.356: INFO: Pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 31 17:42:40.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-7722" for this suite. 01/31/23 17:42:40.368
------------------------------
â€¢ [SLOW TEST] [6.086 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with readOnlyRootFilesystem
  test/e2e/common/node/security_context.go:430
    should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:486

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:42:34.295
    Jan 31 17:42:34.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename security-context-test 01/31/23 17:42:34.296
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:34.316
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:34.323
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:486
    Jan 31 17:42:34.338: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0" in namespace "security-context-test-7722" to be "Succeeded or Failed"
    Jan 31 17:42:34.346: INFO: Pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.464143ms
    Jan 31 17:42:36.355: INFO: Pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016244848s
    Jan 31 17:42:38.356: INFO: Pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017680472s
    Jan 31 17:42:40.356: INFO: Pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017435075s
    Jan 31 17:42:40.356: INFO: Pod "busybox-readonly-false-4d3472c8-ff63-41aa-9ed6-46c3d1ff39c0" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:42:40.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-7722" for this suite. 01/31/23 17:42:40.368
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:42:40.387
Jan 31 17:42:40.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename var-expansion 01/31/23 17:42:40.389
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:40.419
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:40.428
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
Jan 31 17:42:40.443: INFO: Waiting up to 2m0s for pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d" in namespace "var-expansion-1716" to be "container 0 failed with reason CreateContainerConfigError"
Jan 31 17:42:40.452: INFO: Pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.56241ms
Jan 31 17:42:42.463: INFO: Pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018804665s
Jan 31 17:42:42.463: INFO: Pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Jan 31 17:42:42.463: INFO: Deleting pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d" in namespace "var-expansion-1716"
Jan 31 17:42:42.478: INFO: Wait up to 5m0s for pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 31 17:42:44.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-1716" for this suite. 01/31/23 17:42:44.504
------------------------------
â€¢ [4.132 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:42:40.387
    Jan 31 17:42:40.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename var-expansion 01/31/23 17:42:40.389
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:40.419
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:40.428
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
      test/e2e/common/node/expansion.go:186
    Jan 31 17:42:40.443: INFO: Waiting up to 2m0s for pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d" in namespace "var-expansion-1716" to be "container 0 failed with reason CreateContainerConfigError"
    Jan 31 17:42:40.452: INFO: Pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.56241ms
    Jan 31 17:42:42.463: INFO: Pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018804665s
    Jan 31 17:42:42.463: INFO: Pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Jan 31 17:42:42.463: INFO: Deleting pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d" in namespace "var-expansion-1716"
    Jan 31 17:42:42.478: INFO: Wait up to 5m0s for pod "var-expansion-066596c9-30ef-4c9a-81b9-2f0bd4e1cb9d" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:42:44.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-1716" for this suite. 01/31/23 17:42:44.504
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:42:44.522
Jan 31 17:42:44.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename dns 01/31/23 17:42:44.523
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:44.541
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:44.547
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 01/31/23 17:42:44.556
Jan 31 17:42:44.567: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6665  c0f066d0-eaaf-4987-a1b5-0e7fc4bd1b0d 12802 0 2023-01-31 17:42:44 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-01-31 17:42:44 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5845s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5845s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 17:42:44.567: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-6665" to be "running and ready"
Jan 31 17:42:44.575: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 7.439666ms
Jan 31 17:42:44.575: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:42:46.585: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.017595256s
Jan 31 17:42:46.585: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
Jan 31 17:42:46.585: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
STEP: Verifying customized DNS suffix list is configured on pod... 01/31/23 17:42:46.585
Jan 31 17:42:46.585: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6665 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:42:46.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:42:46.586: INFO: ExecWithOptions: Clientset creation
Jan 31 17:42:46.586: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/dns-6665/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod... 01/31/23 17:42:46.704
Jan 31 17:42:46.704: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6665 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 17:42:46.704: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 17:42:46.705: INFO: ExecWithOptions: Clientset creation
Jan 31 17:42:46.705: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/dns-6665/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 31 17:42:46.827: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 31 17:42:46.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-6665" for this suite. 01/31/23 17:42:46.844
------------------------------
â€¢ [2.329 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:42:44.522
    Jan 31 17:42:44.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename dns 01/31/23 17:42:44.523
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:44.541
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:44.547
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should support configurable pod DNS nameservers [Conformance]
      test/e2e/network/dns.go:411
    STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 01/31/23 17:42:44.556
    Jan 31 17:42:44.567: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6665  c0f066d0-eaaf-4987-a1b5-0e7fc4bd1b0d 12802 0 2023-01-31 17:42:44 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-01-31 17:42:44 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5845s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5845s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 17:42:44.567: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-6665" to be "running and ready"
    Jan 31 17:42:44.575: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 7.439666ms
    Jan 31 17:42:44.575: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:42:46.585: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.017595256s
    Jan 31 17:42:46.585: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
    Jan 31 17:42:46.585: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
    STEP: Verifying customized DNS suffix list is configured on pod... 01/31/23 17:42:46.585
    Jan 31 17:42:46.585: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6665 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:42:46.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:42:46.586: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:42:46.586: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/dns-6665/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    STEP: Verifying customized DNS server is configured on pod... 01/31/23 17:42:46.704
    Jan 31 17:42:46.704: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6665 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 17:42:46.704: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 17:42:46.705: INFO: ExecWithOptions: Clientset creation
    Jan 31 17:42:46.705: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/dns-6665/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Jan 31 17:42:46.827: INFO: Deleting pod test-dns-nameservers...
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:42:46.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-6665" for this suite. 01/31/23 17:42:46.844
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Probing container
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:42:46.851
Jan 31 17:42:46.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-probe 01/31/23 17:42:46.853
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:46.87
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:46.877
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
STEP: Creating pod test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa in namespace container-probe-4358 01/31/23 17:42:46.882
Jan 31 17:42:46.891: INFO: Waiting up to 5m0s for pod "test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa" in namespace "container-probe-4358" to be "not pending"
Jan 31 17:42:46.899: INFO: Pod "test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa": Phase="Pending", Reason="", readiness=false. Elapsed: 7.523865ms
Jan 31 17:42:48.910: INFO: Pod "test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01835257s
Jan 31 17:42:50.908: INFO: Pod "test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa": Phase="Running", Reason="", readiness=true. Elapsed: 4.016821785s
Jan 31 17:42:50.908: INFO: Pod "test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa" satisfied condition "not pending"
Jan 31 17:42:50.908: INFO: Started pod test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa in namespace container-probe-4358
STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:42:50.908
Jan 31 17:42:50.917: INFO: Initial restart count of pod test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa is 0
STEP: deleting the pod 01/31/23 17:46:52.239
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 31 17:46:52.261: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-4358" for this suite. 01/31/23 17:46:52.267
------------------------------
â€¢ [SLOW TEST] [245.427 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:42:46.851
    Jan 31 17:42:46.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-probe 01/31/23 17:42:46.853
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:42:46.87
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:42:46.877
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:215
    STEP: Creating pod test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa in namespace container-probe-4358 01/31/23 17:42:46.882
    Jan 31 17:42:46.891: INFO: Waiting up to 5m0s for pod "test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa" in namespace "container-probe-4358" to be "not pending"
    Jan 31 17:42:46.899: INFO: Pod "test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa": Phase="Pending", Reason="", readiness=false. Elapsed: 7.523865ms
    Jan 31 17:42:48.910: INFO: Pod "test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01835257s
    Jan 31 17:42:50.908: INFO: Pod "test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa": Phase="Running", Reason="", readiness=true. Elapsed: 4.016821785s
    Jan 31 17:42:50.908: INFO: Pod "test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa" satisfied condition "not pending"
    Jan 31 17:42:50.908: INFO: Started pod test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa in namespace container-probe-4358
    STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:42:50.908
    Jan 31 17:42:50.917: INFO: Initial restart count of pod test-webserver-e95407b8-2266-4000-91fc-694ba803d7fa is 0
    STEP: deleting the pod 01/31/23 17:46:52.239
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:46:52.261: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-4358" for this suite. 01/31/23 17:46:52.267
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected secret
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:46:52.279
Jan 31 17:46:52.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:46:52.28
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:46:52.304
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:46:52.311
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
STEP: Creating secret with name projected-secret-test-0902913f-0487-40ee-ac79-a7b7226391ed 01/31/23 17:46:52.318
STEP: Creating a pod to test consume secrets 01/31/23 17:46:52.324
Jan 31 17:46:52.336: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc" in namespace "projected-6108" to be "Succeeded or Failed"
Jan 31 17:46:52.348: INFO: Pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc": Phase="Pending", Reason="", readiness=false. Elapsed: 12.185327ms
Jan 31 17:46:54.364: INFO: Pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.028047037s
Jan 31 17:46:56.360: INFO: Pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023716079s
Jan 31 17:46:58.360: INFO: Pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.024098589s
STEP: Saw pod success 01/31/23 17:46:58.36
Jan 31 17:46:58.361: INFO: Pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc" satisfied condition "Succeeded or Failed"
Jan 31 17:46:58.369: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc container secret-volume-test: <nil>
STEP: delete the pod 01/31/23 17:46:58.405
Jan 31 17:46:58.426: INFO: Waiting for pod pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc to disappear
Jan 31 17:46:58.434: INFO: Pod pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 31 17:46:58.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6108" for this suite. 01/31/23 17:46:58.441
------------------------------
â€¢ [SLOW TEST] [6.170 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:46:52.279
    Jan 31 17:46:52.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:46:52.28
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:46:52.304
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:46:52.311
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:119
    STEP: Creating secret with name projected-secret-test-0902913f-0487-40ee-ac79-a7b7226391ed 01/31/23 17:46:52.318
    STEP: Creating a pod to test consume secrets 01/31/23 17:46:52.324
    Jan 31 17:46:52.336: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc" in namespace "projected-6108" to be "Succeeded or Failed"
    Jan 31 17:46:52.348: INFO: Pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc": Phase="Pending", Reason="", readiness=false. Elapsed: 12.185327ms
    Jan 31 17:46:54.364: INFO: Pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.028047037s
    Jan 31 17:46:56.360: INFO: Pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023716079s
    Jan 31 17:46:58.360: INFO: Pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.024098589s
    STEP: Saw pod success 01/31/23 17:46:58.36
    Jan 31 17:46:58.361: INFO: Pod "pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc" satisfied condition "Succeeded or Failed"
    Jan 31 17:46:58.369: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc container secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:46:58.405
    Jan 31 17:46:58.426: INFO: Waiting for pod pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc to disappear
    Jan 31 17:46:58.434: INFO: Pod pod-projected-secrets-90e5f528-e4c3-43ad-987e-3a5f560bc5dc no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:46:58.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6108" for this suite. 01/31/23 17:46:58.441
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:46:58.45
Jan 31 17:46:58.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename svcaccounts 01/31/23 17:46:58.451
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:46:58.471
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:46:58.477
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
Jan 31 17:46:58.500: INFO: Waiting up to 5m0s for pod "pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb" in namespace "svcaccounts-2265" to be "running"
Jan 31 17:46:58.508: INFO: Pod "pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb": Phase="Pending", Reason="", readiness=false. Elapsed: 7.868143ms
Jan 31 17:47:00.515: INFO: Pod "pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014418326s
Jan 31 17:47:02.515: INFO: Pod "pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb": Phase="Running", Reason="", readiness=true. Elapsed: 4.015108707s
Jan 31 17:47:02.515: INFO: Pod "pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb" satisfied condition "running"
STEP: reading a file in the container 01/31/23 17:47:02.515
Jan 31 17:47:02.516: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2265 pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container 01/31/23 17:47:02.741
Jan 31 17:47:02.741: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2265 pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container 01/31/23 17:47:02.917
Jan 31 17:47:02.917: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2265 pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Jan 31 17:47:03.086: INFO: Got root ca configmap in namespace "svcaccounts-2265"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 31 17:47:03.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-2265" for this suite. 01/31/23 17:47:03.094
------------------------------
â€¢ [4.651 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:46:58.45
    Jan 31 17:46:58.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename svcaccounts 01/31/23 17:46:58.451
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:46:58.471
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:46:58.477
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount an API token into pods  [Conformance]
      test/e2e/auth/service_accounts.go:78
    Jan 31 17:46:58.500: INFO: Waiting up to 5m0s for pod "pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb" in namespace "svcaccounts-2265" to be "running"
    Jan 31 17:46:58.508: INFO: Pod "pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb": Phase="Pending", Reason="", readiness=false. Elapsed: 7.868143ms
    Jan 31 17:47:00.515: INFO: Pod "pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014418326s
    Jan 31 17:47:02.515: INFO: Pod "pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb": Phase="Running", Reason="", readiness=true. Elapsed: 4.015108707s
    Jan 31 17:47:02.515: INFO: Pod "pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb" satisfied condition "running"
    STEP: reading a file in the container 01/31/23 17:47:02.515
    Jan 31 17:47:02.516: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2265 pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
    STEP: reading a file in the container 01/31/23 17:47:02.741
    Jan 31 17:47:02.741: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2265 pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
    STEP: reading a file in the container 01/31/23 17:47:02.917
    Jan 31 17:47:02.917: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2265 pod-service-account-8f9cf238-c77f-43e5-b6cc-d956740216fb -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
    Jan 31 17:47:03.086: INFO: Got root ca configmap in namespace "svcaccounts-2265"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:47:03.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-2265" for this suite. 01/31/23 17:47:03.094
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] Aggregator
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
[BeforeEach] [sig-api-machinery] Aggregator
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:47:03.101
Jan 31 17:47:03.101: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename aggregator 01/31/23 17:47:03.102
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:03.118
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:03.123
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:78
Jan 31 17:47:03.133: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
STEP: Registering the sample API server. 01/31/23 17:47:03.134
Jan 31 17:47:03.742: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Jan 31 17:47:05.869: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:47:07.882: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:47:09.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:47:11.882: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:47:13.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:47:15.880: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:47:17.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:47:19.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:47:21.878: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:47:23.882: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:47:26.029: INFO: Waited 145.815622ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com 01/31/23 17:47:26.162
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 01/31/23 17:47:26.17
STEP: List APIServices 01/31/23 17:47:26.18
Jan 31 17:47:26.189: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:68
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/node/init/init.go:32
Jan 31 17:47:26.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  tear down framework | framework.go:193
STEP: Destroying namespace "aggregator-9518" for this suite. 01/31/23 17:47:26.419
------------------------------
â€¢ [SLOW TEST] [23.324 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Aggregator
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:47:03.101
    Jan 31 17:47:03.101: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename aggregator 01/31/23 17:47:03.102
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:03.118
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:03.123
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:78
    Jan 31 17:47:03.133: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    [It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
      test/e2e/apimachinery/aggregator.go:100
    STEP: Registering the sample API server. 01/31/23 17:47:03.134
    Jan 31 17:47:03.742: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
    Jan 31 17:47:05.869: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:47:07.882: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:47:09.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:47:11.882: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:47:13.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:47:15.880: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:47:17.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:47:19.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:47:21.878: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:47:23.882: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 47, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:47:26.029: INFO: Waited 145.815622ms for the sample-apiserver to be ready to handle requests.
    STEP: Read Status for v1alpha1.wardle.example.com 01/31/23 17:47:26.162
    STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 01/31/23 17:47:26.17
    STEP: List APIServices 01/31/23 17:47:26.18
    Jan 31 17:47:26.189: INFO: Found v1alpha1.wardle.example.com in APIServiceList
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:68
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:47:26.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      tear down framework | framework.go:193
    STEP: Destroying namespace "aggregator-9518" for this suite. 01/31/23 17:47:26.419
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:47:26.426
Jan 31 17:47:26.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename limitrange 01/31/23 17:47:26.427
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:26.443
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:26.449
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
STEP: Creating a LimitRange 01/31/23 17:47:26.457
STEP: Setting up watch 01/31/23 17:47:26.457
STEP: Submitting a LimitRange 01/31/23 17:47:26.563
STEP: Verifying LimitRange creation was observed 01/31/23 17:47:26.57
STEP: Fetching the LimitRange to ensure it has proper values 01/31/23 17:47:26.57
Jan 31 17:47:26.575: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jan 31 17:47:26.575: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements 01/31/23 17:47:26.575
STEP: Ensuring Pod has resource requirements applied from LimitRange 01/31/23 17:47:26.583
Jan 31 17:47:26.599: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jan 31 17:47:26.599: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements 01/31/23 17:47:26.599
STEP: Ensuring Pod has merged resource requirements applied from LimitRange 01/31/23 17:47:26.609
Jan 31 17:47:26.619: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Jan 31 17:47:26.619: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources 01/31/23 17:47:26.619
STEP: Failing to create a Pod with more than max resources 01/31/23 17:47:26.623
STEP: Updating a LimitRange 01/31/23 17:47:26.629
STEP: Verifying LimitRange updating is effective 01/31/23 17:47:26.635
STEP: Creating a Pod with less than former min resources 01/31/23 17:47:28.644
STEP: Failing to create a Pod with more than max resources 01/31/23 17:47:28.654
STEP: Deleting a LimitRange 01/31/23 17:47:28.661
STEP: Verifying the LimitRange was deleted 01/31/23 17:47:28.67
Jan 31 17:47:33.682: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources 01/31/23 17:47:33.682
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Jan 31 17:47:33.700: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-1760" for this suite. 01/31/23 17:47:33.717
------------------------------
â€¢ [SLOW TEST] [7.302 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:47:26.426
    Jan 31 17:47:26.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename limitrange 01/31/23 17:47:26.427
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:26.443
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:26.449
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
      test/e2e/scheduling/limit_range.go:61
    STEP: Creating a LimitRange 01/31/23 17:47:26.457
    STEP: Setting up watch 01/31/23 17:47:26.457
    STEP: Submitting a LimitRange 01/31/23 17:47:26.563
    STEP: Verifying LimitRange creation was observed 01/31/23 17:47:26.57
    STEP: Fetching the LimitRange to ensure it has proper values 01/31/23 17:47:26.57
    Jan 31 17:47:26.575: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Jan 31 17:47:26.575: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with no resource requirements 01/31/23 17:47:26.575
    STEP: Ensuring Pod has resource requirements applied from LimitRange 01/31/23 17:47:26.583
    Jan 31 17:47:26.599: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Jan 31 17:47:26.599: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with partial resource requirements 01/31/23 17:47:26.599
    STEP: Ensuring Pod has merged resource requirements applied from LimitRange 01/31/23 17:47:26.609
    Jan 31 17:47:26.619: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
    Jan 31 17:47:26.619: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Failing to create a Pod with less than min resources 01/31/23 17:47:26.619
    STEP: Failing to create a Pod with more than max resources 01/31/23 17:47:26.623
    STEP: Updating a LimitRange 01/31/23 17:47:26.629
    STEP: Verifying LimitRange updating is effective 01/31/23 17:47:26.635
    STEP: Creating a Pod with less than former min resources 01/31/23 17:47:28.644
    STEP: Failing to create a Pod with more than max resources 01/31/23 17:47:28.654
    STEP: Deleting a LimitRange 01/31/23 17:47:28.661
    STEP: Verifying the LimitRange was deleted 01/31/23 17:47:28.67
    Jan 31 17:47:33.682: INFO: limitRange is already deleted
    STEP: Creating a Pod with more than former max resources 01/31/23 17:47:33.682
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:47:33.700: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-1760" for this suite. 01/31/23 17:47:33.717
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] ReplicaSet
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:47:33.729
Jan 31 17:47:33.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replicaset 01/31/23 17:47:33.731
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:33.757
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:33.763
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
Jan 31 17:47:33.772: INFO: Creating ReplicaSet my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7
Jan 31 17:47:33.784: INFO: Pod name my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7: Found 0 pods out of 1
Jan 31 17:47:38.794: INFO: Pod name my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7: Found 1 pods out of 1
Jan 31 17:47:38.794: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7" is running
Jan 31 17:47:38.794: INFO: Waiting up to 5m0s for pod "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87" in namespace "replicaset-7823" to be "running"
Jan 31 17:47:38.804: INFO: Pod "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87": Phase="Running", Reason="", readiness=true. Elapsed: 9.591837ms
Jan 31 17:47:38.804: INFO: Pod "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87" satisfied condition "running"
Jan 31 17:47:38.804: INFO: Pod "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:47:33 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:47:35 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:47:35 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:47:33 +0000 UTC Reason: Message:}])
Jan 31 17:47:38.804: INFO: Trying to dial the pod
Jan 31 17:47:43.840: INFO: Controller my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7: Got expected result from replica 1 [my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87]: "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 31 17:47:43.841: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-7823" for this suite. 01/31/23 17:47:43.847
------------------------------
â€¢ [SLOW TEST] [10.129 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:47:33.729
    Jan 31 17:47:33.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replicaset 01/31/23 17:47:33.731
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:33.757
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:33.763
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/replica_set.go:111
    Jan 31 17:47:33.772: INFO: Creating ReplicaSet my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7
    Jan 31 17:47:33.784: INFO: Pod name my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7: Found 0 pods out of 1
    Jan 31 17:47:38.794: INFO: Pod name my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7: Found 1 pods out of 1
    Jan 31 17:47:38.794: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7" is running
    Jan 31 17:47:38.794: INFO: Waiting up to 5m0s for pod "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87" in namespace "replicaset-7823" to be "running"
    Jan 31 17:47:38.804: INFO: Pod "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87": Phase="Running", Reason="", readiness=true. Elapsed: 9.591837ms
    Jan 31 17:47:38.804: INFO: Pod "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87" satisfied condition "running"
    Jan 31 17:47:38.804: INFO: Pod "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:47:33 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:47:35 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:47:35 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-31 17:47:33 +0000 UTC Reason: Message:}])
    Jan 31 17:47:38.804: INFO: Trying to dial the pod
    Jan 31 17:47:43.840: INFO: Controller my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7: Got expected result from replica 1 [my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87]: "my-hostname-basic-6c5f9f17-8b2d-47be-8c7c-3934916e6fc7-pvh87", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:47:43.841: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-7823" for this suite. 01/31/23 17:47:43.847
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:47:43.861
Jan 31 17:47:43.861: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 17:47:43.862
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:43.877
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:43.884
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
STEP: Counting existing ResourceQuota 01/31/23 17:47:43.892
STEP: Creating a ResourceQuota 01/31/23 17:47:48.905
STEP: Ensuring resource quota status is calculated 01/31/23 17:47:48.918
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 17:47:50.932: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-4139" for this suite. 01/31/23 17:47:50.942
------------------------------
â€¢ [SLOW TEST] [7.093 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:47:43.861
    Jan 31 17:47:43.861: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 17:47:43.862
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:43.877
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:43.884
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
      test/e2e/apimachinery/resource_quota.go:75
    STEP: Counting existing ResourceQuota 01/31/23 17:47:43.892
    STEP: Creating a ResourceQuota 01/31/23 17:47:48.905
    STEP: Ensuring resource quota status is calculated 01/31/23 17:47:48.918
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:47:50.932: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-4139" for this suite. 01/31/23 17:47:50.942
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:47:50.959
Jan 31 17:47:50.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename deployment 01/31/23 17:47:50.962
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:50.979
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:50.985
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
STEP: creating a Deployment 01/31/23 17:47:50.996
STEP: waiting for Deployment to be created 01/31/23 17:47:51.001
STEP: waiting for all Replicas to be Ready 01/31/23 17:47:51.004
Jan 31 17:47:51.008: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 31 17:47:51.008: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 31 17:47:51.012: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 31 17:47:51.012: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 31 17:47:51.036: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 31 17:47:51.036: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 31 17:47:51.062: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 31 17:47:51.062: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 31 17:47:52.422: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jan 31 17:47:52.422: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jan 31 17:47:53.094: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment 01/31/23 17:47:53.094
W0131 17:47:53.104144      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Jan 31 17:47:53.107: INFO: observed event type ADDED
STEP: waiting for Replicas to scale 01/31/23 17:47:53.107
Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:53.120: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:53.120: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:53.137: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:53.137: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:53.155: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:53.155: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:53.167: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:53.167: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:55.293: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:55.293: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:55.329: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
STEP: listing Deployments 01/31/23 17:47:55.329
Jan 31 17:47:55.337: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment 01/31/23 17:47:55.337
Jan 31 17:47:55.370: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
STEP: fetching the DeploymentStatus 01/31/23 17:47:55.37
Jan 31 17:47:55.392: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 31 17:47:55.392: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 31 17:47:55.429: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 31 17:47:55.445: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 31 17:47:55.462: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 31 17:47:57.484: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 31 17:47:57.526: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 31 17:47:57.562: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 31 17:47:58.768: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus 01/31/23 17:47:58.799
STEP: fetching the DeploymentStatus 01/31/23 17:47:58.814
Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 3
STEP: deleting the Deployment 01/31/23 17:47:58.826
Jan 31 17:47:58.840: INFO: observed event type MODIFIED
Jan 31 17:47:58.840: INFO: observed event type MODIFIED
Jan 31 17:47:58.840: INFO: observed event type MODIFIED
Jan 31 17:47:58.841: INFO: observed event type MODIFIED
Jan 31 17:47:58.841: INFO: observed event type MODIFIED
Jan 31 17:47:58.841: INFO: observed event type MODIFIED
Jan 31 17:47:58.841: INFO: observed event type MODIFIED
Jan 31 17:47:58.841: INFO: observed event type MODIFIED
Jan 31 17:47:58.841: INFO: observed event type MODIFIED
Jan 31 17:47:58.841: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 31 17:47:58.847: INFO: Log out all the ReplicaSets if there is no deployment created
Jan 31 17:47:58.854: INFO: ReplicaSet "test-deployment-f4dbc4647":
&ReplicaSet{ObjectMeta:{test-deployment-f4dbc4647  deployment-8481  4df37c79-c602-4a32-92cf-bd5d2ea697b4 13167 3 2023-01-31 17:47:51 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment f0222230-3a13-40f8-95da-ad798ab0d423 0xc002f67147 0xc002f67148}] [] [{k3s Update apps/v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f0222230-3a13-40f8-95da-ad798ab0d423\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: f4dbc4647,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002f671e0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Jan 31 17:47:58.866: INFO: ReplicaSet "test-deployment-7b7876f9d6":
&ReplicaSet{ObjectMeta:{test-deployment-7b7876f9d6  deployment-8481  d5a62779-b2ee-4d39-9cce-b99233b340c6 13237 2 2023-01-31 17:47:55 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment f0222230-3a13-40f8-95da-ad798ab0d423 0xc002f67247 0xc002f67248}] [] [{k3s Update apps/v1 2023-01-31 17:47:57 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f0222230-3a13-40f8-95da-ad798ab0d423\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:47:58 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7b7876f9d6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002f672e0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Jan 31 17:47:58.873: INFO: pod: "test-deployment-7b7876f9d6-jwrjw":
&Pod{ObjectMeta:{test-deployment-7b7876f9d6-jwrjw test-deployment-7b7876f9d6- deployment-8481  986a0d8e-e22d-42cd-b642-6461910b626f 13210 0 2023-01-31 17:47:55 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 d5a62779-b2ee-4d39-9cce-b99233b340c6 0xc002f678d7 0xc002f678d8}] [] [{k3s Update v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d5a62779-b2ee-4d39-9cce-b99233b340c6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:47:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.21\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-b9zc8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-b9zc8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.21,StartTime:2023-01-31 17:47:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:47:56 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://d719d81fbd03b1d8dd04e9a9ca24aa1c1b6b0d7330cf3b7a084e3b24444417ff,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.21,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 31 17:47:58.874: INFO: pod: "test-deployment-7b7876f9d6-9cjnx":
&Pod{ObjectMeta:{test-deployment-7b7876f9d6-9cjnx test-deployment-7b7876f9d6- deployment-8481  41b805b2-b804-460f-9f8e-23794db5ee6f 13236 0 2023-01-31 17:47:57 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 d5a62779-b2ee-4d39-9cce-b99233b340c6 0xc002f67ac7 0xc002f67ac8}] [] [{k3s Update v1 2023-01-31 17:47:57 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d5a62779-b2ee-4d39-9cce-b99233b340c6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:47:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.134\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wmpcn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wmpcn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:57 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.134,StartTime:2023-01-31 17:47:57 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:47:58 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://161fd1d1aef4b3257543e3ef9378f3d425c2dd7095b1f9210d73bd2bd62242b8,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.134,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 31 17:47:58.874: INFO: ReplicaSet "test-deployment-7df74c55ff":
&ReplicaSet{ObjectMeta:{test-deployment-7df74c55ff  deployment-8481  b8a1cd0b-1896-4118-a31c-52eb2ebfa74e 13244 4 2023-01-31 17:47:53 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment f0222230-3a13-40f8-95da-ad798ab0d423 0xc002f67347 0xc002f67348}] [] [{k3s Update apps/v1 2023-01-31 17:47:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f0222230-3a13-40f8-95da-ad798ab0d423\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:47:58 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7df74c55ff,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/pause:3.9 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002f673f0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Jan 31 17:47:58.881: INFO: pod: "test-deployment-7df74c55ff-5wfq5":
&Pod{ObjectMeta:{test-deployment-7df74c55ff-5wfq5 test-deployment-7df74c55ff- deployment-8481  f1a80070-14ea-400d-a5bd-72e080d7f0cf 13215 0 2023-01-31 17:47:55 +0000 UTC 2023-01-31 17:47:58 +0000 UTC 0xc0046644f8 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff b8a1cd0b-1896-4118-a31c-52eb2ebfa74e 0xc004664527 0xc004664528}] [] [{k3s Update v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b8a1cd0b-1896-4118-a31c-52eb2ebfa74e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-q7xzt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-q7xzt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [test-deployment],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [test-deployment],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:,StartTime:2023-01-31 17:47:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 31 17:47:58.881: INFO: pod: "test-deployment-7df74c55ff-mhz9g":
&Pod{ObjectMeta:{test-deployment-7df74c55ff-mhz9g test-deployment-7df74c55ff- deployment-8481  46eff5f8-4aa3-4a66-b0bf-c11ae355683d 13241 0 2023-01-31 17:47:53 +0000 UTC 2023-01-31 17:47:59 +0000 UTC 0xc0046646d0 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff b8a1cd0b-1896-4118-a31c-52eb2ebfa74e 0xc004664707 0xc004664708}] [] [{k3s Update v1 2023-01-31 17:47:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b8a1cd0b-1896-4118-a31c-52eb2ebfa74e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.20\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4qm9q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4qm9q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.20,StartTime:2023-01-31 17:47:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:47:54 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:docker-pullable://registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097,ContainerID:docker://f9066f9902083ec81fec466552df8b16958aa43394f1fb345b194c5ec11dd365,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.20,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 31 17:47:58.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-8481" for this suite. 01/31/23 17:47:58.889
------------------------------
â€¢ [SLOW TEST] [7.939 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:47:50.959
    Jan 31 17:47:50.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename deployment 01/31/23 17:47:50.962
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:50.979
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:50.985
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should run the lifecycle of a Deployment [Conformance]
      test/e2e/apps/deployment.go:185
    STEP: creating a Deployment 01/31/23 17:47:50.996
    STEP: waiting for Deployment to be created 01/31/23 17:47:51.001
    STEP: waiting for all Replicas to be Ready 01/31/23 17:47:51.004
    Jan 31 17:47:51.008: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 31 17:47:51.008: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 31 17:47:51.012: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 31 17:47:51.012: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 31 17:47:51.036: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 31 17:47:51.036: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 31 17:47:51.062: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 31 17:47:51.062: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 31 17:47:52.422: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Jan 31 17:47:52.422: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Jan 31 17:47:53.094: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2 and labels map[test-deployment-static:true]
    STEP: patching the Deployment 01/31/23 17:47:53.094
    W0131 17:47:53.104144      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Jan 31 17:47:53.107: INFO: observed event type ADDED
    STEP: waiting for Replicas to scale 01/31/23 17:47:53.107
    Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
    Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
    Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
    Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
    Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
    Jan 31 17:47:53.111: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
    Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
    Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 0
    Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:53.112: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:53.120: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:53.120: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:53.137: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:53.137: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:53.155: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:53.155: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:53.167: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:53.167: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:55.293: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:55.293: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:55.329: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    STEP: listing Deployments 01/31/23 17:47:55.329
    Jan 31 17:47:55.337: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
    STEP: updating the Deployment 01/31/23 17:47:55.337
    Jan 31 17:47:55.370: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    STEP: fetching the DeploymentStatus 01/31/23 17:47:55.37
    Jan 31 17:47:55.392: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 31 17:47:55.392: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 31 17:47:55.429: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 31 17:47:55.445: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 31 17:47:55.462: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 31 17:47:57.484: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 31 17:47:57.526: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 31 17:47:57.562: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 31 17:47:58.768: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
    STEP: patching the DeploymentStatus 01/31/23 17:47:58.799
    STEP: fetching the DeploymentStatus 01/31/23 17:47:58.814
    Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 1
    Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 2
    Jan 31 17:47:58.825: INFO: observed Deployment test-deployment in namespace deployment-8481 with ReadyReplicas 3
    STEP: deleting the Deployment 01/31/23 17:47:58.826
    Jan 31 17:47:58.840: INFO: observed event type MODIFIED
    Jan 31 17:47:58.840: INFO: observed event type MODIFIED
    Jan 31 17:47:58.840: INFO: observed event type MODIFIED
    Jan 31 17:47:58.841: INFO: observed event type MODIFIED
    Jan 31 17:47:58.841: INFO: observed event type MODIFIED
    Jan 31 17:47:58.841: INFO: observed event type MODIFIED
    Jan 31 17:47:58.841: INFO: observed event type MODIFIED
    Jan 31 17:47:58.841: INFO: observed event type MODIFIED
    Jan 31 17:47:58.841: INFO: observed event type MODIFIED
    Jan 31 17:47:58.841: INFO: observed event type MODIFIED
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 31 17:47:58.847: INFO: Log out all the ReplicaSets if there is no deployment created
    Jan 31 17:47:58.854: INFO: ReplicaSet "test-deployment-f4dbc4647":
    &ReplicaSet{ObjectMeta:{test-deployment-f4dbc4647  deployment-8481  4df37c79-c602-4a32-92cf-bd5d2ea697b4 13167 3 2023-01-31 17:47:51 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment f0222230-3a13-40f8-95da-ad798ab0d423 0xc002f67147 0xc002f67148}] [] [{k3s Update apps/v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f0222230-3a13-40f8-95da-ad798ab0d423\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: f4dbc4647,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002f671e0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

    Jan 31 17:47:58.866: INFO: ReplicaSet "test-deployment-7b7876f9d6":
    &ReplicaSet{ObjectMeta:{test-deployment-7b7876f9d6  deployment-8481  d5a62779-b2ee-4d39-9cce-b99233b340c6 13237 2 2023-01-31 17:47:55 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment f0222230-3a13-40f8-95da-ad798ab0d423 0xc002f67247 0xc002f67248}] [] [{k3s Update apps/v1 2023-01-31 17:47:57 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f0222230-3a13-40f8-95da-ad798ab0d423\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:47:58 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7b7876f9d6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002f672e0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

    Jan 31 17:47:58.873: INFO: pod: "test-deployment-7b7876f9d6-jwrjw":
    &Pod{ObjectMeta:{test-deployment-7b7876f9d6-jwrjw test-deployment-7b7876f9d6- deployment-8481  986a0d8e-e22d-42cd-b642-6461910b626f 13210 0 2023-01-31 17:47:55 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 d5a62779-b2ee-4d39-9cce-b99233b340c6 0xc002f678d7 0xc002f678d8}] [] [{k3s Update v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d5a62779-b2ee-4d39-9cce-b99233b340c6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:47:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.21\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-b9zc8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-b9zc8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.21,StartTime:2023-01-31 17:47:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:47:56 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://d719d81fbd03b1d8dd04e9a9ca24aa1c1b6b0d7330cf3b7a084e3b24444417ff,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.21,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Jan 31 17:47:58.874: INFO: pod: "test-deployment-7b7876f9d6-9cjnx":
    &Pod{ObjectMeta:{test-deployment-7b7876f9d6-9cjnx test-deployment-7b7876f9d6- deployment-8481  41b805b2-b804-460f-9f8e-23794db5ee6f 13236 0 2023-01-31 17:47:57 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 d5a62779-b2ee-4d39-9cce-b99233b340c6 0xc002f67ac7 0xc002f67ac8}] [] [{k3s Update v1 2023-01-31 17:47:57 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d5a62779-b2ee-4d39-9cce-b99233b340c6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:47:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.134\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wmpcn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wmpcn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:57 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:10.244.0.134,StartTime:2023-01-31 17:47:57 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:47:58 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://161fd1d1aef4b3257543e3ef9378f3d425c2dd7095b1f9210d73bd2bd62242b8,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.134,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Jan 31 17:47:58.874: INFO: ReplicaSet "test-deployment-7df74c55ff":
    &ReplicaSet{ObjectMeta:{test-deployment-7df74c55ff  deployment-8481  b8a1cd0b-1896-4118-a31c-52eb2ebfa74e 13244 4 2023-01-31 17:47:53 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment f0222230-3a13-40f8-95da-ad798ab0d423 0xc002f67347 0xc002f67348}] [] [{k3s Update apps/v1 2023-01-31 17:47:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f0222230-3a13-40f8-95da-ad798ab0d423\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:47:58 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7df74c55ff,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/pause:3.9 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002f673f0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

    Jan 31 17:47:58.881: INFO: pod: "test-deployment-7df74c55ff-5wfq5":
    &Pod{ObjectMeta:{test-deployment-7df74c55ff-5wfq5 test-deployment-7df74c55ff- deployment-8481  f1a80070-14ea-400d-a5bd-72e080d7f0cf 13215 0 2023-01-31 17:47:55 +0000 UTC 2023-01-31 17:47:58 +0000 UTC 0xc0046644f8 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff b8a1cd0b-1896-4118-a31c-52eb2ebfa74e 0xc004664527 0xc004664528}] [] [{k3s Update v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b8a1cd0b-1896-4118-a31c-52eb2ebfa74e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-q7xzt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-q7xzt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [test-deployment],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [test-deployment],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.199,PodIP:,StartTime:2023-01-31 17:47:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Jan 31 17:47:58.881: INFO: pod: "test-deployment-7df74c55ff-mhz9g":
    &Pod{ObjectMeta:{test-deployment-7df74c55ff-mhz9g test-deployment-7df74c55ff- deployment-8481  46eff5f8-4aa3-4a66-b0bf-c11ae355683d 13241 0 2023-01-31 17:47:53 +0000 UTC 2023-01-31 17:47:59 +0000 UTC 0xc0046646d0 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff b8a1cd0b-1896-4118-a31c-52eb2ebfa74e 0xc004664707 0xc004664708}] [] [{k3s Update v1 2023-01-31 17:47:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b8a1cd0b-1896-4118-a31c-52eb2ebfa74e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:47:55 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.20\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4qm9q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4qm9q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:47:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.20,StartTime:2023-01-31 17:47:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:47:54 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:docker-pullable://registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097,ContainerID:docker://f9066f9902083ec81fec466552df8b16958aa43394f1fb345b194c5ec11dd365,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.20,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:47:58.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-8481" for this suite. 01/31/23 17:47:58.889
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] CronJob
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:47:58.899
Jan 31 17:47:58.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename cronjob 01/31/23 17:47:58.9
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:58.918
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:58.926
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
STEP: Creating a ForbidConcurrent cronjob 01/31/23 17:47:58.934
STEP: Ensuring a job is scheduled 01/31/23 17:47:58.942
STEP: Ensuring exactly one is scheduled 01/31/23 17:48:00.949
STEP: Ensuring exactly one running job exists by listing jobs explicitly 01/31/23 17:48:00.955
STEP: Ensuring no more jobs are scheduled 01/31/23 17:48:00.962
STEP: Removing cronjob 01/31/23 17:53:00.981
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Jan 31 17:53:00.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-1498" for this suite. 01/31/23 17:53:01.005
------------------------------
â€¢ [SLOW TEST] [302.114 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:47:58.899
    Jan 31 17:47:58.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename cronjob 01/31/23 17:47:58.9
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:47:58.918
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:47:58.926
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
      test/e2e/apps/cronjob.go:124
    STEP: Creating a ForbidConcurrent cronjob 01/31/23 17:47:58.934
    STEP: Ensuring a job is scheduled 01/31/23 17:47:58.942
    STEP: Ensuring exactly one is scheduled 01/31/23 17:48:00.949
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 01/31/23 17:48:00.955
    STEP: Ensuring no more jobs are scheduled 01/31/23 17:48:00.962
    STEP: Removing cronjob 01/31/23 17:53:00.981
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:53:00.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-1498" for this suite. 01/31/23 17:53:01.005
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:53:01.015
Jan 31 17:53:01.015: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename endpointslice 01/31/23 17:53:01.017
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:01.049
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:01.057
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
Jan 31 17:53:01.080: INFO: Endpoints addresses: [10.244.1.12] , ports: [8443]
Jan 31 17:53:01.081: INFO: EndpointSlices addresses: [10.244.1.12] , ports: [8443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Jan 31 17:53:01.081: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-9235" for this suite. 01/31/23 17:53:01.086
------------------------------
â€¢ [0.077 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:53:01.015
    Jan 31 17:53:01.015: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename endpointslice 01/31/23 17:53:01.017
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:01.049
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:01.057
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
      test/e2e/network/endpointslice.go:66
    Jan 31 17:53:01.080: INFO: Endpoints addresses: [10.244.1.12] , ports: [8443]
    Jan 31 17:53:01.081: INFO: EndpointSlices addresses: [10.244.1.12] , ports: [8443]
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:53:01.081: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-9235" for this suite. 01/31/23 17:53:01.086
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:53:01.093
Jan 31 17:53:01.093: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 17:53:01.094
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:01.111
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:01.121
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2100 01/31/23 17:53:01.127
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 01/31/23 17:53:01.162
STEP: creating service externalsvc in namespace services-2100 01/31/23 17:53:01.163
STEP: creating replication controller externalsvc in namespace services-2100 01/31/23 17:53:01.196
I0131 17:53:01.204250      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-2100, replica count: 2
I0131 17:53:04.256318      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName 01/31/23 17:53:04.27
Jan 31 17:53:04.313: INFO: Creating new exec pod
Jan 31 17:53:04.323: INFO: Waiting up to 5m0s for pod "execpodb44wk" in namespace "services-2100" to be "running"
Jan 31 17:53:04.332: INFO: Pod "execpodb44wk": Phase="Pending", Reason="", readiness=false. Elapsed: 8.8818ms
Jan 31 17:53:06.340: INFO: Pod "execpodb44wk": Phase="Running", Reason="", readiness=true. Elapsed: 2.016886022s
Jan 31 17:53:06.340: INFO: Pod "execpodb44wk" satisfied condition "running"
Jan 31 17:53:06.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-2100 exec execpodb44wk -- /bin/sh -x -c nslookup clusterip-service.services-2100.svc.cluster.local'
Jan 31 17:53:06.520: INFO: stderr: "+ nslookup clusterip-service.services-2100.svc.cluster.local\n"
Jan 31 17:53:06.520: INFO: stdout: "Server:\t\t10.111.243.110\nAddress:\t10.111.243.110#53\n\nclusterip-service.services-2100.svc.cluster.local\tcanonical name = externalsvc.services-2100.svc.cluster.local.\nName:\texternalsvc.services-2100.svc.cluster.local\nAddress: 10.98.107.237\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-2100, will wait for the garbage collector to delete the pods 01/31/23 17:53:06.52
Jan 31 17:53:06.588: INFO: Deleting ReplicationController externalsvc took: 12.100638ms
Jan 31 17:53:06.689: INFO: Terminating ReplicationController externalsvc pods took: 100.961829ms
Jan 31 17:53:08.916: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 17:53:08.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-2100" for this suite. 01/31/23 17:53:08.943
------------------------------
â€¢ [SLOW TEST] [7.859 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:53:01.093
    Jan 31 17:53:01.093: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 17:53:01.094
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:01.111
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:01.121
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ClusterIP to ExternalName [Conformance]
      test/e2e/network/service.go:1515
    STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2100 01/31/23 17:53:01.127
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 01/31/23 17:53:01.162
    STEP: creating service externalsvc in namespace services-2100 01/31/23 17:53:01.163
    STEP: creating replication controller externalsvc in namespace services-2100 01/31/23 17:53:01.196
    I0131 17:53:01.204250      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-2100, replica count: 2
    I0131 17:53:04.256318      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the ClusterIP service to type=ExternalName 01/31/23 17:53:04.27
    Jan 31 17:53:04.313: INFO: Creating new exec pod
    Jan 31 17:53:04.323: INFO: Waiting up to 5m0s for pod "execpodb44wk" in namespace "services-2100" to be "running"
    Jan 31 17:53:04.332: INFO: Pod "execpodb44wk": Phase="Pending", Reason="", readiness=false. Elapsed: 8.8818ms
    Jan 31 17:53:06.340: INFO: Pod "execpodb44wk": Phase="Running", Reason="", readiness=true. Elapsed: 2.016886022s
    Jan 31 17:53:06.340: INFO: Pod "execpodb44wk" satisfied condition "running"
    Jan 31 17:53:06.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-2100 exec execpodb44wk -- /bin/sh -x -c nslookup clusterip-service.services-2100.svc.cluster.local'
    Jan 31 17:53:06.520: INFO: stderr: "+ nslookup clusterip-service.services-2100.svc.cluster.local\n"
    Jan 31 17:53:06.520: INFO: stdout: "Server:\t\t10.111.243.110\nAddress:\t10.111.243.110#53\n\nclusterip-service.services-2100.svc.cluster.local\tcanonical name = externalsvc.services-2100.svc.cluster.local.\nName:\texternalsvc.services-2100.svc.cluster.local\nAddress: 10.98.107.237\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-2100, will wait for the garbage collector to delete the pods 01/31/23 17:53:06.52
    Jan 31 17:53:06.588: INFO: Deleting ReplicationController externalsvc took: 12.100638ms
    Jan 31 17:53:06.689: INFO: Terminating ReplicationController externalsvc pods took: 100.961829ms
    Jan 31 17:53:08.916: INFO: Cleaning up the ClusterIP to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:53:08.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-2100" for this suite. 01/31/23 17:53:08.943
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server
  should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:53:08.953
Jan 31 17:53:08.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:53:08.954
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:08.971
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:08.977
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
STEP: Starting the proxy 01/31/23 17:53:08.982
Jan 31 17:53:08.983: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8776 proxy --unix-socket=/tmp/kubectl-proxy-unix1910531732/test'
STEP: retrieving proxy /api/ output 01/31/23 17:53:09.057
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:53:09.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8776" for this suite. 01/31/23 17:53:09.066
------------------------------
â€¢ [0.123 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support --unix-socket=/path  [Conformance]
    test/e2e/kubectl/kubectl.go:1812

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:53:08.953
    Jan 31 17:53:08.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:53:08.954
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:08.971
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:08.977
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support --unix-socket=/path  [Conformance]
      test/e2e/kubectl/kubectl.go:1812
    STEP: Starting the proxy 01/31/23 17:53:08.982
    Jan 31 17:53:08.983: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8776 proxy --unix-socket=/tmp/kubectl-proxy-unix1910531732/test'
    STEP: retrieving proxy /api/ output 01/31/23 17:53:09.057
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:53:09.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8776" for this suite. 01/31/23 17:53:09.066
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:53:09.079
Jan 31 17:53:09.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 17:53:09.081
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:09.105
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:09.113
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
STEP: Creating a pod to test emptydir 0666 on tmpfs 01/31/23 17:53:09.122
Jan 31 17:53:09.131: INFO: Waiting up to 5m0s for pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a" in namespace "emptydir-9172" to be "Succeeded or Failed"
Jan 31 17:53:09.137: INFO: Pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a": Phase="Pending", Reason="", readiness=false. Elapsed: 6.270307ms
Jan 31 17:53:11.144: INFO: Pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013347401s
Jan 31 17:53:13.148: INFO: Pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017453339s
Jan 31 17:53:15.148: INFO: Pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.016930431s
STEP: Saw pod success 01/31/23 17:53:15.148
Jan 31 17:53:15.148: INFO: Pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a" satisfied condition "Succeeded or Failed"
Jan 31 17:53:15.157: INFO: Trying to get logs from node 26-m02 pod pod-0d26e423-d70b-47fa-93d8-a55954edb64a container test-container: <nil>
STEP: delete the pod 01/31/23 17:53:15.192
Jan 31 17:53:15.210: INFO: Waiting for pod pod-0d26e423-d70b-47fa-93d8-a55954edb64a to disappear
Jan 31 17:53:15.223: INFO: Pod pod-0d26e423-d70b-47fa-93d8-a55954edb64a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 17:53:15.223: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9172" for this suite. 01/31/23 17:53:15.233
------------------------------
â€¢ [SLOW TEST] [6.165 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:53:09.079
    Jan 31 17:53:09.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 17:53:09.081
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:09.105
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:09.113
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:107
    STEP: Creating a pod to test emptydir 0666 on tmpfs 01/31/23 17:53:09.122
    Jan 31 17:53:09.131: INFO: Waiting up to 5m0s for pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a" in namespace "emptydir-9172" to be "Succeeded or Failed"
    Jan 31 17:53:09.137: INFO: Pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a": Phase="Pending", Reason="", readiness=false. Elapsed: 6.270307ms
    Jan 31 17:53:11.144: INFO: Pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013347401s
    Jan 31 17:53:13.148: INFO: Pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017453339s
    Jan 31 17:53:15.148: INFO: Pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.016930431s
    STEP: Saw pod success 01/31/23 17:53:15.148
    Jan 31 17:53:15.148: INFO: Pod "pod-0d26e423-d70b-47fa-93d8-a55954edb64a" satisfied condition "Succeeded or Failed"
    Jan 31 17:53:15.157: INFO: Trying to get logs from node 26-m02 pod pod-0d26e423-d70b-47fa-93d8-a55954edb64a container test-container: <nil>
    STEP: delete the pod 01/31/23 17:53:15.192
    Jan 31 17:53:15.210: INFO: Waiting for pod pod-0d26e423-d70b-47fa-93d8-a55954edb64a to disappear
    Jan 31 17:53:15.223: INFO: Pod pod-0d26e423-d70b-47fa-93d8-a55954edb64a no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:53:15.223: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9172" for this suite. 01/31/23 17:53:15.233
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:53:15.252
Jan 31 17:53:15.252: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename subpath 01/31/23 17:53:15.253
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:15.268
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:15.278
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 01/31/23 17:53:15.285
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
STEP: Creating pod pod-subpath-test-configmap-82fq 01/31/23 17:53:15.303
STEP: Creating a pod to test atomic-volume-subpath 01/31/23 17:53:15.303
Jan 31 17:53:15.314: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-82fq" in namespace "subpath-1154" to be "Succeeded or Failed"
Jan 31 17:53:15.324: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Pending", Reason="", readiness=false. Elapsed: 9.907941ms
Jan 31 17:53:17.336: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021922913s
Jan 31 17:53:19.334: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 4.01991636s
Jan 31 17:53:21.338: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 6.023788158s
Jan 31 17:53:23.336: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 8.02154706s
Jan 31 17:53:25.336: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 10.021205413s
Jan 31 17:53:27.339: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 12.024580731s
Jan 31 17:53:29.334: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 14.019979853s
Jan 31 17:53:31.335: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 16.020825956s
Jan 31 17:53:33.338: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 18.023934279s
Jan 31 17:53:35.331: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 20.016184249s
Jan 31 17:53:37.335: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 22.020396374s
Jan 31 17:53:39.341: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=false. Elapsed: 24.026829021s
Jan 31 17:53:41.335: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.020103772s
STEP: Saw pod success 01/31/23 17:53:41.335
Jan 31 17:53:41.335: INFO: Pod "pod-subpath-test-configmap-82fq" satisfied condition "Succeeded or Failed"
Jan 31 17:53:41.344: INFO: Trying to get logs from node 26-m02 pod pod-subpath-test-configmap-82fq container test-container-subpath-configmap-82fq: <nil>
STEP: delete the pod 01/31/23 17:53:41.365
Jan 31 17:53:41.389: INFO: Waiting for pod pod-subpath-test-configmap-82fq to disappear
Jan 31 17:53:41.397: INFO: Pod pod-subpath-test-configmap-82fq no longer exists
STEP: Deleting pod pod-subpath-test-configmap-82fq 01/31/23 17:53:41.397
Jan 31 17:53:41.397: INFO: Deleting pod "pod-subpath-test-configmap-82fq" in namespace "subpath-1154"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Jan 31 17:53:41.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-1154" for this suite. 01/31/23 17:53:41.409
------------------------------
â€¢ [SLOW TEST] [26.164 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/storage/subpath.go:80

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:53:15.252
    Jan 31 17:53:15.252: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename subpath 01/31/23 17:53:15.253
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:15.268
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:15.278
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 01/31/23 17:53:15.285
    [It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
      test/e2e/storage/subpath.go:80
    STEP: Creating pod pod-subpath-test-configmap-82fq 01/31/23 17:53:15.303
    STEP: Creating a pod to test atomic-volume-subpath 01/31/23 17:53:15.303
    Jan 31 17:53:15.314: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-82fq" in namespace "subpath-1154" to be "Succeeded or Failed"
    Jan 31 17:53:15.324: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Pending", Reason="", readiness=false. Elapsed: 9.907941ms
    Jan 31 17:53:17.336: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021922913s
    Jan 31 17:53:19.334: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 4.01991636s
    Jan 31 17:53:21.338: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 6.023788158s
    Jan 31 17:53:23.336: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 8.02154706s
    Jan 31 17:53:25.336: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 10.021205413s
    Jan 31 17:53:27.339: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 12.024580731s
    Jan 31 17:53:29.334: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 14.019979853s
    Jan 31 17:53:31.335: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 16.020825956s
    Jan 31 17:53:33.338: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 18.023934279s
    Jan 31 17:53:35.331: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 20.016184249s
    Jan 31 17:53:37.335: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=true. Elapsed: 22.020396374s
    Jan 31 17:53:39.341: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Running", Reason="", readiness=false. Elapsed: 24.026829021s
    Jan 31 17:53:41.335: INFO: Pod "pod-subpath-test-configmap-82fq": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.020103772s
    STEP: Saw pod success 01/31/23 17:53:41.335
    Jan 31 17:53:41.335: INFO: Pod "pod-subpath-test-configmap-82fq" satisfied condition "Succeeded or Failed"
    Jan 31 17:53:41.344: INFO: Trying to get logs from node 26-m02 pod pod-subpath-test-configmap-82fq container test-container-subpath-configmap-82fq: <nil>
    STEP: delete the pod 01/31/23 17:53:41.365
    Jan 31 17:53:41.389: INFO: Waiting for pod pod-subpath-test-configmap-82fq to disappear
    Jan 31 17:53:41.397: INFO: Pod pod-subpath-test-configmap-82fq no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-82fq 01/31/23 17:53:41.397
    Jan 31 17:53:41.397: INFO: Deleting pod "pod-subpath-test-configmap-82fq" in namespace "subpath-1154"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:53:41.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-1154" for this suite. 01/31/23 17:53:41.409
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] Watchers
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:53:41.416
Jan 31 17:53:41.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename watch 01/31/23 17:53:41.417
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:41.434
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:41.44
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
STEP: creating a watch on configmaps with a certain label 01/31/23 17:53:41.446
STEP: creating a new configmap 01/31/23 17:53:41.449
STEP: modifying the configmap once 01/31/23 17:53:41.454
STEP: changing the label value of the configmap 01/31/23 17:53:41.464
STEP: Expecting to observe a delete notification for the watched object 01/31/23 17:53:41.475
Jan 31 17:53:41.475: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13558 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:53:41.476: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13559 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:53:41.476: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13560 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time 01/31/23 17:53:41.477
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 01/31/23 17:53:41.496
STEP: changing the label value of the configmap back 01/31/23 17:53:51.497
STEP: modifying the configmap a third time 01/31/23 17:53:51.516
STEP: deleting the configmap 01/31/23 17:53:51.534
STEP: Expecting to observe an add notification for the watched object when the label value was restored 01/31/23 17:53:51.546
Jan 31 17:53:51.546: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13574 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:53:51.547: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13575 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 31 17:53:51.547: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13576 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Jan 31 17:53:51.547: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-5798" for this suite. 01/31/23 17:53:51.558
------------------------------
â€¢ [SLOW TEST] [10.155 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:53:41.416
    Jan 31 17:53:41.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename watch 01/31/23 17:53:41.417
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:41.434
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:41.44
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
      test/e2e/apimachinery/watch.go:257
    STEP: creating a watch on configmaps with a certain label 01/31/23 17:53:41.446
    STEP: creating a new configmap 01/31/23 17:53:41.449
    STEP: modifying the configmap once 01/31/23 17:53:41.454
    STEP: changing the label value of the configmap 01/31/23 17:53:41.464
    STEP: Expecting to observe a delete notification for the watched object 01/31/23 17:53:41.475
    Jan 31 17:53:41.475: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13558 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:53:41.476: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13559 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:53:41.476: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13560 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time 01/31/23 17:53:41.477
    STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 01/31/23 17:53:41.496
    STEP: changing the label value of the configmap back 01/31/23 17:53:51.497
    STEP: modifying the configmap a third time 01/31/23 17:53:51.516
    STEP: deleting the configmap 01/31/23 17:53:51.534
    STEP: Expecting to observe an add notification for the watched object when the label value was restored 01/31/23 17:53:51.546
    Jan 31 17:53:51.546: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13574 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:53:51.547: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13575 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 31 17:53:51.547: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5798  73b9222b-405b-44a3-9f3e-3eadf22dc96d 13576 0 2023-01-31 17:53:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-31 17:53:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:53:51.547: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-5798" for this suite. 01/31/23 17:53:51.558
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:53:51.573
Jan 31 17:53:51.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename runtimeclass 01/31/23 17:53:51.575
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:51.599
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:51.608
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Jan 31 17:53:51.632: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-4130" for this suite. 01/31/23 17:53:51.64
------------------------------
â€¢ [0.079 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:53:51.573
    Jan 31 17:53:51.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename runtimeclass 01/31/23 17:53:51.575
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:51.599
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:51.608
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:55
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:53:51.632: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-4130" for this suite. 01/31/23 17:53:51.64
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:53:51.655
Jan 31 17:53:51.656: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:53:51.658
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:51.678
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:51.684
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
STEP: Creating configMap with name projected-configmap-test-volume-map-25491885-a9b3-454a-bdbb-e2ade4529cce 01/31/23 17:53:51.692
STEP: Creating a pod to test consume configMaps 01/31/23 17:53:51.699
Jan 31 17:53:51.708: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591" in namespace "projected-5055" to be "Succeeded or Failed"
Jan 31 17:53:51.714: INFO: Pod "pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591": Phase="Pending", Reason="", readiness=false. Elapsed: 6.594031ms
Jan 31 17:53:53.724: INFO: Pod "pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015948659s
Jan 31 17:53:55.730: INFO: Pod "pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021848554s
STEP: Saw pod success 01/31/23 17:53:55.73
Jan 31 17:53:55.730: INFO: Pod "pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591" satisfied condition "Succeeded or Failed"
Jan 31 17:53:55.740: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 17:53:55.764
Jan 31 17:53:55.775: INFO: Waiting for pod pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591 to disappear
Jan 31 17:53:55.781: INFO: Pod pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 31 17:53:55.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5055" for this suite. 01/31/23 17:53:55.788
------------------------------
â€¢ [4.142 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:53:51.655
    Jan 31 17:53:51.656: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:53:51.658
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:51.678
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:51.684
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:99
    STEP: Creating configMap with name projected-configmap-test-volume-map-25491885-a9b3-454a-bdbb-e2ade4529cce 01/31/23 17:53:51.692
    STEP: Creating a pod to test consume configMaps 01/31/23 17:53:51.699
    Jan 31 17:53:51.708: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591" in namespace "projected-5055" to be "Succeeded or Failed"
    Jan 31 17:53:51.714: INFO: Pod "pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591": Phase="Pending", Reason="", readiness=false. Elapsed: 6.594031ms
    Jan 31 17:53:53.724: INFO: Pod "pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015948659s
    Jan 31 17:53:55.730: INFO: Pod "pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021848554s
    STEP: Saw pod success 01/31/23 17:53:55.73
    Jan 31 17:53:55.730: INFO: Pod "pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591" satisfied condition "Succeeded or Failed"
    Jan 31 17:53:55.740: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 17:53:55.764
    Jan 31 17:53:55.775: INFO: Waiting for pod pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591 to disappear
    Jan 31 17:53:55.781: INFO: Pod pod-projected-configmaps-4a35d5be-b0b0-41e1-918d-a3b321a22591 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:53:55.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5055" for this suite. 01/31/23 17:53:55.788
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:53:55.799
Jan 31 17:53:55.799: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 17:53:55.8
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:55.828
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:55.835
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
STEP: Creating secret with name secret-test-7bc0b4d9-8abe-4d85-a39d-15c2f0597dfb 01/31/23 17:53:55.864
STEP: Creating a pod to test consume secrets 01/31/23 17:53:55.87
Jan 31 17:53:55.880: INFO: Waiting up to 5m0s for pod "pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff" in namespace "secrets-4803" to be "Succeeded or Failed"
Jan 31 17:53:55.888: INFO: Pod "pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff": Phase="Pending", Reason="", readiness=false. Elapsed: 7.583472ms
Jan 31 17:53:57.898: INFO: Pod "pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018264845s
Jan 31 17:53:59.899: INFO: Pod "pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018435532s
STEP: Saw pod success 01/31/23 17:53:59.899
Jan 31 17:53:59.899: INFO: Pod "pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff" satisfied condition "Succeeded or Failed"
Jan 31 17:53:59.907: INFO: Trying to get logs from node 26-m02 pod pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff container secret-volume-test: <nil>
STEP: delete the pod 01/31/23 17:53:59.925
Jan 31 17:53:59.942: INFO: Waiting for pod pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff to disappear
Jan 31 17:53:59.951: INFO: Pod pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 17:53:59.951: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4803" for this suite. 01/31/23 17:53:59.959
STEP: Destroying namespace "secret-namespace-4005" for this suite. 01/31/23 17:53:59.967
------------------------------
â€¢ [4.174 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:53:55.799
    Jan 31 17:53:55.799: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 17:53:55.8
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:55.828
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:55.835
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:99
    STEP: Creating secret with name secret-test-7bc0b4d9-8abe-4d85-a39d-15c2f0597dfb 01/31/23 17:53:55.864
    STEP: Creating a pod to test consume secrets 01/31/23 17:53:55.87
    Jan 31 17:53:55.880: INFO: Waiting up to 5m0s for pod "pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff" in namespace "secrets-4803" to be "Succeeded or Failed"
    Jan 31 17:53:55.888: INFO: Pod "pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff": Phase="Pending", Reason="", readiness=false. Elapsed: 7.583472ms
    Jan 31 17:53:57.898: INFO: Pod "pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018264845s
    Jan 31 17:53:59.899: INFO: Pod "pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018435532s
    STEP: Saw pod success 01/31/23 17:53:59.899
    Jan 31 17:53:59.899: INFO: Pod "pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff" satisfied condition "Succeeded or Failed"
    Jan 31 17:53:59.907: INFO: Trying to get logs from node 26-m02 pod pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff container secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:53:59.925
    Jan 31 17:53:59.942: INFO: Waiting for pod pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff to disappear
    Jan 31 17:53:59.951: INFO: Pod pod-secrets-5b89bd1b-8393-4f80-9035-8f0bee23f7ff no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:53:59.951: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4803" for this suite. 01/31/23 17:53:59.959
    STEP: Destroying namespace "secret-namespace-4005" for this suite. 01/31/23 17:53:59.967
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:53:59.974
Jan 31 17:53:59.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename namespaces 01/31/23 17:53:59.975
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:59.991
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:59.999
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
STEP: Creating a test namespace 01/31/23 17:54:00.005
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:00.024
STEP: Creating a service in the namespace 01/31/23 17:54:00.03
STEP: Deleting the namespace 01/31/23 17:54:00.086
STEP: Waiting for the namespace to be removed. 01/31/23 17:54:00.104
STEP: Recreating the namespace 01/31/23 17:54:06.116
STEP: Verifying there is no service in the namespace 01/31/23 17:54:06.149
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:54:06.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-8851" for this suite. 01/31/23 17:54:06.16
STEP: Destroying namespace "nsdeletetest-6663" for this suite. 01/31/23 17:54:06.169
Jan 31 17:54:06.174: INFO: Namespace nsdeletetest-6663 was already deleted
STEP: Destroying namespace "nsdeletetest-8097" for this suite. 01/31/23 17:54:06.174
------------------------------
â€¢ [SLOW TEST] [6.206 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:53:59.974
    Jan 31 17:53:59.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename namespaces 01/31/23 17:53:59.975
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:53:59.991
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:53:59.999
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all services are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:251
    STEP: Creating a test namespace 01/31/23 17:54:00.005
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:00.024
    STEP: Creating a service in the namespace 01/31/23 17:54:00.03
    STEP: Deleting the namespace 01/31/23 17:54:00.086
    STEP: Waiting for the namespace to be removed. 01/31/23 17:54:00.104
    STEP: Recreating the namespace 01/31/23 17:54:06.116
    STEP: Verifying there is no service in the namespace 01/31/23 17:54:06.149
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:54:06.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-8851" for this suite. 01/31/23 17:54:06.16
    STEP: Destroying namespace "nsdeletetest-6663" for this suite. 01/31/23 17:54:06.169
    Jan 31 17:54:06.174: INFO: Namespace nsdeletetest-6663 was already deleted
    STEP: Destroying namespace "nsdeletetest-8097" for this suite. 01/31/23 17:54:06.174
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:54:06.181
Jan 31 17:54:06.181: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename gc 01/31/23 17:54:06.182
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:06.2
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:06.205
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
STEP: create the rc 01/31/23 17:54:06.217
STEP: delete the rc 01/31/23 17:54:11.242
STEP: wait for the rc to be deleted 01/31/23 17:54:11.274
Jan 31 17:54:12.408: INFO: 80 pods remaining
Jan 31 17:54:12.408: INFO: 80 pods has nil DeletionTimestamp
Jan 31 17:54:12.408: INFO: 
Jan 31 17:54:13.362: INFO: 69 pods remaining
Jan 31 17:54:13.362: INFO: 68 pods has nil DeletionTimestamp
Jan 31 17:54:13.362: INFO: 
Jan 31 17:54:14.340: INFO: 60 pods remaining
Jan 31 17:54:14.340: INFO: 60 pods has nil DeletionTimestamp
Jan 31 17:54:14.340: INFO: 
Jan 31 17:54:15.364: INFO: 41 pods remaining
Jan 31 17:54:15.364: INFO: 41 pods has nil DeletionTimestamp
Jan 31 17:54:15.364: INFO: 
Jan 31 17:54:16.355: INFO: 28 pods remaining
Jan 31 17:54:16.355: INFO: 27 pods has nil DeletionTimestamp
Jan 31 17:54:16.355: INFO: 
Jan 31 17:54:17.363: INFO: 21 pods remaining
Jan 31 17:54:17.363: INFO: 20 pods has nil DeletionTimestamp
Jan 31 17:54:17.363: INFO: 
STEP: Gathering metrics 01/31/23 17:54:18.31
W0131 17:54:18.331344      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jan 31 17:54:18.331: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 31 17:54:18.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-2931" for this suite. 01/31/23 17:54:18.343
------------------------------
â€¢ [SLOW TEST] [12.302 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:54:06.181
    Jan 31 17:54:06.181: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename gc 01/31/23 17:54:06.182
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:06.2
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:06.205
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:650
    STEP: create the rc 01/31/23 17:54:06.217
    STEP: delete the rc 01/31/23 17:54:11.242
    STEP: wait for the rc to be deleted 01/31/23 17:54:11.274
    Jan 31 17:54:12.408: INFO: 80 pods remaining
    Jan 31 17:54:12.408: INFO: 80 pods has nil DeletionTimestamp
    Jan 31 17:54:12.408: INFO: 
    Jan 31 17:54:13.362: INFO: 69 pods remaining
    Jan 31 17:54:13.362: INFO: 68 pods has nil DeletionTimestamp
    Jan 31 17:54:13.362: INFO: 
    Jan 31 17:54:14.340: INFO: 60 pods remaining
    Jan 31 17:54:14.340: INFO: 60 pods has nil DeletionTimestamp
    Jan 31 17:54:14.340: INFO: 
    Jan 31 17:54:15.364: INFO: 41 pods remaining
    Jan 31 17:54:15.364: INFO: 41 pods has nil DeletionTimestamp
    Jan 31 17:54:15.364: INFO: 
    Jan 31 17:54:16.355: INFO: 28 pods remaining
    Jan 31 17:54:16.355: INFO: 27 pods has nil DeletionTimestamp
    Jan 31 17:54:16.355: INFO: 
    Jan 31 17:54:17.363: INFO: 21 pods remaining
    Jan 31 17:54:17.363: INFO: 20 pods has nil DeletionTimestamp
    Jan 31 17:54:17.363: INFO: 
    STEP: Gathering metrics 01/31/23 17:54:18.31
    W0131 17:54:18.331344      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Jan 31 17:54:18.331: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:54:18.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-2931" for this suite. 01/31/23 17:54:18.343
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:54:18.486
Jan 31 17:54:18.486: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 17:54:18.488
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:18.594
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:18.662
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
STEP: Creating a pod to test downward API volume plugin 01/31/23 17:54:18.712
Jan 31 17:54:18.733: INFO: Waiting up to 5m0s for pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56" in namespace "downward-api-1360" to be "Succeeded or Failed"
Jan 31 17:54:18.752: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 19.375524ms
Jan 31 17:54:20.783: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 2.050004072s
Jan 31 17:54:22.789: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 4.056649918s
Jan 31 17:54:24.777: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 6.044352644s
Jan 31 17:54:26.768: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 8.035278288s
Jan 31 17:54:28.765: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 10.032105548s
Jan 31 17:54:30.763: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 12.030772555s
Jan 31 17:54:32.763: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Succeeded", Reason="", readiness=false. Elapsed: 14.030545756s
STEP: Saw pod success 01/31/23 17:54:32.763
Jan 31 17:54:32.763: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56" satisfied condition "Succeeded or Failed"
Jan 31 17:54:32.773: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56 container client-container: <nil>
STEP: delete the pod 01/31/23 17:54:32.794
Jan 31 17:54:32.820: INFO: Waiting for pod downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56 to disappear
Jan 31 17:54:32.828: INFO: Pod downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 17:54:32.828: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-1360" for this suite. 01/31/23 17:54:32.835
------------------------------
â€¢ [SLOW TEST] [14.365 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:54:18.486
    Jan 31 17:54:18.486: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 17:54:18.488
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:18.594
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:18.662
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:235
    STEP: Creating a pod to test downward API volume plugin 01/31/23 17:54:18.712
    Jan 31 17:54:18.733: INFO: Waiting up to 5m0s for pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56" in namespace "downward-api-1360" to be "Succeeded or Failed"
    Jan 31 17:54:18.752: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 19.375524ms
    Jan 31 17:54:20.783: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 2.050004072s
    Jan 31 17:54:22.789: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 4.056649918s
    Jan 31 17:54:24.777: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 6.044352644s
    Jan 31 17:54:26.768: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 8.035278288s
    Jan 31 17:54:28.765: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 10.032105548s
    Jan 31 17:54:30.763: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Pending", Reason="", readiness=false. Elapsed: 12.030772555s
    Jan 31 17:54:32.763: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56": Phase="Succeeded", Reason="", readiness=false. Elapsed: 14.030545756s
    STEP: Saw pod success 01/31/23 17:54:32.763
    Jan 31 17:54:32.763: INFO: Pod "downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56" satisfied condition "Succeeded or Failed"
    Jan 31 17:54:32.773: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56 container client-container: <nil>
    STEP: delete the pod 01/31/23 17:54:32.794
    Jan 31 17:54:32.820: INFO: Waiting for pod downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56 to disappear
    Jan 31 17:54:32.828: INFO: Pod downwardapi-volume-73566f1d-0002-4504-9727-38c81958bd56 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:54:32.828: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-1360" for this suite. 01/31/23 17:54:32.835
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:54:32.852
Jan 31 17:54:32.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename var-expansion 01/31/23 17:54:32.852
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:32.872
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:32.879
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
Jan 31 17:54:32.898: INFO: Waiting up to 2m0s for pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6" in namespace "var-expansion-2092" to be "container 0 failed with reason CreateContainerConfigError"
Jan 31 17:54:32.907: INFO: Pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6": Phase="Pending", Reason="", readiness=false. Elapsed: 8.379966ms
Jan 31 17:54:34.919: INFO: Pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02035537s
Jan 31 17:54:34.919: INFO: Pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Jan 31 17:54:34.919: INFO: Deleting pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6" in namespace "var-expansion-2092"
Jan 31 17:54:34.929: INFO: Wait up to 5m0s for pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 31 17:54:38.946: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-2092" for this suite. 01/31/23 17:54:38.957
------------------------------
â€¢ [SLOW TEST] [6.120 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:54:32.852
    Jan 31 17:54:32.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename var-expansion 01/31/23 17:54:32.852
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:32.872
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:32.879
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
      test/e2e/common/node/expansion.go:152
    Jan 31 17:54:32.898: INFO: Waiting up to 2m0s for pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6" in namespace "var-expansion-2092" to be "container 0 failed with reason CreateContainerConfigError"
    Jan 31 17:54:32.907: INFO: Pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6": Phase="Pending", Reason="", readiness=false. Elapsed: 8.379966ms
    Jan 31 17:54:34.919: INFO: Pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02035537s
    Jan 31 17:54:34.919: INFO: Pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Jan 31 17:54:34.919: INFO: Deleting pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6" in namespace "var-expansion-2092"
    Jan 31 17:54:34.929: INFO: Wait up to 5m0s for pod "var-expansion-ae2af885-341d-40d7-9600-7f95a4462cb6" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:54:38.946: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-2092" for this suite. 01/31/23 17:54:38.957
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Pods
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:54:38.973
Jan 31 17:54:38.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 17:54:38.975
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:38.993
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:39.001
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
STEP: creating the pod 01/31/23 17:54:39.012
STEP: submitting the pod to kubernetes 01/31/23 17:54:39.012
Jan 31 17:54:39.027: INFO: Waiting up to 5m0s for pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0" in namespace "pods-9081" to be "running and ready"
Jan 31 17:54:39.038: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0": Phase="Pending", Reason="", readiness=false. Elapsed: 10.215344ms
Jan 31 17:54:39.038: INFO: The phase of Pod pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:54:41.049: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021479549s
Jan 31 17:54:41.049: INFO: The phase of Pod pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 17:54:43.050: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0": Phase="Running", Reason="", readiness=true. Elapsed: 4.022481961s
Jan 31 17:54:43.050: INFO: The phase of Pod pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0 is Running (Ready = true)
Jan 31 17:54:43.050: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 01/31/23 17:54:43.057
STEP: updating the pod 01/31/23 17:54:43.065
Jan 31 17:54:43.591: INFO: Successfully updated pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0"
Jan 31 17:54:43.591: INFO: Waiting up to 5m0s for pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0" in namespace "pods-9081" to be "running"
Jan 31 17:54:43.598: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0": Phase="Running", Reason="", readiness=true. Elapsed: 7.029861ms
Jan 31 17:54:43.598: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0" satisfied condition "running"
STEP: verifying the updated pod is in kubernetes 01/31/23 17:54:43.599
Jan 31 17:54:43.605: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 31 17:54:43.606: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-9081" for this suite. 01/31/23 17:54:43.612
------------------------------
â€¢ [4.646 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:54:38.973
    Jan 31 17:54:38.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 17:54:38.975
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:38.993
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:39.001
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:344
    STEP: creating the pod 01/31/23 17:54:39.012
    STEP: submitting the pod to kubernetes 01/31/23 17:54:39.012
    Jan 31 17:54:39.027: INFO: Waiting up to 5m0s for pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0" in namespace "pods-9081" to be "running and ready"
    Jan 31 17:54:39.038: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0": Phase="Pending", Reason="", readiness=false. Elapsed: 10.215344ms
    Jan 31 17:54:39.038: INFO: The phase of Pod pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:54:41.049: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021479549s
    Jan 31 17:54:41.049: INFO: The phase of Pod pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 17:54:43.050: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0": Phase="Running", Reason="", readiness=true. Elapsed: 4.022481961s
    Jan 31 17:54:43.050: INFO: The phase of Pod pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0 is Running (Ready = true)
    Jan 31 17:54:43.050: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 01/31/23 17:54:43.057
    STEP: updating the pod 01/31/23 17:54:43.065
    Jan 31 17:54:43.591: INFO: Successfully updated pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0"
    Jan 31 17:54:43.591: INFO: Waiting up to 5m0s for pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0" in namespace "pods-9081" to be "running"
    Jan 31 17:54:43.598: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0": Phase="Running", Reason="", readiness=true. Elapsed: 7.029861ms
    Jan 31 17:54:43.598: INFO: Pod "pod-update-e93db5b2-cc0f-400a-a218-a56425036cd0" satisfied condition "running"
    STEP: verifying the updated pod is in kubernetes 01/31/23 17:54:43.599
    Jan 31 17:54:43.605: INFO: Pod update OK
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:54:43.606: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-9081" for this suite. 01/31/23 17:54:43.612
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:54:43.62
Jan 31 17:54:43.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:54:43.621
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:43.637
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:43.645
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1572
STEP: creating an pod 01/31/23 17:54:43.653
Jan 31 17:54:43.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Jan 31 17:54:43.731: INFO: stderr: ""
Jan 31 17:54:43.731: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
STEP: Waiting for log generator to start. 01/31/23 17:54:43.732
Jan 31 17:54:43.732: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Jan 31 17:54:43.732: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-3913" to be "running and ready, or succeeded"
Jan 31 17:54:43.736: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.551831ms
Jan 31 17:54:43.736: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on '26-m02' to be 'Running' but was 'Pending'
Jan 31 17:54:45.745: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013586721s
Jan 31 17:54:45.745: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on '26-m02' to be 'Running' but was 'Pending'
Jan 31 17:54:47.747: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 4.015464559s
Jan 31 17:54:47.747: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Jan 31 17:54:47.747: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings 01/31/23 17:54:47.747
Jan 31 17:54:47.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator'
Jan 31 17:54:47.883: INFO: stderr: ""
Jan 31 17:54:47.884: INFO: stdout: "I0131 17:54:44.886918       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/8cd 327\nI0131 17:54:45.087103       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/pf6 525\nI0131 17:54:45.287785       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/89b 257\nI0131 17:54:45.487206       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/z8g 448\nI0131 17:54:45.687678       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/vw8x 380\nI0131 17:54:45.887078       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/r5f 520\nI0131 17:54:46.087593       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/q7sz 269\nI0131 17:54:46.287036       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/89v 422\nI0131 17:54:46.487443       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/2nmd 347\nI0131 17:54:46.687921       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/k8l 301\nI0131 17:54:46.887419       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/q6sw 243\nI0131 17:54:47.087913       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/h24t 349\nI0131 17:54:47.287397       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/frvg 591\nI0131 17:54:47.487954       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/grs 296\nI0131 17:54:47.687405       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/fzv7 313\n"
STEP: limiting log lines 01/31/23 17:54:47.884
Jan 31 17:54:47.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator --tail=1'
Jan 31 17:54:47.982: INFO: stderr: ""
Jan 31 17:54:47.982: INFO: stdout: "I0131 17:54:47.887850       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/6dp 461\n"
Jan 31 17:54:47.982: INFO: got output "I0131 17:54:47.887850       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/6dp 461\n"
STEP: limiting log bytes 01/31/23 17:54:47.982
Jan 31 17:54:47.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator --limit-bytes=1'
Jan 31 17:54:48.114: INFO: stderr: ""
Jan 31 17:54:48.114: INFO: stdout: "I"
Jan 31 17:54:48.114: INFO: got output "I"
STEP: exposing timestamps 01/31/23 17:54:48.114
Jan 31 17:54:48.114: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator --tail=1 --timestamps'
Jan 31 17:54:48.204: INFO: stderr: ""
Jan 31 17:54:48.204: INFO: stdout: "2023-01-31T17:54:48.087404230Z I0131 17:54:48.087179       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/n2h 419\n"
Jan 31 17:54:48.204: INFO: got output "2023-01-31T17:54:48.087404230Z I0131 17:54:48.087179       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/n2h 419\n"
STEP: restricting to a time range 01/31/23 17:54:48.204
Jan 31 17:54:50.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator --since=1s'
Jan 31 17:54:50.830: INFO: stderr: ""
Jan 31 17:54:50.830: INFO: stdout: "I0131 17:54:49.887932       1 logs_generator.go:76] 25 POST /api/v1/namespaces/kube-system/pods/p6d 236\nI0131 17:54:50.087466       1 logs_generator.go:76] 26 POST /api/v1/namespaces/ns/pods/6nv5 356\nI0131 17:54:50.287797       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/gk4 407\nI0131 17:54:50.487163       1 logs_generator.go:76] 28 GET /api/v1/namespaces/kube-system/pods/r27z 488\nI0131 17:54:50.687613       1 logs_generator.go:76] 29 GET /api/v1/namespaces/ns/pods/ft2d 513\n"
Jan 31 17:54:50.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator --since=24h'
Jan 31 17:54:50.938: INFO: stderr: ""
Jan 31 17:54:50.939: INFO: stdout: "I0131 17:54:44.886918       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/8cd 327\nI0131 17:54:45.087103       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/pf6 525\nI0131 17:54:45.287785       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/89b 257\nI0131 17:54:45.487206       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/z8g 448\nI0131 17:54:45.687678       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/vw8x 380\nI0131 17:54:45.887078       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/r5f 520\nI0131 17:54:46.087593       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/q7sz 269\nI0131 17:54:46.287036       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/89v 422\nI0131 17:54:46.487443       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/2nmd 347\nI0131 17:54:46.687921       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/k8l 301\nI0131 17:54:46.887419       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/q6sw 243\nI0131 17:54:47.087913       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/h24t 349\nI0131 17:54:47.287397       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/frvg 591\nI0131 17:54:47.487954       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/grs 296\nI0131 17:54:47.687405       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/fzv7 313\nI0131 17:54:47.887850       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/6dp 461\nI0131 17:54:48.087179       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/n2h 419\nI0131 17:54:48.287723       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/qsx9 328\nI0131 17:54:48.487229       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/jj6 426\nI0131 17:54:48.687685       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/jh72 388\nI0131 17:54:48.886977       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/qck5 230\nI0131 17:54:49.087268       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/l99l 531\nI0131 17:54:49.287692       1 logs_generator.go:76] 22 POST /api/v1/namespaces/default/pods/fqt 370\nI0131 17:54:49.487088       1 logs_generator.go:76] 23 PUT /api/v1/namespaces/kube-system/pods/j8d 558\nI0131 17:54:49.687476       1 logs_generator.go:76] 24 POST /api/v1/namespaces/kube-system/pods/n4jv 485\nI0131 17:54:49.887932       1 logs_generator.go:76] 25 POST /api/v1/namespaces/kube-system/pods/p6d 236\nI0131 17:54:50.087466       1 logs_generator.go:76] 26 POST /api/v1/namespaces/ns/pods/6nv5 356\nI0131 17:54:50.287797       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/gk4 407\nI0131 17:54:50.487163       1 logs_generator.go:76] 28 GET /api/v1/namespaces/kube-system/pods/r27z 488\nI0131 17:54:50.687613       1 logs_generator.go:76] 29 GET /api/v1/namespaces/ns/pods/ft2d 513\nI0131 17:54:50.888059       1 logs_generator.go:76] 30 PUT /api/v1/namespaces/default/pods/8bh 322\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1577
Jan 31 17:54:50.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 delete pod logs-generator'
Jan 31 17:54:52.105: INFO: stderr: ""
Jan 31 17:54:52.105: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:54:52.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-3913" for this suite. 01/31/23 17:54:52.113
------------------------------
â€¢ [SLOW TEST] [8.500 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1569
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/kubectl/kubectl.go:1592

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:54:43.62
    Jan 31 17:54:43.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:54:43.621
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:43.637
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:43.645
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1572
    STEP: creating an pod 01/31/23 17:54:43.653
    Jan 31 17:54:43.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
    Jan 31 17:54:43.731: INFO: stderr: ""
    Jan 31 17:54:43.731: INFO: stdout: "pod/logs-generator created\n"
    [It] should be able to retrieve and filter logs  [Conformance]
      test/e2e/kubectl/kubectl.go:1592
    STEP: Waiting for log generator to start. 01/31/23 17:54:43.732
    Jan 31 17:54:43.732: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
    Jan 31 17:54:43.732: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-3913" to be "running and ready, or succeeded"
    Jan 31 17:54:43.736: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.551831ms
    Jan 31 17:54:43.736: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on '26-m02' to be 'Running' but was 'Pending'
    Jan 31 17:54:45.745: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013586721s
    Jan 31 17:54:45.745: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on '26-m02' to be 'Running' but was 'Pending'
    Jan 31 17:54:47.747: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 4.015464559s
    Jan 31 17:54:47.747: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
    Jan 31 17:54:47.747: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
    STEP: checking for a matching strings 01/31/23 17:54:47.747
    Jan 31 17:54:47.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator'
    Jan 31 17:54:47.883: INFO: stderr: ""
    Jan 31 17:54:47.884: INFO: stdout: "I0131 17:54:44.886918       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/8cd 327\nI0131 17:54:45.087103       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/pf6 525\nI0131 17:54:45.287785       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/89b 257\nI0131 17:54:45.487206       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/z8g 448\nI0131 17:54:45.687678       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/vw8x 380\nI0131 17:54:45.887078       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/r5f 520\nI0131 17:54:46.087593       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/q7sz 269\nI0131 17:54:46.287036       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/89v 422\nI0131 17:54:46.487443       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/2nmd 347\nI0131 17:54:46.687921       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/k8l 301\nI0131 17:54:46.887419       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/q6sw 243\nI0131 17:54:47.087913       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/h24t 349\nI0131 17:54:47.287397       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/frvg 591\nI0131 17:54:47.487954       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/grs 296\nI0131 17:54:47.687405       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/fzv7 313\n"
    STEP: limiting log lines 01/31/23 17:54:47.884
    Jan 31 17:54:47.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator --tail=1'
    Jan 31 17:54:47.982: INFO: stderr: ""
    Jan 31 17:54:47.982: INFO: stdout: "I0131 17:54:47.887850       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/6dp 461\n"
    Jan 31 17:54:47.982: INFO: got output "I0131 17:54:47.887850       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/6dp 461\n"
    STEP: limiting log bytes 01/31/23 17:54:47.982
    Jan 31 17:54:47.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator --limit-bytes=1'
    Jan 31 17:54:48.114: INFO: stderr: ""
    Jan 31 17:54:48.114: INFO: stdout: "I"
    Jan 31 17:54:48.114: INFO: got output "I"
    STEP: exposing timestamps 01/31/23 17:54:48.114
    Jan 31 17:54:48.114: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator --tail=1 --timestamps'
    Jan 31 17:54:48.204: INFO: stderr: ""
    Jan 31 17:54:48.204: INFO: stdout: "2023-01-31T17:54:48.087404230Z I0131 17:54:48.087179       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/n2h 419\n"
    Jan 31 17:54:48.204: INFO: got output "2023-01-31T17:54:48.087404230Z I0131 17:54:48.087179       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/n2h 419\n"
    STEP: restricting to a time range 01/31/23 17:54:48.204
    Jan 31 17:54:50.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator --since=1s'
    Jan 31 17:54:50.830: INFO: stderr: ""
    Jan 31 17:54:50.830: INFO: stdout: "I0131 17:54:49.887932       1 logs_generator.go:76] 25 POST /api/v1/namespaces/kube-system/pods/p6d 236\nI0131 17:54:50.087466       1 logs_generator.go:76] 26 POST /api/v1/namespaces/ns/pods/6nv5 356\nI0131 17:54:50.287797       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/gk4 407\nI0131 17:54:50.487163       1 logs_generator.go:76] 28 GET /api/v1/namespaces/kube-system/pods/r27z 488\nI0131 17:54:50.687613       1 logs_generator.go:76] 29 GET /api/v1/namespaces/ns/pods/ft2d 513\n"
    Jan 31 17:54:50.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 logs logs-generator logs-generator --since=24h'
    Jan 31 17:54:50.938: INFO: stderr: ""
    Jan 31 17:54:50.939: INFO: stdout: "I0131 17:54:44.886918       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/8cd 327\nI0131 17:54:45.087103       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/pf6 525\nI0131 17:54:45.287785       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/89b 257\nI0131 17:54:45.487206       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/z8g 448\nI0131 17:54:45.687678       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/vw8x 380\nI0131 17:54:45.887078       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/r5f 520\nI0131 17:54:46.087593       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/q7sz 269\nI0131 17:54:46.287036       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/89v 422\nI0131 17:54:46.487443       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/2nmd 347\nI0131 17:54:46.687921       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/k8l 301\nI0131 17:54:46.887419       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/q6sw 243\nI0131 17:54:47.087913       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/h24t 349\nI0131 17:54:47.287397       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/frvg 591\nI0131 17:54:47.487954       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/grs 296\nI0131 17:54:47.687405       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/fzv7 313\nI0131 17:54:47.887850       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/6dp 461\nI0131 17:54:48.087179       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/n2h 419\nI0131 17:54:48.287723       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/qsx9 328\nI0131 17:54:48.487229       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/jj6 426\nI0131 17:54:48.687685       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/jh72 388\nI0131 17:54:48.886977       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/qck5 230\nI0131 17:54:49.087268       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/l99l 531\nI0131 17:54:49.287692       1 logs_generator.go:76] 22 POST /api/v1/namespaces/default/pods/fqt 370\nI0131 17:54:49.487088       1 logs_generator.go:76] 23 PUT /api/v1/namespaces/kube-system/pods/j8d 558\nI0131 17:54:49.687476       1 logs_generator.go:76] 24 POST /api/v1/namespaces/kube-system/pods/n4jv 485\nI0131 17:54:49.887932       1 logs_generator.go:76] 25 POST /api/v1/namespaces/kube-system/pods/p6d 236\nI0131 17:54:50.087466       1 logs_generator.go:76] 26 POST /api/v1/namespaces/ns/pods/6nv5 356\nI0131 17:54:50.287797       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/gk4 407\nI0131 17:54:50.487163       1 logs_generator.go:76] 28 GET /api/v1/namespaces/kube-system/pods/r27z 488\nI0131 17:54:50.687613       1 logs_generator.go:76] 29 GET /api/v1/namespaces/ns/pods/ft2d 513\nI0131 17:54:50.888059       1 logs_generator.go:76] 30 PUT /api/v1/namespaces/default/pods/8bh 322\n"
    [AfterEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1577
    Jan 31 17:54:50.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-3913 delete pod logs-generator'
    Jan 31 17:54:52.105: INFO: stderr: ""
    Jan 31 17:54:52.105: INFO: stdout: "pod \"logs-generator\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:54:52.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-3913" for this suite. 01/31/23 17:54:52.113
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server
  should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:54:52.121
Jan 31 17:54:52.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:54:52.122
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:52.139
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:52.145
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
STEP: starting the proxy server 01/31/23 17:54:52.152
Jan 31 17:54:52.152: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-9678 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output 01/31/23 17:54:52.21
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:54:52.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9678" for this suite. 01/31/23 17:54:52.229
------------------------------
â€¢ [0.116 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support proxy with --port 0  [Conformance]
    test/e2e/kubectl/kubectl.go:1787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:54:52.121
    Jan 31 17:54:52.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:54:52.122
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:52.139
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:52.145
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support proxy with --port 0  [Conformance]
      test/e2e/kubectl/kubectl.go:1787
    STEP: starting the proxy server 01/31/23 17:54:52.152
    Jan 31 17:54:52.152: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-9678 proxy -p 0 --disable-filter'
    STEP: curling proxy /api/ output 01/31/23 17:54:52.21
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:54:52.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9678" for this suite. 01/31/23 17:54:52.229
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:54:52.242
Jan 31 17:54:52.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 17:54:52.243
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:52.261
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:52.268
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
STEP: creating service in namespace services-8965 01/31/23 17:54:52.275
STEP: creating service affinity-clusterip-transition in namespace services-8965 01/31/23 17:54:52.275
STEP: creating replication controller affinity-clusterip-transition in namespace services-8965 01/31/23 17:54:52.306
I0131 17:54:52.317378      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-8965, replica count: 3
I0131 17:54:55.369152      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 31 17:54:55.386: INFO: Creating new exec pod
Jan 31 17:54:55.397: INFO: Waiting up to 5m0s for pod "execpod-affinitywfjzc" in namespace "services-8965" to be "running"
Jan 31 17:54:55.413: INFO: Pod "execpod-affinitywfjzc": Phase="Pending", Reason="", readiness=false. Elapsed: 15.599968ms
Jan 31 17:54:57.423: INFO: Pod "execpod-affinitywfjzc": Phase="Running", Reason="", readiness=true. Elapsed: 2.02572717s
Jan 31 17:54:57.423: INFO: Pod "execpod-affinitywfjzc" satisfied condition "running"
Jan 31 17:54:58.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-8965 exec execpod-affinitywfjzc -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
Jan 31 17:54:58.657: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Jan 31 17:54:58.657: INFO: stdout: ""
Jan 31 17:54:58.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-8965 exec execpod-affinitywfjzc -- /bin/sh -x -c nc -v -z -w 2 10.98.250.17 80'
Jan 31 17:54:58.874: INFO: stderr: "+ nc -v -z -w 2 10.98.250.17 80\nConnection to 10.98.250.17 80 port [tcp/http] succeeded!\n"
Jan 31 17:54:58.874: INFO: stdout: ""
Jan 31 17:54:58.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-8965 exec execpod-affinitywfjzc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.98.250.17:80/ ; done'
Jan 31 17:54:59.111: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n"
Jan 31 17:54:59.111: INFO: stdout: "\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-mxd7q\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-mxd7q\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-mxd7q\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-mxd7q"
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-mxd7q
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-mxd7q
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-mxd7q
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-mxd7q
Jan 31 17:54:59.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-8965 exec execpod-affinitywfjzc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.98.250.17:80/ ; done'
Jan 31 17:54:59.346: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n"
Jan 31 17:54:59.346: INFO: stdout: "\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl"
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
Jan 31 17:54:59.346: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-8965, will wait for the garbage collector to delete the pods 01/31/23 17:54:59.358
Jan 31 17:54:59.423: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.865529ms
Jan 31 17:54:59.524: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.010336ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 17:55:02.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-8965" for this suite. 01/31/23 17:55:02.075
------------------------------
â€¢ [SLOW TEST] [9.841 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:54:52.242
    Jan 31 17:54:52.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 17:54:52.243
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:54:52.261
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:54:52.268
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2213
    STEP: creating service in namespace services-8965 01/31/23 17:54:52.275
    STEP: creating service affinity-clusterip-transition in namespace services-8965 01/31/23 17:54:52.275
    STEP: creating replication controller affinity-clusterip-transition in namespace services-8965 01/31/23 17:54:52.306
    I0131 17:54:52.317378      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-8965, replica count: 3
    I0131 17:54:55.369152      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 31 17:54:55.386: INFO: Creating new exec pod
    Jan 31 17:54:55.397: INFO: Waiting up to 5m0s for pod "execpod-affinitywfjzc" in namespace "services-8965" to be "running"
    Jan 31 17:54:55.413: INFO: Pod "execpod-affinitywfjzc": Phase="Pending", Reason="", readiness=false. Elapsed: 15.599968ms
    Jan 31 17:54:57.423: INFO: Pod "execpod-affinitywfjzc": Phase="Running", Reason="", readiness=true. Elapsed: 2.02572717s
    Jan 31 17:54:57.423: INFO: Pod "execpod-affinitywfjzc" satisfied condition "running"
    Jan 31 17:54:58.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-8965 exec execpod-affinitywfjzc -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
    Jan 31 17:54:58.657: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
    Jan 31 17:54:58.657: INFO: stdout: ""
    Jan 31 17:54:58.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-8965 exec execpod-affinitywfjzc -- /bin/sh -x -c nc -v -z -w 2 10.98.250.17 80'
    Jan 31 17:54:58.874: INFO: stderr: "+ nc -v -z -w 2 10.98.250.17 80\nConnection to 10.98.250.17 80 port [tcp/http] succeeded!\n"
    Jan 31 17:54:58.874: INFO: stdout: ""
    Jan 31 17:54:58.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-8965 exec execpod-affinitywfjzc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.98.250.17:80/ ; done'
    Jan 31 17:54:59.111: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n"
    Jan 31 17:54:59.111: INFO: stdout: "\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-mxd7q\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-mxd7q\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-mxd7q\naffinity-clusterip-transition-hxcwp\naffinity-clusterip-transition-mxd7q"
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-mxd7q
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-mxd7q
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-mxd7q
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-hxcwp
    Jan 31 17:54:59.111: INFO: Received response from host: affinity-clusterip-transition-mxd7q
    Jan 31 17:54:59.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-8965 exec execpod-affinitywfjzc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.98.250.17:80/ ; done'
    Jan 31 17:54:59.346: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.250.17:80/\n"
    Jan 31 17:54:59.346: INFO: stdout: "\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl\naffinity-clusterip-transition-gv5xl"
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Received response from host: affinity-clusterip-transition-gv5xl
    Jan 31 17:54:59.346: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-8965, will wait for the garbage collector to delete the pods 01/31/23 17:54:59.358
    Jan 31 17:54:59.423: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.865529ms
    Jan 31 17:54:59.524: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.010336ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:55:02.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-8965" for this suite. 01/31/23 17:55:02.075
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:55:02.084
Jan 31 17:55:02.084: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 17:55:02.085
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:02.102
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:02.107
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
STEP: creating a replication controller 01/31/23 17:55:02.115
Jan 31 17:55:02.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 create -f -'
Jan 31 17:55:02.992: INFO: stderr: ""
Jan 31 17:55:02.992: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 01/31/23 17:55:02.992
Jan 31 17:55:02.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 31 17:55:03.094: INFO: stderr: ""
Jan 31 17:55:03.094: INFO: stdout: "update-demo-nautilus-7tcxk update-demo-nautilus-z8hzk "
Jan 31 17:55:03.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-7tcxk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:55:03.156: INFO: stderr: ""
Jan 31 17:55:03.156: INFO: stdout: ""
Jan 31 17:55:03.156: INFO: update-demo-nautilus-7tcxk is created but not running
Jan 31 17:55:08.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 31 17:55:08.288: INFO: stderr: ""
Jan 31 17:55:08.288: INFO: stdout: "update-demo-nautilus-z8hzk update-demo-nautilus-7tcxk "
Jan 31 17:55:08.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:55:08.375: INFO: stderr: ""
Jan 31 17:55:08.375: INFO: stdout: "true"
Jan 31 17:55:08.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 31 17:55:08.457: INFO: stderr: ""
Jan 31 17:55:08.457: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 31 17:55:08.457: INFO: validating pod update-demo-nautilus-z8hzk
Jan 31 17:55:08.468: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 31 17:55:08.468: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 31 17:55:08.468: INFO: update-demo-nautilus-z8hzk is verified up and running
Jan 31 17:55:08.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-7tcxk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:55:08.581: INFO: stderr: ""
Jan 31 17:55:08.581: INFO: stdout: "true"
Jan 31 17:55:08.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-7tcxk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 31 17:55:08.668: INFO: stderr: ""
Jan 31 17:55:08.668: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 31 17:55:08.668: INFO: validating pod update-demo-nautilus-7tcxk
Jan 31 17:55:08.678: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 31 17:55:08.678: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 31 17:55:08.678: INFO: update-demo-nautilus-7tcxk is verified up and running
STEP: scaling down the replication controller 01/31/23 17:55:08.678
Jan 31 17:55:08.680: INFO: scanned /root for discovery docs: <nil>
Jan 31 17:55:08.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Jan 31 17:55:09.788: INFO: stderr: ""
Jan 31 17:55:09.788: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 01/31/23 17:55:09.788
Jan 31 17:55:09.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 31 17:55:09.886: INFO: stderr: ""
Jan 31 17:55:09.886: INFO: stdout: "update-demo-nautilus-z8hzk "
Jan 31 17:55:09.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:55:09.979: INFO: stderr: ""
Jan 31 17:55:09.979: INFO: stdout: "true"
Jan 31 17:55:09.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 31 17:55:10.066: INFO: stderr: ""
Jan 31 17:55:10.066: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 31 17:55:10.067: INFO: validating pod update-demo-nautilus-z8hzk
Jan 31 17:55:10.073: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 31 17:55:10.073: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 31 17:55:10.073: INFO: update-demo-nautilus-z8hzk is verified up and running
STEP: scaling up the replication controller 01/31/23 17:55:10.073
Jan 31 17:55:10.075: INFO: scanned /root for discovery docs: <nil>
Jan 31 17:55:10.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Jan 31 17:55:11.193: INFO: stderr: ""
Jan 31 17:55:11.193: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 01/31/23 17:55:11.193
Jan 31 17:55:11.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 31 17:55:11.267: INFO: stderr: ""
Jan 31 17:55:11.267: INFO: stdout: "update-demo-nautilus-z8hzk update-demo-nautilus-8qrwn "
Jan 31 17:55:11.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:55:11.345: INFO: stderr: ""
Jan 31 17:55:11.345: INFO: stdout: "true"
Jan 31 17:55:11.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 31 17:55:11.415: INFO: stderr: ""
Jan 31 17:55:11.415: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 31 17:55:11.415: INFO: validating pod update-demo-nautilus-z8hzk
Jan 31 17:55:11.421: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 31 17:55:11.421: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 31 17:55:11.421: INFO: update-demo-nautilus-z8hzk is verified up and running
Jan 31 17:55:11.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-8qrwn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:55:11.483: INFO: stderr: ""
Jan 31 17:55:11.483: INFO: stdout: ""
Jan 31 17:55:11.483: INFO: update-demo-nautilus-8qrwn is created but not running
Jan 31 17:55:16.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 31 17:55:16.586: INFO: stderr: ""
Jan 31 17:55:16.586: INFO: stdout: "update-demo-nautilus-z8hzk update-demo-nautilus-8qrwn "
Jan 31 17:55:16.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:55:16.682: INFO: stderr: ""
Jan 31 17:55:16.682: INFO: stdout: "true"
Jan 31 17:55:16.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 31 17:55:16.752: INFO: stderr: ""
Jan 31 17:55:16.752: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 31 17:55:16.752: INFO: validating pod update-demo-nautilus-z8hzk
Jan 31 17:55:16.759: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 31 17:55:16.759: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 31 17:55:16.759: INFO: update-demo-nautilus-z8hzk is verified up and running
Jan 31 17:55:16.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-8qrwn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 31 17:55:16.869: INFO: stderr: ""
Jan 31 17:55:16.869: INFO: stdout: "true"
Jan 31 17:55:16.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-8qrwn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 31 17:55:16.987: INFO: stderr: ""
Jan 31 17:55:16.987: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 31 17:55:16.988: INFO: validating pod update-demo-nautilus-8qrwn
Jan 31 17:55:16.997: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 31 17:55:16.997: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 31 17:55:16.997: INFO: update-demo-nautilus-8qrwn is verified up and running
STEP: using delete to clean up resources 01/31/23 17:55:16.997
Jan 31 17:55:16.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 delete --grace-period=0 --force -f -'
Jan 31 17:55:17.095: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 31 17:55:17.095: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jan 31 17:55:17.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get rc,svc -l name=update-demo --no-headers'
Jan 31 17:55:17.202: INFO: stderr: "No resources found in kubectl-8677 namespace.\n"
Jan 31 17:55:17.202: INFO: stdout: ""
Jan 31 17:55:17.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 31 17:55:17.269: INFO: stderr: ""
Jan 31 17:55:17.269: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 17:55:17.269: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8677" for this suite. 01/31/23 17:55:17.276
------------------------------
â€¢ [SLOW TEST] [15.198 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should scale a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:352

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:55:02.084
    Jan 31 17:55:02.084: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 17:55:02.085
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:02.102
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:02.107
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should scale a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:352
    STEP: creating a replication controller 01/31/23 17:55:02.115
    Jan 31 17:55:02.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 create -f -'
    Jan 31 17:55:02.992: INFO: stderr: ""
    Jan 31 17:55:02.992: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 01/31/23 17:55:02.992
    Jan 31 17:55:02.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 31 17:55:03.094: INFO: stderr: ""
    Jan 31 17:55:03.094: INFO: stdout: "update-demo-nautilus-7tcxk update-demo-nautilus-z8hzk "
    Jan 31 17:55:03.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-7tcxk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:55:03.156: INFO: stderr: ""
    Jan 31 17:55:03.156: INFO: stdout: ""
    Jan 31 17:55:03.156: INFO: update-demo-nautilus-7tcxk is created but not running
    Jan 31 17:55:08.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 31 17:55:08.288: INFO: stderr: ""
    Jan 31 17:55:08.288: INFO: stdout: "update-demo-nautilus-z8hzk update-demo-nautilus-7tcxk "
    Jan 31 17:55:08.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:55:08.375: INFO: stderr: ""
    Jan 31 17:55:08.375: INFO: stdout: "true"
    Jan 31 17:55:08.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 31 17:55:08.457: INFO: stderr: ""
    Jan 31 17:55:08.457: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 31 17:55:08.457: INFO: validating pod update-demo-nautilus-z8hzk
    Jan 31 17:55:08.468: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 31 17:55:08.468: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 31 17:55:08.468: INFO: update-demo-nautilus-z8hzk is verified up and running
    Jan 31 17:55:08.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-7tcxk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:55:08.581: INFO: stderr: ""
    Jan 31 17:55:08.581: INFO: stdout: "true"
    Jan 31 17:55:08.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-7tcxk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 31 17:55:08.668: INFO: stderr: ""
    Jan 31 17:55:08.668: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 31 17:55:08.668: INFO: validating pod update-demo-nautilus-7tcxk
    Jan 31 17:55:08.678: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 31 17:55:08.678: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 31 17:55:08.678: INFO: update-demo-nautilus-7tcxk is verified up and running
    STEP: scaling down the replication controller 01/31/23 17:55:08.678
    Jan 31 17:55:08.680: INFO: scanned /root for discovery docs: <nil>
    Jan 31 17:55:08.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
    Jan 31 17:55:09.788: INFO: stderr: ""
    Jan 31 17:55:09.788: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 01/31/23 17:55:09.788
    Jan 31 17:55:09.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 31 17:55:09.886: INFO: stderr: ""
    Jan 31 17:55:09.886: INFO: stdout: "update-demo-nautilus-z8hzk "
    Jan 31 17:55:09.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:55:09.979: INFO: stderr: ""
    Jan 31 17:55:09.979: INFO: stdout: "true"
    Jan 31 17:55:09.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 31 17:55:10.066: INFO: stderr: ""
    Jan 31 17:55:10.066: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 31 17:55:10.067: INFO: validating pod update-demo-nautilus-z8hzk
    Jan 31 17:55:10.073: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 31 17:55:10.073: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 31 17:55:10.073: INFO: update-demo-nautilus-z8hzk is verified up and running
    STEP: scaling up the replication controller 01/31/23 17:55:10.073
    Jan 31 17:55:10.075: INFO: scanned /root for discovery docs: <nil>
    Jan 31 17:55:10.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
    Jan 31 17:55:11.193: INFO: stderr: ""
    Jan 31 17:55:11.193: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 01/31/23 17:55:11.193
    Jan 31 17:55:11.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 31 17:55:11.267: INFO: stderr: ""
    Jan 31 17:55:11.267: INFO: stdout: "update-demo-nautilus-z8hzk update-demo-nautilus-8qrwn "
    Jan 31 17:55:11.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:55:11.345: INFO: stderr: ""
    Jan 31 17:55:11.345: INFO: stdout: "true"
    Jan 31 17:55:11.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 31 17:55:11.415: INFO: stderr: ""
    Jan 31 17:55:11.415: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 31 17:55:11.415: INFO: validating pod update-demo-nautilus-z8hzk
    Jan 31 17:55:11.421: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 31 17:55:11.421: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 31 17:55:11.421: INFO: update-demo-nautilus-z8hzk is verified up and running
    Jan 31 17:55:11.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-8qrwn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:55:11.483: INFO: stderr: ""
    Jan 31 17:55:11.483: INFO: stdout: ""
    Jan 31 17:55:11.483: INFO: update-demo-nautilus-8qrwn is created but not running
    Jan 31 17:55:16.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 31 17:55:16.586: INFO: stderr: ""
    Jan 31 17:55:16.586: INFO: stdout: "update-demo-nautilus-z8hzk update-demo-nautilus-8qrwn "
    Jan 31 17:55:16.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:55:16.682: INFO: stderr: ""
    Jan 31 17:55:16.682: INFO: stdout: "true"
    Jan 31 17:55:16.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-z8hzk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 31 17:55:16.752: INFO: stderr: ""
    Jan 31 17:55:16.752: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 31 17:55:16.752: INFO: validating pod update-demo-nautilus-z8hzk
    Jan 31 17:55:16.759: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 31 17:55:16.759: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 31 17:55:16.759: INFO: update-demo-nautilus-z8hzk is verified up and running
    Jan 31 17:55:16.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-8qrwn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 31 17:55:16.869: INFO: stderr: ""
    Jan 31 17:55:16.869: INFO: stdout: "true"
    Jan 31 17:55:16.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods update-demo-nautilus-8qrwn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 31 17:55:16.987: INFO: stderr: ""
    Jan 31 17:55:16.987: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 31 17:55:16.988: INFO: validating pod update-demo-nautilus-8qrwn
    Jan 31 17:55:16.997: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 31 17:55:16.997: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 31 17:55:16.997: INFO: update-demo-nautilus-8qrwn is verified up and running
    STEP: using delete to clean up resources 01/31/23 17:55:16.997
    Jan 31 17:55:16.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 delete --grace-period=0 --force -f -'
    Jan 31 17:55:17.095: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 31 17:55:17.095: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Jan 31 17:55:17.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get rc,svc -l name=update-demo --no-headers'
    Jan 31 17:55:17.202: INFO: stderr: "No resources found in kubectl-8677 namespace.\n"
    Jan 31 17:55:17.202: INFO: stdout: ""
    Jan 31 17:55:17.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-8677 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Jan 31 17:55:17.269: INFO: stderr: ""
    Jan 31 17:55:17.269: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:55:17.269: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8677" for this suite. 01/31/23 17:55:17.276
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:55:17.282
Jan 31 17:55:17.282: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename namespaces 01/31/23 17:55:17.284
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:17.3
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:17.308
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
STEP: creating a Namespace 01/31/23 17:55:17.316
STEP: patching the Namespace 01/31/23 17:55:17.336
STEP: get the Namespace and ensuring it has the label 01/31/23 17:55:17.344
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:55:17.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-1712" for this suite. 01/31/23 17:55:17.355
STEP: Destroying namespace "nspatchtest-59df8ef4-4b6f-4a9c-b877-9cdb454b6c82-8850" for this suite. 01/31/23 17:55:17.366
------------------------------
â€¢ [0.092 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:55:17.282
    Jan 31 17:55:17.282: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename namespaces 01/31/23 17:55:17.284
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:17.3
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:17.308
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:268
    STEP: creating a Namespace 01/31/23 17:55:17.316
    STEP: patching the Namespace 01/31/23 17:55:17.336
    STEP: get the Namespace and ensuring it has the label 01/31/23 17:55:17.344
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:55:17.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-1712" for this suite. 01/31/23 17:55:17.355
    STEP: Destroying namespace "nspatchtest-59df8ef4-4b6f-4a9c-b877-9cdb454b6c82-8850" for this suite. 01/31/23 17:55:17.366
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:55:17.376
Jan 31 17:55:17.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename deployment 01/31/23 17:55:17.377
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:17.396
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:17.405
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
Jan 31 17:55:17.414: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Jan 31 17:55:17.426: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 31 17:55:22.437: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/31/23 17:55:22.437
Jan 31 17:55:22.437: INFO: Creating deployment "test-rolling-update-deployment"
Jan 31 17:55:22.450: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Jan 31 17:55:22.467: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Jan 31 17:55:24.485: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Jan 31 17:55:24.491: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 55, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 55, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 55, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 55, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-7549d9f46d\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 31 17:55:26.505: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 31 17:55:26.532: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-1591  3607d5c5-4051-4bdc-aad4-f53cef08c24c 15066 1 2023-01-31 17:55:22 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-01-31 17:55:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:55:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002b48328 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-31 17:55:22 +0000 UTC,LastTransitionTime:2023-01-31 17:55:22 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-01-31 17:55:24 +0000 UTC,LastTransitionTime:2023-01-31 17:55:22 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 31 17:55:26.542: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-1591  8c84a9ea-b631-4d20-96f8-ace0c81f7204 15057 1 2023-01-31 17:55:22 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 3607d5c5-4051-4bdc-aad4-f53cef08c24c 0xc0064a6537 0xc0064a6538}] [] [{k3s Update apps/v1 2023-01-31 17:55:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3607d5c5-4051-4bdc-aad4-f53cef08c24c\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:55:24 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0064a65f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 31 17:55:26.542: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Jan 31 17:55:26.542: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-1591  ed48d392-15c8-4486-a05a-225bcf72f186 15065 2 2023-01-31 17:55:17 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 3607d5c5-4051-4bdc-aad4-f53cef08c24c 0xc0064a6657 0xc0064a6658}] [] [{e2e.test Update apps/v1 2023-01-31 17:55:17 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:55:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3607d5c5-4051-4bdc-aad4-f53cef08c24c\"}":{}}},"f:spec":{"f:replicas":{}}} } {k3s Update apps/v1 2023-01-31 17:55:24 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0064a6728 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 31 17:55:26.552: INFO: Pod "test-rolling-update-deployment-7549d9f46d-jrbxv" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-jrbxv test-rolling-update-deployment-7549d9f46d- deployment-1591  58a8bd7f-80f1-4a69-a5b0-aa962cf8233f 15056 0 2023-01-31 17:55:22 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d 8c84a9ea-b631-4d20-96f8-ace0c81f7204 0xc0064a6ba7 0xc0064a6ba8}] [] [{k3s Update v1 2023-01-31 17:55:22 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8c84a9ea-b631-4d20-96f8-ace0c81f7204\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:55:24 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.89\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cswxv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cswxv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:55:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:55:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:55:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:55:22 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.89,StartTime:2023-01-31 17:55:22 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:55:23 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:docker://5dcd3d34f99ae09f03a091845cd008a0d20fe063ad0096b2d85339edec02a7ab,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.89,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 31 17:55:26.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-1591" for this suite. 01/31/23 17:55:26.564
------------------------------
â€¢ [SLOW TEST] [9.200 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:55:17.376
    Jan 31 17:55:17.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename deployment 01/31/23 17:55:17.377
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:17.396
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:17.405
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:105
    Jan 31 17:55:17.414: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
    Jan 31 17:55:17.426: INFO: Pod name sample-pod: Found 0 pods out of 1
    Jan 31 17:55:22.437: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/31/23 17:55:22.437
    Jan 31 17:55:22.437: INFO: Creating deployment "test-rolling-update-deployment"
    Jan 31 17:55:22.450: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
    Jan 31 17:55:22.467: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
    Jan 31 17:55:24.485: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
    Jan 31 17:55:24.491: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 55, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 55, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 17, 55, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 17, 55, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-7549d9f46d\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 31 17:55:26.505: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 31 17:55:26.532: INFO: Deployment "test-rolling-update-deployment":
    &Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-1591  3607d5c5-4051-4bdc-aad4-f53cef08c24c 15066 1 2023-01-31 17:55:22 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-01-31 17:55:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:55:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002b48328 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-31 17:55:22 +0000 UTC,LastTransitionTime:2023-01-31 17:55:22 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-01-31 17:55:24 +0000 UTC,LastTransitionTime:2023-01-31 17:55:22 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Jan 31 17:55:26.542: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
    &ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-1591  8c84a9ea-b631-4d20-96f8-ace0c81f7204 15057 1 2023-01-31 17:55:22 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 3607d5c5-4051-4bdc-aad4-f53cef08c24c 0xc0064a6537 0xc0064a6538}] [] [{k3s Update apps/v1 2023-01-31 17:55:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3607d5c5-4051-4bdc-aad4-f53cef08c24c\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:55:24 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0064a65f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 17:55:26.542: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
    Jan 31 17:55:26.542: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-1591  ed48d392-15c8-4486-a05a-225bcf72f186 15065 2 2023-01-31 17:55:17 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 3607d5c5-4051-4bdc-aad4-f53cef08c24c 0xc0064a6657 0xc0064a6658}] [] [{e2e.test Update apps/v1 2023-01-31 17:55:17 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 17:55:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3607d5c5-4051-4bdc-aad4-f53cef08c24c\"}":{}}},"f:spec":{"f:replicas":{}}} } {k3s Update apps/v1 2023-01-31 17:55:24 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0064a6728 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 17:55:26.552: INFO: Pod "test-rolling-update-deployment-7549d9f46d-jrbxv" is available:
    &Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-jrbxv test-rolling-update-deployment-7549d9f46d- deployment-1591  58a8bd7f-80f1-4a69-a5b0-aa962cf8233f 15056 0 2023-01-31 17:55:22 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d 8c84a9ea-b631-4d20-96f8-ace0c81f7204 0xc0064a6ba7 0xc0064a6ba8}] [] [{k3s Update v1 2023-01-31 17:55:22 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8c84a9ea-b631-4d20-96f8-ace0c81f7204\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 17:55:24 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.89\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cswxv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cswxv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:55:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:55:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:55:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 17:55:22 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.89,StartTime:2023-01-31 17:55:22 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 17:55:23 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:docker://5dcd3d34f99ae09f03a091845cd008a0d20fe063ad0096b2d85339edec02a7ab,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.89,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:55:26.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-1591" for this suite. 01/31/23 17:55:26.564
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:55:26.578
Jan 31 17:55:26.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:55:26.579
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:26.596
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:26.603
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
STEP: Creating projection with secret that has name projected-secret-test-map-8fde90d6-ff73-489a-b501-9296e3776e8a 01/31/23 17:55:26.609
STEP: Creating a pod to test consume secrets 01/31/23 17:55:26.616
Jan 31 17:55:26.626: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670" in namespace "projected-2594" to be "Succeeded or Failed"
Jan 31 17:55:26.632: INFO: Pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670": Phase="Pending", Reason="", readiness=false. Elapsed: 6.534399ms
Jan 31 17:55:28.641: INFO: Pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015378838s
Jan 31 17:55:30.643: INFO: Pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01735783s
Jan 31 17:55:32.646: INFO: Pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019705274s
STEP: Saw pod success 01/31/23 17:55:32.646
Jan 31 17:55:32.646: INFO: Pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670" satisfied condition "Succeeded or Failed"
Jan 31 17:55:32.655: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670 container projected-secret-volume-test: <nil>
STEP: delete the pod 01/31/23 17:55:32.675
Jan 31 17:55:32.695: INFO: Waiting for pod pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670 to disappear
Jan 31 17:55:32.706: INFO: Pod pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 31 17:55:32.706: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2594" for this suite. 01/31/23 17:55:32.715
------------------------------
â€¢ [SLOW TEST] [6.147 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:55:26.578
    Jan 31 17:55:26.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:55:26.579
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:26.596
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:26.603
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:88
    STEP: Creating projection with secret that has name projected-secret-test-map-8fde90d6-ff73-489a-b501-9296e3776e8a 01/31/23 17:55:26.609
    STEP: Creating a pod to test consume secrets 01/31/23 17:55:26.616
    Jan 31 17:55:26.626: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670" in namespace "projected-2594" to be "Succeeded or Failed"
    Jan 31 17:55:26.632: INFO: Pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670": Phase="Pending", Reason="", readiness=false. Elapsed: 6.534399ms
    Jan 31 17:55:28.641: INFO: Pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015378838s
    Jan 31 17:55:30.643: INFO: Pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01735783s
    Jan 31 17:55:32.646: INFO: Pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019705274s
    STEP: Saw pod success 01/31/23 17:55:32.646
    Jan 31 17:55:32.646: INFO: Pod "pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670" satisfied condition "Succeeded or Failed"
    Jan 31 17:55:32.655: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670 container projected-secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:55:32.675
    Jan 31 17:55:32.695: INFO: Waiting for pod pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670 to disappear
    Jan 31 17:55:32.706: INFO: Pod pod-projected-secrets-fe5e581b-1aeb-4fe4-b363-3d0472520670 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:55:32.706: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2594" for this suite. 01/31/23 17:55:32.715
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:55:32.726
Jan 31 17:55:32.726: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 17:55:32.727
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:32.743
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:32.749
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
STEP: creating a collection of services 01/31/23 17:55:32.757
Jan 31 17:55:32.757: INFO: Creating e2e-svc-a-g8r7g
Jan 31 17:55:32.790: INFO: Creating e2e-svc-b-8qv9r
Jan 31 17:55:32.830: INFO: Creating e2e-svc-c-mq4w7
STEP: deleting service collection 01/31/23 17:55:32.87
Jan 31 17:55:32.913: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 17:55:32.913: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-8288" for this suite. 01/31/23 17:55:32.918
------------------------------
â€¢ [0.202 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:55:32.726
    Jan 31 17:55:32.726: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 17:55:32.727
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:32.743
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:32.749
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should delete a collection of services [Conformance]
      test/e2e/network/service.go:3654
    STEP: creating a collection of services 01/31/23 17:55:32.757
    Jan 31 17:55:32.757: INFO: Creating e2e-svc-a-g8r7g
    Jan 31 17:55:32.790: INFO: Creating e2e-svc-b-8qv9r
    Jan 31 17:55:32.830: INFO: Creating e2e-svc-c-mq4w7
    STEP: deleting service collection 01/31/23 17:55:32.87
    Jan 31 17:55:32.913: INFO: Collection of services has been deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:55:32.913: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-8288" for this suite. 01/31/23 17:55:32.918
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:55:32.929
Jan 31 17:55:32.929: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 17:55:32.929
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:32.977
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:32.985
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
STEP: Creating projection with secret that has name projected-secret-test-map-2e9b7d11-03f1-4091-902f-0a4a87179087 01/31/23 17:55:32.993
STEP: Creating a pod to test consume secrets 01/31/23 17:55:33
Jan 31 17:55:33.009: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b" in namespace "projected-7321" to be "Succeeded or Failed"
Jan 31 17:55:33.022: INFO: Pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b": Phase="Pending", Reason="", readiness=false. Elapsed: 12.220627ms
Jan 31 17:55:35.032: INFO: Pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02228595s
Jan 31 17:55:37.033: INFO: Pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023608839s
Jan 31 17:55:39.036: INFO: Pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.026934135s
STEP: Saw pod success 01/31/23 17:55:39.036
Jan 31 17:55:39.037: INFO: Pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b" satisfied condition "Succeeded or Failed"
Jan 31 17:55:39.047: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b container projected-secret-volume-test: <nil>
STEP: delete the pod 01/31/23 17:55:39.063
Jan 31 17:55:39.078: INFO: Waiting for pod pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b to disappear
Jan 31 17:55:39.085: INFO: Pod pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 31 17:55:39.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7321" for this suite. 01/31/23 17:55:39.092
------------------------------
â€¢ [SLOW TEST] [6.172 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:55:32.929
    Jan 31 17:55:32.929: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 17:55:32.929
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:32.977
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:32.985
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:78
    STEP: Creating projection with secret that has name projected-secret-test-map-2e9b7d11-03f1-4091-902f-0a4a87179087 01/31/23 17:55:32.993
    STEP: Creating a pod to test consume secrets 01/31/23 17:55:33
    Jan 31 17:55:33.009: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b" in namespace "projected-7321" to be "Succeeded or Failed"
    Jan 31 17:55:33.022: INFO: Pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b": Phase="Pending", Reason="", readiness=false. Elapsed: 12.220627ms
    Jan 31 17:55:35.032: INFO: Pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02228595s
    Jan 31 17:55:37.033: INFO: Pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023608839s
    Jan 31 17:55:39.036: INFO: Pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.026934135s
    STEP: Saw pod success 01/31/23 17:55:39.036
    Jan 31 17:55:39.037: INFO: Pod "pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b" satisfied condition "Succeeded or Failed"
    Jan 31 17:55:39.047: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b container projected-secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 17:55:39.063
    Jan 31 17:55:39.078: INFO: Waiting for pod pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b to disappear
    Jan 31 17:55:39.085: INFO: Pod pod-projected-secrets-db1bfc2c-d433-4d2d-a63a-c141f3d6c93b no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:55:39.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7321" for this suite. 01/31/23 17:55:39.092
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:55:39.102
Jan 31 17:55:39.102: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-probe 01/31/23 17:55:39.103
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:39.118
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:39.124
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
STEP: Creating pod busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee in namespace container-probe-1446 01/31/23 17:55:39.131
Jan 31 17:55:39.139: INFO: Waiting up to 5m0s for pod "busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee" in namespace "container-probe-1446" to be "not pending"
Jan 31 17:55:39.150: INFO: Pod "busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee": Phase="Pending", Reason="", readiness=false. Elapsed: 10.716066ms
Jan 31 17:55:41.161: INFO: Pod "busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee": Phase="Running", Reason="", readiness=true. Elapsed: 2.021985179s
Jan 31 17:55:41.162: INFO: Pod "busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee" satisfied condition "not pending"
Jan 31 17:55:41.162: INFO: Started pod busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee in namespace container-probe-1446
STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:55:41.162
Jan 31 17:55:41.172: INFO: Initial restart count of pod busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee is 0
STEP: deleting the pod 01/31/23 17:59:42.47
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 31 17:59:42.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-1446" for this suite. 01/31/23 17:59:42.506
------------------------------
â€¢ [SLOW TEST] [243.414 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:55:39.102
    Jan 31 17:55:39.102: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-probe 01/31/23 17:55:39.103
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:55:39.118
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:55:39.124
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:152
    STEP: Creating pod busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee in namespace container-probe-1446 01/31/23 17:55:39.131
    Jan 31 17:55:39.139: INFO: Waiting up to 5m0s for pod "busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee" in namespace "container-probe-1446" to be "not pending"
    Jan 31 17:55:39.150: INFO: Pod "busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee": Phase="Pending", Reason="", readiness=false. Elapsed: 10.716066ms
    Jan 31 17:55:41.161: INFO: Pod "busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee": Phase="Running", Reason="", readiness=true. Elapsed: 2.021985179s
    Jan 31 17:55:41.162: INFO: Pod "busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee" satisfied condition "not pending"
    Jan 31 17:55:41.162: INFO: Started pod busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee in namespace container-probe-1446
    STEP: checking the pod's current state and verifying that restartCount is present 01/31/23 17:55:41.162
    Jan 31 17:55:41.172: INFO: Initial restart count of pod busybox-f36ce3be-82dd-4b64-bba0-660176bc44ee is 0
    STEP: deleting the pod 01/31/23 17:59:42.47
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:59:42.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-1446" for this suite. 01/31/23 17:59:42.506
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:59:42.519
Jan 31 17:59:42.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 17:59:42.52
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:59:42.538
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:59:42.544
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
STEP: Counting existing ResourceQuota 01/31/23 17:59:42.55
STEP: Creating a ResourceQuota 01/31/23 17:59:47.562
STEP: Ensuring resource quota status is calculated 01/31/23 17:59:47.571
STEP: Creating a ReplicaSet 01/31/23 17:59:49.582
STEP: Ensuring resource quota status captures replicaset creation 01/31/23 17:59:49.603
STEP: Deleting a ReplicaSet 01/31/23 17:59:51.614
STEP: Ensuring resource quota status released usage 01/31/23 17:59:51.627
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 17:59:53.638: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-6949" for this suite. 01/31/23 17:59:53.649
------------------------------
â€¢ [SLOW TEST] [11.141 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:59:42.519
    Jan 31 17:59:42.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 17:59:42.52
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:59:42.538
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:59:42.544
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
      test/e2e/apimachinery/resource_quota.go:448
    STEP: Counting existing ResourceQuota 01/31/23 17:59:42.55
    STEP: Creating a ResourceQuota 01/31/23 17:59:47.562
    STEP: Ensuring resource quota status is calculated 01/31/23 17:59:47.571
    STEP: Creating a ReplicaSet 01/31/23 17:59:49.582
    STEP: Ensuring resource quota status captures replicaset creation 01/31/23 17:59:49.603
    STEP: Deleting a ReplicaSet 01/31/23 17:59:51.614
    STEP: Ensuring resource quota status released usage 01/31/23 17:59:51.627
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:59:53.638: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-6949" for this suite. 01/31/23 17:59:53.649
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:59:53.662
Jan 31 17:59:53.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 17:59:53.664
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:59:53.692
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:59:53.704
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 17:59:53.735
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:59:54.49
STEP: Deploying the webhook pod 01/31/23 17:59:54.505
STEP: Wait for the deployment to be ready 01/31/23 17:59:54.524
Jan 31 17:59:54.544: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/31/23 17:59:56.576
STEP: Verifying the service has paired with the endpoint 01/31/23 17:59:56.619
Jan 31 17:59:57.619: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
STEP: Registering the mutating pod webhook via the AdmissionRegistration API 01/31/23 17:59:57.628
STEP: create a pod that should be updated by the webhook 01/31/23 17:59:57.665
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 17:59:57.707: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-2992" for this suite. 01/31/23 17:59:57.773
STEP: Destroying namespace "webhook-2992-markers" for this suite. 01/31/23 17:59:57.786
------------------------------
â€¢ [4.132 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:59:53.662
    Jan 31 17:59:53.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 17:59:53.664
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:59:53.692
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:59:53.704
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 17:59:53.735
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 17:59:54.49
    STEP: Deploying the webhook pod 01/31/23 17:59:54.505
    STEP: Wait for the deployment to be ready 01/31/23 17:59:54.524
    Jan 31 17:59:54.544: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/31/23 17:59:56.576
    STEP: Verifying the service has paired with the endpoint 01/31/23 17:59:56.619
    Jan 31 17:59:57.619: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate pod and apply defaults after mutation [Conformance]
      test/e2e/apimachinery/webhook.go:264
    STEP: Registering the mutating pod webhook via the AdmissionRegistration API 01/31/23 17:59:57.628
    STEP: create a pod that should be updated by the webhook 01/31/23 17:59:57.665
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 17:59:57.707: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-2992" for this suite. 01/31/23 17:59:57.773
    STEP: Destroying namespace "webhook-2992-markers" for this suite. 01/31/23 17:59:57.786
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:222
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 17:59:57.795
Jan 31 17:59:57.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sched-preemption 01/31/23 17:59:57.796
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:59:57.814
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:59:57.825
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Jan 31 17:59:57.849: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 31 18:00:57.883: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:222
STEP: Create pods that use 4/5 of node resources. 01/31/23 18:00:57.888
Jan 31 18:00:57.916: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jan 31 18:00:57.924: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jan 31 18:00:57.946: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jan 31 18:00:57.957: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 01/31/23 18:00:57.957
Jan 31 18:00:57.957: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-6575" to be "running"
Jan 31 18:00:57.970: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 12.573357ms
Jan 31 18:00:59.976: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.018673942s
Jan 31 18:00:59.976: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Jan 31 18:00:59.976: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-6575" to be "running"
Jan 31 18:00:59.981: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.11409ms
Jan 31 18:00:59.981: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Jan 31 18:00:59.981: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-6575" to be "running"
Jan 31 18:00:59.986: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 5.000664ms
Jan 31 18:01:01.997: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.015493378s
Jan 31 18:01:01.997: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Jan 31 18:01:01.997: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-6575" to be "running"
Jan 31 18:01:02.003: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.822436ms
Jan 31 18:01:02.003: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a critical pod that use same resources as that of a lower priority pod 01/31/23 18:01:02.003
Jan 31 18:01:02.026: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
Jan 31 18:01:02.032: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.609102ms
Jan 31 18:01:04.043: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017475405s
Jan 31 18:01:06.040: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.014628305s
Jan 31 18:01:06.040: INFO: Pod "critical-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:01:06.100: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-6575" for this suite. 01/31/23 18:01:06.183
------------------------------
â€¢ [SLOW TEST] [68.396 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:222

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 17:59:57.795
    Jan 31 17:59:57.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sched-preemption 01/31/23 17:59:57.796
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 17:59:57.814
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 17:59:57.825
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Jan 31 17:59:57.849: INFO: Waiting up to 1m0s for all nodes to be ready
    Jan 31 18:00:57.883: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates lower priority pod preemption by critical pod [Conformance]
      test/e2e/scheduling/preemption.go:222
    STEP: Create pods that use 4/5 of node resources. 01/31/23 18:00:57.888
    Jan 31 18:00:57.916: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Jan 31 18:00:57.924: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Jan 31 18:00:57.946: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Jan 31 18:00:57.957: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 01/31/23 18:00:57.957
    Jan 31 18:00:57.957: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-6575" to be "running"
    Jan 31 18:00:57.970: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 12.573357ms
    Jan 31 18:00:59.976: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.018673942s
    Jan 31 18:00:59.976: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Jan 31 18:00:59.976: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-6575" to be "running"
    Jan 31 18:00:59.981: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.11409ms
    Jan 31 18:00:59.981: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Jan 31 18:00:59.981: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-6575" to be "running"
    Jan 31 18:00:59.986: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 5.000664ms
    Jan 31 18:01:01.997: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.015493378s
    Jan 31 18:01:01.997: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Jan 31 18:01:01.997: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-6575" to be "running"
    Jan 31 18:01:02.003: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.822436ms
    Jan 31 18:01:02.003: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a critical pod that use same resources as that of a lower priority pod 01/31/23 18:01:02.003
    Jan 31 18:01:02.026: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
    Jan 31 18:01:02.032: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.609102ms
    Jan 31 18:01:04.043: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017475405s
    Jan 31 18:01:06.040: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.014628305s
    Jan 31 18:01:06.040: INFO: Pod "critical-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:01:06.100: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-6575" for this suite. 01/31/23 18:01:06.183
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:01:06.193
Jan 31 18:01:06.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename daemonsets 01/31/23 18:01:06.194
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:01:06.212
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:01:06.219
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166
STEP: Creating simple DaemonSet "daemon-set" 01/31/23 18:01:06.249
STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 18:01:06.257
Jan 31 18:01:06.271: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:01:06.271: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:01:07.291: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:01:07.291: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:01:08.292: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 31 18:01:08.292: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived. 01/31/23 18:01:08.301
Jan 31 18:01:08.337: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 18:01:08.337: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:01:09.360: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 18:01:09.360: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:01:10.357: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 18:01:10.357: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:01:11.352: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 18:01:11.352: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:01:12.351: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 18:01:12.351: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:01:13.355: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 31 18:01:13.355: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/31/23 18:01:13.362
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5241, will wait for the garbage collector to delete the pods 01/31/23 18:01:13.362
Jan 31 18:01:13.430: INFO: Deleting DaemonSet.extensions daemon-set took: 11.97516ms
Jan 31 18:01:13.530: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.790575ms
Jan 31 18:01:15.938: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:01:15.938: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 31 18:01:15.943: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15478"},"items":null}

Jan 31 18:01:15.950: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15478"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:01:15.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-5241" for this suite. 01/31/23 18:01:15.977
------------------------------
â€¢ [SLOW TEST] [9.792 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:01:06.193
    Jan 31 18:01:06.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename daemonsets 01/31/23 18:01:06.194
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:01:06.212
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:01:06.219
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should run and stop simple daemon [Conformance]
      test/e2e/apps/daemon_set.go:166
    STEP: Creating simple DaemonSet "daemon-set" 01/31/23 18:01:06.249
    STEP: Check that daemon pods launch on every node of the cluster. 01/31/23 18:01:06.257
    Jan 31 18:01:06.271: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:01:06.271: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:01:07.291: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:01:07.291: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:01:08.292: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 31 18:01:08.292: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Stop a daemon pod, check that the daemon pod is revived. 01/31/23 18:01:08.301
    Jan 31 18:01:08.337: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 18:01:08.337: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:01:09.360: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 18:01:09.360: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:01:10.357: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 18:01:10.357: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:01:11.352: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 18:01:11.352: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:01:12.351: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 18:01:12.351: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:01:13.355: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 31 18:01:13.355: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/31/23 18:01:13.362
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5241, will wait for the garbage collector to delete the pods 01/31/23 18:01:13.362
    Jan 31 18:01:13.430: INFO: Deleting DaemonSet.extensions daemon-set took: 11.97516ms
    Jan 31 18:01:13.530: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.790575ms
    Jan 31 18:01:15.938: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:01:15.938: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 31 18:01:15.943: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15478"},"items":null}

    Jan 31 18:01:15.950: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15478"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:01:15.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-5241" for this suite. 01/31/23 18:01:15.977
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:01:15.985
Jan 31 18:01:15.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename var-expansion 01/31/23 18:01:15.986
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:01:16.005
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:01:16.014
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
STEP: Creating a pod to test substitution in volume subpath 01/31/23 18:01:16.023
Jan 31 18:01:16.039: INFO: Waiting up to 5m0s for pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db" in namespace "var-expansion-1250" to be "Succeeded or Failed"
Jan 31 18:01:16.048: INFO: Pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db": Phase="Pending", Reason="", readiness=false. Elapsed: 8.467483ms
Jan 31 18:01:18.061: INFO: Pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022005668s
Jan 31 18:01:20.059: INFO: Pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019232833s
Jan 31 18:01:22.060: INFO: Pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.0201445s
STEP: Saw pod success 01/31/23 18:01:22.06
Jan 31 18:01:22.060: INFO: Pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db" satisfied condition "Succeeded or Failed"
Jan 31 18:01:22.073: INFO: Trying to get logs from node 26-m02 pod var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db container dapi-container: <nil>
STEP: delete the pod 01/31/23 18:01:22.102
Jan 31 18:01:22.118: INFO: Waiting for pod var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db to disappear
Jan 31 18:01:22.129: INFO: Pod var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 31 18:01:22.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-1250" for this suite. 01/31/23 18:01:22.136
------------------------------
â€¢ [SLOW TEST] [6.159 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:01:15.985
    Jan 31 18:01:15.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename var-expansion 01/31/23 18:01:15.986
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:01:16.005
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:01:16.014
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a volume subpath [Conformance]
      test/e2e/common/node/expansion.go:112
    STEP: Creating a pod to test substitution in volume subpath 01/31/23 18:01:16.023
    Jan 31 18:01:16.039: INFO: Waiting up to 5m0s for pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db" in namespace "var-expansion-1250" to be "Succeeded or Failed"
    Jan 31 18:01:16.048: INFO: Pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db": Phase="Pending", Reason="", readiness=false. Elapsed: 8.467483ms
    Jan 31 18:01:18.061: INFO: Pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022005668s
    Jan 31 18:01:20.059: INFO: Pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019232833s
    Jan 31 18:01:22.060: INFO: Pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.0201445s
    STEP: Saw pod success 01/31/23 18:01:22.06
    Jan 31 18:01:22.060: INFO: Pod "var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db" satisfied condition "Succeeded or Failed"
    Jan 31 18:01:22.073: INFO: Trying to get logs from node 26-m02 pod var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db container dapi-container: <nil>
    STEP: delete the pod 01/31/23 18:01:22.102
    Jan 31 18:01:22.118: INFO: Waiting for pod var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db to disappear
    Jan 31 18:01:22.129: INFO: Pod var-expansion-0f560a4e-e1a5-45cd-8eba-2422659644db no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:01:22.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-1250" for this suite. 01/31/23 18:01:22.136
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:01:22.145
Jan 31 18:01:22.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename statefulset 01/31/23 18:01:22.146
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:01:22.16
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:01:22.166
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-6286 01/31/23 18:01:22.172
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
Jan 31 18:01:22.204: INFO: Found 0 stateful pods, waiting for 1
Jan 31 18:01:32.218: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 18:01:42.217: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 18:01:52.215: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet 01/31/23 18:01:52.234
W0131 18:01:52.248215      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Jan 31 18:01:52.268: INFO: Found 1 stateful pods, waiting for 2
Jan 31 18:02:02.279: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 18:02:02.279: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 18:02:12.280: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 18:02:12.281: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 18:02:22.283: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 18:02:32.276: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Jan 31 18:02:42.280: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 31 18:02:42.280: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets 01/31/23 18:02:42.295
STEP: Delete all of the StatefulSets 01/31/23 18:02:42.301
STEP: Verify that StatefulSets have been deleted 01/31/23 18:02:42.312
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 31 18:02:42.320: INFO: Deleting all statefulset in ns statefulset-6286
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 31 18:02:42.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-6286" for this suite. 01/31/23 18:02:42.358
------------------------------
â€¢ [SLOW TEST] [80.224 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/apps/statefulset.go:908

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:01:22.145
    Jan 31 18:01:22.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename statefulset 01/31/23 18:01:22.146
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:01:22.16
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:01:22.166
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-6286 01/31/23 18:01:22.172
    [It] should list, patch and delete a collection of StatefulSets [Conformance]
      test/e2e/apps/statefulset.go:908
    Jan 31 18:01:22.204: INFO: Found 0 stateful pods, waiting for 1
    Jan 31 18:01:32.218: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 18:01:42.217: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 18:01:52.215: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: patching the StatefulSet 01/31/23 18:01:52.234
    W0131 18:01:52.248215      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Jan 31 18:01:52.268: INFO: Found 1 stateful pods, waiting for 2
    Jan 31 18:02:02.279: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 18:02:02.279: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 18:02:12.280: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 18:02:12.281: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 18:02:22.283: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 18:02:32.276: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Jan 31 18:02:42.280: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 31 18:02:42.280: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Listing all StatefulSets 01/31/23 18:02:42.295
    STEP: Delete all of the StatefulSets 01/31/23 18:02:42.301
    STEP: Verify that StatefulSets have been deleted 01/31/23 18:02:42.312
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 31 18:02:42.320: INFO: Deleting all statefulset in ns statefulset-6286
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:02:42.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-6286" for this suite. 01/31/23 18:02:42.358
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:02:42.369
Jan 31 18:02:42.369: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename disruption 01/31/23 18:02:42.37
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:02:42.39
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:02:42.398
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
STEP: creating the pdb 01/31/23 18:02:42.407
STEP: Waiting for the pdb to be processed 01/31/23 18:02:42.416
STEP: updating the pdb 01/31/23 18:02:42.423
STEP: Waiting for the pdb to be processed 01/31/23 18:02:42.436
STEP: patching the pdb 01/31/23 18:02:42.443
STEP: Waiting for the pdb to be processed 01/31/23 18:02:42.456
STEP: Waiting for the pdb to be deleted 01/31/23 18:02:42.471
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Jan 31 18:02:42.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-1213" for this suite. 01/31/23 18:02:42.482
------------------------------
â€¢ [0.119 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:02:42.369
    Jan 31 18:02:42.369: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename disruption 01/31/23 18:02:42.37
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:02:42.39
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:02:42.398
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should create a PodDisruptionBudget [Conformance]
      test/e2e/apps/disruption.go:108
    STEP: creating the pdb 01/31/23 18:02:42.407
    STEP: Waiting for the pdb to be processed 01/31/23 18:02:42.416
    STEP: updating the pdb 01/31/23 18:02:42.423
    STEP: Waiting for the pdb to be processed 01/31/23 18:02:42.436
    STEP: patching the pdb 01/31/23 18:02:42.443
    STEP: Waiting for the pdb to be processed 01/31/23 18:02:42.456
    STEP: Waiting for the pdb to be deleted 01/31/23 18:02:42.471
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:02:42.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-1213" for this suite. 01/31/23 18:02:42.482
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:02:42.489
Jan 31 18:02:42.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sched-pred 01/31/23 18:02:42.49
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:02:42.506
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:02:42.513
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Jan 31 18:02:42.519: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 31 18:02:42.530: INFO: Waiting for terminating namespaces to be deleted...
Jan 31 18:02:42.535: INFO: 
Logging pods the apiserver thinks is on node 26-m02 before test
Jan 31 18:02:42.542: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-2s64n from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 18:02:42.542: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 18:02:42.542: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 31 18:02:42.542: INFO: sonobuoy from sonobuoy started at 2023-01-31 16:39:57 +0000 UTC (1 container statuses recorded)
Jan 31 18:02:42.542: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 31 18:02:42.542: INFO: test-ss-0 from statefulset-6286 started at 2023-01-31 18:02:17 +0000 UTC (2 container statuses recorded)
Jan 31 18:02:42.542: INFO: 	Container test-ss ready: true, restart count 0
Jan 31 18:02:42.542: INFO: 	Container webserver ready: true, restart count 0
Jan 31 18:02:42.542: INFO: 
Logging pods the apiserver thinks is on node 26 before test
Jan 31 18:02:42.549: INFO: coredns-56bfc489cf-8ptdd from kube-system started at 2023-01-31 16:39:52 +0000 UTC (1 container statuses recorded)
Jan 31 18:02:42.549: INFO: 	Container coredns ready: true, restart count 0
Jan 31 18:02:42.549: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 18:02:42.549: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 18:02:42.549: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 31 18:02:42.549: INFO: sonobuoy-e2e-job-1f36c7afce724735 from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 18:02:42.549: INFO: 	Container e2e ready: true, restart count 0
Jan 31 18:02:42.549: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 18:02:42.549: INFO: test-ss-1 from statefulset-6286 started at 2023-01-31 18:01:52 +0000 UTC (2 container statuses recorded)
Jan 31 18:02:42.549: INFO: 	Container test-ss ready: true, restart count 0
Jan 31 18:02:42.549: INFO: 	Container webserver ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
STEP: Trying to launch a pod without a label to get a node which can launch it. 01/31/23 18:02:42.549
Jan 31 18:02:42.558: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-6001" to be "running"
Jan 31 18:02:42.566: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 7.980318ms
Jan 31 18:02:44.576: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.017532997s
Jan 31 18:02:44.576: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 01/31/23 18:02:44.584
STEP: Trying to apply a random label on the found node. 01/31/23 18:02:44.605
STEP: verifying the node has the label kubernetes.io/e2e-eb1a6a83-a891-4727-bc63-50694ad12779 42 01/31/23 18:02:44.628
STEP: Trying to relaunch the pod, now with labels. 01/31/23 18:02:44.635
Jan 31 18:02:44.642: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-6001" to be "not pending"
Jan 31 18:02:44.650: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 8.220324ms
Jan 31 18:02:46.664: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.02234263s
Jan 31 18:02:46.664: INFO: Pod "with-labels" satisfied condition "not pending"
STEP: removing the label kubernetes.io/e2e-eb1a6a83-a891-4727-bc63-50694ad12779 off the node 26-m02 01/31/23 18:02:46.673
STEP: verifying the node doesn't have the label kubernetes.io/e2e-eb1a6a83-a891-4727-bc63-50694ad12779 01/31/23 18:02:46.694
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:02:46.704: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-6001" for this suite. 01/31/23 18:02:46.713
------------------------------
â€¢ [4.233 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:02:42.489
    Jan 31 18:02:42.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sched-pred 01/31/23 18:02:42.49
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:02:42.506
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:02:42.513
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Jan 31 18:02:42.519: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Jan 31 18:02:42.530: INFO: Waiting for terminating namespaces to be deleted...
    Jan 31 18:02:42.535: INFO: 
    Logging pods the apiserver thinks is on node 26-m02 before test
    Jan 31 18:02:42.542: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-2s64n from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 18:02:42.542: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 18:02:42.542: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 31 18:02:42.542: INFO: sonobuoy from sonobuoy started at 2023-01-31 16:39:57 +0000 UTC (1 container statuses recorded)
    Jan 31 18:02:42.542: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Jan 31 18:02:42.542: INFO: test-ss-0 from statefulset-6286 started at 2023-01-31 18:02:17 +0000 UTC (2 container statuses recorded)
    Jan 31 18:02:42.542: INFO: 	Container test-ss ready: true, restart count 0
    Jan 31 18:02:42.542: INFO: 	Container webserver ready: true, restart count 0
    Jan 31 18:02:42.542: INFO: 
    Logging pods the apiserver thinks is on node 26 before test
    Jan 31 18:02:42.549: INFO: coredns-56bfc489cf-8ptdd from kube-system started at 2023-01-31 16:39:52 +0000 UTC (1 container statuses recorded)
    Jan 31 18:02:42.549: INFO: 	Container coredns ready: true, restart count 0
    Jan 31 18:02:42.549: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 18:02:42.549: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 18:02:42.549: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 31 18:02:42.549: INFO: sonobuoy-e2e-job-1f36c7afce724735 from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 18:02:42.549: INFO: 	Container e2e ready: true, restart count 0
    Jan 31 18:02:42.549: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 18:02:42.549: INFO: test-ss-1 from statefulset-6286 started at 2023-01-31 18:01:52 +0000 UTC (2 container statuses recorded)
    Jan 31 18:02:42.549: INFO: 	Container test-ss ready: true, restart count 0
    Jan 31 18:02:42.549: INFO: 	Container webserver ready: true, restart count 0
    [It] validates that NodeSelector is respected if matching  [Conformance]
      test/e2e/scheduling/predicates.go:466
    STEP: Trying to launch a pod without a label to get a node which can launch it. 01/31/23 18:02:42.549
    Jan 31 18:02:42.558: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-6001" to be "running"
    Jan 31 18:02:42.566: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 7.980318ms
    Jan 31 18:02:44.576: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.017532997s
    Jan 31 18:02:44.576: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 01/31/23 18:02:44.584
    STEP: Trying to apply a random label on the found node. 01/31/23 18:02:44.605
    STEP: verifying the node has the label kubernetes.io/e2e-eb1a6a83-a891-4727-bc63-50694ad12779 42 01/31/23 18:02:44.628
    STEP: Trying to relaunch the pod, now with labels. 01/31/23 18:02:44.635
    Jan 31 18:02:44.642: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-6001" to be "not pending"
    Jan 31 18:02:44.650: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 8.220324ms
    Jan 31 18:02:46.664: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.02234263s
    Jan 31 18:02:46.664: INFO: Pod "with-labels" satisfied condition "not pending"
    STEP: removing the label kubernetes.io/e2e-eb1a6a83-a891-4727-bc63-50694ad12779 off the node 26-m02 01/31/23 18:02:46.673
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-eb1a6a83-a891-4727-bc63-50694ad12779 01/31/23 18:02:46.694
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:02:46.704: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-6001" for this suite. 01/31/23 18:02:46.713
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected combined
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
[BeforeEach] [sig-storage] Projected combined
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:02:46.722
Jan 31 18:02:46.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 18:02:46.723
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:02:46.742
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:02:46.751
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:31
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
STEP: Creating configMap with name configmap-projected-all-test-volume-7535862f-0048-4812-9a86-be2dac1e06c8 01/31/23 18:02:46.759
STEP: Creating secret with name secret-projected-all-test-volume-cb5d030d-4232-44e6-809f-026f294afacf 01/31/23 18:02:46.767
STEP: Creating a pod to test Check all projections for projected volume plugin 01/31/23 18:02:46.774
Jan 31 18:02:46.791: INFO: Waiting up to 5m0s for pod "projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a" in namespace "projected-2063" to be "Succeeded or Failed"
Jan 31 18:02:46.801: INFO: Pod "projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a": Phase="Pending", Reason="", readiness=false. Elapsed: 9.940744ms
Jan 31 18:02:48.809: INFO: Pod "projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018180088s
Jan 31 18:02:50.809: INFO: Pod "projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018425609s
STEP: Saw pod success 01/31/23 18:02:50.809
Jan 31 18:02:50.809: INFO: Pod "projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a" satisfied condition "Succeeded or Failed"
Jan 31 18:02:50.814: INFO: Trying to get logs from node 26-m02 pod projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a container projected-all-volume-test: <nil>
STEP: delete the pod 01/31/23 18:02:50.825
Jan 31 18:02:50.837: INFO: Waiting for pod projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a to disappear
Jan 31 18:02:50.842: INFO: Pod projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/node/init/init.go:32
Jan 31 18:02:50.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected combined
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected combined
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2063" for this suite. 01/31/23 18:02:50.85
------------------------------
â€¢ [4.135 seconds]
[sig-storage] Projected combined
test/e2e/common/storage/framework.go:23
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected combined
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:02:46.722
    Jan 31 18:02:46.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 18:02:46.723
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:02:46.742
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:02:46.751
    [BeforeEach] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:31
    [It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
      test/e2e/common/storage/projected_combined.go:44
    STEP: Creating configMap with name configmap-projected-all-test-volume-7535862f-0048-4812-9a86-be2dac1e06c8 01/31/23 18:02:46.759
    STEP: Creating secret with name secret-projected-all-test-volume-cb5d030d-4232-44e6-809f-026f294afacf 01/31/23 18:02:46.767
    STEP: Creating a pod to test Check all projections for projected volume plugin 01/31/23 18:02:46.774
    Jan 31 18:02:46.791: INFO: Waiting up to 5m0s for pod "projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a" in namespace "projected-2063" to be "Succeeded or Failed"
    Jan 31 18:02:46.801: INFO: Pod "projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a": Phase="Pending", Reason="", readiness=false. Elapsed: 9.940744ms
    Jan 31 18:02:48.809: INFO: Pod "projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018180088s
    Jan 31 18:02:50.809: INFO: Pod "projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018425609s
    STEP: Saw pod success 01/31/23 18:02:50.809
    Jan 31 18:02:50.809: INFO: Pod "projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a" satisfied condition "Succeeded or Failed"
    Jan 31 18:02:50.814: INFO: Trying to get logs from node 26-m02 pod projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a container projected-all-volume-test: <nil>
    STEP: delete the pod 01/31/23 18:02:50.825
    Jan 31 18:02:50.837: INFO: Waiting for pod projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a to disappear
    Jan 31 18:02:50.842: INFO: Pod projected-volume-bf05b270-990f-41a4-b742-5a04aa6de50a no longer exists
    [AfterEach] [sig-storage] Projected combined
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:02:50.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected combined
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected combined
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2063" for this suite. 01/31/23 18:02:50.85
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:02:50.862
Jan 31 18:02:50.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename var-expansion 01/31/23 18:02:50.863
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:02:50.879
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:02:50.886
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
STEP: Creating a pod to test env composition 01/31/23 18:02:50.892
Jan 31 18:02:50.904: INFO: Waiting up to 5m0s for pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3" in namespace "var-expansion-6220" to be "Succeeded or Failed"
Jan 31 18:02:50.912: INFO: Pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3": Phase="Pending", Reason="", readiness=false. Elapsed: 8.116447ms
Jan 31 18:02:52.924: INFO: Pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019986913s
Jan 31 18:02:54.922: INFO: Pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018124849s
Jan 31 18:02:56.921: INFO: Pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017293846s
STEP: Saw pod success 01/31/23 18:02:56.921
Jan 31 18:02:56.921: INFO: Pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3" satisfied condition "Succeeded or Failed"
Jan 31 18:02:56.928: INFO: Trying to get logs from node 26-m02 pod var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3 container dapi-container: <nil>
STEP: delete the pod 01/31/23 18:02:56.949
Jan 31 18:02:56.968: INFO: Waiting for pod var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3 to disappear
Jan 31 18:02:56.975: INFO: Pod var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 31 18:02:56.975: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-6220" for this suite. 01/31/23 18:02:56.982
------------------------------
â€¢ [SLOW TEST] [6.129 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:02:50.862
    Jan 31 18:02:50.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename var-expansion 01/31/23 18:02:50.863
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:02:50.879
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:02:50.886
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:44
    STEP: Creating a pod to test env composition 01/31/23 18:02:50.892
    Jan 31 18:02:50.904: INFO: Waiting up to 5m0s for pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3" in namespace "var-expansion-6220" to be "Succeeded or Failed"
    Jan 31 18:02:50.912: INFO: Pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3": Phase="Pending", Reason="", readiness=false. Elapsed: 8.116447ms
    Jan 31 18:02:52.924: INFO: Pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019986913s
    Jan 31 18:02:54.922: INFO: Pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018124849s
    Jan 31 18:02:56.921: INFO: Pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017293846s
    STEP: Saw pod success 01/31/23 18:02:56.921
    Jan 31 18:02:56.921: INFO: Pod "var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3" satisfied condition "Succeeded or Failed"
    Jan 31 18:02:56.928: INFO: Trying to get logs from node 26-m02 pod var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3 container dapi-container: <nil>
    STEP: delete the pod 01/31/23 18:02:56.949
    Jan 31 18:02:56.968: INFO: Waiting for pod var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3 to disappear
    Jan 31 18:02:56.975: INFO: Pod var-expansion-61e12ed2-b253-4d0b-9b1d-3e4b66216da3 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:02:56.975: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-6220" for this suite. 01/31/23 18:02:56.982
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
[BeforeEach] [sig-network] Service endpoints latency
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:02:56.991
Jan 31 18:02:56.991: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename svc-latency 01/31/23 18:02:56.992
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:02:57.009
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:02:57.017
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:31
[It] should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
Jan 31 18:02:57.024: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: creating replication controller svc-latency-rc in namespace svc-latency-7074 01/31/23 18:02:57.025
I0131 18:02:57.034213      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7074, replica count: 1
I0131 18:02:58.084664      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0131 18:02:59.084922      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0131 18:03:00.085750      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 31 18:03:00.247: INFO: Created: latency-svc-hjwpc
Jan 31 18:03:00.254: INFO: Got endpoints: latency-svc-hjwpc [67.724861ms]
Jan 31 18:03:00.357: INFO: Created: latency-svc-bviuz
Jan 31 18:03:00.371: INFO: Got endpoints: latency-svc-bviuz [116.603711ms]
Jan 31 18:03:00.375: INFO: Created: latency-svc-ijmzo
Jan 31 18:03:00.386: INFO: Got endpoints: latency-svc-ijmzo [131.675969ms]
Jan 31 18:03:00.393: INFO: Created: latency-svc-tylpl
Jan 31 18:03:00.412: INFO: Got endpoints: latency-svc-tylpl [157.802144ms]
Jan 31 18:03:00.413: INFO: Created: latency-svc-rlfea
Jan 31 18:03:00.427: INFO: Got endpoints: latency-svc-rlfea [172.464161ms]
Jan 31 18:03:00.431: INFO: Created: latency-svc-pdjty
Jan 31 18:03:00.438: INFO: Got endpoints: latency-svc-pdjty [183.954169ms]
Jan 31 18:03:00.448: INFO: Created: latency-svc-leujp
Jan 31 18:03:00.455: INFO: Got endpoints: latency-svc-leujp [200.725275ms]
Jan 31 18:03:00.467: INFO: Created: latency-svc-kczga
Jan 31 18:03:00.473: INFO: Got endpoints: latency-svc-kczga [218.856105ms]
Jan 31 18:03:00.481: INFO: Created: latency-svc-hycys
Jan 31 18:03:00.488: INFO: Got endpoints: latency-svc-hycys [233.912923ms]
Jan 31 18:03:00.505: INFO: Created: latency-svc-obyef
Jan 31 18:03:00.513: INFO: Got endpoints: latency-svc-obyef [259.668917ms]
Jan 31 18:03:00.534: INFO: Created: latency-svc-bwrcq
Jan 31 18:03:00.541: INFO: Got endpoints: latency-svc-bwrcq [287.20469ms]
Jan 31 18:03:00.575: INFO: Created: latency-svc-liyrf
Jan 31 18:03:00.577: INFO: Got endpoints: latency-svc-liyrf [322.587531ms]
Jan 31 18:03:00.584: INFO: Created: latency-svc-gdjmd
Jan 31 18:03:00.593: INFO: Created: latency-svc-haoey
Jan 31 18:03:00.593: INFO: Got endpoints: latency-svc-gdjmd [338.759569ms]
Jan 31 18:03:00.602: INFO: Got endpoints: latency-svc-haoey [348.472038ms]
Jan 31 18:03:00.636: INFO: Created: latency-svc-uxoqf
Jan 31 18:03:00.647: INFO: Got endpoints: latency-svc-uxoqf [392.385382ms]
Jan 31 18:03:00.651: INFO: Created: latency-svc-esdlx
Jan 31 18:03:00.658: INFO: Got endpoints: latency-svc-esdlx [404.085819ms]
Jan 31 18:03:00.666: INFO: Created: latency-svc-ojrpu
Jan 31 18:03:00.672: INFO: Got endpoints: latency-svc-ojrpu [301.49894ms]
Jan 31 18:03:00.675: INFO: Created: latency-svc-dvdqu
Jan 31 18:03:00.684: INFO: Got endpoints: latency-svc-dvdqu [298.824786ms]
Jan 31 18:03:00.691: INFO: Created: latency-svc-dzlfq
Jan 31 18:03:00.697: INFO: Got endpoints: latency-svc-dzlfq [284.675843ms]
Jan 31 18:03:00.711: INFO: Created: latency-svc-skysv
Jan 31 18:03:00.715: INFO: Got endpoints: latency-svc-skysv [288.392469ms]
Jan 31 18:03:00.724: INFO: Created: latency-svc-tipyi
Jan 31 18:03:00.730: INFO: Got endpoints: latency-svc-tipyi [292.311437ms]
Jan 31 18:03:00.746: INFO: Created: latency-svc-igsja
Jan 31 18:03:00.751: INFO: Got endpoints: latency-svc-igsja [295.674821ms]
Jan 31 18:03:00.765: INFO: Created: latency-svc-cuzbn
Jan 31 18:03:00.770: INFO: Got endpoints: latency-svc-cuzbn [297.326639ms]
Jan 31 18:03:00.781: INFO: Created: latency-svc-iyxbr
Jan 31 18:03:00.787: INFO: Got endpoints: latency-svc-iyxbr [298.555293ms]
Jan 31 18:03:00.834: INFO: Created: latency-svc-klkup
Jan 31 18:03:00.841: INFO: Got endpoints: latency-svc-klkup [327.730114ms]
Jan 31 18:03:00.850: INFO: Created: latency-svc-khlom
Jan 31 18:03:00.866: INFO: Got endpoints: latency-svc-khlom [324.336725ms]
Jan 31 18:03:00.866: INFO: Created: latency-svc-btfmv
Jan 31 18:03:00.876: INFO: Got endpoints: latency-svc-btfmv [299.620879ms]
Jan 31 18:03:00.879: INFO: Created: latency-svc-gjgrh
Jan 31 18:03:00.897: INFO: Got endpoints: latency-svc-gjgrh [303.811826ms]
Jan 31 18:03:00.910: INFO: Created: latency-svc-tjctg
Jan 31 18:03:00.920: INFO: Got endpoints: latency-svc-tjctg [317.665436ms]
Jan 31 18:03:00.926: INFO: Created: latency-svc-imqnx
Jan 31 18:03:00.938: INFO: Got endpoints: latency-svc-imqnx [291.251382ms]
Jan 31 18:03:00.963: INFO: Created: latency-svc-adzcv
Jan 31 18:03:00.973: INFO: Got endpoints: latency-svc-adzcv [315.040848ms]
Jan 31 18:03:00.987: INFO: Created: latency-svc-ktvce
Jan 31 18:03:00.993: INFO: Got endpoints: latency-svc-ktvce [321.188751ms]
Jan 31 18:03:01.010: INFO: Created: latency-svc-njnrt
Jan 31 18:03:01.018: INFO: Got endpoints: latency-svc-njnrt [333.091475ms]
Jan 31 18:03:01.033: INFO: Created: latency-svc-dhuwa
Jan 31 18:03:01.038: INFO: Got endpoints: latency-svc-dhuwa [341.310987ms]
Jan 31 18:03:01.084: INFO: Created: latency-svc-yapai
Jan 31 18:03:01.087: INFO: Created: latency-svc-sfqod
Jan 31 18:03:01.087: INFO: Got endpoints: latency-svc-sfqod [371.627528ms]
Jan 31 18:03:01.092: INFO: Got endpoints: latency-svc-yapai [361.081725ms]
Jan 31 18:03:01.123: INFO: Created: latency-svc-flutw
Jan 31 18:03:01.126: INFO: Got endpoints: latency-svc-flutw [355.592391ms]
Jan 31 18:03:01.130: INFO: Created: latency-svc-rcwop
Jan 31 18:03:01.130: INFO: Got endpoints: latency-svc-rcwop [378.779671ms]
Jan 31 18:03:01.206: INFO: Created: latency-svc-qsgzp
Jan 31 18:03:01.210: INFO: Created: latency-svc-ipxkl
Jan 31 18:03:01.233: INFO: Created: latency-svc-pqvmr
Jan 31 18:03:01.243: INFO: Got endpoints: latency-svc-ipxkl [402.150881ms]
Jan 31 18:03:01.250: INFO: Got endpoints: latency-svc-pqvmr [381.821433ms]
Jan 31 18:03:01.254: INFO: Got endpoints: latency-svc-qsgzp [466.799596ms]
Jan 31 18:03:01.265: INFO: Created: latency-svc-ljudp
Jan 31 18:03:01.272: INFO: Got endpoints: latency-svc-ljudp [395.540468ms]
Jan 31 18:03:01.279: INFO: Created: latency-svc-rszpb
Jan 31 18:03:01.289: INFO: Got endpoints: latency-svc-rszpb [391.613113ms]
Jan 31 18:03:01.291: INFO: Created: latency-svc-dsnjl
Jan 31 18:03:01.300: INFO: Got endpoints: latency-svc-dsnjl [380.057501ms]
Jan 31 18:03:01.312: INFO: Created: latency-svc-vtzmd
Jan 31 18:03:01.319: INFO: Got endpoints: latency-svc-vtzmd [381.444337ms]
Jan 31 18:03:01.339: INFO: Created: latency-svc-bcyeg
Jan 31 18:03:01.349: INFO: Got endpoints: latency-svc-bcyeg [375.248389ms]
Jan 31 18:03:01.366: INFO: Created: latency-svc-rjczj
Jan 31 18:03:01.372: INFO: Got endpoints: latency-svc-rjczj [378.10024ms]
Jan 31 18:03:01.383: INFO: Created: latency-svc-niwfx
Jan 31 18:03:01.389: INFO: Got endpoints: latency-svc-niwfx [371.019693ms]
Jan 31 18:03:01.426: INFO: Created: latency-svc-xmdsy
Jan 31 18:03:01.428: INFO: Created: latency-svc-yjajg
Jan 31 18:03:01.428: INFO: Got endpoints: latency-svc-yjajg [389.763538ms]
Jan 31 18:03:01.434: INFO: Got endpoints: latency-svc-xmdsy [347.396073ms]
Jan 31 18:03:01.438: INFO: Created: latency-svc-rhieb
Jan 31 18:03:01.443: INFO: Got endpoints: latency-svc-rhieb [351.042033ms]
Jan 31 18:03:01.497: INFO: Created: latency-svc-ecywb
Jan 31 18:03:01.503: INFO: Created: latency-svc-tvetk
Jan 31 18:03:01.505: INFO: Got endpoints: latency-svc-ecywb [379.003638ms]
Jan 31 18:03:01.509: INFO: Got endpoints: latency-svc-tvetk [379.304529ms]
Jan 31 18:03:01.535: INFO: Created: latency-svc-nwxqy
Jan 31 18:03:01.538: INFO: Got endpoints: latency-svc-nwxqy [287.892179ms]
Jan 31 18:03:01.550: INFO: Created: latency-svc-ugriu
Jan 31 18:03:01.564: INFO: Created: latency-svc-zbizp
Jan 31 18:03:01.565: INFO: Got endpoints: latency-svc-ugriu [311.755454ms]
Jan 31 18:03:01.582: INFO: Created: latency-svc-jauej
Jan 31 18:03:01.594: INFO: Created: latency-svc-dbiez
Jan 31 18:03:01.613: INFO: Got endpoints: latency-svc-zbizp [341.158708ms]
Jan 31 18:03:01.624: INFO: Created: latency-svc-qujhd
Jan 31 18:03:01.637: INFO: Created: latency-svc-fgcrq
Jan 31 18:03:01.649: INFO: Created: latency-svc-dvrxe
Jan 31 18:03:01.663: INFO: Got endpoints: latency-svc-jauej [374.837428ms]
Jan 31 18:03:01.670: INFO: Created: latency-svc-khcsz
Jan 31 18:03:01.723: INFO: Got endpoints: latency-svc-dbiez [422.87418ms]
Jan 31 18:03:01.731: INFO: Created: latency-svc-decom
Jan 31 18:03:01.734: INFO: Created: latency-svc-knkmo
Jan 31 18:03:01.742: INFO: Created: latency-svc-yvhiq
Jan 31 18:03:01.752: INFO: Created: latency-svc-habdn
Jan 31 18:03:01.764: INFO: Created: latency-svc-vqrwb
Jan 31 18:03:01.775: INFO: Got endpoints: latency-svc-qujhd [426.129998ms]
Jan 31 18:03:01.777: INFO: Created: latency-svc-txdpw
Jan 31 18:03:01.788: INFO: Created: latency-svc-xtkcc
Jan 31 18:03:01.794: INFO: Created: latency-svc-ezpvm
Jan 31 18:03:01.808: INFO: Created: latency-svc-aayrr
Jan 31 18:03:01.815: INFO: Got endpoints: latency-svc-fgcrq [443.200853ms]
Jan 31 18:03:01.820: INFO: Created: latency-svc-aytkf
Jan 31 18:03:01.831: INFO: Created: latency-svc-sukil
Jan 31 18:03:01.839: INFO: Created: latency-svc-yhkov
Jan 31 18:03:01.863: INFO: Got endpoints: latency-svc-dvrxe [474.37325ms]
Jan 31 18:03:01.894: INFO: Created: latency-svc-bapfx
Jan 31 18:03:01.903: INFO: Created: latency-svc-hcpqu
Jan 31 18:03:01.911: INFO: Got endpoints: latency-svc-khcsz [482.604504ms]
Jan 31 18:03:01.950: INFO: Created: latency-svc-tdlyy
Jan 31 18:03:01.966: INFO: Got endpoints: latency-svc-decom [531.895209ms]
Jan 31 18:03:01.999: INFO: Created: latency-svc-sfvtn
Jan 31 18:03:02.015: INFO: Got endpoints: latency-svc-knkmo [771.231449ms]
Jan 31 18:03:02.055: INFO: Created: latency-svc-mdoyl
Jan 31 18:03:02.063: INFO: Got endpoints: latency-svc-yvhiq [619.980876ms]
Jan 31 18:03:02.119: INFO: Got endpoints: latency-svc-habdn [613.598276ms]
Jan 31 18:03:02.134: INFO: Created: latency-svc-kuubh
Jan 31 18:03:02.163: INFO: Got endpoints: latency-svc-vqrwb [654.21346ms]
Jan 31 18:03:02.173: INFO: Created: latency-svc-kqbfe
Jan 31 18:03:02.201: INFO: Created: latency-svc-gougs
Jan 31 18:03:02.210: INFO: Got endpoints: latency-svc-txdpw [672.142657ms]
Jan 31 18:03:02.247: INFO: Created: latency-svc-nlcfj
Jan 31 18:03:02.265: INFO: Got endpoints: latency-svc-xtkcc [699.574304ms]
Jan 31 18:03:02.300: INFO: Created: latency-svc-alqiz
Jan 31 18:03:02.332: INFO: Got endpoints: latency-svc-ezpvm [1.012447061s]
Jan 31 18:03:02.363: INFO: Got endpoints: latency-svc-aayrr [750.220063ms]
Jan 31 18:03:02.405: INFO: Created: latency-svc-qyiec
Jan 31 18:03:02.414: INFO: Created: latency-svc-plpgs
Jan 31 18:03:02.434: INFO: Got endpoints: latency-svc-aytkf [710.694168ms]
Jan 31 18:03:02.467: INFO: Created: latency-svc-zsxhw
Jan 31 18:03:02.469: INFO: Got endpoints: latency-svc-sukil [805.932592ms]
Jan 31 18:03:02.514: INFO: Got endpoints: latency-svc-yhkov [739.128472ms]
Jan 31 18:03:02.517: INFO: Created: latency-svc-ogiwq
Jan 31 18:03:02.546: INFO: Created: latency-svc-ttisy
Jan 31 18:03:02.564: INFO: Got endpoints: latency-svc-bapfx [748.169877ms]
Jan 31 18:03:02.605: INFO: Created: latency-svc-rihpy
Jan 31 18:03:02.614: INFO: Got endpoints: latency-svc-hcpqu [750.809173ms]
Jan 31 18:03:02.647: INFO: Created: latency-svc-hctot
Jan 31 18:03:02.663: INFO: Got endpoints: latency-svc-tdlyy [751.860021ms]
Jan 31 18:03:02.699: INFO: Created: latency-svc-jqela
Jan 31 18:03:02.711: INFO: Got endpoints: latency-svc-sfvtn [745.160307ms]
Jan 31 18:03:02.740: INFO: Created: latency-svc-zncbz
Jan 31 18:03:02.763: INFO: Got endpoints: latency-svc-mdoyl [747.910895ms]
Jan 31 18:03:02.801: INFO: Created: latency-svc-wmkbd
Jan 31 18:03:02.814: INFO: Got endpoints: latency-svc-kuubh [751.166283ms]
Jan 31 18:03:02.847: INFO: Created: latency-svc-asurw
Jan 31 18:03:02.864: INFO: Got endpoints: latency-svc-kqbfe [745.08812ms]
Jan 31 18:03:02.917: INFO: Got endpoints: latency-svc-gougs [753.763078ms]
Jan 31 18:03:02.919: INFO: Created: latency-svc-ibbvr
Jan 31 18:03:02.975: INFO: Got endpoints: latency-svc-nlcfj [763.356301ms]
Jan 31 18:03:02.995: INFO: Created: latency-svc-otvqg
Jan 31 18:03:03.021: INFO: Got endpoints: latency-svc-alqiz [756.324417ms]
Jan 31 18:03:03.026: INFO: Created: latency-svc-daxop
Jan 31 18:03:03.060: INFO: Created: latency-svc-loevk
Jan 31 18:03:03.064: INFO: Got endpoints: latency-svc-plpgs [731.898462ms]
Jan 31 18:03:03.096: INFO: Created: latency-svc-zkmaz
Jan 31 18:03:03.114: INFO: Got endpoints: latency-svc-qyiec [750.802071ms]
Jan 31 18:03:03.148: INFO: Created: latency-svc-jvagb
Jan 31 18:03:03.161: INFO: Got endpoints: latency-svc-zsxhw [727.239726ms]
Jan 31 18:03:03.192: INFO: Created: latency-svc-unqnu
Jan 31 18:03:03.213: INFO: Got endpoints: latency-svc-ogiwq [743.185795ms]
Jan 31 18:03:03.248: INFO: Created: latency-svc-dtrrk
Jan 31 18:03:03.262: INFO: Got endpoints: latency-svc-ttisy [748.100926ms]
Jan 31 18:03:03.296: INFO: Created: latency-svc-aewsa
Jan 31 18:03:03.311: INFO: Got endpoints: latency-svc-rihpy [747.314331ms]
Jan 31 18:03:03.346: INFO: Created: latency-svc-tkxyr
Jan 31 18:03:03.361: INFO: Got endpoints: latency-svc-hctot [746.525562ms]
Jan 31 18:03:03.392: INFO: Created: latency-svc-rxbks
Jan 31 18:03:03.413: INFO: Got endpoints: latency-svc-jqela [750.30744ms]
Jan 31 18:03:03.453: INFO: Created: latency-svc-qbwjx
Jan 31 18:03:03.465: INFO: Got endpoints: latency-svc-zncbz [753.771074ms]
Jan 31 18:03:03.513: INFO: Got endpoints: latency-svc-wmkbd [750.543258ms]
Jan 31 18:03:03.554: INFO: Created: latency-svc-acldl
Jan 31 18:03:03.567: INFO: Got endpoints: latency-svc-asurw [753.365962ms]
Jan 31 18:03:03.573: INFO: Created: latency-svc-jqhhr
Jan 31 18:03:03.601: INFO: Created: latency-svc-fznou
Jan 31 18:03:03.613: INFO: Got endpoints: latency-svc-ibbvr [749.145702ms]
Jan 31 18:03:03.646: INFO: Created: latency-svc-asaft
Jan 31 18:03:03.662: INFO: Got endpoints: latency-svc-otvqg [744.986808ms]
Jan 31 18:03:03.698: INFO: Created: latency-svc-ufoqy
Jan 31 18:03:03.713: INFO: Got endpoints: latency-svc-daxop [738.167136ms]
Jan 31 18:03:03.750: INFO: Created: latency-svc-dfbmh
Jan 31 18:03:03.763: INFO: Got endpoints: latency-svc-loevk [741.15246ms]
Jan 31 18:03:03.796: INFO: Created: latency-svc-bydis
Jan 31 18:03:03.814: INFO: Got endpoints: latency-svc-zkmaz [749.647947ms]
Jan 31 18:03:03.847: INFO: Created: latency-svc-dhfqy
Jan 31 18:03:03.863: INFO: Got endpoints: latency-svc-jvagb [748.464828ms]
Jan 31 18:03:03.894: INFO: Created: latency-svc-qolai
Jan 31 18:03:03.915: INFO: Got endpoints: latency-svc-unqnu [753.641667ms]
Jan 31 18:03:03.975: INFO: Created: latency-svc-zxsun
Jan 31 18:03:03.998: INFO: Got endpoints: latency-svc-dtrrk [785.157577ms]
Jan 31 18:03:04.014: INFO: Got endpoints: latency-svc-aewsa [752.021808ms]
Jan 31 18:03:04.063: INFO: Got endpoints: latency-svc-tkxyr [751.990569ms]
Jan 31 18:03:04.075: INFO: Created: latency-svc-cszuq
Jan 31 18:03:04.088: INFO: Created: latency-svc-hbvqm
Jan 31 18:03:04.101: INFO: Created: latency-svc-utlqj
Jan 31 18:03:04.111: INFO: Got endpoints: latency-svc-rxbks [750.446995ms]
Jan 31 18:03:04.144: INFO: Created: latency-svc-cbyui
Jan 31 18:03:04.162: INFO: Got endpoints: latency-svc-qbwjx [748.746423ms]
Jan 31 18:03:04.205: INFO: Created: latency-svc-wgnib
Jan 31 18:03:04.212: INFO: Got endpoints: latency-svc-acldl [746.758515ms]
Jan 31 18:03:04.249: INFO: Created: latency-svc-vrjtb
Jan 31 18:03:04.264: INFO: Got endpoints: latency-svc-jqhhr [750.570651ms]
Jan 31 18:03:04.298: INFO: Created: latency-svc-niaoe
Jan 31 18:03:04.314: INFO: Got endpoints: latency-svc-fznou [746.993822ms]
Jan 31 18:03:04.347: INFO: Created: latency-svc-pdaft
Jan 31 18:03:04.361: INFO: Got endpoints: latency-svc-asaft [747.519531ms]
Jan 31 18:03:04.396: INFO: Created: latency-svc-cbgkw
Jan 31 18:03:04.413: INFO: Got endpoints: latency-svc-ufoqy [750.533871ms]
Jan 31 18:03:04.457: INFO: Created: latency-svc-pygnk
Jan 31 18:03:04.462: INFO: Got endpoints: latency-svc-dfbmh [749.027166ms]
Jan 31 18:03:04.495: INFO: Created: latency-svc-wetgm
Jan 31 18:03:04.512: INFO: Got endpoints: latency-svc-bydis [748.354519ms]
Jan 31 18:03:04.550: INFO: Created: latency-svc-hhxbu
Jan 31 18:03:04.564: INFO: Got endpoints: latency-svc-dhfqy [750.492462ms]
Jan 31 18:03:04.617: INFO: Got endpoints: latency-svc-qolai [753.876934ms]
Jan 31 18:03:04.636: INFO: Created: latency-svc-flnbt
Jan 31 18:03:04.661: INFO: Got endpoints: latency-svc-zxsun [745.542604ms]
Jan 31 18:03:04.665: INFO: Created: latency-svc-qsubg
Jan 31 18:03:04.698: INFO: Created: latency-svc-zoyzj
Jan 31 18:03:04.714: INFO: Got endpoints: latency-svc-cszuq [716.333308ms]
Jan 31 18:03:04.754: INFO: Created: latency-svc-vmhpq
Jan 31 18:03:04.768: INFO: Got endpoints: latency-svc-hbvqm [753.430626ms]
Jan 31 18:03:04.804: INFO: Created: latency-svc-snkaz
Jan 31 18:03:04.812: INFO: Got endpoints: latency-svc-utlqj [748.498521ms]
Jan 31 18:03:04.847: INFO: Created: latency-svc-mdune
Jan 31 18:03:04.861: INFO: Got endpoints: latency-svc-cbyui [750.020705ms]
Jan 31 18:03:04.898: INFO: Created: latency-svc-ujmbl
Jan 31 18:03:04.915: INFO: Got endpoints: latency-svc-wgnib [753.114515ms]
Jan 31 18:03:04.947: INFO: Created: latency-svc-fwlum
Jan 31 18:03:04.962: INFO: Got endpoints: latency-svc-vrjtb [749.697591ms]
Jan 31 18:03:04.993: INFO: Created: latency-svc-ymcie
Jan 31 18:03:05.014: INFO: Got endpoints: latency-svc-niaoe [749.919092ms]
Jan 31 18:03:05.053: INFO: Created: latency-svc-dloga
Jan 31 18:03:05.065: INFO: Got endpoints: latency-svc-pdaft [750.51844ms]
Jan 31 18:03:05.098: INFO: Created: latency-svc-vqjqv
Jan 31 18:03:05.111: INFO: Got endpoints: latency-svc-cbgkw [750.132827ms]
Jan 31 18:03:05.165: INFO: Got endpoints: latency-svc-pygnk [752.575339ms]
Jan 31 18:03:05.187: INFO: Created: latency-svc-vkqrc
Jan 31 18:03:05.209: INFO: Created: latency-svc-swxhh
Jan 31 18:03:05.214: INFO: Got endpoints: latency-svc-wetgm [752.362847ms]
Jan 31 18:03:05.252: INFO: Created: latency-svc-zzlss
Jan 31 18:03:05.262: INFO: Got endpoints: latency-svc-hhxbu [750.527017ms]
Jan 31 18:03:05.302: INFO: Created: latency-svc-bnjkf
Jan 31 18:03:05.312: INFO: Got endpoints: latency-svc-flnbt [748.114242ms]
Jan 31 18:03:05.343: INFO: Created: latency-svc-hfbuh
Jan 31 18:03:05.362: INFO: Got endpoints: latency-svc-qsubg [744.890283ms]
Jan 31 18:03:05.397: INFO: Created: latency-svc-fxbba
Jan 31 18:03:05.412: INFO: Got endpoints: latency-svc-zoyzj [751.535406ms]
Jan 31 18:03:05.452: INFO: Created: latency-svc-ljbqq
Jan 31 18:03:05.462: INFO: Got endpoints: latency-svc-vmhpq [747.73996ms]
Jan 31 18:03:05.498: INFO: Created: latency-svc-drtzz
Jan 31 18:03:05.513: INFO: Got endpoints: latency-svc-snkaz [745.141812ms]
Jan 31 18:03:05.545: INFO: Created: latency-svc-jmzlb
Jan 31 18:03:05.561: INFO: Got endpoints: latency-svc-mdune [749.684798ms]
Jan 31 18:03:05.592: INFO: Created: latency-svc-pjnwh
Jan 31 18:03:05.610: INFO: Got endpoints: latency-svc-ujmbl [749.074687ms]
Jan 31 18:03:05.646: INFO: Created: latency-svc-gffjt
Jan 31 18:03:05.661: INFO: Got endpoints: latency-svc-fwlum [745.993131ms]
Jan 31 18:03:05.716: INFO: Got endpoints: latency-svc-ymcie [754.094598ms]
Jan 31 18:03:05.746: INFO: Created: latency-svc-smfft
Jan 31 18:03:05.760: INFO: Created: latency-svc-ylirk
Jan 31 18:03:05.764: INFO: Got endpoints: latency-svc-dloga [749.957936ms]
Jan 31 18:03:05.797: INFO: Created: latency-svc-jucqf
Jan 31 18:03:05.812: INFO: Got endpoints: latency-svc-vqjqv [747.373513ms]
Jan 31 18:03:05.843: INFO: Created: latency-svc-rkufy
Jan 31 18:03:05.861: INFO: Got endpoints: latency-svc-vkqrc [749.631225ms]
Jan 31 18:03:05.920: INFO: Got endpoints: latency-svc-swxhh [755.109837ms]
Jan 31 18:03:05.927: INFO: Created: latency-svc-vmujt
Jan 31 18:03:05.961: INFO: Got endpoints: latency-svc-zzlss [746.398841ms]
Jan 31 18:03:05.968: INFO: Created: latency-svc-rolfb
Jan 31 18:03:05.993: INFO: Created: latency-svc-itipt
Jan 31 18:03:06.012: INFO: Got endpoints: latency-svc-bnjkf [749.093433ms]
Jan 31 18:03:06.053: INFO: Created: latency-svc-cevnh
Jan 31 18:03:06.063: INFO: Got endpoints: latency-svc-hfbuh [750.333479ms]
Jan 31 18:03:06.109: INFO: Created: latency-svc-oqyto
Jan 31 18:03:06.122: INFO: Got endpoints: latency-svc-fxbba [760.44052ms]
Jan 31 18:03:06.163: INFO: Got endpoints: latency-svc-ljbqq [750.779517ms]
Jan 31 18:03:06.165: INFO: Created: latency-svc-kzqdm
Jan 31 18:03:06.197: INFO: Created: latency-svc-mbunt
Jan 31 18:03:06.212: INFO: Got endpoints: latency-svc-drtzz [750.214303ms]
Jan 31 18:03:06.266: INFO: Got endpoints: latency-svc-jmzlb [752.966954ms]
Jan 31 18:03:06.293: INFO: Created: latency-svc-ymipg
Jan 31 18:03:06.318: INFO: Got endpoints: latency-svc-pjnwh [756.75798ms]
Jan 31 18:03:06.360: INFO: Created: latency-svc-aatua
Jan 31 18:03:06.367: INFO: Got endpoints: latency-svc-gffjt [756.915218ms]
Jan 31 18:03:06.368: INFO: Created: latency-svc-ihjfw
Jan 31 18:03:06.405: INFO: Created: latency-svc-btikr
Jan 31 18:03:06.413: INFO: Got endpoints: latency-svc-smfft [751.579097ms]
Jan 31 18:03:06.445: INFO: Created: latency-svc-vyjlt
Jan 31 18:03:06.464: INFO: Got endpoints: latency-svc-ylirk [747.953867ms]
Jan 31 18:03:06.504: INFO: Created: latency-svc-yldks
Jan 31 18:03:06.518: INFO: Got endpoints: latency-svc-jucqf [753.600769ms]
Jan 31 18:03:06.553: INFO: Created: latency-svc-qpjhf
Jan 31 18:03:06.562: INFO: Got endpoints: latency-svc-rkufy [749.974678ms]
Jan 31 18:03:06.596: INFO: Created: latency-svc-bzcxl
Jan 31 18:03:06.611: INFO: Got endpoints: latency-svc-vmujt [750.846194ms]
Jan 31 18:03:06.641: INFO: Created: latency-svc-pnswl
Jan 31 18:03:06.661: INFO: Got endpoints: latency-svc-rolfb [740.307263ms]
Jan 31 18:03:06.709: INFO: Created: latency-svc-cyiue
Jan 31 18:03:06.714: INFO: Got endpoints: latency-svc-itipt [752.793525ms]
Jan 31 18:03:06.747: INFO: Created: latency-svc-xpfdq
Jan 31 18:03:06.762: INFO: Got endpoints: latency-svc-cevnh [749.868747ms]
Jan 31 18:03:06.815: INFO: Got endpoints: latency-svc-oqyto [752.491882ms]
Jan 31 18:03:06.834: INFO: Created: latency-svc-mqqdv
Jan 31 18:03:06.853: INFO: Created: latency-svc-ewpso
Jan 31 18:03:06.863: INFO: Got endpoints: latency-svc-kzqdm [740.493517ms]
Jan 31 18:03:06.893: INFO: Created: latency-svc-thnej
Jan 31 18:03:06.911: INFO: Got endpoints: latency-svc-mbunt [747.483834ms]
Jan 31 18:03:06.948: INFO: Created: latency-svc-oufmk
Jan 31 18:03:06.962: INFO: Got endpoints: latency-svc-ymipg [749.555221ms]
Jan 31 18:03:06.996: INFO: Created: latency-svc-umnyj
Jan 31 18:03:07.011: INFO: Got endpoints: latency-svc-aatua [744.938236ms]
Jan 31 18:03:07.049: INFO: Created: latency-svc-ratmf
Jan 31 18:03:07.063: INFO: Got endpoints: latency-svc-ihjfw [745.260808ms]
Jan 31 18:03:07.097: INFO: Created: latency-svc-jdjbn
Jan 31 18:03:07.111: INFO: Got endpoints: latency-svc-btikr [743.429107ms]
Jan 31 18:03:07.147: INFO: Created: latency-svc-lmlkz
Jan 31 18:03:07.162: INFO: Got endpoints: latency-svc-vyjlt [749.727207ms]
Jan 31 18:03:07.194: INFO: Created: latency-svc-ivghb
Jan 31 18:03:07.216: INFO: Got endpoints: latency-svc-yldks [752.031196ms]
Jan 31 18:03:07.259: INFO: Created: latency-svc-mpayc
Jan 31 18:03:07.263: INFO: Got endpoints: latency-svc-qpjhf [744.688821ms]
Jan 31 18:03:07.296: INFO: Created: latency-svc-woera
Jan 31 18:03:07.313: INFO: Got endpoints: latency-svc-bzcxl [750.064398ms]
Jan 31 18:03:07.365: INFO: Got endpoints: latency-svc-pnswl [753.513514ms]
Jan 31 18:03:07.374: INFO: Created: latency-svc-ixiuz
Jan 31 18:03:07.401: INFO: Created: latency-svc-ikqcy
Jan 31 18:03:07.412: INFO: Got endpoints: latency-svc-cyiue [751.308352ms]
Jan 31 18:03:07.455: INFO: Created: latency-svc-xtffq
Jan 31 18:03:07.466: INFO: Got endpoints: latency-svc-xpfdq [751.888825ms]
Jan 31 18:03:07.503: INFO: Created: latency-svc-puwcg
Jan 31 18:03:07.512: INFO: Got endpoints: latency-svc-mqqdv [750.432448ms]
Jan 31 18:03:07.547: INFO: Created: latency-svc-trkeo
Jan 31 18:03:07.563: INFO: Got endpoints: latency-svc-ewpso [747.42365ms]
Jan 31 18:03:07.601: INFO: Created: latency-svc-lkkgj
Jan 31 18:03:07.612: INFO: Got endpoints: latency-svc-thnej [749.38663ms]
Jan 31 18:03:07.649: INFO: Created: latency-svc-wxhym
Jan 31 18:03:07.662: INFO: Got endpoints: latency-svc-oufmk [751.783016ms]
Jan 31 18:03:07.701: INFO: Created: latency-svc-unrdw
Jan 31 18:03:07.713: INFO: Got endpoints: latency-svc-umnyj [751.283374ms]
Jan 31 18:03:07.747: INFO: Created: latency-svc-cplwr
Jan 31 18:03:07.761: INFO: Got endpoints: latency-svc-ratmf [750.547217ms]
Jan 31 18:03:07.801: INFO: Created: latency-svc-etgxj
Jan 31 18:03:07.828: INFO: Got endpoints: latency-svc-jdjbn [764.174215ms]
Jan 31 18:03:07.864: INFO: Got endpoints: latency-svc-lmlkz [753.339292ms]
Jan 31 18:03:07.909: INFO: Created: latency-svc-uuxvf
Jan 31 18:03:07.913: INFO: Got endpoints: latency-svc-ivghb [750.887423ms]
Jan 31 18:03:07.917: INFO: Created: latency-svc-zilhs
Jan 31 18:03:07.971: INFO: Got endpoints: latency-svc-mpayc [754.897224ms]
Jan 31 18:03:07.974: INFO: Created: latency-svc-lxrwf
Jan 31 18:03:08.008: INFO: Created: latency-svc-xfcnb
Jan 31 18:03:08.013: INFO: Got endpoints: latency-svc-woera [750.441264ms]
Jan 31 18:03:08.050: INFO: Created: latency-svc-pdcvn
Jan 31 18:03:08.063: INFO: Got endpoints: latency-svc-ixiuz [749.960211ms]
Jan 31 18:03:08.099: INFO: Created: latency-svc-ydinv
Jan 31 18:03:08.113: INFO: Got endpoints: latency-svc-ikqcy [748.318109ms]
Jan 31 18:03:08.156: INFO: Created: latency-svc-xmqlj
Jan 31 18:03:08.163: INFO: Got endpoints: latency-svc-xtffq [750.437747ms]
Jan 31 18:03:08.211: INFO: Got endpoints: latency-svc-puwcg [745.634408ms]
Jan 31 18:03:08.262: INFO: Got endpoints: latency-svc-trkeo [749.479847ms]
Jan 31 18:03:08.312: INFO: Got endpoints: latency-svc-lkkgj [749.389284ms]
Jan 31 18:03:08.367: INFO: Got endpoints: latency-svc-wxhym [754.460805ms]
Jan 31 18:03:08.414: INFO: Got endpoints: latency-svc-unrdw [751.571603ms]
Jan 31 18:03:08.466: INFO: Got endpoints: latency-svc-cplwr [752.707452ms]
Jan 31 18:03:08.513: INFO: Got endpoints: latency-svc-etgxj [751.852928ms]
Jan 31 18:03:08.565: INFO: Got endpoints: latency-svc-zilhs [737.167627ms]
Jan 31 18:03:08.613: INFO: Got endpoints: latency-svc-uuxvf [748.422728ms]
Jan 31 18:03:08.666: INFO: Got endpoints: latency-svc-lxrwf [753.128083ms]
Jan 31 18:03:08.716: INFO: Got endpoints: latency-svc-xfcnb [745.438265ms]
Jan 31 18:03:08.763: INFO: Got endpoints: latency-svc-pdcvn [749.67045ms]
Jan 31 18:03:08.812: INFO: Got endpoints: latency-svc-ydinv [749.305837ms]
Jan 31 18:03:08.865: INFO: Got endpoints: latency-svc-xmqlj [752.099776ms]
Jan 31 18:03:08.866: INFO: Latencies: [116.603711ms 131.675969ms 157.802144ms 172.464161ms 183.954169ms 200.725275ms 218.856105ms 233.912923ms 259.668917ms 284.675843ms 287.20469ms 287.892179ms 288.392469ms 291.251382ms 292.311437ms 295.674821ms 297.326639ms 298.555293ms 298.824786ms 299.620879ms 301.49894ms 303.811826ms 311.755454ms 315.040848ms 317.665436ms 321.188751ms 322.587531ms 324.336725ms 327.730114ms 333.091475ms 338.759569ms 341.158708ms 341.310987ms 347.396073ms 348.472038ms 351.042033ms 355.592391ms 361.081725ms 371.019693ms 371.627528ms 374.837428ms 375.248389ms 378.10024ms 378.779671ms 379.003638ms 379.304529ms 380.057501ms 381.444337ms 381.821433ms 389.763538ms 391.613113ms 392.385382ms 395.540468ms 402.150881ms 404.085819ms 422.87418ms 426.129998ms 443.200853ms 466.799596ms 474.37325ms 482.604504ms 531.895209ms 613.598276ms 619.980876ms 654.21346ms 672.142657ms 699.574304ms 710.694168ms 716.333308ms 727.239726ms 731.898462ms 737.167627ms 738.167136ms 739.128472ms 740.307263ms 740.493517ms 741.15246ms 743.185795ms 743.429107ms 744.688821ms 744.890283ms 744.938236ms 744.986808ms 745.08812ms 745.141812ms 745.160307ms 745.260808ms 745.438265ms 745.542604ms 745.634408ms 745.993131ms 746.398841ms 746.525562ms 746.758515ms 746.993822ms 747.314331ms 747.373513ms 747.42365ms 747.483834ms 747.519531ms 747.73996ms 747.910895ms 747.953867ms 748.100926ms 748.114242ms 748.169877ms 748.318109ms 748.354519ms 748.422728ms 748.464828ms 748.498521ms 748.746423ms 749.027166ms 749.074687ms 749.093433ms 749.145702ms 749.305837ms 749.38663ms 749.389284ms 749.479847ms 749.555221ms 749.631225ms 749.647947ms 749.67045ms 749.684798ms 749.697591ms 749.727207ms 749.868747ms 749.919092ms 749.957936ms 749.960211ms 749.974678ms 750.020705ms 750.064398ms 750.132827ms 750.214303ms 750.220063ms 750.30744ms 750.333479ms 750.432448ms 750.437747ms 750.441264ms 750.446995ms 750.492462ms 750.51844ms 750.527017ms 750.533871ms 750.543258ms 750.547217ms 750.570651ms 750.779517ms 750.802071ms 750.809173ms 750.846194ms 750.887423ms 751.166283ms 751.283374ms 751.308352ms 751.535406ms 751.571603ms 751.579097ms 751.783016ms 751.852928ms 751.860021ms 751.888825ms 751.990569ms 752.021808ms 752.031196ms 752.099776ms 752.362847ms 752.491882ms 752.575339ms 752.707452ms 752.793525ms 752.966954ms 753.114515ms 753.128083ms 753.339292ms 753.365962ms 753.430626ms 753.513514ms 753.600769ms 753.641667ms 753.763078ms 753.771074ms 753.876934ms 754.094598ms 754.460805ms 754.897224ms 755.109837ms 756.324417ms 756.75798ms 756.915218ms 760.44052ms 763.356301ms 764.174215ms 771.231449ms 785.157577ms 805.932592ms 1.012447061s]
Jan 31 18:03:08.866: INFO: 50 %ile: 747.73996ms
Jan 31 18:03:08.866: INFO: 90 %ile: 753.513514ms
Jan 31 18:03:08.866: INFO: 99 %ile: 805.932592ms
Jan 31 18:03:08.866: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/node/init/init.go:32
Jan 31 18:03:08.866: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  tear down framework | framework.go:193
STEP: Destroying namespace "svc-latency-7074" for this suite. 01/31/23 18:03:08.88
------------------------------
â€¢ [SLOW TEST] [11.903 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Service endpoints latency
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:02:56.991
    Jan 31 18:02:56.991: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename svc-latency 01/31/23 18:02:56.992
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:02:57.009
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:02:57.017
    [BeforeEach] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be very high  [Conformance]
      test/e2e/network/service_latency.go:59
    Jan 31 18:02:57.024: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: creating replication controller svc-latency-rc in namespace svc-latency-7074 01/31/23 18:02:57.025
    I0131 18:02:57.034213      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7074, replica count: 1
    I0131 18:02:58.084664      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0131 18:02:59.084922      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0131 18:03:00.085750      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 31 18:03:00.247: INFO: Created: latency-svc-hjwpc
    Jan 31 18:03:00.254: INFO: Got endpoints: latency-svc-hjwpc [67.724861ms]
    Jan 31 18:03:00.357: INFO: Created: latency-svc-bviuz
    Jan 31 18:03:00.371: INFO: Got endpoints: latency-svc-bviuz [116.603711ms]
    Jan 31 18:03:00.375: INFO: Created: latency-svc-ijmzo
    Jan 31 18:03:00.386: INFO: Got endpoints: latency-svc-ijmzo [131.675969ms]
    Jan 31 18:03:00.393: INFO: Created: latency-svc-tylpl
    Jan 31 18:03:00.412: INFO: Got endpoints: latency-svc-tylpl [157.802144ms]
    Jan 31 18:03:00.413: INFO: Created: latency-svc-rlfea
    Jan 31 18:03:00.427: INFO: Got endpoints: latency-svc-rlfea [172.464161ms]
    Jan 31 18:03:00.431: INFO: Created: latency-svc-pdjty
    Jan 31 18:03:00.438: INFO: Got endpoints: latency-svc-pdjty [183.954169ms]
    Jan 31 18:03:00.448: INFO: Created: latency-svc-leujp
    Jan 31 18:03:00.455: INFO: Got endpoints: latency-svc-leujp [200.725275ms]
    Jan 31 18:03:00.467: INFO: Created: latency-svc-kczga
    Jan 31 18:03:00.473: INFO: Got endpoints: latency-svc-kczga [218.856105ms]
    Jan 31 18:03:00.481: INFO: Created: latency-svc-hycys
    Jan 31 18:03:00.488: INFO: Got endpoints: latency-svc-hycys [233.912923ms]
    Jan 31 18:03:00.505: INFO: Created: latency-svc-obyef
    Jan 31 18:03:00.513: INFO: Got endpoints: latency-svc-obyef [259.668917ms]
    Jan 31 18:03:00.534: INFO: Created: latency-svc-bwrcq
    Jan 31 18:03:00.541: INFO: Got endpoints: latency-svc-bwrcq [287.20469ms]
    Jan 31 18:03:00.575: INFO: Created: latency-svc-liyrf
    Jan 31 18:03:00.577: INFO: Got endpoints: latency-svc-liyrf [322.587531ms]
    Jan 31 18:03:00.584: INFO: Created: latency-svc-gdjmd
    Jan 31 18:03:00.593: INFO: Created: latency-svc-haoey
    Jan 31 18:03:00.593: INFO: Got endpoints: latency-svc-gdjmd [338.759569ms]
    Jan 31 18:03:00.602: INFO: Got endpoints: latency-svc-haoey [348.472038ms]
    Jan 31 18:03:00.636: INFO: Created: latency-svc-uxoqf
    Jan 31 18:03:00.647: INFO: Got endpoints: latency-svc-uxoqf [392.385382ms]
    Jan 31 18:03:00.651: INFO: Created: latency-svc-esdlx
    Jan 31 18:03:00.658: INFO: Got endpoints: latency-svc-esdlx [404.085819ms]
    Jan 31 18:03:00.666: INFO: Created: latency-svc-ojrpu
    Jan 31 18:03:00.672: INFO: Got endpoints: latency-svc-ojrpu [301.49894ms]
    Jan 31 18:03:00.675: INFO: Created: latency-svc-dvdqu
    Jan 31 18:03:00.684: INFO: Got endpoints: latency-svc-dvdqu [298.824786ms]
    Jan 31 18:03:00.691: INFO: Created: latency-svc-dzlfq
    Jan 31 18:03:00.697: INFO: Got endpoints: latency-svc-dzlfq [284.675843ms]
    Jan 31 18:03:00.711: INFO: Created: latency-svc-skysv
    Jan 31 18:03:00.715: INFO: Got endpoints: latency-svc-skysv [288.392469ms]
    Jan 31 18:03:00.724: INFO: Created: latency-svc-tipyi
    Jan 31 18:03:00.730: INFO: Got endpoints: latency-svc-tipyi [292.311437ms]
    Jan 31 18:03:00.746: INFO: Created: latency-svc-igsja
    Jan 31 18:03:00.751: INFO: Got endpoints: latency-svc-igsja [295.674821ms]
    Jan 31 18:03:00.765: INFO: Created: latency-svc-cuzbn
    Jan 31 18:03:00.770: INFO: Got endpoints: latency-svc-cuzbn [297.326639ms]
    Jan 31 18:03:00.781: INFO: Created: latency-svc-iyxbr
    Jan 31 18:03:00.787: INFO: Got endpoints: latency-svc-iyxbr [298.555293ms]
    Jan 31 18:03:00.834: INFO: Created: latency-svc-klkup
    Jan 31 18:03:00.841: INFO: Got endpoints: latency-svc-klkup [327.730114ms]
    Jan 31 18:03:00.850: INFO: Created: latency-svc-khlom
    Jan 31 18:03:00.866: INFO: Got endpoints: latency-svc-khlom [324.336725ms]
    Jan 31 18:03:00.866: INFO: Created: latency-svc-btfmv
    Jan 31 18:03:00.876: INFO: Got endpoints: latency-svc-btfmv [299.620879ms]
    Jan 31 18:03:00.879: INFO: Created: latency-svc-gjgrh
    Jan 31 18:03:00.897: INFO: Got endpoints: latency-svc-gjgrh [303.811826ms]
    Jan 31 18:03:00.910: INFO: Created: latency-svc-tjctg
    Jan 31 18:03:00.920: INFO: Got endpoints: latency-svc-tjctg [317.665436ms]
    Jan 31 18:03:00.926: INFO: Created: latency-svc-imqnx
    Jan 31 18:03:00.938: INFO: Got endpoints: latency-svc-imqnx [291.251382ms]
    Jan 31 18:03:00.963: INFO: Created: latency-svc-adzcv
    Jan 31 18:03:00.973: INFO: Got endpoints: latency-svc-adzcv [315.040848ms]
    Jan 31 18:03:00.987: INFO: Created: latency-svc-ktvce
    Jan 31 18:03:00.993: INFO: Got endpoints: latency-svc-ktvce [321.188751ms]
    Jan 31 18:03:01.010: INFO: Created: latency-svc-njnrt
    Jan 31 18:03:01.018: INFO: Got endpoints: latency-svc-njnrt [333.091475ms]
    Jan 31 18:03:01.033: INFO: Created: latency-svc-dhuwa
    Jan 31 18:03:01.038: INFO: Got endpoints: latency-svc-dhuwa [341.310987ms]
    Jan 31 18:03:01.084: INFO: Created: latency-svc-yapai
    Jan 31 18:03:01.087: INFO: Created: latency-svc-sfqod
    Jan 31 18:03:01.087: INFO: Got endpoints: latency-svc-sfqod [371.627528ms]
    Jan 31 18:03:01.092: INFO: Got endpoints: latency-svc-yapai [361.081725ms]
    Jan 31 18:03:01.123: INFO: Created: latency-svc-flutw
    Jan 31 18:03:01.126: INFO: Got endpoints: latency-svc-flutw [355.592391ms]
    Jan 31 18:03:01.130: INFO: Created: latency-svc-rcwop
    Jan 31 18:03:01.130: INFO: Got endpoints: latency-svc-rcwop [378.779671ms]
    Jan 31 18:03:01.206: INFO: Created: latency-svc-qsgzp
    Jan 31 18:03:01.210: INFO: Created: latency-svc-ipxkl
    Jan 31 18:03:01.233: INFO: Created: latency-svc-pqvmr
    Jan 31 18:03:01.243: INFO: Got endpoints: latency-svc-ipxkl [402.150881ms]
    Jan 31 18:03:01.250: INFO: Got endpoints: latency-svc-pqvmr [381.821433ms]
    Jan 31 18:03:01.254: INFO: Got endpoints: latency-svc-qsgzp [466.799596ms]
    Jan 31 18:03:01.265: INFO: Created: latency-svc-ljudp
    Jan 31 18:03:01.272: INFO: Got endpoints: latency-svc-ljudp [395.540468ms]
    Jan 31 18:03:01.279: INFO: Created: latency-svc-rszpb
    Jan 31 18:03:01.289: INFO: Got endpoints: latency-svc-rszpb [391.613113ms]
    Jan 31 18:03:01.291: INFO: Created: latency-svc-dsnjl
    Jan 31 18:03:01.300: INFO: Got endpoints: latency-svc-dsnjl [380.057501ms]
    Jan 31 18:03:01.312: INFO: Created: latency-svc-vtzmd
    Jan 31 18:03:01.319: INFO: Got endpoints: latency-svc-vtzmd [381.444337ms]
    Jan 31 18:03:01.339: INFO: Created: latency-svc-bcyeg
    Jan 31 18:03:01.349: INFO: Got endpoints: latency-svc-bcyeg [375.248389ms]
    Jan 31 18:03:01.366: INFO: Created: latency-svc-rjczj
    Jan 31 18:03:01.372: INFO: Got endpoints: latency-svc-rjczj [378.10024ms]
    Jan 31 18:03:01.383: INFO: Created: latency-svc-niwfx
    Jan 31 18:03:01.389: INFO: Got endpoints: latency-svc-niwfx [371.019693ms]
    Jan 31 18:03:01.426: INFO: Created: latency-svc-xmdsy
    Jan 31 18:03:01.428: INFO: Created: latency-svc-yjajg
    Jan 31 18:03:01.428: INFO: Got endpoints: latency-svc-yjajg [389.763538ms]
    Jan 31 18:03:01.434: INFO: Got endpoints: latency-svc-xmdsy [347.396073ms]
    Jan 31 18:03:01.438: INFO: Created: latency-svc-rhieb
    Jan 31 18:03:01.443: INFO: Got endpoints: latency-svc-rhieb [351.042033ms]
    Jan 31 18:03:01.497: INFO: Created: latency-svc-ecywb
    Jan 31 18:03:01.503: INFO: Created: latency-svc-tvetk
    Jan 31 18:03:01.505: INFO: Got endpoints: latency-svc-ecywb [379.003638ms]
    Jan 31 18:03:01.509: INFO: Got endpoints: latency-svc-tvetk [379.304529ms]
    Jan 31 18:03:01.535: INFO: Created: latency-svc-nwxqy
    Jan 31 18:03:01.538: INFO: Got endpoints: latency-svc-nwxqy [287.892179ms]
    Jan 31 18:03:01.550: INFO: Created: latency-svc-ugriu
    Jan 31 18:03:01.564: INFO: Created: latency-svc-zbizp
    Jan 31 18:03:01.565: INFO: Got endpoints: latency-svc-ugriu [311.755454ms]
    Jan 31 18:03:01.582: INFO: Created: latency-svc-jauej
    Jan 31 18:03:01.594: INFO: Created: latency-svc-dbiez
    Jan 31 18:03:01.613: INFO: Got endpoints: latency-svc-zbizp [341.158708ms]
    Jan 31 18:03:01.624: INFO: Created: latency-svc-qujhd
    Jan 31 18:03:01.637: INFO: Created: latency-svc-fgcrq
    Jan 31 18:03:01.649: INFO: Created: latency-svc-dvrxe
    Jan 31 18:03:01.663: INFO: Got endpoints: latency-svc-jauej [374.837428ms]
    Jan 31 18:03:01.670: INFO: Created: latency-svc-khcsz
    Jan 31 18:03:01.723: INFO: Got endpoints: latency-svc-dbiez [422.87418ms]
    Jan 31 18:03:01.731: INFO: Created: latency-svc-decom
    Jan 31 18:03:01.734: INFO: Created: latency-svc-knkmo
    Jan 31 18:03:01.742: INFO: Created: latency-svc-yvhiq
    Jan 31 18:03:01.752: INFO: Created: latency-svc-habdn
    Jan 31 18:03:01.764: INFO: Created: latency-svc-vqrwb
    Jan 31 18:03:01.775: INFO: Got endpoints: latency-svc-qujhd [426.129998ms]
    Jan 31 18:03:01.777: INFO: Created: latency-svc-txdpw
    Jan 31 18:03:01.788: INFO: Created: latency-svc-xtkcc
    Jan 31 18:03:01.794: INFO: Created: latency-svc-ezpvm
    Jan 31 18:03:01.808: INFO: Created: latency-svc-aayrr
    Jan 31 18:03:01.815: INFO: Got endpoints: latency-svc-fgcrq [443.200853ms]
    Jan 31 18:03:01.820: INFO: Created: latency-svc-aytkf
    Jan 31 18:03:01.831: INFO: Created: latency-svc-sukil
    Jan 31 18:03:01.839: INFO: Created: latency-svc-yhkov
    Jan 31 18:03:01.863: INFO: Got endpoints: latency-svc-dvrxe [474.37325ms]
    Jan 31 18:03:01.894: INFO: Created: latency-svc-bapfx
    Jan 31 18:03:01.903: INFO: Created: latency-svc-hcpqu
    Jan 31 18:03:01.911: INFO: Got endpoints: latency-svc-khcsz [482.604504ms]
    Jan 31 18:03:01.950: INFO: Created: latency-svc-tdlyy
    Jan 31 18:03:01.966: INFO: Got endpoints: latency-svc-decom [531.895209ms]
    Jan 31 18:03:01.999: INFO: Created: latency-svc-sfvtn
    Jan 31 18:03:02.015: INFO: Got endpoints: latency-svc-knkmo [771.231449ms]
    Jan 31 18:03:02.055: INFO: Created: latency-svc-mdoyl
    Jan 31 18:03:02.063: INFO: Got endpoints: latency-svc-yvhiq [619.980876ms]
    Jan 31 18:03:02.119: INFO: Got endpoints: latency-svc-habdn [613.598276ms]
    Jan 31 18:03:02.134: INFO: Created: latency-svc-kuubh
    Jan 31 18:03:02.163: INFO: Got endpoints: latency-svc-vqrwb [654.21346ms]
    Jan 31 18:03:02.173: INFO: Created: latency-svc-kqbfe
    Jan 31 18:03:02.201: INFO: Created: latency-svc-gougs
    Jan 31 18:03:02.210: INFO: Got endpoints: latency-svc-txdpw [672.142657ms]
    Jan 31 18:03:02.247: INFO: Created: latency-svc-nlcfj
    Jan 31 18:03:02.265: INFO: Got endpoints: latency-svc-xtkcc [699.574304ms]
    Jan 31 18:03:02.300: INFO: Created: latency-svc-alqiz
    Jan 31 18:03:02.332: INFO: Got endpoints: latency-svc-ezpvm [1.012447061s]
    Jan 31 18:03:02.363: INFO: Got endpoints: latency-svc-aayrr [750.220063ms]
    Jan 31 18:03:02.405: INFO: Created: latency-svc-qyiec
    Jan 31 18:03:02.414: INFO: Created: latency-svc-plpgs
    Jan 31 18:03:02.434: INFO: Got endpoints: latency-svc-aytkf [710.694168ms]
    Jan 31 18:03:02.467: INFO: Created: latency-svc-zsxhw
    Jan 31 18:03:02.469: INFO: Got endpoints: latency-svc-sukil [805.932592ms]
    Jan 31 18:03:02.514: INFO: Got endpoints: latency-svc-yhkov [739.128472ms]
    Jan 31 18:03:02.517: INFO: Created: latency-svc-ogiwq
    Jan 31 18:03:02.546: INFO: Created: latency-svc-ttisy
    Jan 31 18:03:02.564: INFO: Got endpoints: latency-svc-bapfx [748.169877ms]
    Jan 31 18:03:02.605: INFO: Created: latency-svc-rihpy
    Jan 31 18:03:02.614: INFO: Got endpoints: latency-svc-hcpqu [750.809173ms]
    Jan 31 18:03:02.647: INFO: Created: latency-svc-hctot
    Jan 31 18:03:02.663: INFO: Got endpoints: latency-svc-tdlyy [751.860021ms]
    Jan 31 18:03:02.699: INFO: Created: latency-svc-jqela
    Jan 31 18:03:02.711: INFO: Got endpoints: latency-svc-sfvtn [745.160307ms]
    Jan 31 18:03:02.740: INFO: Created: latency-svc-zncbz
    Jan 31 18:03:02.763: INFO: Got endpoints: latency-svc-mdoyl [747.910895ms]
    Jan 31 18:03:02.801: INFO: Created: latency-svc-wmkbd
    Jan 31 18:03:02.814: INFO: Got endpoints: latency-svc-kuubh [751.166283ms]
    Jan 31 18:03:02.847: INFO: Created: latency-svc-asurw
    Jan 31 18:03:02.864: INFO: Got endpoints: latency-svc-kqbfe [745.08812ms]
    Jan 31 18:03:02.917: INFO: Got endpoints: latency-svc-gougs [753.763078ms]
    Jan 31 18:03:02.919: INFO: Created: latency-svc-ibbvr
    Jan 31 18:03:02.975: INFO: Got endpoints: latency-svc-nlcfj [763.356301ms]
    Jan 31 18:03:02.995: INFO: Created: latency-svc-otvqg
    Jan 31 18:03:03.021: INFO: Got endpoints: latency-svc-alqiz [756.324417ms]
    Jan 31 18:03:03.026: INFO: Created: latency-svc-daxop
    Jan 31 18:03:03.060: INFO: Created: latency-svc-loevk
    Jan 31 18:03:03.064: INFO: Got endpoints: latency-svc-plpgs [731.898462ms]
    Jan 31 18:03:03.096: INFO: Created: latency-svc-zkmaz
    Jan 31 18:03:03.114: INFO: Got endpoints: latency-svc-qyiec [750.802071ms]
    Jan 31 18:03:03.148: INFO: Created: latency-svc-jvagb
    Jan 31 18:03:03.161: INFO: Got endpoints: latency-svc-zsxhw [727.239726ms]
    Jan 31 18:03:03.192: INFO: Created: latency-svc-unqnu
    Jan 31 18:03:03.213: INFO: Got endpoints: latency-svc-ogiwq [743.185795ms]
    Jan 31 18:03:03.248: INFO: Created: latency-svc-dtrrk
    Jan 31 18:03:03.262: INFO: Got endpoints: latency-svc-ttisy [748.100926ms]
    Jan 31 18:03:03.296: INFO: Created: latency-svc-aewsa
    Jan 31 18:03:03.311: INFO: Got endpoints: latency-svc-rihpy [747.314331ms]
    Jan 31 18:03:03.346: INFO: Created: latency-svc-tkxyr
    Jan 31 18:03:03.361: INFO: Got endpoints: latency-svc-hctot [746.525562ms]
    Jan 31 18:03:03.392: INFO: Created: latency-svc-rxbks
    Jan 31 18:03:03.413: INFO: Got endpoints: latency-svc-jqela [750.30744ms]
    Jan 31 18:03:03.453: INFO: Created: latency-svc-qbwjx
    Jan 31 18:03:03.465: INFO: Got endpoints: latency-svc-zncbz [753.771074ms]
    Jan 31 18:03:03.513: INFO: Got endpoints: latency-svc-wmkbd [750.543258ms]
    Jan 31 18:03:03.554: INFO: Created: latency-svc-acldl
    Jan 31 18:03:03.567: INFO: Got endpoints: latency-svc-asurw [753.365962ms]
    Jan 31 18:03:03.573: INFO: Created: latency-svc-jqhhr
    Jan 31 18:03:03.601: INFO: Created: latency-svc-fznou
    Jan 31 18:03:03.613: INFO: Got endpoints: latency-svc-ibbvr [749.145702ms]
    Jan 31 18:03:03.646: INFO: Created: latency-svc-asaft
    Jan 31 18:03:03.662: INFO: Got endpoints: latency-svc-otvqg [744.986808ms]
    Jan 31 18:03:03.698: INFO: Created: latency-svc-ufoqy
    Jan 31 18:03:03.713: INFO: Got endpoints: latency-svc-daxop [738.167136ms]
    Jan 31 18:03:03.750: INFO: Created: latency-svc-dfbmh
    Jan 31 18:03:03.763: INFO: Got endpoints: latency-svc-loevk [741.15246ms]
    Jan 31 18:03:03.796: INFO: Created: latency-svc-bydis
    Jan 31 18:03:03.814: INFO: Got endpoints: latency-svc-zkmaz [749.647947ms]
    Jan 31 18:03:03.847: INFO: Created: latency-svc-dhfqy
    Jan 31 18:03:03.863: INFO: Got endpoints: latency-svc-jvagb [748.464828ms]
    Jan 31 18:03:03.894: INFO: Created: latency-svc-qolai
    Jan 31 18:03:03.915: INFO: Got endpoints: latency-svc-unqnu [753.641667ms]
    Jan 31 18:03:03.975: INFO: Created: latency-svc-zxsun
    Jan 31 18:03:03.998: INFO: Got endpoints: latency-svc-dtrrk [785.157577ms]
    Jan 31 18:03:04.014: INFO: Got endpoints: latency-svc-aewsa [752.021808ms]
    Jan 31 18:03:04.063: INFO: Got endpoints: latency-svc-tkxyr [751.990569ms]
    Jan 31 18:03:04.075: INFO: Created: latency-svc-cszuq
    Jan 31 18:03:04.088: INFO: Created: latency-svc-hbvqm
    Jan 31 18:03:04.101: INFO: Created: latency-svc-utlqj
    Jan 31 18:03:04.111: INFO: Got endpoints: latency-svc-rxbks [750.446995ms]
    Jan 31 18:03:04.144: INFO: Created: latency-svc-cbyui
    Jan 31 18:03:04.162: INFO: Got endpoints: latency-svc-qbwjx [748.746423ms]
    Jan 31 18:03:04.205: INFO: Created: latency-svc-wgnib
    Jan 31 18:03:04.212: INFO: Got endpoints: latency-svc-acldl [746.758515ms]
    Jan 31 18:03:04.249: INFO: Created: latency-svc-vrjtb
    Jan 31 18:03:04.264: INFO: Got endpoints: latency-svc-jqhhr [750.570651ms]
    Jan 31 18:03:04.298: INFO: Created: latency-svc-niaoe
    Jan 31 18:03:04.314: INFO: Got endpoints: latency-svc-fznou [746.993822ms]
    Jan 31 18:03:04.347: INFO: Created: latency-svc-pdaft
    Jan 31 18:03:04.361: INFO: Got endpoints: latency-svc-asaft [747.519531ms]
    Jan 31 18:03:04.396: INFO: Created: latency-svc-cbgkw
    Jan 31 18:03:04.413: INFO: Got endpoints: latency-svc-ufoqy [750.533871ms]
    Jan 31 18:03:04.457: INFO: Created: latency-svc-pygnk
    Jan 31 18:03:04.462: INFO: Got endpoints: latency-svc-dfbmh [749.027166ms]
    Jan 31 18:03:04.495: INFO: Created: latency-svc-wetgm
    Jan 31 18:03:04.512: INFO: Got endpoints: latency-svc-bydis [748.354519ms]
    Jan 31 18:03:04.550: INFO: Created: latency-svc-hhxbu
    Jan 31 18:03:04.564: INFO: Got endpoints: latency-svc-dhfqy [750.492462ms]
    Jan 31 18:03:04.617: INFO: Got endpoints: latency-svc-qolai [753.876934ms]
    Jan 31 18:03:04.636: INFO: Created: latency-svc-flnbt
    Jan 31 18:03:04.661: INFO: Got endpoints: latency-svc-zxsun [745.542604ms]
    Jan 31 18:03:04.665: INFO: Created: latency-svc-qsubg
    Jan 31 18:03:04.698: INFO: Created: latency-svc-zoyzj
    Jan 31 18:03:04.714: INFO: Got endpoints: latency-svc-cszuq [716.333308ms]
    Jan 31 18:03:04.754: INFO: Created: latency-svc-vmhpq
    Jan 31 18:03:04.768: INFO: Got endpoints: latency-svc-hbvqm [753.430626ms]
    Jan 31 18:03:04.804: INFO: Created: latency-svc-snkaz
    Jan 31 18:03:04.812: INFO: Got endpoints: latency-svc-utlqj [748.498521ms]
    Jan 31 18:03:04.847: INFO: Created: latency-svc-mdune
    Jan 31 18:03:04.861: INFO: Got endpoints: latency-svc-cbyui [750.020705ms]
    Jan 31 18:03:04.898: INFO: Created: latency-svc-ujmbl
    Jan 31 18:03:04.915: INFO: Got endpoints: latency-svc-wgnib [753.114515ms]
    Jan 31 18:03:04.947: INFO: Created: latency-svc-fwlum
    Jan 31 18:03:04.962: INFO: Got endpoints: latency-svc-vrjtb [749.697591ms]
    Jan 31 18:03:04.993: INFO: Created: latency-svc-ymcie
    Jan 31 18:03:05.014: INFO: Got endpoints: latency-svc-niaoe [749.919092ms]
    Jan 31 18:03:05.053: INFO: Created: latency-svc-dloga
    Jan 31 18:03:05.065: INFO: Got endpoints: latency-svc-pdaft [750.51844ms]
    Jan 31 18:03:05.098: INFO: Created: latency-svc-vqjqv
    Jan 31 18:03:05.111: INFO: Got endpoints: latency-svc-cbgkw [750.132827ms]
    Jan 31 18:03:05.165: INFO: Got endpoints: latency-svc-pygnk [752.575339ms]
    Jan 31 18:03:05.187: INFO: Created: latency-svc-vkqrc
    Jan 31 18:03:05.209: INFO: Created: latency-svc-swxhh
    Jan 31 18:03:05.214: INFO: Got endpoints: latency-svc-wetgm [752.362847ms]
    Jan 31 18:03:05.252: INFO: Created: latency-svc-zzlss
    Jan 31 18:03:05.262: INFO: Got endpoints: latency-svc-hhxbu [750.527017ms]
    Jan 31 18:03:05.302: INFO: Created: latency-svc-bnjkf
    Jan 31 18:03:05.312: INFO: Got endpoints: latency-svc-flnbt [748.114242ms]
    Jan 31 18:03:05.343: INFO: Created: latency-svc-hfbuh
    Jan 31 18:03:05.362: INFO: Got endpoints: latency-svc-qsubg [744.890283ms]
    Jan 31 18:03:05.397: INFO: Created: latency-svc-fxbba
    Jan 31 18:03:05.412: INFO: Got endpoints: latency-svc-zoyzj [751.535406ms]
    Jan 31 18:03:05.452: INFO: Created: latency-svc-ljbqq
    Jan 31 18:03:05.462: INFO: Got endpoints: latency-svc-vmhpq [747.73996ms]
    Jan 31 18:03:05.498: INFO: Created: latency-svc-drtzz
    Jan 31 18:03:05.513: INFO: Got endpoints: latency-svc-snkaz [745.141812ms]
    Jan 31 18:03:05.545: INFO: Created: latency-svc-jmzlb
    Jan 31 18:03:05.561: INFO: Got endpoints: latency-svc-mdune [749.684798ms]
    Jan 31 18:03:05.592: INFO: Created: latency-svc-pjnwh
    Jan 31 18:03:05.610: INFO: Got endpoints: latency-svc-ujmbl [749.074687ms]
    Jan 31 18:03:05.646: INFO: Created: latency-svc-gffjt
    Jan 31 18:03:05.661: INFO: Got endpoints: latency-svc-fwlum [745.993131ms]
    Jan 31 18:03:05.716: INFO: Got endpoints: latency-svc-ymcie [754.094598ms]
    Jan 31 18:03:05.746: INFO: Created: latency-svc-smfft
    Jan 31 18:03:05.760: INFO: Created: latency-svc-ylirk
    Jan 31 18:03:05.764: INFO: Got endpoints: latency-svc-dloga [749.957936ms]
    Jan 31 18:03:05.797: INFO: Created: latency-svc-jucqf
    Jan 31 18:03:05.812: INFO: Got endpoints: latency-svc-vqjqv [747.373513ms]
    Jan 31 18:03:05.843: INFO: Created: latency-svc-rkufy
    Jan 31 18:03:05.861: INFO: Got endpoints: latency-svc-vkqrc [749.631225ms]
    Jan 31 18:03:05.920: INFO: Got endpoints: latency-svc-swxhh [755.109837ms]
    Jan 31 18:03:05.927: INFO: Created: latency-svc-vmujt
    Jan 31 18:03:05.961: INFO: Got endpoints: latency-svc-zzlss [746.398841ms]
    Jan 31 18:03:05.968: INFO: Created: latency-svc-rolfb
    Jan 31 18:03:05.993: INFO: Created: latency-svc-itipt
    Jan 31 18:03:06.012: INFO: Got endpoints: latency-svc-bnjkf [749.093433ms]
    Jan 31 18:03:06.053: INFO: Created: latency-svc-cevnh
    Jan 31 18:03:06.063: INFO: Got endpoints: latency-svc-hfbuh [750.333479ms]
    Jan 31 18:03:06.109: INFO: Created: latency-svc-oqyto
    Jan 31 18:03:06.122: INFO: Got endpoints: latency-svc-fxbba [760.44052ms]
    Jan 31 18:03:06.163: INFO: Got endpoints: latency-svc-ljbqq [750.779517ms]
    Jan 31 18:03:06.165: INFO: Created: latency-svc-kzqdm
    Jan 31 18:03:06.197: INFO: Created: latency-svc-mbunt
    Jan 31 18:03:06.212: INFO: Got endpoints: latency-svc-drtzz [750.214303ms]
    Jan 31 18:03:06.266: INFO: Got endpoints: latency-svc-jmzlb [752.966954ms]
    Jan 31 18:03:06.293: INFO: Created: latency-svc-ymipg
    Jan 31 18:03:06.318: INFO: Got endpoints: latency-svc-pjnwh [756.75798ms]
    Jan 31 18:03:06.360: INFO: Created: latency-svc-aatua
    Jan 31 18:03:06.367: INFO: Got endpoints: latency-svc-gffjt [756.915218ms]
    Jan 31 18:03:06.368: INFO: Created: latency-svc-ihjfw
    Jan 31 18:03:06.405: INFO: Created: latency-svc-btikr
    Jan 31 18:03:06.413: INFO: Got endpoints: latency-svc-smfft [751.579097ms]
    Jan 31 18:03:06.445: INFO: Created: latency-svc-vyjlt
    Jan 31 18:03:06.464: INFO: Got endpoints: latency-svc-ylirk [747.953867ms]
    Jan 31 18:03:06.504: INFO: Created: latency-svc-yldks
    Jan 31 18:03:06.518: INFO: Got endpoints: latency-svc-jucqf [753.600769ms]
    Jan 31 18:03:06.553: INFO: Created: latency-svc-qpjhf
    Jan 31 18:03:06.562: INFO: Got endpoints: latency-svc-rkufy [749.974678ms]
    Jan 31 18:03:06.596: INFO: Created: latency-svc-bzcxl
    Jan 31 18:03:06.611: INFO: Got endpoints: latency-svc-vmujt [750.846194ms]
    Jan 31 18:03:06.641: INFO: Created: latency-svc-pnswl
    Jan 31 18:03:06.661: INFO: Got endpoints: latency-svc-rolfb [740.307263ms]
    Jan 31 18:03:06.709: INFO: Created: latency-svc-cyiue
    Jan 31 18:03:06.714: INFO: Got endpoints: latency-svc-itipt [752.793525ms]
    Jan 31 18:03:06.747: INFO: Created: latency-svc-xpfdq
    Jan 31 18:03:06.762: INFO: Got endpoints: latency-svc-cevnh [749.868747ms]
    Jan 31 18:03:06.815: INFO: Got endpoints: latency-svc-oqyto [752.491882ms]
    Jan 31 18:03:06.834: INFO: Created: latency-svc-mqqdv
    Jan 31 18:03:06.853: INFO: Created: latency-svc-ewpso
    Jan 31 18:03:06.863: INFO: Got endpoints: latency-svc-kzqdm [740.493517ms]
    Jan 31 18:03:06.893: INFO: Created: latency-svc-thnej
    Jan 31 18:03:06.911: INFO: Got endpoints: latency-svc-mbunt [747.483834ms]
    Jan 31 18:03:06.948: INFO: Created: latency-svc-oufmk
    Jan 31 18:03:06.962: INFO: Got endpoints: latency-svc-ymipg [749.555221ms]
    Jan 31 18:03:06.996: INFO: Created: latency-svc-umnyj
    Jan 31 18:03:07.011: INFO: Got endpoints: latency-svc-aatua [744.938236ms]
    Jan 31 18:03:07.049: INFO: Created: latency-svc-ratmf
    Jan 31 18:03:07.063: INFO: Got endpoints: latency-svc-ihjfw [745.260808ms]
    Jan 31 18:03:07.097: INFO: Created: latency-svc-jdjbn
    Jan 31 18:03:07.111: INFO: Got endpoints: latency-svc-btikr [743.429107ms]
    Jan 31 18:03:07.147: INFO: Created: latency-svc-lmlkz
    Jan 31 18:03:07.162: INFO: Got endpoints: latency-svc-vyjlt [749.727207ms]
    Jan 31 18:03:07.194: INFO: Created: latency-svc-ivghb
    Jan 31 18:03:07.216: INFO: Got endpoints: latency-svc-yldks [752.031196ms]
    Jan 31 18:03:07.259: INFO: Created: latency-svc-mpayc
    Jan 31 18:03:07.263: INFO: Got endpoints: latency-svc-qpjhf [744.688821ms]
    Jan 31 18:03:07.296: INFO: Created: latency-svc-woera
    Jan 31 18:03:07.313: INFO: Got endpoints: latency-svc-bzcxl [750.064398ms]
    Jan 31 18:03:07.365: INFO: Got endpoints: latency-svc-pnswl [753.513514ms]
    Jan 31 18:03:07.374: INFO: Created: latency-svc-ixiuz
    Jan 31 18:03:07.401: INFO: Created: latency-svc-ikqcy
    Jan 31 18:03:07.412: INFO: Got endpoints: latency-svc-cyiue [751.308352ms]
    Jan 31 18:03:07.455: INFO: Created: latency-svc-xtffq
    Jan 31 18:03:07.466: INFO: Got endpoints: latency-svc-xpfdq [751.888825ms]
    Jan 31 18:03:07.503: INFO: Created: latency-svc-puwcg
    Jan 31 18:03:07.512: INFO: Got endpoints: latency-svc-mqqdv [750.432448ms]
    Jan 31 18:03:07.547: INFO: Created: latency-svc-trkeo
    Jan 31 18:03:07.563: INFO: Got endpoints: latency-svc-ewpso [747.42365ms]
    Jan 31 18:03:07.601: INFO: Created: latency-svc-lkkgj
    Jan 31 18:03:07.612: INFO: Got endpoints: latency-svc-thnej [749.38663ms]
    Jan 31 18:03:07.649: INFO: Created: latency-svc-wxhym
    Jan 31 18:03:07.662: INFO: Got endpoints: latency-svc-oufmk [751.783016ms]
    Jan 31 18:03:07.701: INFO: Created: latency-svc-unrdw
    Jan 31 18:03:07.713: INFO: Got endpoints: latency-svc-umnyj [751.283374ms]
    Jan 31 18:03:07.747: INFO: Created: latency-svc-cplwr
    Jan 31 18:03:07.761: INFO: Got endpoints: latency-svc-ratmf [750.547217ms]
    Jan 31 18:03:07.801: INFO: Created: latency-svc-etgxj
    Jan 31 18:03:07.828: INFO: Got endpoints: latency-svc-jdjbn [764.174215ms]
    Jan 31 18:03:07.864: INFO: Got endpoints: latency-svc-lmlkz [753.339292ms]
    Jan 31 18:03:07.909: INFO: Created: latency-svc-uuxvf
    Jan 31 18:03:07.913: INFO: Got endpoints: latency-svc-ivghb [750.887423ms]
    Jan 31 18:03:07.917: INFO: Created: latency-svc-zilhs
    Jan 31 18:03:07.971: INFO: Got endpoints: latency-svc-mpayc [754.897224ms]
    Jan 31 18:03:07.974: INFO: Created: latency-svc-lxrwf
    Jan 31 18:03:08.008: INFO: Created: latency-svc-xfcnb
    Jan 31 18:03:08.013: INFO: Got endpoints: latency-svc-woera [750.441264ms]
    Jan 31 18:03:08.050: INFO: Created: latency-svc-pdcvn
    Jan 31 18:03:08.063: INFO: Got endpoints: latency-svc-ixiuz [749.960211ms]
    Jan 31 18:03:08.099: INFO: Created: latency-svc-ydinv
    Jan 31 18:03:08.113: INFO: Got endpoints: latency-svc-ikqcy [748.318109ms]
    Jan 31 18:03:08.156: INFO: Created: latency-svc-xmqlj
    Jan 31 18:03:08.163: INFO: Got endpoints: latency-svc-xtffq [750.437747ms]
    Jan 31 18:03:08.211: INFO: Got endpoints: latency-svc-puwcg [745.634408ms]
    Jan 31 18:03:08.262: INFO: Got endpoints: latency-svc-trkeo [749.479847ms]
    Jan 31 18:03:08.312: INFO: Got endpoints: latency-svc-lkkgj [749.389284ms]
    Jan 31 18:03:08.367: INFO: Got endpoints: latency-svc-wxhym [754.460805ms]
    Jan 31 18:03:08.414: INFO: Got endpoints: latency-svc-unrdw [751.571603ms]
    Jan 31 18:03:08.466: INFO: Got endpoints: latency-svc-cplwr [752.707452ms]
    Jan 31 18:03:08.513: INFO: Got endpoints: latency-svc-etgxj [751.852928ms]
    Jan 31 18:03:08.565: INFO: Got endpoints: latency-svc-zilhs [737.167627ms]
    Jan 31 18:03:08.613: INFO: Got endpoints: latency-svc-uuxvf [748.422728ms]
    Jan 31 18:03:08.666: INFO: Got endpoints: latency-svc-lxrwf [753.128083ms]
    Jan 31 18:03:08.716: INFO: Got endpoints: latency-svc-xfcnb [745.438265ms]
    Jan 31 18:03:08.763: INFO: Got endpoints: latency-svc-pdcvn [749.67045ms]
    Jan 31 18:03:08.812: INFO: Got endpoints: latency-svc-ydinv [749.305837ms]
    Jan 31 18:03:08.865: INFO: Got endpoints: latency-svc-xmqlj [752.099776ms]
    Jan 31 18:03:08.866: INFO: Latencies: [116.603711ms 131.675969ms 157.802144ms 172.464161ms 183.954169ms 200.725275ms 218.856105ms 233.912923ms 259.668917ms 284.675843ms 287.20469ms 287.892179ms 288.392469ms 291.251382ms 292.311437ms 295.674821ms 297.326639ms 298.555293ms 298.824786ms 299.620879ms 301.49894ms 303.811826ms 311.755454ms 315.040848ms 317.665436ms 321.188751ms 322.587531ms 324.336725ms 327.730114ms 333.091475ms 338.759569ms 341.158708ms 341.310987ms 347.396073ms 348.472038ms 351.042033ms 355.592391ms 361.081725ms 371.019693ms 371.627528ms 374.837428ms 375.248389ms 378.10024ms 378.779671ms 379.003638ms 379.304529ms 380.057501ms 381.444337ms 381.821433ms 389.763538ms 391.613113ms 392.385382ms 395.540468ms 402.150881ms 404.085819ms 422.87418ms 426.129998ms 443.200853ms 466.799596ms 474.37325ms 482.604504ms 531.895209ms 613.598276ms 619.980876ms 654.21346ms 672.142657ms 699.574304ms 710.694168ms 716.333308ms 727.239726ms 731.898462ms 737.167627ms 738.167136ms 739.128472ms 740.307263ms 740.493517ms 741.15246ms 743.185795ms 743.429107ms 744.688821ms 744.890283ms 744.938236ms 744.986808ms 745.08812ms 745.141812ms 745.160307ms 745.260808ms 745.438265ms 745.542604ms 745.634408ms 745.993131ms 746.398841ms 746.525562ms 746.758515ms 746.993822ms 747.314331ms 747.373513ms 747.42365ms 747.483834ms 747.519531ms 747.73996ms 747.910895ms 747.953867ms 748.100926ms 748.114242ms 748.169877ms 748.318109ms 748.354519ms 748.422728ms 748.464828ms 748.498521ms 748.746423ms 749.027166ms 749.074687ms 749.093433ms 749.145702ms 749.305837ms 749.38663ms 749.389284ms 749.479847ms 749.555221ms 749.631225ms 749.647947ms 749.67045ms 749.684798ms 749.697591ms 749.727207ms 749.868747ms 749.919092ms 749.957936ms 749.960211ms 749.974678ms 750.020705ms 750.064398ms 750.132827ms 750.214303ms 750.220063ms 750.30744ms 750.333479ms 750.432448ms 750.437747ms 750.441264ms 750.446995ms 750.492462ms 750.51844ms 750.527017ms 750.533871ms 750.543258ms 750.547217ms 750.570651ms 750.779517ms 750.802071ms 750.809173ms 750.846194ms 750.887423ms 751.166283ms 751.283374ms 751.308352ms 751.535406ms 751.571603ms 751.579097ms 751.783016ms 751.852928ms 751.860021ms 751.888825ms 751.990569ms 752.021808ms 752.031196ms 752.099776ms 752.362847ms 752.491882ms 752.575339ms 752.707452ms 752.793525ms 752.966954ms 753.114515ms 753.128083ms 753.339292ms 753.365962ms 753.430626ms 753.513514ms 753.600769ms 753.641667ms 753.763078ms 753.771074ms 753.876934ms 754.094598ms 754.460805ms 754.897224ms 755.109837ms 756.324417ms 756.75798ms 756.915218ms 760.44052ms 763.356301ms 764.174215ms 771.231449ms 785.157577ms 805.932592ms 1.012447061s]
    Jan 31 18:03:08.866: INFO: 50 %ile: 747.73996ms
    Jan 31 18:03:08.866: INFO: 90 %ile: 753.513514ms
    Jan 31 18:03:08.866: INFO: 99 %ile: 805.932592ms
    Jan 31 18:03:08.866: INFO: Total sample count: 200
    [AfterEach] [sig-network] Service endpoints latency
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:03:08.866: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      tear down framework | framework.go:193
    STEP: Destroying namespace "svc-latency-7074" for this suite. 01/31/23 18:03:08.88
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:03:08.898
Jan 31 18:03:08.898: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename namespaces 01/31/23 18:03:08.9
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:08.925
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:08.937
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
STEP: Read namespace status 01/31/23 18:03:08.945
Jan 31 18:03:08.950: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
STEP: Patch namespace status 01/31/23 18:03:08.95
Jan 31 18:03:08.957: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
STEP: Update namespace status 01/31/23 18:03:08.957
Jan 31 18:03:08.970: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:03:08.970: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-3619" for this suite. 01/31/23 18:03:08.976
------------------------------
â€¢ [0.085 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:03:08.898
    Jan 31 18:03:08.898: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename namespaces 01/31/23 18:03:08.9
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:08.925
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:08.937
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a namespace status [Conformance]
      test/e2e/apimachinery/namespace.go:299
    STEP: Read namespace status 01/31/23 18:03:08.945
    Jan 31 18:03:08.950: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
    STEP: Patch namespace status 01/31/23 18:03:08.95
    Jan 31 18:03:08.957: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
    STEP: Update namespace status 01/31/23 18:03:08.957
    Jan 31 18:03:08.970: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:03:08.970: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-3619" for this suite. 01/31/23 18:03:08.976
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:03:08.984
Jan 31 18:03:08.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename endpointslice 01/31/23 18:03:08.985
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:09.004
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:09.015
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
STEP: referencing a single matching pod 01/31/23 18:03:14.241
STEP: referencing matching pods with named port 01/31/23 18:03:19.254
STEP: creating empty Endpoints and EndpointSlices for no matching Pods 01/31/23 18:03:24.279
STEP: recreating EndpointSlices after they've been deleted 01/31/23 18:03:29.304
Jan 31 18:03:29.349: INFO: EndpointSlice for Service endpointslice-6056/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Jan 31 18:03:39.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-6056" for this suite. 01/31/23 18:03:39.389
------------------------------
â€¢ [SLOW TEST] [30.419 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:03:08.984
    Jan 31 18:03:08.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename endpointslice 01/31/23 18:03:08.985
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:09.004
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:09.015
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
      test/e2e/network/endpointslice.go:205
    STEP: referencing a single matching pod 01/31/23 18:03:14.241
    STEP: referencing matching pods with named port 01/31/23 18:03:19.254
    STEP: creating empty Endpoints and EndpointSlices for no matching Pods 01/31/23 18:03:24.279
    STEP: recreating EndpointSlices after they've been deleted 01/31/23 18:03:29.304
    Jan 31 18:03:29.349: INFO: EndpointSlice for Service endpointslice-6056/example-named-port not found
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:03:39.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-6056" for this suite. 01/31/23 18:03:39.389
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:03:39.407
Jan 31 18:03:39.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replication-controller 01/31/23 18:03:39.408
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:39.428
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:39.434
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
STEP: creating a ReplicationController 01/31/23 18:03:39.447
STEP: waiting for RC to be added 01/31/23 18:03:39.455
STEP: waiting for available Replicas 01/31/23 18:03:39.456
STEP: patching ReplicationController 01/31/23 18:03:41.507
STEP: waiting for RC to be modified 01/31/23 18:03:41.521
STEP: patching ReplicationController status 01/31/23 18:03:41.521
STEP: waiting for RC to be modified 01/31/23 18:03:41.53
STEP: waiting for available Replicas 01/31/23 18:03:41.53
STEP: fetching ReplicationController status 01/31/23 18:03:41.541
STEP: patching ReplicationController scale 01/31/23 18:03:41.551
STEP: waiting for RC to be modified 01/31/23 18:03:41.561
STEP: waiting for ReplicationController's scale to be the max amount 01/31/23 18:03:41.562
STEP: fetching ReplicationController; ensuring that it's patched 01/31/23 18:03:43.649
STEP: updating ReplicationController status 01/31/23 18:03:43.654
STEP: waiting for RC to be modified 01/31/23 18:03:43.661
STEP: listing all ReplicationControllers 01/31/23 18:03:43.661
STEP: checking that ReplicationController has expected values 01/31/23 18:03:43.667
STEP: deleting ReplicationControllers by collection 01/31/23 18:03:43.667
STEP: waiting for ReplicationController to have a DELETED watchEvent 01/31/23 18:03:43.678
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 31 18:03:43.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-9391" for this suite. 01/31/23 18:03:43.718
------------------------------
â€¢ [4.325 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:03:39.407
    Jan 31 18:03:39.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replication-controller 01/31/23 18:03:39.408
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:39.428
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:39.434
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should test the lifecycle of a ReplicationController [Conformance]
      test/e2e/apps/rc.go:110
    STEP: creating a ReplicationController 01/31/23 18:03:39.447
    STEP: waiting for RC to be added 01/31/23 18:03:39.455
    STEP: waiting for available Replicas 01/31/23 18:03:39.456
    STEP: patching ReplicationController 01/31/23 18:03:41.507
    STEP: waiting for RC to be modified 01/31/23 18:03:41.521
    STEP: patching ReplicationController status 01/31/23 18:03:41.521
    STEP: waiting for RC to be modified 01/31/23 18:03:41.53
    STEP: waiting for available Replicas 01/31/23 18:03:41.53
    STEP: fetching ReplicationController status 01/31/23 18:03:41.541
    STEP: patching ReplicationController scale 01/31/23 18:03:41.551
    STEP: waiting for RC to be modified 01/31/23 18:03:41.561
    STEP: waiting for ReplicationController's scale to be the max amount 01/31/23 18:03:41.562
    STEP: fetching ReplicationController; ensuring that it's patched 01/31/23 18:03:43.649
    STEP: updating ReplicationController status 01/31/23 18:03:43.654
    STEP: waiting for RC to be modified 01/31/23 18:03:43.661
    STEP: listing all ReplicationControllers 01/31/23 18:03:43.661
    STEP: checking that ReplicationController has expected values 01/31/23 18:03:43.667
    STEP: deleting ReplicationControllers by collection 01/31/23 18:03:43.667
    STEP: waiting for ReplicationController to have a DELETED watchEvent 01/31/23 18:03:43.678
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:03:43.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-9391" for this suite. 01/31/23 18:03:43.718
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:03:43.732
Jan 31 18:03:43.732: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename runtimeclass 01/31/23 18:03:43.733
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:43.757
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:43.767
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
STEP: getting /apis 01/31/23 18:03:43.778
STEP: getting /apis/node.k8s.io 01/31/23 18:03:43.786
STEP: getting /apis/node.k8s.io/v1 01/31/23 18:03:43.789
STEP: creating 01/31/23 18:03:43.792
STEP: watching 01/31/23 18:03:43.814
Jan 31 18:03:43.814: INFO: starting watch
STEP: getting 01/31/23 18:03:43.823
STEP: listing 01/31/23 18:03:43.829
STEP: patching 01/31/23 18:03:43.834
STEP: updating 01/31/23 18:03:43.841
Jan 31 18:03:43.847: INFO: waiting for watch events with expected annotations
STEP: deleting 01/31/23 18:03:43.848
STEP: deleting a collection 01/31/23 18:03:43.866
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Jan 31 18:03:43.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-585" for this suite. 01/31/23 18:03:43.905
------------------------------
â€¢ [0.181 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:03:43.732
    Jan 31 18:03:43.732: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename runtimeclass 01/31/23 18:03:43.733
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:43.757
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:43.767
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support RuntimeClasses API operations [Conformance]
      test/e2e/common/node/runtimeclass.go:189
    STEP: getting /apis 01/31/23 18:03:43.778
    STEP: getting /apis/node.k8s.io 01/31/23 18:03:43.786
    STEP: getting /apis/node.k8s.io/v1 01/31/23 18:03:43.789
    STEP: creating 01/31/23 18:03:43.792
    STEP: watching 01/31/23 18:03:43.814
    Jan 31 18:03:43.814: INFO: starting watch
    STEP: getting 01/31/23 18:03:43.823
    STEP: listing 01/31/23 18:03:43.829
    STEP: patching 01/31/23 18:03:43.834
    STEP: updating 01/31/23 18:03:43.841
    Jan 31 18:03:43.847: INFO: waiting for watch events with expected annotations
    STEP: deleting 01/31/23 18:03:43.848
    STEP: deleting a collection 01/31/23 18:03:43.866
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:03:43.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-585" for this suite. 01/31/23 18:03:43.905
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:03:43.914
Jan 31 18:03:43.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replication-controller 01/31/23 18:03:43.915
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:43.933
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:43.941
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
STEP: Given a Pod with a 'name' label pod-adoption is created 01/31/23 18:03:43.95
Jan 31 18:03:43.963: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-427" to be "running and ready"
Jan 31 18:03:43.971: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 8.090898ms
Jan 31 18:03:43.972: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Jan 31 18:03:45.979: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015451833s
Jan 31 18:03:45.979: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Jan 31 18:03:47.983: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 4.019805533s
Jan 31 18:03:47.983: INFO: The phase of Pod pod-adoption is Running (Ready = true)
Jan 31 18:03:47.983: INFO: Pod "pod-adoption" satisfied condition "running and ready"
STEP: When a replication controller with a matching selector is created 01/31/23 18:03:47.993
STEP: Then the orphan pod is adopted 01/31/23 18:03:48.006
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 31 18:03:49.028: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-427" for this suite. 01/31/23 18:03:49.039
------------------------------
â€¢ [SLOW TEST] [5.139 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:03:43.914
    Jan 31 18:03:43.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replication-controller 01/31/23 18:03:43.915
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:43.933
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:43.941
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should adopt matching pods on creation [Conformance]
      test/e2e/apps/rc.go:92
    STEP: Given a Pod with a 'name' label pod-adoption is created 01/31/23 18:03:43.95
    Jan 31 18:03:43.963: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-427" to be "running and ready"
    Jan 31 18:03:43.971: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 8.090898ms
    Jan 31 18:03:43.972: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 18:03:45.979: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015451833s
    Jan 31 18:03:45.979: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 18:03:47.983: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 4.019805533s
    Jan 31 18:03:47.983: INFO: The phase of Pod pod-adoption is Running (Ready = true)
    Jan 31 18:03:47.983: INFO: Pod "pod-adoption" satisfied condition "running and ready"
    STEP: When a replication controller with a matching selector is created 01/31/23 18:03:47.993
    STEP: Then the orphan pod is adopted 01/31/23 18:03:48.006
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:03:49.028: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-427" for this suite. 01/31/23 18:03:49.039
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:03:49.053
Jan 31 18:03:49.053: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename gc 01/31/23 18:03:49.055
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:49.089
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:49.101
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
STEP: create the rc 01/31/23 18:03:49.117
STEP: delete the rc 01/31/23 18:03:54.14
STEP: wait for the rc to be deleted 01/31/23 18:03:54.161
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 01/31/23 18:03:59.193
STEP: Gathering metrics 01/31/23 18:04:29.221
W0131 18:04:29.228865      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jan 31 18:04:29.228: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Jan 31 18:04:29.228: INFO: Deleting pod "simpletest.rc-x9v8k" in namespace "gc-7016"
Jan 31 18:04:29.246: INFO: Deleting pod "simpletest.rc-hs45t" in namespace "gc-7016"
Jan 31 18:04:29.262: INFO: Deleting pod "simpletest.rc-qkm9g" in namespace "gc-7016"
Jan 31 18:04:29.282: INFO: Deleting pod "simpletest.rc-jffxf" in namespace "gc-7016"
Jan 31 18:04:29.303: INFO: Deleting pod "simpletest.rc-mxpct" in namespace "gc-7016"
Jan 31 18:04:29.323: INFO: Deleting pod "simpletest.rc-pjwsv" in namespace "gc-7016"
Jan 31 18:04:29.342: INFO: Deleting pod "simpletest.rc-9jnvm" in namespace "gc-7016"
Jan 31 18:04:29.360: INFO: Deleting pod "simpletest.rc-lqrdg" in namespace "gc-7016"
Jan 31 18:04:29.381: INFO: Deleting pod "simpletest.rc-hfvxz" in namespace "gc-7016"
Jan 31 18:04:29.403: INFO: Deleting pod "simpletest.rc-tbqbt" in namespace "gc-7016"
Jan 31 18:04:29.500: INFO: Deleting pod "simpletest.rc-c7xcm" in namespace "gc-7016"
Jan 31 18:04:29.540: INFO: Deleting pod "simpletest.rc-sss2b" in namespace "gc-7016"
Jan 31 18:04:29.574: INFO: Deleting pod "simpletest.rc-548lz" in namespace "gc-7016"
Jan 31 18:04:29.595: INFO: Deleting pod "simpletest.rc-8rsld" in namespace "gc-7016"
Jan 31 18:04:29.619: INFO: Deleting pod "simpletest.rc-jt64z" in namespace "gc-7016"
Jan 31 18:04:29.642: INFO: Deleting pod "simpletest.rc-wjh28" in namespace "gc-7016"
Jan 31 18:04:29.668: INFO: Deleting pod "simpletest.rc-mdknz" in namespace "gc-7016"
Jan 31 18:04:29.691: INFO: Deleting pod "simpletest.rc-gjl9f" in namespace "gc-7016"
Jan 31 18:04:29.718: INFO: Deleting pod "simpletest.rc-8gnq2" in namespace "gc-7016"
Jan 31 18:04:29.738: INFO: Deleting pod "simpletest.rc-42dxt" in namespace "gc-7016"
Jan 31 18:04:29.775: INFO: Deleting pod "simpletest.rc-pj25r" in namespace "gc-7016"
Jan 31 18:04:29.805: INFO: Deleting pod "simpletest.rc-4zbcv" in namespace "gc-7016"
Jan 31 18:04:29.836: INFO: Deleting pod "simpletest.rc-kt9qn" in namespace "gc-7016"
Jan 31 18:04:29.860: INFO: Deleting pod "simpletest.rc-rj9ns" in namespace "gc-7016"
Jan 31 18:04:29.887: INFO: Deleting pod "simpletest.rc-ngskp" in namespace "gc-7016"
Jan 31 18:04:29.920: INFO: Deleting pod "simpletest.rc-sfpk6" in namespace "gc-7016"
Jan 31 18:04:29.945: INFO: Deleting pod "simpletest.rc-p2ftn" in namespace "gc-7016"
Jan 31 18:04:29.981: INFO: Deleting pod "simpletest.rc-kdt6t" in namespace "gc-7016"
Jan 31 18:04:30.012: INFO: Deleting pod "simpletest.rc-96dsp" in namespace "gc-7016"
Jan 31 18:04:30.045: INFO: Deleting pod "simpletest.rc-5v676" in namespace "gc-7016"
Jan 31 18:04:30.075: INFO: Deleting pod "simpletest.rc-rg4rh" in namespace "gc-7016"
Jan 31 18:04:30.104: INFO: Deleting pod "simpletest.rc-k6d95" in namespace "gc-7016"
Jan 31 18:04:30.128: INFO: Deleting pod "simpletest.rc-mtsn8" in namespace "gc-7016"
Jan 31 18:04:30.149: INFO: Deleting pod "simpletest.rc-r5zjq" in namespace "gc-7016"
Jan 31 18:04:30.185: INFO: Deleting pod "simpletest.rc-jwbj4" in namespace "gc-7016"
Jan 31 18:04:30.214: INFO: Deleting pod "simpletest.rc-6m26g" in namespace "gc-7016"
Jan 31 18:04:30.256: INFO: Deleting pod "simpletest.rc-bg9lw" in namespace "gc-7016"
Jan 31 18:04:30.282: INFO: Deleting pod "simpletest.rc-v28v8" in namespace "gc-7016"
Jan 31 18:04:30.309: INFO: Deleting pod "simpletest.rc-994x8" in namespace "gc-7016"
Jan 31 18:04:30.348: INFO: Deleting pod "simpletest.rc-bjgxd" in namespace "gc-7016"
Jan 31 18:04:30.378: INFO: Deleting pod "simpletest.rc-nk4jz" in namespace "gc-7016"
Jan 31 18:04:30.403: INFO: Deleting pod "simpletest.rc-rgjxn" in namespace "gc-7016"
Jan 31 18:04:30.437: INFO: Deleting pod "simpletest.rc-fhdnk" in namespace "gc-7016"
Jan 31 18:04:30.469: INFO: Deleting pod "simpletest.rc-7rhhq" in namespace "gc-7016"
Jan 31 18:04:30.506: INFO: Deleting pod "simpletest.rc-lkd9s" in namespace "gc-7016"
Jan 31 18:04:30.543: INFO: Deleting pod "simpletest.rc-czls4" in namespace "gc-7016"
Jan 31 18:04:30.574: INFO: Deleting pod "simpletest.rc-wl4kd" in namespace "gc-7016"
Jan 31 18:04:30.608: INFO: Deleting pod "simpletest.rc-tgdhp" in namespace "gc-7016"
Jan 31 18:04:30.661: INFO: Deleting pod "simpletest.rc-glhlj" in namespace "gc-7016"
Jan 31 18:04:30.703: INFO: Deleting pod "simpletest.rc-9nbng" in namespace "gc-7016"
Jan 31 18:04:30.750: INFO: Deleting pod "simpletest.rc-mwqfn" in namespace "gc-7016"
Jan 31 18:04:30.794: INFO: Deleting pod "simpletest.rc-bgzhd" in namespace "gc-7016"
Jan 31 18:04:30.860: INFO: Deleting pod "simpletest.rc-46wtf" in namespace "gc-7016"
Jan 31 18:04:30.888: INFO: Deleting pod "simpletest.rc-bw4zn" in namespace "gc-7016"
Jan 31 18:04:30.924: INFO: Deleting pod "simpletest.rc-kbxdt" in namespace "gc-7016"
Jan 31 18:04:30.973: INFO: Deleting pod "simpletest.rc-h4xhs" in namespace "gc-7016"
Jan 31 18:04:31.027: INFO: Deleting pod "simpletest.rc-6jprb" in namespace "gc-7016"
Jan 31 18:04:31.062: INFO: Deleting pod "simpletest.rc-6zwh8" in namespace "gc-7016"
Jan 31 18:04:31.258: INFO: Deleting pod "simpletest.rc-ncd5s" in namespace "gc-7016"
Jan 31 18:04:31.311: INFO: Deleting pod "simpletest.rc-jjj78" in namespace "gc-7016"
Jan 31 18:04:31.364: INFO: Deleting pod "simpletest.rc-n5lsr" in namespace "gc-7016"
Jan 31 18:04:31.398: INFO: Deleting pod "simpletest.rc-lt8hx" in namespace "gc-7016"
Jan 31 18:04:31.432: INFO: Deleting pod "simpletest.rc-b5w6r" in namespace "gc-7016"
Jan 31 18:04:31.458: INFO: Deleting pod "simpletest.rc-cx9dx" in namespace "gc-7016"
Jan 31 18:04:31.489: INFO: Deleting pod "simpletest.rc-rgs8f" in namespace "gc-7016"
Jan 31 18:04:31.515: INFO: Deleting pod "simpletest.rc-75hr7" in namespace "gc-7016"
Jan 31 18:04:31.561: INFO: Deleting pod "simpletest.rc-m4fnc" in namespace "gc-7016"
Jan 31 18:04:31.610: INFO: Deleting pod "simpletest.rc-9cbjj" in namespace "gc-7016"
Jan 31 18:04:31.631: INFO: Deleting pod "simpletest.rc-g4ddg" in namespace "gc-7016"
Jan 31 18:04:31.669: INFO: Deleting pod "simpletest.rc-cvkj9" in namespace "gc-7016"
Jan 31 18:04:31.696: INFO: Deleting pod "simpletest.rc-smqkv" in namespace "gc-7016"
Jan 31 18:04:31.719: INFO: Deleting pod "simpletest.rc-jsmp2" in namespace "gc-7016"
Jan 31 18:04:31.750: INFO: Deleting pod "simpletest.rc-g9wxd" in namespace "gc-7016"
Jan 31 18:04:31.783: INFO: Deleting pod "simpletest.rc-7v4kx" in namespace "gc-7016"
Jan 31 18:04:31.813: INFO: Deleting pod "simpletest.rc-klthf" in namespace "gc-7016"
Jan 31 18:04:31.842: INFO: Deleting pod "simpletest.rc-6p786" in namespace "gc-7016"
Jan 31 18:04:31.866: INFO: Deleting pod "simpletest.rc-h2nwq" in namespace "gc-7016"
Jan 31 18:04:31.906: INFO: Deleting pod "simpletest.rc-dnsdp" in namespace "gc-7016"
Jan 31 18:04:31.945: INFO: Deleting pod "simpletest.rc-8vct8" in namespace "gc-7016"
Jan 31 18:04:31.995: INFO: Deleting pod "simpletest.rc-wzzwk" in namespace "gc-7016"
Jan 31 18:04:32.037: INFO: Deleting pod "simpletest.rc-wtjtz" in namespace "gc-7016"
Jan 31 18:04:32.076: INFO: Deleting pod "simpletest.rc-zpjsp" in namespace "gc-7016"
Jan 31 18:04:32.110: INFO: Deleting pod "simpletest.rc-kwjtp" in namespace "gc-7016"
Jan 31 18:04:32.148: INFO: Deleting pod "simpletest.rc-x4qsf" in namespace "gc-7016"
Jan 31 18:04:32.194: INFO: Deleting pod "simpletest.rc-5xpvp" in namespace "gc-7016"
Jan 31 18:04:32.224: INFO: Deleting pod "simpletest.rc-p2gcx" in namespace "gc-7016"
Jan 31 18:04:32.256: INFO: Deleting pod "simpletest.rc-pwb5p" in namespace "gc-7016"
Jan 31 18:04:32.295: INFO: Deleting pod "simpletest.rc-7hfgz" in namespace "gc-7016"
Jan 31 18:04:32.354: INFO: Deleting pod "simpletest.rc-cczxb" in namespace "gc-7016"
Jan 31 18:04:32.421: INFO: Deleting pod "simpletest.rc-wkqz9" in namespace "gc-7016"
Jan 31 18:04:32.463: INFO: Deleting pod "simpletest.rc-wz9b5" in namespace "gc-7016"
Jan 31 18:04:32.517: INFO: Deleting pod "simpletest.rc-v6kkd" in namespace "gc-7016"
Jan 31 18:04:32.564: INFO: Deleting pod "simpletest.rc-mjgh2" in namespace "gc-7016"
Jan 31 18:04:32.593: INFO: Deleting pod "simpletest.rc-cfb6b" in namespace "gc-7016"
Jan 31 18:04:32.630: INFO: Deleting pod "simpletest.rc-tkqrk" in namespace "gc-7016"
Jan 31 18:04:32.682: INFO: Deleting pod "simpletest.rc-4zktr" in namespace "gc-7016"
Jan 31 18:04:32.721: INFO: Deleting pod "simpletest.rc-hmgqc" in namespace "gc-7016"
Jan 31 18:04:32.742: INFO: Deleting pod "simpletest.rc-mlhxt" in namespace "gc-7016"
Jan 31 18:04:32.795: INFO: Deleting pod "simpletest.rc-5fbfs" in namespace "gc-7016"
Jan 31 18:04:32.834: INFO: Deleting pod "simpletest.rc-6kqnf" in namespace "gc-7016"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 31 18:04:32.887: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-7016" for this suite. 01/31/23 18:04:32.919
------------------------------
â€¢ [SLOW TEST] [43.889 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:03:49.053
    Jan 31 18:03:49.053: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename gc 01/31/23 18:03:49.055
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:03:49.089
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:03:49.101
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan pods created by rc if delete options say so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:370
    STEP: create the rc 01/31/23 18:03:49.117
    STEP: delete the rc 01/31/23 18:03:54.14
    STEP: wait for the rc to be deleted 01/31/23 18:03:54.161
    STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 01/31/23 18:03:59.193
    STEP: Gathering metrics 01/31/23 18:04:29.221
    W0131 18:04:29.228865      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Jan 31 18:04:29.228: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Jan 31 18:04:29.228: INFO: Deleting pod "simpletest.rc-x9v8k" in namespace "gc-7016"
    Jan 31 18:04:29.246: INFO: Deleting pod "simpletest.rc-hs45t" in namespace "gc-7016"
    Jan 31 18:04:29.262: INFO: Deleting pod "simpletest.rc-qkm9g" in namespace "gc-7016"
    Jan 31 18:04:29.282: INFO: Deleting pod "simpletest.rc-jffxf" in namespace "gc-7016"
    Jan 31 18:04:29.303: INFO: Deleting pod "simpletest.rc-mxpct" in namespace "gc-7016"
    Jan 31 18:04:29.323: INFO: Deleting pod "simpletest.rc-pjwsv" in namespace "gc-7016"
    Jan 31 18:04:29.342: INFO: Deleting pod "simpletest.rc-9jnvm" in namespace "gc-7016"
    Jan 31 18:04:29.360: INFO: Deleting pod "simpletest.rc-lqrdg" in namespace "gc-7016"
    Jan 31 18:04:29.381: INFO: Deleting pod "simpletest.rc-hfvxz" in namespace "gc-7016"
    Jan 31 18:04:29.403: INFO: Deleting pod "simpletest.rc-tbqbt" in namespace "gc-7016"
    Jan 31 18:04:29.500: INFO: Deleting pod "simpletest.rc-c7xcm" in namespace "gc-7016"
    Jan 31 18:04:29.540: INFO: Deleting pod "simpletest.rc-sss2b" in namespace "gc-7016"
    Jan 31 18:04:29.574: INFO: Deleting pod "simpletest.rc-548lz" in namespace "gc-7016"
    Jan 31 18:04:29.595: INFO: Deleting pod "simpletest.rc-8rsld" in namespace "gc-7016"
    Jan 31 18:04:29.619: INFO: Deleting pod "simpletest.rc-jt64z" in namespace "gc-7016"
    Jan 31 18:04:29.642: INFO: Deleting pod "simpletest.rc-wjh28" in namespace "gc-7016"
    Jan 31 18:04:29.668: INFO: Deleting pod "simpletest.rc-mdknz" in namespace "gc-7016"
    Jan 31 18:04:29.691: INFO: Deleting pod "simpletest.rc-gjl9f" in namespace "gc-7016"
    Jan 31 18:04:29.718: INFO: Deleting pod "simpletest.rc-8gnq2" in namespace "gc-7016"
    Jan 31 18:04:29.738: INFO: Deleting pod "simpletest.rc-42dxt" in namespace "gc-7016"
    Jan 31 18:04:29.775: INFO: Deleting pod "simpletest.rc-pj25r" in namespace "gc-7016"
    Jan 31 18:04:29.805: INFO: Deleting pod "simpletest.rc-4zbcv" in namespace "gc-7016"
    Jan 31 18:04:29.836: INFO: Deleting pod "simpletest.rc-kt9qn" in namespace "gc-7016"
    Jan 31 18:04:29.860: INFO: Deleting pod "simpletest.rc-rj9ns" in namespace "gc-7016"
    Jan 31 18:04:29.887: INFO: Deleting pod "simpletest.rc-ngskp" in namespace "gc-7016"
    Jan 31 18:04:29.920: INFO: Deleting pod "simpletest.rc-sfpk6" in namespace "gc-7016"
    Jan 31 18:04:29.945: INFO: Deleting pod "simpletest.rc-p2ftn" in namespace "gc-7016"
    Jan 31 18:04:29.981: INFO: Deleting pod "simpletest.rc-kdt6t" in namespace "gc-7016"
    Jan 31 18:04:30.012: INFO: Deleting pod "simpletest.rc-96dsp" in namespace "gc-7016"
    Jan 31 18:04:30.045: INFO: Deleting pod "simpletest.rc-5v676" in namespace "gc-7016"
    Jan 31 18:04:30.075: INFO: Deleting pod "simpletest.rc-rg4rh" in namespace "gc-7016"
    Jan 31 18:04:30.104: INFO: Deleting pod "simpletest.rc-k6d95" in namespace "gc-7016"
    Jan 31 18:04:30.128: INFO: Deleting pod "simpletest.rc-mtsn8" in namespace "gc-7016"
    Jan 31 18:04:30.149: INFO: Deleting pod "simpletest.rc-r5zjq" in namespace "gc-7016"
    Jan 31 18:04:30.185: INFO: Deleting pod "simpletest.rc-jwbj4" in namespace "gc-7016"
    Jan 31 18:04:30.214: INFO: Deleting pod "simpletest.rc-6m26g" in namespace "gc-7016"
    Jan 31 18:04:30.256: INFO: Deleting pod "simpletest.rc-bg9lw" in namespace "gc-7016"
    Jan 31 18:04:30.282: INFO: Deleting pod "simpletest.rc-v28v8" in namespace "gc-7016"
    Jan 31 18:04:30.309: INFO: Deleting pod "simpletest.rc-994x8" in namespace "gc-7016"
    Jan 31 18:04:30.348: INFO: Deleting pod "simpletest.rc-bjgxd" in namespace "gc-7016"
    Jan 31 18:04:30.378: INFO: Deleting pod "simpletest.rc-nk4jz" in namespace "gc-7016"
    Jan 31 18:04:30.403: INFO: Deleting pod "simpletest.rc-rgjxn" in namespace "gc-7016"
    Jan 31 18:04:30.437: INFO: Deleting pod "simpletest.rc-fhdnk" in namespace "gc-7016"
    Jan 31 18:04:30.469: INFO: Deleting pod "simpletest.rc-7rhhq" in namespace "gc-7016"
    Jan 31 18:04:30.506: INFO: Deleting pod "simpletest.rc-lkd9s" in namespace "gc-7016"
    Jan 31 18:04:30.543: INFO: Deleting pod "simpletest.rc-czls4" in namespace "gc-7016"
    Jan 31 18:04:30.574: INFO: Deleting pod "simpletest.rc-wl4kd" in namespace "gc-7016"
    Jan 31 18:04:30.608: INFO: Deleting pod "simpletest.rc-tgdhp" in namespace "gc-7016"
    Jan 31 18:04:30.661: INFO: Deleting pod "simpletest.rc-glhlj" in namespace "gc-7016"
    Jan 31 18:04:30.703: INFO: Deleting pod "simpletest.rc-9nbng" in namespace "gc-7016"
    Jan 31 18:04:30.750: INFO: Deleting pod "simpletest.rc-mwqfn" in namespace "gc-7016"
    Jan 31 18:04:30.794: INFO: Deleting pod "simpletest.rc-bgzhd" in namespace "gc-7016"
    Jan 31 18:04:30.860: INFO: Deleting pod "simpletest.rc-46wtf" in namespace "gc-7016"
    Jan 31 18:04:30.888: INFO: Deleting pod "simpletest.rc-bw4zn" in namespace "gc-7016"
    Jan 31 18:04:30.924: INFO: Deleting pod "simpletest.rc-kbxdt" in namespace "gc-7016"
    Jan 31 18:04:30.973: INFO: Deleting pod "simpletest.rc-h4xhs" in namespace "gc-7016"
    Jan 31 18:04:31.027: INFO: Deleting pod "simpletest.rc-6jprb" in namespace "gc-7016"
    Jan 31 18:04:31.062: INFO: Deleting pod "simpletest.rc-6zwh8" in namespace "gc-7016"
    Jan 31 18:04:31.258: INFO: Deleting pod "simpletest.rc-ncd5s" in namespace "gc-7016"
    Jan 31 18:04:31.311: INFO: Deleting pod "simpletest.rc-jjj78" in namespace "gc-7016"
    Jan 31 18:04:31.364: INFO: Deleting pod "simpletest.rc-n5lsr" in namespace "gc-7016"
    Jan 31 18:04:31.398: INFO: Deleting pod "simpletest.rc-lt8hx" in namespace "gc-7016"
    Jan 31 18:04:31.432: INFO: Deleting pod "simpletest.rc-b5w6r" in namespace "gc-7016"
    Jan 31 18:04:31.458: INFO: Deleting pod "simpletest.rc-cx9dx" in namespace "gc-7016"
    Jan 31 18:04:31.489: INFO: Deleting pod "simpletest.rc-rgs8f" in namespace "gc-7016"
    Jan 31 18:04:31.515: INFO: Deleting pod "simpletest.rc-75hr7" in namespace "gc-7016"
    Jan 31 18:04:31.561: INFO: Deleting pod "simpletest.rc-m4fnc" in namespace "gc-7016"
    Jan 31 18:04:31.610: INFO: Deleting pod "simpletest.rc-9cbjj" in namespace "gc-7016"
    Jan 31 18:04:31.631: INFO: Deleting pod "simpletest.rc-g4ddg" in namespace "gc-7016"
    Jan 31 18:04:31.669: INFO: Deleting pod "simpletest.rc-cvkj9" in namespace "gc-7016"
    Jan 31 18:04:31.696: INFO: Deleting pod "simpletest.rc-smqkv" in namespace "gc-7016"
    Jan 31 18:04:31.719: INFO: Deleting pod "simpletest.rc-jsmp2" in namespace "gc-7016"
    Jan 31 18:04:31.750: INFO: Deleting pod "simpletest.rc-g9wxd" in namespace "gc-7016"
    Jan 31 18:04:31.783: INFO: Deleting pod "simpletest.rc-7v4kx" in namespace "gc-7016"
    Jan 31 18:04:31.813: INFO: Deleting pod "simpletest.rc-klthf" in namespace "gc-7016"
    Jan 31 18:04:31.842: INFO: Deleting pod "simpletest.rc-6p786" in namespace "gc-7016"
    Jan 31 18:04:31.866: INFO: Deleting pod "simpletest.rc-h2nwq" in namespace "gc-7016"
    Jan 31 18:04:31.906: INFO: Deleting pod "simpletest.rc-dnsdp" in namespace "gc-7016"
    Jan 31 18:04:31.945: INFO: Deleting pod "simpletest.rc-8vct8" in namespace "gc-7016"
    Jan 31 18:04:31.995: INFO: Deleting pod "simpletest.rc-wzzwk" in namespace "gc-7016"
    Jan 31 18:04:32.037: INFO: Deleting pod "simpletest.rc-wtjtz" in namespace "gc-7016"
    Jan 31 18:04:32.076: INFO: Deleting pod "simpletest.rc-zpjsp" in namespace "gc-7016"
    Jan 31 18:04:32.110: INFO: Deleting pod "simpletest.rc-kwjtp" in namespace "gc-7016"
    Jan 31 18:04:32.148: INFO: Deleting pod "simpletest.rc-x4qsf" in namespace "gc-7016"
    Jan 31 18:04:32.194: INFO: Deleting pod "simpletest.rc-5xpvp" in namespace "gc-7016"
    Jan 31 18:04:32.224: INFO: Deleting pod "simpletest.rc-p2gcx" in namespace "gc-7016"
    Jan 31 18:04:32.256: INFO: Deleting pod "simpletest.rc-pwb5p" in namespace "gc-7016"
    Jan 31 18:04:32.295: INFO: Deleting pod "simpletest.rc-7hfgz" in namespace "gc-7016"
    Jan 31 18:04:32.354: INFO: Deleting pod "simpletest.rc-cczxb" in namespace "gc-7016"
    Jan 31 18:04:32.421: INFO: Deleting pod "simpletest.rc-wkqz9" in namespace "gc-7016"
    Jan 31 18:04:32.463: INFO: Deleting pod "simpletest.rc-wz9b5" in namespace "gc-7016"
    Jan 31 18:04:32.517: INFO: Deleting pod "simpletest.rc-v6kkd" in namespace "gc-7016"
    Jan 31 18:04:32.564: INFO: Deleting pod "simpletest.rc-mjgh2" in namespace "gc-7016"
    Jan 31 18:04:32.593: INFO: Deleting pod "simpletest.rc-cfb6b" in namespace "gc-7016"
    Jan 31 18:04:32.630: INFO: Deleting pod "simpletest.rc-tkqrk" in namespace "gc-7016"
    Jan 31 18:04:32.682: INFO: Deleting pod "simpletest.rc-4zktr" in namespace "gc-7016"
    Jan 31 18:04:32.721: INFO: Deleting pod "simpletest.rc-hmgqc" in namespace "gc-7016"
    Jan 31 18:04:32.742: INFO: Deleting pod "simpletest.rc-mlhxt" in namespace "gc-7016"
    Jan 31 18:04:32.795: INFO: Deleting pod "simpletest.rc-5fbfs" in namespace "gc-7016"
    Jan 31 18:04:32.834: INFO: Deleting pod "simpletest.rc-6kqnf" in namespace "gc-7016"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:04:32.887: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-7016" for this suite. 01/31/23 18:04:32.919
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:04:32.942
Jan 31 18:04:32.943: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 18:04:32.943
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:04:32.996
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:04:33.031
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
STEP: Creating configMap with name projected-configmap-test-volume-5fc03645-cb2c-4460-af4e-c7cd06c6bf0e 01/31/23 18:04:33.058
STEP: Creating a pod to test consume configMaps 01/31/23 18:04:33.181
Jan 31 18:04:33.241: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152" in namespace "projected-6074" to be "Succeeded or Failed"
Jan 31 18:04:33.257: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Pending", Reason="", readiness=false. Elapsed: 15.604699ms
Jan 31 18:04:35.267: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025572378s
Jan 31 18:04:37.265: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023167462s
Jan 31 18:04:39.273: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Pending", Reason="", readiness=false. Elapsed: 6.031364687s
Jan 31 18:04:41.272: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Pending", Reason="", readiness=false. Elapsed: 8.030770193s
Jan 31 18:04:43.266: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.024907295s
STEP: Saw pod success 01/31/23 18:04:43.266
Jan 31 18:04:43.266: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152" satisfied condition "Succeeded or Failed"
Jan 31 18:04:43.276: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 18:04:43.3
Jan 31 18:04:43.314: INFO: Waiting for pod pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152 to disappear
Jan 31 18:04:43.322: INFO: Pod pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 31 18:04:43.322: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6074" for this suite. 01/31/23 18:04:43.331
------------------------------
â€¢ [SLOW TEST] [10.398 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:04:32.942
    Jan 31 18:04:32.943: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 18:04:32.943
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:04:32.996
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:04:33.031
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:74
    STEP: Creating configMap with name projected-configmap-test-volume-5fc03645-cb2c-4460-af4e-c7cd06c6bf0e 01/31/23 18:04:33.058
    STEP: Creating a pod to test consume configMaps 01/31/23 18:04:33.181
    Jan 31 18:04:33.241: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152" in namespace "projected-6074" to be "Succeeded or Failed"
    Jan 31 18:04:33.257: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Pending", Reason="", readiness=false. Elapsed: 15.604699ms
    Jan 31 18:04:35.267: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025572378s
    Jan 31 18:04:37.265: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023167462s
    Jan 31 18:04:39.273: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Pending", Reason="", readiness=false. Elapsed: 6.031364687s
    Jan 31 18:04:41.272: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Pending", Reason="", readiness=false. Elapsed: 8.030770193s
    Jan 31 18:04:43.266: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.024907295s
    STEP: Saw pod success 01/31/23 18:04:43.266
    Jan 31 18:04:43.266: INFO: Pod "pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152" satisfied condition "Succeeded or Failed"
    Jan 31 18:04:43.276: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 18:04:43.3
    Jan 31 18:04:43.314: INFO: Waiting for pod pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152 to disappear
    Jan 31 18:04:43.322: INFO: Pod pod-projected-configmaps-e45e5d42-e531-4fcb-8ffd-a7cee4733152 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:04:43.322: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6074" for this suite. 01/31/23 18:04:43.331
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-network] IngressClass API
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
[BeforeEach] [sig-network] IngressClass API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:04:43.341
Jan 31 18:04:43.341: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename ingressclass 01/31/23 18:04:43.342
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:04:43.363
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:04:43.371
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:211
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
STEP: getting /apis 01/31/23 18:04:43.378
STEP: getting /apis/networking.k8s.io 01/31/23 18:04:43.384
STEP: getting /apis/networking.k8s.iov1 01/31/23 18:04:43.387
STEP: creating 01/31/23 18:04:43.39
STEP: getting 01/31/23 18:04:43.408
STEP: listing 01/31/23 18:04:43.415
STEP: watching 01/31/23 18:04:43.422
Jan 31 18:04:43.422: INFO: starting watch
STEP: patching 01/31/23 18:04:43.425
STEP: updating 01/31/23 18:04:43.434
Jan 31 18:04:43.441: INFO: waiting for watch events with expected annotations
Jan 31 18:04:43.441: INFO: saw patched and updated annotations
STEP: deleting 01/31/23 18:04:43.441
STEP: deleting a collection 01/31/23 18:04:43.462
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/node/init/init.go:32
Jan 31 18:04:43.489: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] IngressClass API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] IngressClass API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingressclass-9909" for this suite. 01/31/23 18:04:43.496
------------------------------
â€¢ [0.164 seconds]
[sig-network] IngressClass API
test/e2e/network/common/framework.go:23
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] IngressClass API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:04:43.341
    Jan 31 18:04:43.341: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename ingressclass 01/31/23 18:04:43.342
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:04:43.363
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:04:43.371
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/network/ingressclass.go:211
    [It]  should support creating IngressClass API operations [Conformance]
      test/e2e/network/ingressclass.go:223
    STEP: getting /apis 01/31/23 18:04:43.378
    STEP: getting /apis/networking.k8s.io 01/31/23 18:04:43.384
    STEP: getting /apis/networking.k8s.iov1 01/31/23 18:04:43.387
    STEP: creating 01/31/23 18:04:43.39
    STEP: getting 01/31/23 18:04:43.408
    STEP: listing 01/31/23 18:04:43.415
    STEP: watching 01/31/23 18:04:43.422
    Jan 31 18:04:43.422: INFO: starting watch
    STEP: patching 01/31/23 18:04:43.425
    STEP: updating 01/31/23 18:04:43.434
    Jan 31 18:04:43.441: INFO: waiting for watch events with expected annotations
    Jan 31 18:04:43.441: INFO: saw patched and updated annotations
    STEP: deleting 01/31/23 18:04:43.441
    STEP: deleting a collection 01/31/23 18:04:43.462
    [AfterEach] [sig-network] IngressClass API
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:04:43.489: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] IngressClass API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] IngressClass API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingressclass-9909" for this suite. 01/31/23 18:04:43.496
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:04:43.506
Jan 31 18:04:43.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 18:04:43.507
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:04:43.535
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:04:43.543
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
STEP: Creating a pod to test downward API volume plugin 01/31/23 18:04:43.553
Jan 31 18:04:43.570: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0" in namespace "projected-6621" to be "Succeeded or Failed"
Jan 31 18:04:43.581: INFO: Pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0": Phase="Pending", Reason="", readiness=false. Elapsed: 11.056394ms
Jan 31 18:04:45.591: INFO: Pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021249192s
Jan 31 18:04:47.597: INFO: Pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.026444984s
Jan 31 18:04:49.592: INFO: Pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022234579s
STEP: Saw pod success 01/31/23 18:04:49.592
Jan 31 18:04:49.593: INFO: Pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0" satisfied condition "Succeeded or Failed"
Jan 31 18:04:49.603: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0 container client-container: <nil>
STEP: delete the pod 01/31/23 18:04:49.621
Jan 31 18:04:49.645: INFO: Waiting for pod downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0 to disappear
Jan 31 18:04:49.655: INFO: Pod downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 18:04:49.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6621" for this suite. 01/31/23 18:04:49.668
------------------------------
â€¢ [SLOW TEST] [6.175 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:04:43.506
    Jan 31 18:04:43.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 18:04:43.507
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:04:43.535
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:04:43.543
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:221
    STEP: Creating a pod to test downward API volume plugin 01/31/23 18:04:43.553
    Jan 31 18:04:43.570: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0" in namespace "projected-6621" to be "Succeeded or Failed"
    Jan 31 18:04:43.581: INFO: Pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0": Phase="Pending", Reason="", readiness=false. Elapsed: 11.056394ms
    Jan 31 18:04:45.591: INFO: Pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021249192s
    Jan 31 18:04:47.597: INFO: Pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.026444984s
    Jan 31 18:04:49.592: INFO: Pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022234579s
    STEP: Saw pod success 01/31/23 18:04:49.592
    Jan 31 18:04:49.593: INFO: Pod "downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0" satisfied condition "Succeeded or Failed"
    Jan 31 18:04:49.603: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0 container client-container: <nil>
    STEP: delete the pod 01/31/23 18:04:49.621
    Jan 31 18:04:49.645: INFO: Waiting for pod downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0 to disappear
    Jan 31 18:04:49.655: INFO: Pod downwardapi-volume-7ce94574-2a40-4f6d-ab10-7b872f011dc0 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:04:49.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6621" for this suite. 01/31/23 18:04:49.668
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:04:49.682
Jan 31 18:04:49.682: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 18:04:49.683
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:04:49.702
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:04:49.709
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
STEP: Creating a pod to test downward API volume plugin 01/31/23 18:04:49.717
Jan 31 18:04:49.728: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8" in namespace "downward-api-7210" to be "Succeeded or Failed"
Jan 31 18:04:49.741: INFO: Pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8": Phase="Pending", Reason="", readiness=false. Elapsed: 12.098375ms
Jan 31 18:04:51.750: INFO: Pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021931871s
Jan 31 18:04:53.757: INFO: Pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028257731s
Jan 31 18:04:55.751: INFO: Pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.02284926s
STEP: Saw pod success 01/31/23 18:04:55.751
Jan 31 18:04:55.752: INFO: Pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8" satisfied condition "Succeeded or Failed"
Jan 31 18:04:55.762: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8 container client-container: <nil>
STEP: delete the pod 01/31/23 18:04:55.78
Jan 31 18:04:55.808: INFO: Waiting for pod downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8 to disappear
Jan 31 18:04:55.821: INFO: Pod downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 18:04:55.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-7210" for this suite. 01/31/23 18:04:55.833
------------------------------
â€¢ [SLOW TEST] [6.160 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:04:49.682
    Jan 31 18:04:49.682: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 18:04:49.683
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:04:49.702
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:04:49.709
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:221
    STEP: Creating a pod to test downward API volume plugin 01/31/23 18:04:49.717
    Jan 31 18:04:49.728: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8" in namespace "downward-api-7210" to be "Succeeded or Failed"
    Jan 31 18:04:49.741: INFO: Pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8": Phase="Pending", Reason="", readiness=false. Elapsed: 12.098375ms
    Jan 31 18:04:51.750: INFO: Pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021931871s
    Jan 31 18:04:53.757: INFO: Pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028257731s
    Jan 31 18:04:55.751: INFO: Pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.02284926s
    STEP: Saw pod success 01/31/23 18:04:55.751
    Jan 31 18:04:55.752: INFO: Pod "downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8" satisfied condition "Succeeded or Failed"
    Jan 31 18:04:55.762: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8 container client-container: <nil>
    STEP: delete the pod 01/31/23 18:04:55.78
    Jan 31 18:04:55.808: INFO: Waiting for pod downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8 to disappear
    Jan 31 18:04:55.821: INFO: Pod downwardapi-volume-2875b308-32d4-4509-8bee-9ec83be8daf8 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:04:55.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-7210" for this suite. 01/31/23 18:04:55.833
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:04:55.842
Jan 31 18:04:55.842: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 18:04:55.843
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:04:55.863
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:04:55.87
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 18:04:55.897
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 18:04:56.197
STEP: Deploying the webhook pod 01/31/23 18:04:56.209
STEP: Wait for the deployment to be ready 01/31/23 18:04:56.224
Jan 31 18:04:56.241: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 18:04:58.268: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 18, 4, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 4, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 18, 4, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 4, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 18:05:00.282
STEP: Verifying the service has paired with the endpoint 01/31/23 18:05:00.376
Jan 31 18:05:01.377: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
Jan 31 18:05:01.384: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9821-crds.webhook.example.com via the AdmissionRegistration API 01/31/23 18:05:01.907
STEP: Creating a custom resource that should be mutated by the webhook 01/31/23 18:05:01.943
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:05:04.566: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3632" for this suite. 01/31/23 18:05:04.658
STEP: Destroying namespace "webhook-3632-markers" for this suite. 01/31/23 18:05:04.669
------------------------------
â€¢ [SLOW TEST] [8.842 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:04:55.842
    Jan 31 18:04:55.842: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 18:04:55.843
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:04:55.863
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:04:55.87
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 18:04:55.897
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 18:04:56.197
    STEP: Deploying the webhook pod 01/31/23 18:04:56.209
    STEP: Wait for the deployment to be ready 01/31/23 18:04:56.224
    Jan 31 18:04:56.241: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 18:04:58.268: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 18, 4, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 4, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 18, 4, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 4, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 18:05:00.282
    STEP: Verifying the service has paired with the endpoint 01/31/23 18:05:00.376
    Jan 31 18:05:01.377: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with pruning [Conformance]
      test/e2e/apimachinery/webhook.go:341
    Jan 31 18:05:01.384: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9821-crds.webhook.example.com via the AdmissionRegistration API 01/31/23 18:05:01.907
    STEP: Creating a custom resource that should be mutated by the webhook 01/31/23 18:05:01.943
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:05:04.566: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3632" for this suite. 01/31/23 18:05:04.658
    STEP: Destroying namespace "webhook-3632-markers" for this suite. 01/31/23 18:05:04.669
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] Discovery
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
[BeforeEach] [sig-api-machinery] Discovery
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:05:04.685
Jan 31 18:05:04.685: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename discovery 01/31/23 18:05:04.687
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:04.707
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:04.717
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert 01/31/23 18:05:04.73
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
Jan 31 18:05:05.351: INFO: Checking APIGroup: apiregistration.k8s.io
Jan 31 18:05:05.356: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Jan 31 18:05:05.356: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Jan 31 18:05:05.356: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Jan 31 18:05:05.356: INFO: Checking APIGroup: apps
Jan 31 18:05:05.362: INFO: PreferredVersion.GroupVersion: apps/v1
Jan 31 18:05:05.362: INFO: Versions found [{apps/v1 v1}]
Jan 31 18:05:05.362: INFO: apps/v1 matches apps/v1
Jan 31 18:05:05.362: INFO: Checking APIGroup: events.k8s.io
Jan 31 18:05:05.369: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Jan 31 18:05:05.369: INFO: Versions found [{events.k8s.io/v1 v1}]
Jan 31 18:05:05.369: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Jan 31 18:05:05.369: INFO: Checking APIGroup: authentication.k8s.io
Jan 31 18:05:05.374: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Jan 31 18:05:05.374: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Jan 31 18:05:05.374: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Jan 31 18:05:05.374: INFO: Checking APIGroup: authorization.k8s.io
Jan 31 18:05:05.380: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Jan 31 18:05:05.381: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Jan 31 18:05:05.381: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Jan 31 18:05:05.381: INFO: Checking APIGroup: autoscaling
Jan 31 18:05:05.385: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Jan 31 18:05:05.385: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
Jan 31 18:05:05.385: INFO: autoscaling/v2 matches autoscaling/v2
Jan 31 18:05:05.385: INFO: Checking APIGroup: batch
Jan 31 18:05:05.389: INFO: PreferredVersion.GroupVersion: batch/v1
Jan 31 18:05:05.389: INFO: Versions found [{batch/v1 v1}]
Jan 31 18:05:05.389: INFO: batch/v1 matches batch/v1
Jan 31 18:05:05.389: INFO: Checking APIGroup: certificates.k8s.io
Jan 31 18:05:05.395: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Jan 31 18:05:05.395: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Jan 31 18:05:05.395: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Jan 31 18:05:05.395: INFO: Checking APIGroup: networking.k8s.io
Jan 31 18:05:05.398: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Jan 31 18:05:05.398: INFO: Versions found [{networking.k8s.io/v1 v1}]
Jan 31 18:05:05.398: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Jan 31 18:05:05.398: INFO: Checking APIGroup: policy
Jan 31 18:05:05.401: INFO: PreferredVersion.GroupVersion: policy/v1
Jan 31 18:05:05.401: INFO: Versions found [{policy/v1 v1}]
Jan 31 18:05:05.401: INFO: policy/v1 matches policy/v1
Jan 31 18:05:05.401: INFO: Checking APIGroup: rbac.authorization.k8s.io
Jan 31 18:05:05.404: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Jan 31 18:05:05.404: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Jan 31 18:05:05.404: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Jan 31 18:05:05.404: INFO: Checking APIGroup: storage.k8s.io
Jan 31 18:05:05.407: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Jan 31 18:05:05.408: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Jan 31 18:05:05.408: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Jan 31 18:05:05.408: INFO: Checking APIGroup: admissionregistration.k8s.io
Jan 31 18:05:05.411: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Jan 31 18:05:05.411: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Jan 31 18:05:05.411: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Jan 31 18:05:05.411: INFO: Checking APIGroup: apiextensions.k8s.io
Jan 31 18:05:05.415: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Jan 31 18:05:05.415: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Jan 31 18:05:05.415: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Jan 31 18:05:05.415: INFO: Checking APIGroup: scheduling.k8s.io
Jan 31 18:05:05.419: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Jan 31 18:05:05.419: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Jan 31 18:05:05.419: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Jan 31 18:05:05.419: INFO: Checking APIGroup: coordination.k8s.io
Jan 31 18:05:05.423: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Jan 31 18:05:05.423: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Jan 31 18:05:05.423: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Jan 31 18:05:05.423: INFO: Checking APIGroup: node.k8s.io
Jan 31 18:05:05.427: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Jan 31 18:05:05.427: INFO: Versions found [{node.k8s.io/v1 v1}]
Jan 31 18:05:05.427: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Jan 31 18:05:05.427: INFO: Checking APIGroup: discovery.k8s.io
Jan 31 18:05:05.430: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Jan 31 18:05:05.430: INFO: Versions found [{discovery.k8s.io/v1 v1}]
Jan 31 18:05:05.430: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Jan 31 18:05:05.430: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Jan 31 18:05:05.433: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
Jan 31 18:05:05.433: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
Jan 31 18:05:05.433: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
Jan 31 18:05:05.433: INFO: Checking APIGroup: helm.cattle.io
Jan 31 18:05:05.437: INFO: PreferredVersion.GroupVersion: helm.cattle.io/v1
Jan 31 18:05:05.437: INFO: Versions found [{helm.cattle.io/v1 v1}]
Jan 31 18:05:05.437: INFO: helm.cattle.io/v1 matches helm.cattle.io/v1
Jan 31 18:05:05.437: INFO: Checking APIGroup: k3s.cattle.io
Jan 31 18:05:05.440: INFO: PreferredVersion.GroupVersion: k3s.cattle.io/v1
Jan 31 18:05:05.440: INFO: Versions found [{k3s.cattle.io/v1 v1}]
Jan 31 18:05:05.440: INFO: k3s.cattle.io/v1 matches k3s.cattle.io/v1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/node/init/init.go:32
Jan 31 18:05:05.440: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  tear down framework | framework.go:193
STEP: Destroying namespace "discovery-8086" for this suite. 01/31/23 18:05:05.45
------------------------------
â€¢ [0.773 seconds]
[sig-api-machinery] Discovery
test/e2e/apimachinery/framework.go:23
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Discovery
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:05:04.685
    Jan 31 18:05:04.685: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename discovery 01/31/23 18:05:04.687
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:04.707
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:04.717
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/apimachinery/discovery.go:43
    STEP: Setting up server cert 01/31/23 18:05:04.73
    [It] should validate PreferredVersion for each APIGroup [Conformance]
      test/e2e/apimachinery/discovery.go:122
    Jan 31 18:05:05.351: INFO: Checking APIGroup: apiregistration.k8s.io
    Jan 31 18:05:05.356: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
    Jan 31 18:05:05.356: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
    Jan 31 18:05:05.356: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
    Jan 31 18:05:05.356: INFO: Checking APIGroup: apps
    Jan 31 18:05:05.362: INFO: PreferredVersion.GroupVersion: apps/v1
    Jan 31 18:05:05.362: INFO: Versions found [{apps/v1 v1}]
    Jan 31 18:05:05.362: INFO: apps/v1 matches apps/v1
    Jan 31 18:05:05.362: INFO: Checking APIGroup: events.k8s.io
    Jan 31 18:05:05.369: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
    Jan 31 18:05:05.369: INFO: Versions found [{events.k8s.io/v1 v1}]
    Jan 31 18:05:05.369: INFO: events.k8s.io/v1 matches events.k8s.io/v1
    Jan 31 18:05:05.369: INFO: Checking APIGroup: authentication.k8s.io
    Jan 31 18:05:05.374: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
    Jan 31 18:05:05.374: INFO: Versions found [{authentication.k8s.io/v1 v1}]
    Jan 31 18:05:05.374: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
    Jan 31 18:05:05.374: INFO: Checking APIGroup: authorization.k8s.io
    Jan 31 18:05:05.380: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
    Jan 31 18:05:05.381: INFO: Versions found [{authorization.k8s.io/v1 v1}]
    Jan 31 18:05:05.381: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
    Jan 31 18:05:05.381: INFO: Checking APIGroup: autoscaling
    Jan 31 18:05:05.385: INFO: PreferredVersion.GroupVersion: autoscaling/v2
    Jan 31 18:05:05.385: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
    Jan 31 18:05:05.385: INFO: autoscaling/v2 matches autoscaling/v2
    Jan 31 18:05:05.385: INFO: Checking APIGroup: batch
    Jan 31 18:05:05.389: INFO: PreferredVersion.GroupVersion: batch/v1
    Jan 31 18:05:05.389: INFO: Versions found [{batch/v1 v1}]
    Jan 31 18:05:05.389: INFO: batch/v1 matches batch/v1
    Jan 31 18:05:05.389: INFO: Checking APIGroup: certificates.k8s.io
    Jan 31 18:05:05.395: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
    Jan 31 18:05:05.395: INFO: Versions found [{certificates.k8s.io/v1 v1}]
    Jan 31 18:05:05.395: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
    Jan 31 18:05:05.395: INFO: Checking APIGroup: networking.k8s.io
    Jan 31 18:05:05.398: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
    Jan 31 18:05:05.398: INFO: Versions found [{networking.k8s.io/v1 v1}]
    Jan 31 18:05:05.398: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
    Jan 31 18:05:05.398: INFO: Checking APIGroup: policy
    Jan 31 18:05:05.401: INFO: PreferredVersion.GroupVersion: policy/v1
    Jan 31 18:05:05.401: INFO: Versions found [{policy/v1 v1}]
    Jan 31 18:05:05.401: INFO: policy/v1 matches policy/v1
    Jan 31 18:05:05.401: INFO: Checking APIGroup: rbac.authorization.k8s.io
    Jan 31 18:05:05.404: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
    Jan 31 18:05:05.404: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
    Jan 31 18:05:05.404: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
    Jan 31 18:05:05.404: INFO: Checking APIGroup: storage.k8s.io
    Jan 31 18:05:05.407: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
    Jan 31 18:05:05.408: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
    Jan 31 18:05:05.408: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
    Jan 31 18:05:05.408: INFO: Checking APIGroup: admissionregistration.k8s.io
    Jan 31 18:05:05.411: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
    Jan 31 18:05:05.411: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
    Jan 31 18:05:05.411: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
    Jan 31 18:05:05.411: INFO: Checking APIGroup: apiextensions.k8s.io
    Jan 31 18:05:05.415: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
    Jan 31 18:05:05.415: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
    Jan 31 18:05:05.415: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
    Jan 31 18:05:05.415: INFO: Checking APIGroup: scheduling.k8s.io
    Jan 31 18:05:05.419: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
    Jan 31 18:05:05.419: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
    Jan 31 18:05:05.419: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
    Jan 31 18:05:05.419: INFO: Checking APIGroup: coordination.k8s.io
    Jan 31 18:05:05.423: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
    Jan 31 18:05:05.423: INFO: Versions found [{coordination.k8s.io/v1 v1}]
    Jan 31 18:05:05.423: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
    Jan 31 18:05:05.423: INFO: Checking APIGroup: node.k8s.io
    Jan 31 18:05:05.427: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
    Jan 31 18:05:05.427: INFO: Versions found [{node.k8s.io/v1 v1}]
    Jan 31 18:05:05.427: INFO: node.k8s.io/v1 matches node.k8s.io/v1
    Jan 31 18:05:05.427: INFO: Checking APIGroup: discovery.k8s.io
    Jan 31 18:05:05.430: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
    Jan 31 18:05:05.430: INFO: Versions found [{discovery.k8s.io/v1 v1}]
    Jan 31 18:05:05.430: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
    Jan 31 18:05:05.430: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
    Jan 31 18:05:05.433: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
    Jan 31 18:05:05.433: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
    Jan 31 18:05:05.433: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
    Jan 31 18:05:05.433: INFO: Checking APIGroup: helm.cattle.io
    Jan 31 18:05:05.437: INFO: PreferredVersion.GroupVersion: helm.cattle.io/v1
    Jan 31 18:05:05.437: INFO: Versions found [{helm.cattle.io/v1 v1}]
    Jan 31 18:05:05.437: INFO: helm.cattle.io/v1 matches helm.cattle.io/v1
    Jan 31 18:05:05.437: INFO: Checking APIGroup: k3s.cattle.io
    Jan 31 18:05:05.440: INFO: PreferredVersion.GroupVersion: k3s.cattle.io/v1
    Jan 31 18:05:05.440: INFO: Versions found [{k3s.cattle.io/v1 v1}]
    Jan 31 18:05:05.440: INFO: k3s.cattle.io/v1 matches k3s.cattle.io/v1
    [AfterEach] [sig-api-machinery] Discovery
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:05:05.440: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      tear down framework | framework.go:193
    STEP: Destroying namespace "discovery-8086" for this suite. 01/31/23 18:05:05.45
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:05:05.459
Jan 31 18:05:05.459: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 18:05:05.46
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:05.48
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:05.487
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 18:05:05.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-3733" for this suite. 01/31/23 18:05:05.569
------------------------------
â€¢ [0.119 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:05:05.459
    Jan 31 18:05:05.459: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 18:05:05.46
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:05.48
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:05.487
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/secrets_volume.go:386
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:05:05.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-3733" for this suite. 01/31/23 18:05:05.569
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:05:05.578
Jan 31 18:05:05.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename custom-resource-definition 01/31/23 18:05:05.579
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:05.597
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:05.603
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
STEP: fetching the /apis discovery document 01/31/23 18:05:05.609
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 01/31/23 18:05:05.615
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 01/31/23 18:05:05.615
STEP: fetching the /apis/apiextensions.k8s.io discovery document 01/31/23 18:05:05.615
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 01/31/23 18:05:05.618
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 01/31/23 18:05:05.618
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 01/31/23 18:05:05.624
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:05:05.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-7306" for this suite. 01/31/23 18:05:05.631
------------------------------
â€¢ [0.060 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:05:05.578
    Jan 31 18:05:05.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename custom-resource-definition 01/31/23 18:05:05.579
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:05.597
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:05.603
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should include custom resource definition resources in discovery documents [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:198
    STEP: fetching the /apis discovery document 01/31/23 18:05:05.609
    STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 01/31/23 18:05:05.615
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 01/31/23 18:05:05.615
    STEP: fetching the /apis/apiextensions.k8s.io discovery document 01/31/23 18:05:05.615
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 01/31/23 18:05:05.618
    STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 01/31/23 18:05:05.618
    STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 01/31/23 18:05:05.624
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:05:05.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-7306" for this suite. 01/31/23 18:05:05.631
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Containers
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:05:05.638
Jan 31 18:05:05.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename containers 01/31/23 18:05:05.639
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:05.658
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:05.666
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
Jan 31 18:05:05.686: INFO: Waiting up to 5m0s for pod "client-containers-3852c129-7a35-444b-bf2d-c8502e3714a5" in namespace "containers-6249" to be "running"
Jan 31 18:05:05.697: INFO: Pod "client-containers-3852c129-7a35-444b-bf2d-c8502e3714a5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.67607ms
Jan 31 18:05:07.709: INFO: Pod "client-containers-3852c129-7a35-444b-bf2d-c8502e3714a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022385225s
Jan 31 18:05:09.709: INFO: Pod "client-containers-3852c129-7a35-444b-bf2d-c8502e3714a5": Phase="Running", Reason="", readiness=true. Elapsed: 4.023059867s
Jan 31 18:05:09.710: INFO: Pod "client-containers-3852c129-7a35-444b-bf2d-c8502e3714a5" satisfied condition "running"
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Jan 31 18:05:09.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-6249" for this suite. 01/31/23 18:05:09.738
------------------------------
â€¢ [4.112 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:05:05.638
    Jan 31 18:05:05.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename containers 01/31/23 18:05:05.639
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:05.658
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:05.666
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:39
    Jan 31 18:05:05.686: INFO: Waiting up to 5m0s for pod "client-containers-3852c129-7a35-444b-bf2d-c8502e3714a5" in namespace "containers-6249" to be "running"
    Jan 31 18:05:05.697: INFO: Pod "client-containers-3852c129-7a35-444b-bf2d-c8502e3714a5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.67607ms
    Jan 31 18:05:07.709: INFO: Pod "client-containers-3852c129-7a35-444b-bf2d-c8502e3714a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022385225s
    Jan 31 18:05:09.709: INFO: Pod "client-containers-3852c129-7a35-444b-bf2d-c8502e3714a5": Phase="Running", Reason="", readiness=true. Elapsed: 4.023059867s
    Jan 31 18:05:09.710: INFO: Pod "client-containers-3852c129-7a35-444b-bf2d-c8502e3714a5" satisfied condition "running"
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:05:09.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-6249" for this suite. 01/31/23 18:05:09.738
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:05:09.751
Jan 31 18:05:09.751: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename custom-resource-definition 01/31/23 18:05:09.752
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:09.775
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:09.783
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
Jan 31 18:05:09.789: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:05:10.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-2477" for this suite. 01/31/23 18:05:10.846
------------------------------
â€¢ [1.110 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    creating/deleting custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:58

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:05:09.751
    Jan 31 18:05:09.751: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename custom-resource-definition 01/31/23 18:05:09.752
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:09.775
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:09.783
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] creating/deleting custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:58
    Jan 31 18:05:09.789: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:05:10.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-2477" for this suite. 01/31/23 18:05:10.846
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
[BeforeEach] [sig-node] Pods Extended
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:05:10.862
Jan 31 18:05:10.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 18:05:10.863
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:10.889
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:10.898
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
STEP: creating the pod 01/31/23 18:05:10.907
STEP: submitting the pod to kubernetes 01/31/23 18:05:10.907
STEP: verifying QOS class is set on the pod 01/31/23 18:05:10.926
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/node/init/init.go:32
Jan 31 18:05:10.935: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods Extended
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods Extended
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-7107" for this suite. 01/31/23 18:05:10.943
------------------------------
â€¢ [0.094 seconds]
[sig-node] Pods Extended
test/e2e/node/framework.go:23
  Pods Set QOS Class
  test/e2e/node/pods.go:150
    should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
    test/e2e/node/pods.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods Extended
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:05:10.862
    Jan 31 18:05:10.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 18:05:10.863
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:10.889
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:10.898
    [BeforeEach] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Pods Set QOS Class
      test/e2e/node/pods.go:152
    [It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
      test/e2e/node/pods.go:161
    STEP: creating the pod 01/31/23 18:05:10.907
    STEP: submitting the pod to kubernetes 01/31/23 18:05:10.907
    STEP: verifying QOS class is set on the pod 01/31/23 18:05:10.926
    [AfterEach] [sig-node] Pods Extended
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:05:10.935: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods Extended
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods Extended
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-7107" for this suite. 01/31/23 18:05:10.943
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:05:10.956
Jan 31 18:05:10.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename disruption 01/31/23 18:05:10.957
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:10.993
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:11.001
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
STEP: Creating a pdb that targets all three pods in a test replica set 01/31/23 18:05:11.009
STEP: Waiting for the pdb to be processed 01/31/23 18:05:11.028
STEP: First trying to evict a pod which shouldn't be evictable 01/31/23 18:05:13.057
STEP: Waiting for all pods to be running 01/31/23 18:05:13.057
Jan 31 18:05:13.065: INFO: pods: 0 < 3
Jan 31 18:05:15.072: INFO: running pods: 0 < 3
Jan 31 18:05:17.078: INFO: running pods: 2 < 3
STEP: locating a running pod 01/31/23 18:05:19.077
STEP: Updating the pdb to allow a pod to be evicted 01/31/23 18:05:19.094
STEP: Waiting for the pdb to be processed 01/31/23 18:05:19.11
STEP: Trying to evict the same pod we tried earlier which should now be evictable 01/31/23 18:05:21.128
STEP: Waiting for all pods to be running 01/31/23 18:05:21.128
STEP: Waiting for the pdb to observed all healthy pods 01/31/23 18:05:21.139
STEP: Patching the pdb to disallow a pod to be evicted 01/31/23 18:05:21.197
STEP: Waiting for the pdb to be processed 01/31/23 18:05:21.225
STEP: Waiting for all pods to be running 01/31/23 18:05:23.251
STEP: locating a running pod 01/31/23 18:05:23.263
STEP: Deleting the pdb to allow a pod to be evicted 01/31/23 18:05:23.289
STEP: Waiting for the pdb to be deleted 01/31/23 18:05:23.308
STEP: Trying to evict the same pod we tried earlier which should now be evictable 01/31/23 18:05:23.316
STEP: Waiting for all pods to be running 01/31/23 18:05:23.316
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Jan 31 18:05:23.362: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-7360" for this suite. 01/31/23 18:05:23.373
------------------------------
â€¢ [SLOW TEST] [12.437 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:05:10.956
    Jan 31 18:05:10.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename disruption 01/31/23 18:05:10.957
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:10.993
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:11.001
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should block an eviction until the PDB is updated to allow it [Conformance]
      test/e2e/apps/disruption.go:347
    STEP: Creating a pdb that targets all three pods in a test replica set 01/31/23 18:05:11.009
    STEP: Waiting for the pdb to be processed 01/31/23 18:05:11.028
    STEP: First trying to evict a pod which shouldn't be evictable 01/31/23 18:05:13.057
    STEP: Waiting for all pods to be running 01/31/23 18:05:13.057
    Jan 31 18:05:13.065: INFO: pods: 0 < 3
    Jan 31 18:05:15.072: INFO: running pods: 0 < 3
    Jan 31 18:05:17.078: INFO: running pods: 2 < 3
    STEP: locating a running pod 01/31/23 18:05:19.077
    STEP: Updating the pdb to allow a pod to be evicted 01/31/23 18:05:19.094
    STEP: Waiting for the pdb to be processed 01/31/23 18:05:19.11
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 01/31/23 18:05:21.128
    STEP: Waiting for all pods to be running 01/31/23 18:05:21.128
    STEP: Waiting for the pdb to observed all healthy pods 01/31/23 18:05:21.139
    STEP: Patching the pdb to disallow a pod to be evicted 01/31/23 18:05:21.197
    STEP: Waiting for the pdb to be processed 01/31/23 18:05:21.225
    STEP: Waiting for all pods to be running 01/31/23 18:05:23.251
    STEP: locating a running pod 01/31/23 18:05:23.263
    STEP: Deleting the pdb to allow a pod to be evicted 01/31/23 18:05:23.289
    STEP: Waiting for the pdb to be deleted 01/31/23 18:05:23.308
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 01/31/23 18:05:23.316
    STEP: Waiting for all pods to be running 01/31/23 18:05:23.316
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:05:23.362: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-7360" for this suite. 01/31/23 18:05:23.373
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:05:23.394
Jan 31 18:05:23.394: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename container-runtime 01/31/23 18:05:23.395
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:23.416
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:23.426
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
STEP: create the container 01/31/23 18:05:23.433
STEP: wait for the container to reach Succeeded 01/31/23 18:05:23.445
STEP: get the container status 01/31/23 18:05:27.492
STEP: the container should be terminated 01/31/23 18:05:27.502
STEP: the termination message should be set 01/31/23 18:05:27.503
Jan 31 18:05:27.503: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 01/31/23 18:05:27.503
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Jan 31 18:05:27.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-4569" for this suite. 01/31/23 18:05:27.566
------------------------------
â€¢ [4.181 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:05:23.394
    Jan 31 18:05:23.394: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename container-runtime 01/31/23 18:05:23.395
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:23.416
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:23.426
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195
    STEP: create the container 01/31/23 18:05:23.433
    STEP: wait for the container to reach Succeeded 01/31/23 18:05:23.445
    STEP: get the container status 01/31/23 18:05:27.492
    STEP: the container should be terminated 01/31/23 18:05:27.502
    STEP: the termination message should be set 01/31/23 18:05:27.503
    Jan 31 18:05:27.503: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 01/31/23 18:05:27.503
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:05:27.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-4569" for this suite. 01/31/23 18:05:27.566
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:05:27.575
Jan 31 18:05:27.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 18:05:27.577
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:27.596
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:27.603
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
STEP: Creating secret with name secret-test-map-c7da28c6-bf53-4af3-bffb-d0b8436c74a8 01/31/23 18:05:27.609
STEP: Creating a pod to test consume secrets 01/31/23 18:05:27.614
Jan 31 18:05:27.625: INFO: Waiting up to 5m0s for pod "pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03" in namespace "secrets-4536" to be "Succeeded or Failed"
Jan 31 18:05:27.634: INFO: Pod "pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03": Phase="Pending", Reason="", readiness=false. Elapsed: 8.524371ms
Jan 31 18:05:29.651: INFO: Pod "pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02525393s
Jan 31 18:05:31.646: INFO: Pod "pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021013924s
STEP: Saw pod success 01/31/23 18:05:31.646
Jan 31 18:05:31.647: INFO: Pod "pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03" satisfied condition "Succeeded or Failed"
Jan 31 18:05:31.658: INFO: Trying to get logs from node 26-m02 pod pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03 container secret-volume-test: <nil>
STEP: delete the pod 01/31/23 18:05:31.677
Jan 31 18:05:31.704: INFO: Waiting for pod pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03 to disappear
Jan 31 18:05:31.720: INFO: Pod pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 18:05:31.720: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4536" for this suite. 01/31/23 18:05:31.729
------------------------------
â€¢ [4.163 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:05:27.575
    Jan 31 18:05:27.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 18:05:27.577
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:27.596
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:27.603
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:79
    STEP: Creating secret with name secret-test-map-c7da28c6-bf53-4af3-bffb-d0b8436c74a8 01/31/23 18:05:27.609
    STEP: Creating a pod to test consume secrets 01/31/23 18:05:27.614
    Jan 31 18:05:27.625: INFO: Waiting up to 5m0s for pod "pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03" in namespace "secrets-4536" to be "Succeeded or Failed"
    Jan 31 18:05:27.634: INFO: Pod "pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03": Phase="Pending", Reason="", readiness=false. Elapsed: 8.524371ms
    Jan 31 18:05:29.651: INFO: Pod "pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02525393s
    Jan 31 18:05:31.646: INFO: Pod "pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021013924s
    STEP: Saw pod success 01/31/23 18:05:31.646
    Jan 31 18:05:31.647: INFO: Pod "pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03" satisfied condition "Succeeded or Failed"
    Jan 31 18:05:31.658: INFO: Trying to get logs from node 26-m02 pod pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03 container secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 18:05:31.677
    Jan 31 18:05:31.704: INFO: Waiting for pod pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03 to disappear
    Jan 31 18:05:31.720: INFO: Pod pod-secrets-0d1c4c6e-3261-4207-8d58-9c962af76a03 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:05:31.720: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4536" for this suite. 01/31/23 18:05:31.729
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected secret
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:05:31.739
Jan 31 18:05:31.739: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 18:05:31.74
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:31.759
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:31.766
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
STEP: Creating secret with name s-test-opt-del-e6bf7319-7347-4c66-a85a-d98bf2f45268 01/31/23 18:05:31.779
STEP: Creating secret with name s-test-opt-upd-bdec91fa-510a-4065-a8ce-dab52402e8b2 01/31/23 18:05:31.785
STEP: Creating the pod 01/31/23 18:05:31.792
Jan 31 18:05:31.805: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7" in namespace "projected-6551" to be "running and ready"
Jan 31 18:05:31.817: INFO: Pod "pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7": Phase="Pending", Reason="", readiness=false. Elapsed: 11.786793ms
Jan 31 18:05:31.817: INFO: The phase of Pod pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 18:05:33.824: INFO: Pod "pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018913351s
Jan 31 18:05:33.824: INFO: The phase of Pod pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 18:05:35.827: INFO: Pod "pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7": Phase="Running", Reason="", readiness=true. Elapsed: 4.022090686s
Jan 31 18:05:35.827: INFO: The phase of Pod pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7 is Running (Ready = true)
Jan 31 18:05:35.827: INFO: Pod "pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-e6bf7319-7347-4c66-a85a-d98bf2f45268 01/31/23 18:05:35.889
STEP: Updating secret s-test-opt-upd-bdec91fa-510a-4065-a8ce-dab52402e8b2 01/31/23 18:05:35.898
STEP: Creating secret with name s-test-opt-create-1ed43abf-2095-485c-a131-62b1cbdabc2f 01/31/23 18:05:35.906
STEP: waiting to observe update in volume 01/31/23 18:05:35.913
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 31 18:06:42.700: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6551" for this suite. 01/31/23 18:06:42.711
------------------------------
â€¢ [SLOW TEST] [70.985 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:05:31.739
    Jan 31 18:05:31.739: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 18:05:31.74
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:05:31.759
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:05:31.766
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:215
    STEP: Creating secret with name s-test-opt-del-e6bf7319-7347-4c66-a85a-d98bf2f45268 01/31/23 18:05:31.779
    STEP: Creating secret with name s-test-opt-upd-bdec91fa-510a-4065-a8ce-dab52402e8b2 01/31/23 18:05:31.785
    STEP: Creating the pod 01/31/23 18:05:31.792
    Jan 31 18:05:31.805: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7" in namespace "projected-6551" to be "running and ready"
    Jan 31 18:05:31.817: INFO: Pod "pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7": Phase="Pending", Reason="", readiness=false. Elapsed: 11.786793ms
    Jan 31 18:05:31.817: INFO: The phase of Pod pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 18:05:33.824: INFO: Pod "pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018913351s
    Jan 31 18:05:33.824: INFO: The phase of Pod pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 18:05:35.827: INFO: Pod "pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7": Phase="Running", Reason="", readiness=true. Elapsed: 4.022090686s
    Jan 31 18:05:35.827: INFO: The phase of Pod pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7 is Running (Ready = true)
    Jan 31 18:05:35.827: INFO: Pod "pod-projected-secrets-cab0e73a-2ef5-463e-9611-f5772b2ae0c7" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-e6bf7319-7347-4c66-a85a-d98bf2f45268 01/31/23 18:05:35.889
    STEP: Updating secret s-test-opt-upd-bdec91fa-510a-4065-a8ce-dab52402e8b2 01/31/23 18:05:35.898
    STEP: Creating secret with name s-test-opt-create-1ed43abf-2095-485c-a131-62b1cbdabc2f 01/31/23 18:05:35.906
    STEP: waiting to observe update in volume 01/31/23 18:05:35.913
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:06:42.700: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6551" for this suite. 01/31/23 18:06:42.711
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:06:42.73
Jan 31 18:06:42.730: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 18:06:42.732
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:06:42.754
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:06:42.763
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
STEP: Creating a pod to test emptydir 0644 on tmpfs 01/31/23 18:06:42.769
Jan 31 18:06:42.782: INFO: Waiting up to 5m0s for pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001" in namespace "emptydir-3869" to be "Succeeded or Failed"
Jan 31 18:06:42.791: INFO: Pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001": Phase="Pending", Reason="", readiness=false. Elapsed: 9.490618ms
Jan 31 18:06:44.800: INFO: Pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017711314s
Jan 31 18:06:46.809: INFO: Pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001": Phase="Pending", Reason="", readiness=false. Elapsed: 4.026652396s
Jan 31 18:06:48.802: INFO: Pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.020449458s
STEP: Saw pod success 01/31/23 18:06:48.802
Jan 31 18:06:48.803: INFO: Pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001" satisfied condition "Succeeded or Failed"
Jan 31 18:06:48.814: INFO: Trying to get logs from node 26 pod pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001 container test-container: <nil>
STEP: delete the pod 01/31/23 18:06:48.843
Jan 31 18:06:48.862: INFO: Waiting for pod pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001 to disappear
Jan 31 18:06:48.878: INFO: Pod pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 18:06:48.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3869" for this suite. 01/31/23 18:06:48.886
------------------------------
â€¢ [SLOW TEST] [6.165 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:06:42.73
    Jan 31 18:06:42.730: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 18:06:42.732
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:06:42.754
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:06:42.763
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:97
    STEP: Creating a pod to test emptydir 0644 on tmpfs 01/31/23 18:06:42.769
    Jan 31 18:06:42.782: INFO: Waiting up to 5m0s for pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001" in namespace "emptydir-3869" to be "Succeeded or Failed"
    Jan 31 18:06:42.791: INFO: Pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001": Phase="Pending", Reason="", readiness=false. Elapsed: 9.490618ms
    Jan 31 18:06:44.800: INFO: Pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017711314s
    Jan 31 18:06:46.809: INFO: Pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001": Phase="Pending", Reason="", readiness=false. Elapsed: 4.026652396s
    Jan 31 18:06:48.802: INFO: Pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.020449458s
    STEP: Saw pod success 01/31/23 18:06:48.802
    Jan 31 18:06:48.803: INFO: Pod "pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001" satisfied condition "Succeeded or Failed"
    Jan 31 18:06:48.814: INFO: Trying to get logs from node 26 pod pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001 container test-container: <nil>
    STEP: delete the pod 01/31/23 18:06:48.843
    Jan 31 18:06:48.862: INFO: Waiting for pod pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001 to disappear
    Jan 31 18:06:48.878: INFO: Pod pod-ccdccb7d-5ef8-404e-ac06-a5928b2dd001 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:06:48.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3869" for this suite. 01/31/23 18:06:48.886
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:06:48.895
Jan 31 18:06:48.895: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 18:06:48.896
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:06:48.915
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:06:48.922
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
STEP: Creating configMap with name cm-test-opt-del-4961c35e-cc4d-4b9c-a078-604016282e06 01/31/23 18:06:48.936
STEP: Creating configMap with name cm-test-opt-upd-1758a2b8-3ff0-4b92-b26a-822a31bab601 01/31/23 18:06:48.943
STEP: Creating the pod 01/31/23 18:06:48.95
Jan 31 18:06:48.964: INFO: Waiting up to 5m0s for pod "pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade" in namespace "configmap-7991" to be "running and ready"
Jan 31 18:06:48.976: INFO: Pod "pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade": Phase="Pending", Reason="", readiness=false. Elapsed: 12.040362ms
Jan 31 18:06:48.976: INFO: The phase of Pod pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade is Pending, waiting for it to be Running (with Ready = true)
Jan 31 18:06:50.984: INFO: Pod "pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02012353s
Jan 31 18:06:50.984: INFO: The phase of Pod pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade is Pending, waiting for it to be Running (with Ready = true)
Jan 31 18:06:52.991: INFO: Pod "pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade": Phase="Running", Reason="", readiness=true. Elapsed: 4.026568593s
Jan 31 18:06:52.991: INFO: The phase of Pod pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade is Running (Ready = true)
Jan 31 18:06:52.991: INFO: Pod "pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-4961c35e-cc4d-4b9c-a078-604016282e06 01/31/23 18:06:53.049
STEP: Updating configmap cm-test-opt-upd-1758a2b8-3ff0-4b92-b26a-822a31bab601 01/31/23 18:06:53.056
STEP: Creating configMap with name cm-test-opt-create-85d37e7f-7be5-41d2-a2df-67ed9db6f94f 01/31/23 18:06:53.063
STEP: waiting to observe update in volume 01/31/23 18:06:53.071
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 18:08:07.915: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-7991" for this suite. 01/31/23 18:08:07.922
------------------------------
â€¢ [SLOW TEST] [79.039 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:06:48.895
    Jan 31 18:06:48.895: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 18:06:48.896
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:06:48.915
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:06:48.922
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:240
    STEP: Creating configMap with name cm-test-opt-del-4961c35e-cc4d-4b9c-a078-604016282e06 01/31/23 18:06:48.936
    STEP: Creating configMap with name cm-test-opt-upd-1758a2b8-3ff0-4b92-b26a-822a31bab601 01/31/23 18:06:48.943
    STEP: Creating the pod 01/31/23 18:06:48.95
    Jan 31 18:06:48.964: INFO: Waiting up to 5m0s for pod "pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade" in namespace "configmap-7991" to be "running and ready"
    Jan 31 18:06:48.976: INFO: Pod "pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade": Phase="Pending", Reason="", readiness=false. Elapsed: 12.040362ms
    Jan 31 18:06:48.976: INFO: The phase of Pod pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 18:06:50.984: INFO: Pod "pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02012353s
    Jan 31 18:06:50.984: INFO: The phase of Pod pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 18:06:52.991: INFO: Pod "pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade": Phase="Running", Reason="", readiness=true. Elapsed: 4.026568593s
    Jan 31 18:06:52.991: INFO: The phase of Pod pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade is Running (Ready = true)
    Jan 31 18:06:52.991: INFO: Pod "pod-configmaps-1828bc9f-b1e9-462a-9393-7c32e774fade" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-4961c35e-cc4d-4b9c-a078-604016282e06 01/31/23 18:06:53.049
    STEP: Updating configmap cm-test-opt-upd-1758a2b8-3ff0-4b92-b26a-822a31bab601 01/31/23 18:06:53.056
    STEP: Creating configMap with name cm-test-opt-create-85d37e7f-7be5-41d2-a2df-67ed9db6f94f 01/31/23 18:06:53.063
    STEP: waiting to observe update in volume 01/31/23 18:06:53.071
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:08:07.915: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-7991" for this suite. 01/31/23 18:08:07.922
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:08:07.936
Jan 31 18:08:07.936: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename custom-resource-definition 01/31/23 18:08:07.936
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:07.956
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:07.963
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
Jan 31 18:08:07.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:08:08.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-9408" for this suite. 01/31/23 18:08:08.574
------------------------------
â€¢ [0.649 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    getting/updating/patching custom resource definition status sub-resource works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:145

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:08:07.936
    Jan 31 18:08:07.936: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename custom-resource-definition 01/31/23 18:08:07.936
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:07.956
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:07.963
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:145
    Jan 31 18:08:07.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:08:08.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-9408" for this suite. 01/31/23 18:08:08.574
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:08:08.585
Jan 31 18:08:08.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename dns 01/31/23 18:08:08.586
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:08.606
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:08.619
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
STEP: Creating a test headless service 01/31/23 18:08:08.626
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7778;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7778;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7778.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7778.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7778.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7778.svc;check="$$(dig +notcp +noall +answer +search 96.221.106.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.106.221.96_udp@PTR;check="$$(dig +tcp +noall +answer +search 96.221.106.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.106.221.96_tcp@PTR;sleep 1; done
 01/31/23 18:08:08.693
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7778;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7778;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7778.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7778.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7778.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7778.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7778.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7778.svc;check="$$(dig +notcp +noall +answer +search 96.221.106.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.106.221.96_udp@PTR;check="$$(dig +tcp +noall +answer +search 96.221.106.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.106.221.96_tcp@PTR;sleep 1; done
 01/31/23 18:08:08.693
STEP: creating a pod to probe DNS 01/31/23 18:08:08.693
STEP: submitting the pod to kubernetes 01/31/23 18:08:08.694
Jan 31 18:08:08.711: INFO: Waiting up to 15m0s for pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d" in namespace "dns-7778" to be "running"
Jan 31 18:08:08.719: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.289477ms
Jan 31 18:08:10.733: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021749317s
Jan 31 18:08:12.732: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020956046s
Jan 31 18:08:14.731: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.020409539s
Jan 31 18:08:16.737: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.025618342s
Jan 31 18:08:18.726: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 10.015168754s
Jan 31 18:08:20.730: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 12.018771527s
Jan 31 18:08:22.734: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 14.022737667s
Jan 31 18:08:24.732: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 16.020744241s
Jan 31 18:08:26.730: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 18.018525252s
Jan 31 18:08:28.736: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 20.024759069s
Jan 31 18:08:30.733: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 22.021620906s
Jan 31 18:08:32.733: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Running", Reason="", readiness=true. Elapsed: 24.022439554s
Jan 31 18:08:32.733: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d" satisfied condition "running"
STEP: retrieving the pod 01/31/23 18:08:32.734
STEP: looking for the results for each expected name from probers 01/31/23 18:08:32.744
Jan 31 18:08:32.758: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.770: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.781: INFO: Unable to read wheezy_udp@dns-test-service.dns-7778 from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.790: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7778 from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.797: INFO: Unable to read wheezy_udp@dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.803: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.809: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.817: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.823: INFO: Unable to read wheezy_udp@_http._tcp.test-service-2.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.831: INFO: Unable to read wheezy_tcp@_http._tcp.test-service-2.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.837: INFO: Unable to read 10.106.221.96_udp@PTR from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.844: INFO: Unable to read 10.106.221.96_tcp@PTR from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.851: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.857: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.865: INFO: Unable to read jessie_udp@dns-test-service.dns-7778 from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.872: INFO: Unable to read jessie_tcp@dns-test-service.dns-7778 from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.883: INFO: Unable to read jessie_udp@dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.889: INFO: Unable to read jessie_tcp@dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.896: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.903: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.912: INFO: Unable to read jessie_udp@_http._tcp.test-service-2.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.917: INFO: Unable to read jessie_tcp@_http._tcp.test-service-2.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.927: INFO: Unable to read 10.106.221.96_udp@PTR from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.932: INFO: Unable to read 10.106.221.96_tcp@PTR from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
Jan 31 18:08:32.932: INFO: Lookups using dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7778 wheezy_tcp@dns-test-service.dns-7778 wheezy_udp@dns-test-service.dns-7778.svc wheezy_tcp@dns-test-service.dns-7778.svc wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc wheezy_udp@_http._tcp.test-service-2.dns-7778.svc wheezy_tcp@_http._tcp.test-service-2.dns-7778.svc 10.106.221.96_udp@PTR 10.106.221.96_tcp@PTR jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7778 jessie_tcp@dns-test-service.dns-7778 jessie_udp@dns-test-service.dns-7778.svc jessie_tcp@dns-test-service.dns-7778.svc jessie_udp@_http._tcp.dns-test-service.dns-7778.svc jessie_tcp@_http._tcp.dns-test-service.dns-7778.svc jessie_udp@_http._tcp.test-service-2.dns-7778.svc jessie_tcp@_http._tcp.test-service-2.dns-7778.svc 10.106.221.96_udp@PTR 10.106.221.96_tcp@PTR]

Jan 31 18:08:38.092: INFO: DNS probes using dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d succeeded

STEP: deleting the pod 01/31/23 18:08:38.092
STEP: deleting the test service 01/31/23 18:08:38.108
STEP: deleting the test headless service 01/31/23 18:08:38.162
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 31 18:08:38.194: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-7778" for this suite. 01/31/23 18:08:38.211
------------------------------
â€¢ [SLOW TEST] [29.641 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:08:08.585
    Jan 31 18:08:08.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename dns 01/31/23 18:08:08.586
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:08.606
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:08.619
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
      test/e2e/network/dns.go:193
    STEP: Creating a test headless service 01/31/23 18:08:08.626
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7778;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7778;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7778.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7778.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7778.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7778.svc;check="$$(dig +notcp +noall +answer +search 96.221.106.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.106.221.96_udp@PTR;check="$$(dig +tcp +noall +answer +search 96.221.106.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.106.221.96_tcp@PTR;sleep 1; done
     01/31/23 18:08:08.693
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7778;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7778;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7778.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7778.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7778.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7778.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7778.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7778.svc;check="$$(dig +notcp +noall +answer +search 96.221.106.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.106.221.96_udp@PTR;check="$$(dig +tcp +noall +answer +search 96.221.106.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.106.221.96_tcp@PTR;sleep 1; done
     01/31/23 18:08:08.693
    STEP: creating a pod to probe DNS 01/31/23 18:08:08.693
    STEP: submitting the pod to kubernetes 01/31/23 18:08:08.694
    Jan 31 18:08:08.711: INFO: Waiting up to 15m0s for pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d" in namespace "dns-7778" to be "running"
    Jan 31 18:08:08.719: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.289477ms
    Jan 31 18:08:10.733: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021749317s
    Jan 31 18:08:12.732: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020956046s
    Jan 31 18:08:14.731: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.020409539s
    Jan 31 18:08:16.737: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.025618342s
    Jan 31 18:08:18.726: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 10.015168754s
    Jan 31 18:08:20.730: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 12.018771527s
    Jan 31 18:08:22.734: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 14.022737667s
    Jan 31 18:08:24.732: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 16.020744241s
    Jan 31 18:08:26.730: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 18.018525252s
    Jan 31 18:08:28.736: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 20.024759069s
    Jan 31 18:08:30.733: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Pending", Reason="", readiness=false. Elapsed: 22.021620906s
    Jan 31 18:08:32.733: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d": Phase="Running", Reason="", readiness=true. Elapsed: 24.022439554s
    Jan 31 18:08:32.733: INFO: Pod "dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d" satisfied condition "running"
    STEP: retrieving the pod 01/31/23 18:08:32.734
    STEP: looking for the results for each expected name from probers 01/31/23 18:08:32.744
    Jan 31 18:08:32.758: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.770: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.781: INFO: Unable to read wheezy_udp@dns-test-service.dns-7778 from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.790: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7778 from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.797: INFO: Unable to read wheezy_udp@dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.803: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.809: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.817: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.823: INFO: Unable to read wheezy_udp@_http._tcp.test-service-2.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.831: INFO: Unable to read wheezy_tcp@_http._tcp.test-service-2.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.837: INFO: Unable to read 10.106.221.96_udp@PTR from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.844: INFO: Unable to read 10.106.221.96_tcp@PTR from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.851: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.857: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.865: INFO: Unable to read jessie_udp@dns-test-service.dns-7778 from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.872: INFO: Unable to read jessie_tcp@dns-test-service.dns-7778 from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.883: INFO: Unable to read jessie_udp@dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.889: INFO: Unable to read jessie_tcp@dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.896: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.903: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.912: INFO: Unable to read jessie_udp@_http._tcp.test-service-2.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.917: INFO: Unable to read jessie_tcp@_http._tcp.test-service-2.dns-7778.svc from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.927: INFO: Unable to read 10.106.221.96_udp@PTR from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.932: INFO: Unable to read 10.106.221.96_tcp@PTR from pod dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d: the server could not find the requested resource (get pods dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d)
    Jan 31 18:08:32.932: INFO: Lookups using dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7778 wheezy_tcp@dns-test-service.dns-7778 wheezy_udp@dns-test-service.dns-7778.svc wheezy_tcp@dns-test-service.dns-7778.svc wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc wheezy_udp@_http._tcp.test-service-2.dns-7778.svc wheezy_tcp@_http._tcp.test-service-2.dns-7778.svc 10.106.221.96_udp@PTR 10.106.221.96_tcp@PTR jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7778 jessie_tcp@dns-test-service.dns-7778 jessie_udp@dns-test-service.dns-7778.svc jessie_tcp@dns-test-service.dns-7778.svc jessie_udp@_http._tcp.dns-test-service.dns-7778.svc jessie_tcp@_http._tcp.dns-test-service.dns-7778.svc jessie_udp@_http._tcp.test-service-2.dns-7778.svc jessie_tcp@_http._tcp.test-service-2.dns-7778.svc 10.106.221.96_udp@PTR 10.106.221.96_tcp@PTR]

    Jan 31 18:08:38.092: INFO: DNS probes using dns-7778/dns-test-e0f3c4b6-994b-475d-8ff6-a1d7a3f2d83d succeeded

    STEP: deleting the pod 01/31/23 18:08:38.092
    STEP: deleting the test service 01/31/23 18:08:38.108
    STEP: deleting the test headless service 01/31/23 18:08:38.162
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:08:38.194: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-7778" for this suite. 01/31/23 18:08:38.211
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:08:38.228
Jan 31 18:08:38.228: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 18:08:38.229
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:38.258
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:38.271
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
STEP: Creating a pod to test downward API volume plugin 01/31/23 18:08:38.284
Jan 31 18:08:38.298: INFO: Waiting up to 5m0s for pod "downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df" in namespace "downward-api-112" to be "Succeeded or Failed"
Jan 31 18:08:38.305: INFO: Pod "downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df": Phase="Pending", Reason="", readiness=false. Elapsed: 7.659441ms
Jan 31 18:08:40.320: INFO: Pod "downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02264719s
Jan 31 18:08:42.320: INFO: Pod "downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021912136s
STEP: Saw pod success 01/31/23 18:08:42.32
Jan 31 18:08:42.320: INFO: Pod "downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df" satisfied condition "Succeeded or Failed"
Jan 31 18:08:42.331: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df container client-container: <nil>
STEP: delete the pod 01/31/23 18:08:42.348
Jan 31 18:08:42.371: INFO: Waiting for pod downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df to disappear
Jan 31 18:08:42.381: INFO: Pod downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 31 18:08:42.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-112" for this suite. 01/31/23 18:08:42.388
------------------------------
â€¢ [4.167 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:08:38.228
    Jan 31 18:08:38.228: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 18:08:38.229
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:38.258
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:38.271
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:207
    STEP: Creating a pod to test downward API volume plugin 01/31/23 18:08:38.284
    Jan 31 18:08:38.298: INFO: Waiting up to 5m0s for pod "downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df" in namespace "downward-api-112" to be "Succeeded or Failed"
    Jan 31 18:08:38.305: INFO: Pod "downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df": Phase="Pending", Reason="", readiness=false. Elapsed: 7.659441ms
    Jan 31 18:08:40.320: INFO: Pod "downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02264719s
    Jan 31 18:08:42.320: INFO: Pod "downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021912136s
    STEP: Saw pod success 01/31/23 18:08:42.32
    Jan 31 18:08:42.320: INFO: Pod "downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df" satisfied condition "Succeeded or Failed"
    Jan 31 18:08:42.331: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df container client-container: <nil>
    STEP: delete the pod 01/31/23 18:08:42.348
    Jan 31 18:08:42.371: INFO: Waiting for pod downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df to disappear
    Jan 31 18:08:42.381: INFO: Pod downwardapi-volume-dd3b5673-ba6a-4ed4-913b-60d34755d2df no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:08:42.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-112" for this suite. 01/31/23 18:08:42.388
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:08:42.398
Jan 31 18:08:42.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename deployment 01/31/23 18:08:42.4
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:42.419
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:42.425
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
Jan 31 18:08:42.436: INFO: Creating simple deployment test-new-deployment
Jan 31 18:08:42.472: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource 01/31/23 18:08:44.513
STEP: updating a scale subresource 01/31/23 18:08:44.524
STEP: verifying the deployment Spec.Replicas was modified 01/31/23 18:08:44.548
STEP: Patch a scale subresource 01/31/23 18:08:44.559
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 31 18:08:44.616: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-5578  9a1df8ed-4e43-43ac-b968-4ef08a1d0051 20007 3 2023-01-31 18:08:42 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-01-31 18:08:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003fe4838 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-01-31 18:08:43 +0000 UTC,LastTransitionTime:2023-01-31 18:08:42 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-31 18:08:44 +0000 UTC,LastTransitionTime:2023-01-31 18:08:44 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 31 18:08:44.627: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-5578  8afa9908-a6e4-4bee-bd1b-7a2985760b20 20009 3 2023-01-31 18:08:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 9a1df8ed-4e43-43ac-b968-4ef08a1d0051 0xc003fe4f67 0xc003fe4f68}] [] [{k3s Update apps/v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9a1df8ed-4e43-43ac-b968-4ef08a1d0051\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003fe5008 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 31 18:08:44.645: INFO: Pod "test-new-deployment-7f5969cbc7-h5sv2" is available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-h5sv2 test-new-deployment-7f5969cbc7- deployment-5578  dcb4fe58-f584-4787-821e-08aa4d987d75 19994 0 2023-01-31 18:08:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 8afa9908-a6e4-4bee-bd1b-7a2985760b20 0xc003fe53c7 0xc003fe53c8}] [] [{k3s Update v1 2023-01-31 18:08:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8afa9908-a6e4-4bee-bd1b-7a2985760b20\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 18:08:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.173\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lrp4x,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lrp4x,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:08:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:08:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:08:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:08:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.173,StartTime:2023-01-31 18:08:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 18:08:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://60865643bc6472baa939a3c421c5830320b0d6362fba0662504ebcbc3aeb44a5,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.173,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 18:08:44.645: INFO: Pod "test-new-deployment-7f5969cbc7-g6gwr" is not available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-g6gwr test-new-deployment-7f5969cbc7- deployment-5578  a888c6a9-cc62-48b0-83f6-7a015debba5b 20004 0 2023-01-31 18:08:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 8afa9908-a6e4-4bee-bd1b-7a2985760b20 0xc003fe55b7 0xc003fe55b8}] [] [{k3s Update v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8afa9908-a6e4-4bee-bd1b-7a2985760b20\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qkrng,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qkrng,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:08:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 18:08:44.645: INFO: Pod "test-new-deployment-7f5969cbc7-knc2p" is not available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-knc2p test-new-deployment-7f5969cbc7- deployment-5578  571aad20-01b0-4683-bd75-5bb8dfd43d98 20011 0 2023-01-31 18:08:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 8afa9908-a6e4-4bee-bd1b-7a2985760b20 0xc003fe5710 0xc003fe5711}] [] [{k3s Update v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8afa9908-a6e4-4bee-bd1b-7a2985760b20\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cd9mm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cd9mm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 31 18:08:44.645: INFO: Pod "test-new-deployment-7f5969cbc7-bz8s7" is not available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-bz8s7 test-new-deployment-7f5969cbc7- deployment-5578  1be47e4d-aefb-4761-bebb-1e7db769a0ce 20013 0 2023-01-31 18:08:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 8afa9908-a6e4-4bee-bd1b-7a2985760b20 0xc003fe5847 0xc003fe5848}] [] [{k3s Update v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8afa9908-a6e4-4bee-bd1b-7a2985760b20\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pqpmz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pqpmz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 31 18:08:44.646: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-5578" for this suite. 01/31/23 18:08:44.67
------------------------------
â€¢ [2.292 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:08:42.398
    Jan 31 18:08:42.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename deployment 01/31/23 18:08:42.4
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:42.419
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:42.425
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] Deployment should have a working scale subresource [Conformance]
      test/e2e/apps/deployment.go:150
    Jan 31 18:08:42.436: INFO: Creating simple deployment test-new-deployment
    Jan 31 18:08:42.472: INFO: deployment "test-new-deployment" doesn't have the required revision set
    STEP: getting scale subresource 01/31/23 18:08:44.513
    STEP: updating a scale subresource 01/31/23 18:08:44.524
    STEP: verifying the deployment Spec.Replicas was modified 01/31/23 18:08:44.548
    STEP: Patch a scale subresource 01/31/23 18:08:44.559
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 31 18:08:44.616: INFO: Deployment "test-new-deployment":
    &Deployment{ObjectMeta:{test-new-deployment  deployment-5578  9a1df8ed-4e43-43ac-b968-4ef08a1d0051 20007 3 2023-01-31 18:08:42 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-01-31 18:08:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003fe4838 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-01-31 18:08:43 +0000 UTC,LastTransitionTime:2023-01-31 18:08:42 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-31 18:08:44 +0000 UTC,LastTransitionTime:2023-01-31 18:08:44 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Jan 31 18:08:44.627: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
    &ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-5578  8afa9908-a6e4-4bee-bd1b-7a2985760b20 20009 3 2023-01-31 18:08:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 9a1df8ed-4e43-43ac-b968-4ef08a1d0051 0xc003fe4f67 0xc003fe4f68}] [] [{k3s Update apps/v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9a1df8ed-4e43-43ac-b968-4ef08a1d0051\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003fe5008 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 18:08:44.645: INFO: Pod "test-new-deployment-7f5969cbc7-h5sv2" is available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-h5sv2 test-new-deployment-7f5969cbc7- deployment-5578  dcb4fe58-f584-4787-821e-08aa4d987d75 19994 0 2023-01-31 18:08:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 8afa9908-a6e4-4bee-bd1b-7a2985760b20 0xc003fe53c7 0xc003fe53c8}] [] [{k3s Update v1 2023-01-31 18:08:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8afa9908-a6e4-4bee-bd1b-7a2985760b20\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 18:08:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.173\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lrp4x,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lrp4x,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:08:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:08:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:08:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:08:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.173,StartTime:2023-01-31 18:08:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 18:08:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://60865643bc6472baa939a3c421c5830320b0d6362fba0662504ebcbc3aeb44a5,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.173,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 18:08:44.645: INFO: Pod "test-new-deployment-7f5969cbc7-g6gwr" is not available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-g6gwr test-new-deployment-7f5969cbc7- deployment-5578  a888c6a9-cc62-48b0-83f6-7a015debba5b 20004 0 2023-01-31 18:08:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 8afa9908-a6e4-4bee-bd1b-7a2985760b20 0xc003fe55b7 0xc003fe55b8}] [] [{k3s Update v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8afa9908-a6e4-4bee-bd1b-7a2985760b20\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qkrng,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qkrng,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:08:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 18:08:44.645: INFO: Pod "test-new-deployment-7f5969cbc7-knc2p" is not available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-knc2p test-new-deployment-7f5969cbc7- deployment-5578  571aad20-01b0-4683-bd75-5bb8dfd43d98 20011 0 2023-01-31 18:08:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 8afa9908-a6e4-4bee-bd1b-7a2985760b20 0xc003fe5710 0xc003fe5711}] [] [{k3s Update v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8afa9908-a6e4-4bee-bd1b-7a2985760b20\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cd9mm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cd9mm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 31 18:08:44.645: INFO: Pod "test-new-deployment-7f5969cbc7-bz8s7" is not available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-bz8s7 test-new-deployment-7f5969cbc7- deployment-5578  1be47e4d-aefb-4761-bebb-1e7db769a0ce 20013 0 2023-01-31 18:08:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 8afa9908-a6e4-4bee-bd1b-7a2985760b20 0xc003fe5847 0xc003fe5848}] [] [{k3s Update v1 2023-01-31 18:08:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8afa9908-a6e4-4bee-bd1b-7a2985760b20\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pqpmz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pqpmz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:08:44.646: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-5578" for this suite. 01/31/23 18:08:44.67
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:08:44.691
Jan 31 18:08:44.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 18:08:44.692
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:44.722
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:44.73
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
STEP: Creating a pod to test emptydir 0666 on tmpfs 01/31/23 18:08:44.738
Jan 31 18:08:44.748: INFO: Waiting up to 5m0s for pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a" in namespace "emptydir-2109" to be "Succeeded or Failed"
Jan 31 18:08:44.759: INFO: Pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a": Phase="Pending", Reason="", readiness=false. Elapsed: 10.850444ms
Jan 31 18:08:46.775: INFO: Pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026602175s
Jan 31 18:08:48.767: INFO: Pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018756752s
Jan 31 18:08:50.769: INFO: Pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021413527s
STEP: Saw pod success 01/31/23 18:08:50.77
Jan 31 18:08:50.770: INFO: Pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a" satisfied condition "Succeeded or Failed"
Jan 31 18:08:50.778: INFO: Trying to get logs from node 26-m02 pod pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a container test-container: <nil>
STEP: delete the pod 01/31/23 18:08:50.796
Jan 31 18:08:50.820: INFO: Waiting for pod pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a to disappear
Jan 31 18:08:50.831: INFO: Pod pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 18:08:50.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-2109" for this suite. 01/31/23 18:08:50.839
------------------------------
â€¢ [SLOW TEST] [6.159 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:08:44.691
    Jan 31 18:08:44.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 18:08:44.692
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:44.722
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:44.73
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:137
    STEP: Creating a pod to test emptydir 0666 on tmpfs 01/31/23 18:08:44.738
    Jan 31 18:08:44.748: INFO: Waiting up to 5m0s for pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a" in namespace "emptydir-2109" to be "Succeeded or Failed"
    Jan 31 18:08:44.759: INFO: Pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a": Phase="Pending", Reason="", readiness=false. Elapsed: 10.850444ms
    Jan 31 18:08:46.775: INFO: Pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026602175s
    Jan 31 18:08:48.767: INFO: Pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018756752s
    Jan 31 18:08:50.769: INFO: Pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021413527s
    STEP: Saw pod success 01/31/23 18:08:50.77
    Jan 31 18:08:50.770: INFO: Pod "pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a" satisfied condition "Succeeded or Failed"
    Jan 31 18:08:50.778: INFO: Trying to get logs from node 26-m02 pod pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a container test-container: <nil>
    STEP: delete the pod 01/31/23 18:08:50.796
    Jan 31 18:08:50.820: INFO: Waiting for pod pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a to disappear
    Jan 31 18:08:50.831: INFO: Pod pod-1a62bc7f-d32c-4484-9d53-3c5e8a64a06a no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:08:50.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-2109" for this suite. 01/31/23 18:08:50.839
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:08:50.85
Jan 31 18:08:50.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename downward-api 01/31/23 18:08:50.851
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:50.87
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:50.876
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
STEP: Creating a pod to test downward api env vars 01/31/23 18:08:50.883
Jan 31 18:08:50.897: INFO: Waiting up to 5m0s for pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8" in namespace "downward-api-5561" to be "Succeeded or Failed"
Jan 31 18:08:50.908: INFO: Pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8": Phase="Pending", Reason="", readiness=false. Elapsed: 11.197052ms
Jan 31 18:08:52.922: INFO: Pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025355694s
Jan 31 18:08:54.919: INFO: Pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.021956035s
Jan 31 18:08:56.921: INFO: Pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.023987751s
STEP: Saw pod success 01/31/23 18:08:56.921
Jan 31 18:08:56.921: INFO: Pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8" satisfied condition "Succeeded or Failed"
Jan 31 18:08:56.932: INFO: Trying to get logs from node 26-m02 pod downward-api-3ae10555-abea-4e1f-934e-b8795142aef8 container dapi-container: <nil>
STEP: delete the pod 01/31/23 18:08:56.952
Jan 31 18:08:56.983: INFO: Waiting for pod downward-api-3ae10555-abea-4e1f-934e-b8795142aef8 to disappear
Jan 31 18:08:56.991: INFO: Pod downward-api-3ae10555-abea-4e1f-934e-b8795142aef8 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Jan 31 18:08:56.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-5561" for this suite. 01/31/23 18:08:56.998
------------------------------
â€¢ [SLOW TEST] [6.159 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:08:50.85
    Jan 31 18:08:50.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename downward-api 01/31/23 18:08:50.851
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:50.87
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:50.876
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:166
    STEP: Creating a pod to test downward api env vars 01/31/23 18:08:50.883
    Jan 31 18:08:50.897: INFO: Waiting up to 5m0s for pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8" in namespace "downward-api-5561" to be "Succeeded or Failed"
    Jan 31 18:08:50.908: INFO: Pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8": Phase="Pending", Reason="", readiness=false. Elapsed: 11.197052ms
    Jan 31 18:08:52.922: INFO: Pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025355694s
    Jan 31 18:08:54.919: INFO: Pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.021956035s
    Jan 31 18:08:56.921: INFO: Pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.023987751s
    STEP: Saw pod success 01/31/23 18:08:56.921
    Jan 31 18:08:56.921: INFO: Pod "downward-api-3ae10555-abea-4e1f-934e-b8795142aef8" satisfied condition "Succeeded or Failed"
    Jan 31 18:08:56.932: INFO: Trying to get logs from node 26-m02 pod downward-api-3ae10555-abea-4e1f-934e-b8795142aef8 container dapi-container: <nil>
    STEP: delete the pod 01/31/23 18:08:56.952
    Jan 31 18:08:56.983: INFO: Waiting for pod downward-api-3ae10555-abea-4e1f-934e-b8795142aef8 to disappear
    Jan 31 18:08:56.991: INFO: Pod downward-api-3ae10555-abea-4e1f-934e-b8795142aef8 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:08:56.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-5561" for this suite. 01/31/23 18:08:56.998
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] DNS
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:08:57.01
Jan 31 18:08:57.010: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename dns 01/31/23 18:08:57.011
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:57.029
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:57.037
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9563.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9563.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
 01/31/23 18:08:57.045
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9563.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9563.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
 01/31/23 18:08:57.045
STEP: creating a pod to probe /etc/hosts 01/31/23 18:08:57.046
STEP: submitting the pod to kubernetes 01/31/23 18:08:57.046
Jan 31 18:08:57.062: INFO: Waiting up to 15m0s for pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b" in namespace "dns-9563" to be "running"
Jan 31 18:08:57.073: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 10.141607ms
Jan 31 18:08:59.091: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02904935s
Jan 31 18:09:01.085: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02235584s
Jan 31 18:09:03.085: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.022886231s
Jan 31 18:09:05.089: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 8.026219681s
Jan 31 18:09:07.084: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 10.021638672s
Jan 31 18:09:09.082: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 12.019514566s
Jan 31 18:09:11.084: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 14.021236923s
Jan 31 18:09:13.083: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 16.02098236s
Jan 31 18:09:15.081: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 18.018997364s
Jan 31 18:09:17.087: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 20.024574661s
Jan 31 18:09:19.082: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 22.020045612s
Jan 31 18:09:21.080: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 24.017191212s
Jan 31 18:09:23.088: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Running", Reason="", readiness=true. Elapsed: 26.025328629s
Jan 31 18:09:23.088: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b" satisfied condition "running"
STEP: retrieving the pod 01/31/23 18:09:23.088
STEP: looking for the results for each expected name from probers 01/31/23 18:09:23.093
Jan 31 18:09:23.162: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-9563/dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b: the server could not find the requested resource (get pods dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b)
Jan 31 18:09:23.162: INFO: Lookups using dns-9563/dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b failed for: [jessie_hosts@dns-querier-1]

Jan 31 18:09:28.203: INFO: DNS probes using dns-9563/dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b succeeded

STEP: deleting the pod 01/31/23 18:09:28.203
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 31 18:09:28.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-9563" for this suite. 01/31/23 18:09:28.23
------------------------------
â€¢ [SLOW TEST] [31.232 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:08:57.01
    Jan 31 18:08:57.010: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename dns 01/31/23 18:08:57.011
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:08:57.029
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:08:57.037
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide /etc/hosts entries for the cluster [Conformance]
      test/e2e/network/dns.go:117
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9563.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9563.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
     01/31/23 18:08:57.045
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9563.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9563.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
     01/31/23 18:08:57.045
    STEP: creating a pod to probe /etc/hosts 01/31/23 18:08:57.046
    STEP: submitting the pod to kubernetes 01/31/23 18:08:57.046
    Jan 31 18:08:57.062: INFO: Waiting up to 15m0s for pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b" in namespace "dns-9563" to be "running"
    Jan 31 18:08:57.073: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 10.141607ms
    Jan 31 18:08:59.091: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02904935s
    Jan 31 18:09:01.085: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02235584s
    Jan 31 18:09:03.085: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.022886231s
    Jan 31 18:09:05.089: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 8.026219681s
    Jan 31 18:09:07.084: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 10.021638672s
    Jan 31 18:09:09.082: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 12.019514566s
    Jan 31 18:09:11.084: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 14.021236923s
    Jan 31 18:09:13.083: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 16.02098236s
    Jan 31 18:09:15.081: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 18.018997364s
    Jan 31 18:09:17.087: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 20.024574661s
    Jan 31 18:09:19.082: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 22.020045612s
    Jan 31 18:09:21.080: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Pending", Reason="", readiness=false. Elapsed: 24.017191212s
    Jan 31 18:09:23.088: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b": Phase="Running", Reason="", readiness=true. Elapsed: 26.025328629s
    Jan 31 18:09:23.088: INFO: Pod "dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b" satisfied condition "running"
    STEP: retrieving the pod 01/31/23 18:09:23.088
    STEP: looking for the results for each expected name from probers 01/31/23 18:09:23.093
    Jan 31 18:09:23.162: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-9563/dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b: the server could not find the requested resource (get pods dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b)
    Jan 31 18:09:23.162: INFO: Lookups using dns-9563/dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b failed for: [jessie_hosts@dns-querier-1]

    Jan 31 18:09:28.203: INFO: DNS probes using dns-9563/dns-test-cb20f27c-ba3e-44b4-a542-441992b7337b succeeded

    STEP: deleting the pod 01/31/23 18:09:28.203
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:09:28.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-9563" for this suite. 01/31/23 18:09:28.23
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:09:28.243
Jan 31 18:09:28.243: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename svcaccounts 01/31/23 18:09:28.244
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:09:28.267
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:09:28.273
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
STEP: Creating a pod to test service account token:  01/31/23 18:09:28.28
Jan 31 18:09:28.295: INFO: Waiting up to 5m0s for pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523" in namespace "svcaccounts-4701" to be "Succeeded or Failed"
Jan 31 18:09:28.303: INFO: Pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523": Phase="Pending", Reason="", readiness=false. Elapsed: 8.194769ms
Jan 31 18:09:30.316: INFO: Pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021258382s
Jan 31 18:09:32.318: INFO: Pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022492388s
Jan 31 18:09:34.318: INFO: Pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022379431s
STEP: Saw pod success 01/31/23 18:09:34.318
Jan 31 18:09:34.318: INFO: Pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523" satisfied condition "Succeeded or Failed"
Jan 31 18:09:34.325: INFO: Trying to get logs from node 26-m02 pod test-pod-57bace30-4450-4bf8-be88-1d8c65e93523 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 18:09:34.337
Jan 31 18:09:34.358: INFO: Waiting for pod test-pod-57bace30-4450-4bf8-be88-1d8c65e93523 to disappear
Jan 31 18:09:34.366: INFO: Pod test-pod-57bace30-4450-4bf8-be88-1d8c65e93523 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 31 18:09:34.366: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-4701" for this suite. 01/31/23 18:09:34.374
------------------------------
â€¢ [SLOW TEST] [6.144 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:09:28.243
    Jan 31 18:09:28.243: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename svcaccounts 01/31/23 18:09:28.244
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:09:28.267
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:09:28.273
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount projected service account token [Conformance]
      test/e2e/auth/service_accounts.go:275
    STEP: Creating a pod to test service account token:  01/31/23 18:09:28.28
    Jan 31 18:09:28.295: INFO: Waiting up to 5m0s for pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523" in namespace "svcaccounts-4701" to be "Succeeded or Failed"
    Jan 31 18:09:28.303: INFO: Pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523": Phase="Pending", Reason="", readiness=false. Elapsed: 8.194769ms
    Jan 31 18:09:30.316: INFO: Pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021258382s
    Jan 31 18:09:32.318: INFO: Pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022492388s
    Jan 31 18:09:34.318: INFO: Pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022379431s
    STEP: Saw pod success 01/31/23 18:09:34.318
    Jan 31 18:09:34.318: INFO: Pod "test-pod-57bace30-4450-4bf8-be88-1d8c65e93523" satisfied condition "Succeeded or Failed"
    Jan 31 18:09:34.325: INFO: Trying to get logs from node 26-m02 pod test-pod-57bace30-4450-4bf8-be88-1d8c65e93523 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 18:09:34.337
    Jan 31 18:09:34.358: INFO: Waiting for pod test-pod-57bace30-4450-4bf8-be88-1d8c65e93523 to disappear
    Jan 31 18:09:34.366: INFO: Pod test-pod-57bace30-4450-4bf8-be88-1d8c65e93523 no longer exists
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:09:34.366: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-4701" for this suite. 01/31/23 18:09:34.374
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:09:34.388
Jan 31 18:09:34.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replicaset 01/31/23 18:09:34.389
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:09:34.408
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:09:34.416
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
Jan 31 18:09:34.456: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 31 18:09:39.468: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/31/23 18:09:39.468
STEP: Scaling up "test-rs" replicaset  01/31/23 18:09:39.468
Jan 31 18:09:39.485: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet 01/31/23 18:09:39.485
W0131 18:09:39.521196      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Jan 31 18:09:39.524: INFO: observed ReplicaSet test-rs in namespace replicaset-2714 with ReadyReplicas 1, AvailableReplicas 1
Jan 31 18:09:39.542: INFO: observed ReplicaSet test-rs in namespace replicaset-2714 with ReadyReplicas 1, AvailableReplicas 1
Jan 31 18:09:39.561: INFO: observed ReplicaSet test-rs in namespace replicaset-2714 with ReadyReplicas 1, AvailableReplicas 1
Jan 31 18:09:40.857: INFO: observed ReplicaSet test-rs in namespace replicaset-2714 with ReadyReplicas 2, AvailableReplicas 2
Jan 31 18:09:41.643: INFO: observed Replicaset test-rs in namespace replicaset-2714 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 31 18:09:41.643: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-2714" for this suite. 01/31/23 18:09:41.654
------------------------------
â€¢ [SLOW TEST] [7.282 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:09:34.388
    Jan 31 18:09:34.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replicaset 01/31/23 18:09:34.389
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:09:34.408
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:09:34.416
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replace and Patch tests [Conformance]
      test/e2e/apps/replica_set.go:154
    Jan 31 18:09:34.456: INFO: Pod name sample-pod: Found 0 pods out of 1
    Jan 31 18:09:39.468: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/31/23 18:09:39.468
    STEP: Scaling up "test-rs" replicaset  01/31/23 18:09:39.468
    Jan 31 18:09:39.485: INFO: Updating replica set "test-rs"
    STEP: patching the ReplicaSet 01/31/23 18:09:39.485
    W0131 18:09:39.521196      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Jan 31 18:09:39.524: INFO: observed ReplicaSet test-rs in namespace replicaset-2714 with ReadyReplicas 1, AvailableReplicas 1
    Jan 31 18:09:39.542: INFO: observed ReplicaSet test-rs in namespace replicaset-2714 with ReadyReplicas 1, AvailableReplicas 1
    Jan 31 18:09:39.561: INFO: observed ReplicaSet test-rs in namespace replicaset-2714 with ReadyReplicas 1, AvailableReplicas 1
    Jan 31 18:09:40.857: INFO: observed ReplicaSet test-rs in namespace replicaset-2714 with ReadyReplicas 2, AvailableReplicas 2
    Jan 31 18:09:41.643: INFO: observed Replicaset test-rs in namespace replicaset-2714 with ReadyReplicas 3 found true
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:09:41.643: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-2714" for this suite. 01/31/23 18:09:41.654
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:09:41.671
Jan 31 18:09:41.672: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename job 01/31/23 18:09:41.673
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:09:41.699
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:09:41.705
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
STEP: Creating a suspended job 01/31/23 18:09:41.723
STEP: Patching the Job 01/31/23 18:09:41.734
STEP: Watching for Job to be patched 01/31/23 18:09:41.77
Jan 31 18:09:41.777: INFO: Event ADDED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking:]
Jan 31 18:09:41.777: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking:]
Jan 31 18:09:41.777: INFO: Event MODIFIED found for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking:]
STEP: Updating the job 01/31/23 18:09:41.777
STEP: Watching for Job to be updated 01/31/23 18:09:41.794
Jan 31 18:09:41.798: INFO: Event MODIFIED found for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 31 18:09:41.798: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
STEP: Listing all Jobs with LabelSelector 01/31/23 18:09:41.798
Jan 31 18:09:41.806: INFO: Job: e2e-4r4pr as labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr]
STEP: Waiting for job to complete 01/31/23 18:09:41.806
STEP: Delete a job collection with a labelselector 01/31/23 18:09:53.817
STEP: Watching for Job to be deleted 01/31/23 18:09:53.833
Jan 31 18:09:53.837: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 31 18:09:53.837: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 31 18:09:53.837: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 31 18:09:53.837: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 31 18:09:53.837: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 31 18:09:53.837: INFO: Event DELETED found for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
STEP: Relist jobs to confirm deletion 01/31/23 18:09:53.837
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 31 18:09:53.844: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-5326" for this suite. 01/31/23 18:09:53.854
------------------------------
â€¢ [SLOW TEST] [12.199 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:09:41.671
    Jan 31 18:09:41.672: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename job 01/31/23 18:09:41.673
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:09:41.699
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:09:41.705
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a job [Conformance]
      test/e2e/apps/job.go:703
    STEP: Creating a suspended job 01/31/23 18:09:41.723
    STEP: Patching the Job 01/31/23 18:09:41.734
    STEP: Watching for Job to be patched 01/31/23 18:09:41.77
    Jan 31 18:09:41.777: INFO: Event ADDED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking:]
    Jan 31 18:09:41.777: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking:]
    Jan 31 18:09:41.777: INFO: Event MODIFIED found for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking:]
    STEP: Updating the job 01/31/23 18:09:41.777
    STEP: Watching for Job to be updated 01/31/23 18:09:41.794
    Jan 31 18:09:41.798: INFO: Event MODIFIED found for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 31 18:09:41.798: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
    STEP: Listing all Jobs with LabelSelector 01/31/23 18:09:41.798
    Jan 31 18:09:41.806: INFO: Job: e2e-4r4pr as labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr]
    STEP: Waiting for job to complete 01/31/23 18:09:41.806
    STEP: Delete a job collection with a labelselector 01/31/23 18:09:53.817
    STEP: Watching for Job to be deleted 01/31/23 18:09:53.833
    Jan 31 18:09:53.837: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 31 18:09:53.837: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 31 18:09:53.837: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 31 18:09:53.837: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 31 18:09:53.837: INFO: Event MODIFIED observed for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 31 18:09:53.837: INFO: Event DELETED found for Job e2e-4r4pr in namespace job-5326 with labels: map[e2e-4r4pr:patched e2e-job-label:e2e-4r4pr] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    STEP: Relist jobs to confirm deletion 01/31/23 18:09:53.837
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:09:53.844: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-5326" for this suite. 01/31/23 18:09:53.854
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:09:53.871
Jan 31 18:09:53.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 18:09:53.872
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:09:53.893
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:09:53.902
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
STEP: Creating a pod to test downward API volume plugin 01/31/23 18:09:53.909
Jan 31 18:09:53.917: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31" in namespace "projected-8228" to be "Succeeded or Failed"
Jan 31 18:09:53.924: INFO: Pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31": Phase="Pending", Reason="", readiness=false. Elapsed: 6.687225ms
Jan 31 18:09:55.934: INFO: Pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016580062s
Jan 31 18:09:57.938: INFO: Pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020818462s
Jan 31 18:09:59.935: INFO: Pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017831359s
STEP: Saw pod success 01/31/23 18:09:59.935
Jan 31 18:09:59.936: INFO: Pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31" satisfied condition "Succeeded or Failed"
Jan 31 18:09:59.942: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31 container client-container: <nil>
STEP: delete the pod 01/31/23 18:09:59.961
Jan 31 18:09:59.977: INFO: Waiting for pod downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31 to disappear
Jan 31 18:09:59.984: INFO: Pod downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 31 18:09:59.984: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8228" for this suite. 01/31/23 18:09:59.99
------------------------------
â€¢ [SLOW TEST] [6.129 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:09:53.871
    Jan 31 18:09:53.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 18:09:53.872
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:09:53.893
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:09:53.902
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:249
    STEP: Creating a pod to test downward API volume plugin 01/31/23 18:09:53.909
    Jan 31 18:09:53.917: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31" in namespace "projected-8228" to be "Succeeded or Failed"
    Jan 31 18:09:53.924: INFO: Pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31": Phase="Pending", Reason="", readiness=false. Elapsed: 6.687225ms
    Jan 31 18:09:55.934: INFO: Pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016580062s
    Jan 31 18:09:57.938: INFO: Pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020818462s
    Jan 31 18:09:59.935: INFO: Pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017831359s
    STEP: Saw pod success 01/31/23 18:09:59.935
    Jan 31 18:09:59.936: INFO: Pod "downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31" satisfied condition "Succeeded or Failed"
    Jan 31 18:09:59.942: INFO: Trying to get logs from node 26-m02 pod downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31 container client-container: <nil>
    STEP: delete the pod 01/31/23 18:09:59.961
    Jan 31 18:09:59.977: INFO: Waiting for pod downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31 to disappear
    Jan 31 18:09:59.984: INFO: Pod downwardapi-volume-b8341bea-b517-4af0-8b95-ebe108eccb31 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:09:59.984: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8228" for this suite. 01/31/23 18:09:59.99
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:10:00.001
Jan 31 18:10:00.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename daemonsets 01/31/23 18:10:00.002
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:10:00.017
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:10:00.023
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194
Jan 31 18:10:00.049: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes. 01/31/23 18:10:00.055
Jan 31 18:10:00.065: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:10:00.065: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched. 01/31/23 18:10:00.065
Jan 31 18:10:00.104: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:10:00.104: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:10:01.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:10:01.112: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:10:02.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:10:02.112: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:10:03.116: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 18:10:03.116: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled 01/31/23 18:10:03.123
Jan 31 18:10:03.144: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 18:10:03.144: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Jan 31 18:10:04.155: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:10:04.155: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 01/31/23 18:10:04.155
Jan 31 18:10:04.172: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:10:04.172: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:10:05.178: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:10:05.179: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:10:06.180: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:10:06.180: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:10:07.182: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:10:07.182: INFO: Node 26 is running 0 daemon pod, expected 1
Jan 31 18:10:08.188: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 31 18:10:08.188: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/31/23 18:10:08.201
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1096, will wait for the garbage collector to delete the pods 01/31/23 18:10:08.202
Jan 31 18:10:08.273: INFO: Deleting DaemonSet.extensions daemon-set took: 13.663039ms
Jan 31 18:10:08.374: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.94436ms
Jan 31 18:10:10.586: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 31 18:10:10.586: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 31 18:10:10.595: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20458"},"items":null}

Jan 31 18:10:10.604: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20458"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:10:10.635: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-1096" for this suite. 01/31/23 18:10:10.642
------------------------------
â€¢ [SLOW TEST] [10.647 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:10:00.001
    Jan 31 18:10:00.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename daemonsets 01/31/23 18:10:00.002
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:10:00.017
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:10:00.023
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should run and stop complex daemon [Conformance]
      test/e2e/apps/daemon_set.go:194
    Jan 31 18:10:00.049: INFO: Creating daemon "daemon-set" with a node selector
    STEP: Initially, daemon pods should not be running on any nodes. 01/31/23 18:10:00.055
    Jan 31 18:10:00.065: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:10:00.065: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Change node label to blue, check that daemon pod is launched. 01/31/23 18:10:00.065
    Jan 31 18:10:00.104: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:10:00.104: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:10:01.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:10:01.112: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:10:02.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:10:02.112: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:10:03.116: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 18:10:03.116: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    STEP: Update the node label to green, and wait for daemons to be unscheduled 01/31/23 18:10:03.123
    Jan 31 18:10:03.144: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 18:10:03.144: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
    Jan 31 18:10:04.155: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:10:04.155: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 01/31/23 18:10:04.155
    Jan 31 18:10:04.172: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:10:04.172: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:10:05.178: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:10:05.179: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:10:06.180: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:10:06.180: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:10:07.182: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:10:07.182: INFO: Node 26 is running 0 daemon pod, expected 1
    Jan 31 18:10:08.188: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 31 18:10:08.188: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/31/23 18:10:08.201
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1096, will wait for the garbage collector to delete the pods 01/31/23 18:10:08.202
    Jan 31 18:10:08.273: INFO: Deleting DaemonSet.extensions daemon-set took: 13.663039ms
    Jan 31 18:10:08.374: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.94436ms
    Jan 31 18:10:10.586: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 31 18:10:10.586: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 31 18:10:10.595: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20458"},"items":null}

    Jan 31 18:10:10.604: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20458"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:10:10.635: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-1096" for this suite. 01/31/23 18:10:10.642
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:10:10.649
Jan 31 18:10:10.649: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename events 01/31/23 18:10:10.65
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:10:10.666
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:10:10.677
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
STEP: Create set of events 01/31/23 18:10:10.683
Jan 31 18:10:10.689: INFO: created test-event-1
Jan 31 18:10:10.694: INFO: created test-event-2
Jan 31 18:10:10.699: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace 01/31/23 18:10:10.699
STEP: delete collection of events 01/31/23 18:10:10.704
Jan 31 18:10:10.704: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 01/31/23 18:10:10.727
Jan 31 18:10:10.728: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Jan 31 18:10:10.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-139" for this suite. 01/31/23 18:10:10.741
------------------------------
â€¢ [0.099 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:10:10.649
    Jan 31 18:10:10.649: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename events 01/31/23 18:10:10.65
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:10:10.666
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:10:10.677
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/core_events.go:175
    STEP: Create set of events 01/31/23 18:10:10.683
    Jan 31 18:10:10.689: INFO: created test-event-1
    Jan 31 18:10:10.694: INFO: created test-event-2
    Jan 31 18:10:10.699: INFO: created test-event-3
    STEP: get a list of Events with a label in the current namespace 01/31/23 18:10:10.699
    STEP: delete collection of events 01/31/23 18:10:10.704
    Jan 31 18:10:10.704: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 01/31/23 18:10:10.727
    Jan 31 18:10:10.728: INFO: requesting list of events to confirm quantity
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:10:10.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-139" for this suite. 01/31/23 18:10:10.741
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:10:10.749
Jan 31 18:10:10.749: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename gc 01/31/23 18:10:10.751
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:10:10.771
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:10:10.782
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
STEP: create the deployment 01/31/23 18:10:10.79
STEP: Wait for the Deployment to create new ReplicaSet 01/31/23 18:10:10.797
STEP: delete the deployment 01/31/23 18:10:11.317
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 01/31/23 18:10:11.327
STEP: Gathering metrics 01/31/23 18:10:11.868
W0131 18:10:11.877029      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jan 31 18:10:11.877: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 31 18:10:11.877: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-1868" for this suite. 01/31/23 18:10:11.884
------------------------------
â€¢ [1.144 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:10:10.749
    Jan 31 18:10:10.749: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename gc 01/31/23 18:10:10.751
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:10:10.771
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:10:10.782
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
      test/e2e/apimachinery/garbage_collector.go:550
    STEP: create the deployment 01/31/23 18:10:10.79
    STEP: Wait for the Deployment to create new ReplicaSet 01/31/23 18:10:10.797
    STEP: delete the deployment 01/31/23 18:10:11.317
    STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 01/31/23 18:10:11.327
    STEP: Gathering metrics 01/31/23 18:10:11.868
    W0131 18:10:11.877029      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Jan 31 18:10:11.877: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:10:11.877: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-1868" for this suite. 01/31/23 18:10:11.884
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:10:11.894
Jan 31 18:10:11.894: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 18:10:11.894
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:10:11.912
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:10:11.92
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
STEP: Creating resourceQuota "e2e-rq-status-c99vk" 01/31/23 18:10:11.934
Jan 31 18:10:11.947: INFO: Resource quota "e2e-rq-status-c99vk" reports spec: hard cpu limit of 500m
Jan 31 18:10:11.947: INFO: Resource quota "e2e-rq-status-c99vk" reports spec: hard memory limit of 500Mi
STEP: Updating resourceQuota "e2e-rq-status-c99vk" /status 01/31/23 18:10:11.947
STEP: Confirm /status for "e2e-rq-status-c99vk" resourceQuota via watch 01/31/23 18:10:11.959
Jan 31 18:10:11.963: INFO: observed resourceQuota "e2e-rq-status-c99vk" in namespace "resourcequota-6675" with hard status: v1.ResourceList(nil)
Jan 31 18:10:11.963: INFO: Found resourceQuota "e2e-rq-status-c99vk" in namespace "resourcequota-6675" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Jan 31 18:10:11.963: INFO: ResourceQuota "e2e-rq-status-c99vk" /status was updated
STEP: Patching hard spec values for cpu & memory 01/31/23 18:10:11.968
Jan 31 18:10:11.976: INFO: Resource quota "e2e-rq-status-c99vk" reports spec: hard cpu limit of 1
Jan 31 18:10:11.976: INFO: Resource quota "e2e-rq-status-c99vk" reports spec: hard memory limit of 1Gi
STEP: Patching "e2e-rq-status-c99vk" /status 01/31/23 18:10:11.976
STEP: Confirm /status for "e2e-rq-status-c99vk" resourceQuota via watch 01/31/23 18:10:11.982
Jan 31 18:10:11.985: INFO: observed resourceQuota "e2e-rq-status-c99vk" in namespace "resourcequota-6675" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Jan 31 18:10:11.985: INFO: Found resourceQuota "e2e-rq-status-c99vk" in namespace "resourcequota-6675" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
Jan 31 18:10:11.985: INFO: ResourceQuota "e2e-rq-status-c99vk" /status was patched
STEP: Get "e2e-rq-status-c99vk" /status 01/31/23 18:10:11.985
Jan 31 18:10:11.990: INFO: Resourcequota "e2e-rq-status-c99vk" reports status: hard cpu of 1
Jan 31 18:10:11.990: INFO: Resourcequota "e2e-rq-status-c99vk" reports status: hard memory of 1Gi
STEP: Repatching "e2e-rq-status-c99vk" /status before checking Spec is unchanged 01/31/23 18:10:11.994
Jan 31 18:10:12.000: INFO: Resourcequota "e2e-rq-status-c99vk" reports status: hard cpu of 2
Jan 31 18:10:12.000: INFO: Resourcequota "e2e-rq-status-c99vk" reports status: hard memory of 2Gi
Jan 31 18:10:12.004: INFO: Found resourceQuota "e2e-rq-status-c99vk" in namespace "resourcequota-6675" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
Jan 31 18:14:52.023: INFO: ResourceQuota "e2e-rq-status-c99vk" Spec was unchanged and /status reset
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 18:14:52.023: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-6675" for this suite. 01/31/23 18:14:52.034
------------------------------
â€¢ [SLOW TEST] [280.153 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:10:11.894
    Jan 31 18:10:11.894: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 18:10:11.894
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:10:11.912
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:10:11.92
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a resourcequota status [Conformance]
      test/e2e/apimachinery/resource_quota.go:1010
    STEP: Creating resourceQuota "e2e-rq-status-c99vk" 01/31/23 18:10:11.934
    Jan 31 18:10:11.947: INFO: Resource quota "e2e-rq-status-c99vk" reports spec: hard cpu limit of 500m
    Jan 31 18:10:11.947: INFO: Resource quota "e2e-rq-status-c99vk" reports spec: hard memory limit of 500Mi
    STEP: Updating resourceQuota "e2e-rq-status-c99vk" /status 01/31/23 18:10:11.947
    STEP: Confirm /status for "e2e-rq-status-c99vk" resourceQuota via watch 01/31/23 18:10:11.959
    Jan 31 18:10:11.963: INFO: observed resourceQuota "e2e-rq-status-c99vk" in namespace "resourcequota-6675" with hard status: v1.ResourceList(nil)
    Jan 31 18:10:11.963: INFO: Found resourceQuota "e2e-rq-status-c99vk" in namespace "resourcequota-6675" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Jan 31 18:10:11.963: INFO: ResourceQuota "e2e-rq-status-c99vk" /status was updated
    STEP: Patching hard spec values for cpu & memory 01/31/23 18:10:11.968
    Jan 31 18:10:11.976: INFO: Resource quota "e2e-rq-status-c99vk" reports spec: hard cpu limit of 1
    Jan 31 18:10:11.976: INFO: Resource quota "e2e-rq-status-c99vk" reports spec: hard memory limit of 1Gi
    STEP: Patching "e2e-rq-status-c99vk" /status 01/31/23 18:10:11.976
    STEP: Confirm /status for "e2e-rq-status-c99vk" resourceQuota via watch 01/31/23 18:10:11.982
    Jan 31 18:10:11.985: INFO: observed resourceQuota "e2e-rq-status-c99vk" in namespace "resourcequota-6675" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Jan 31 18:10:11.985: INFO: Found resourceQuota "e2e-rq-status-c99vk" in namespace "resourcequota-6675" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
    Jan 31 18:10:11.985: INFO: ResourceQuota "e2e-rq-status-c99vk" /status was patched
    STEP: Get "e2e-rq-status-c99vk" /status 01/31/23 18:10:11.985
    Jan 31 18:10:11.990: INFO: Resourcequota "e2e-rq-status-c99vk" reports status: hard cpu of 1
    Jan 31 18:10:11.990: INFO: Resourcequota "e2e-rq-status-c99vk" reports status: hard memory of 1Gi
    STEP: Repatching "e2e-rq-status-c99vk" /status before checking Spec is unchanged 01/31/23 18:10:11.994
    Jan 31 18:10:12.000: INFO: Resourcequota "e2e-rq-status-c99vk" reports status: hard cpu of 2
    Jan 31 18:10:12.000: INFO: Resourcequota "e2e-rq-status-c99vk" reports status: hard memory of 2Gi
    Jan 31 18:10:12.004: INFO: Found resourceQuota "e2e-rq-status-c99vk" in namespace "resourcequota-6675" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
    Jan 31 18:14:52.023: INFO: ResourceQuota "e2e-rq-status-c99vk" Spec was unchanged and /status reset
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:14:52.023: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-6675" for this suite. 01/31/23 18:14:52.034
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:14:52.047
Jan 31 18:14:52.048: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 18:14:52.049
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:14:52.088
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:14:52.097
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
STEP: Creating configMap that has name configmap-test-emptyKey-6eea4347-b62b-41a5-b2b1-415105b128cd 01/31/23 18:14:52.105
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 18:14:52.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-9818" for this suite. 01/31/23 18:14:52.115
------------------------------
â€¢ [0.074 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:14:52.047
    Jan 31 18:14:52.048: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 18:14:52.049
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:14:52.088
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:14:52.097
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create ConfigMap with empty key [Conformance]
      test/e2e/common/node/configmap.go:138
    STEP: Creating configMap that has name configmap-test-emptyKey-6eea4347-b62b-41a5-b2b1-415105b128cd 01/31/23 18:14:52.105
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:14:52.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-9818" for this suite. 01/31/23 18:14:52.115
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:14:52.122
Jan 31 18:14:52.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pod-network-test 01/31/23 18:14:52.123
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:14:52.139
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:14:52.148
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
STEP: Performing setup for networking test in namespace pod-network-test-775 01/31/23 18:14:52.155
STEP: creating a selector 01/31/23 18:14:52.155
STEP: Creating the service pods in kubernetes 01/31/23 18:14:52.155
Jan 31 18:14:52.155: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 31 18:14:52.183: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-775" to be "running and ready"
Jan 31 18:14:52.193: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 9.946479ms
Jan 31 18:14:52.193: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 18:14:54.201: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.01831012s
Jan 31 18:14:54.201: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 18:14:56.201: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.018630682s
Jan 31 18:14:56.202: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 18:14:58.208: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.02492668s
Jan 31 18:14:58.208: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 18:15:00.203: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.019799795s
Jan 31 18:15:00.203: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 18:15:02.202: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.019741986s
Jan 31 18:15:02.203: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 18:15:04.207: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.024279471s
Jan 31 18:15:04.207: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 18:15:06.203: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.0203604s
Jan 31 18:15:06.203: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 18:15:08.204: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.021500565s
Jan 31 18:15:08.204: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 18:15:10.207: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.024608201s
Jan 31 18:15:10.208: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 18:15:12.201: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.0179062s
Jan 31 18:15:12.201: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 31 18:15:14.205: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.022307109s
Jan 31 18:15:14.205: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Jan 31 18:15:14.205: INFO: Pod "netserver-0" satisfied condition "running and ready"
Jan 31 18:15:14.216: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-775" to be "running and ready"
Jan 31 18:15:14.225: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 9.559194ms
Jan 31 18:15:14.225: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Jan 31 18:15:14.226: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 01/31/23 18:15:14.233
Jan 31 18:15:14.243: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-775" to be "running"
Jan 31 18:15:14.256: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 12.957762ms
Jan 31 18:15:16.267: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.023735621s
Jan 31 18:15:16.267: INFO: Pod "test-container-pod" satisfied condition "running"
Jan 31 18:15:16.275: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jan 31 18:15:16.275: INFO: Breadth first check of 10.244.0.4 on host 192.168.61.199...
Jan 31 18:15:16.284: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.187:9080/dial?request=hostname&protocol=http&host=10.244.0.4&port=8083&tries=1'] Namespace:pod-network-test-775 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 18:15:16.284: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 18:15:16.285: INFO: ExecWithOptions: Clientset creation
Jan 31 18:15:16.285: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-775/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.187%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.4%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 31 18:15:16.412: INFO: Waiting for responses: map[]
Jan 31 18:15:16.412: INFO: reached 10.244.0.4 after 0/1 tries
Jan 31 18:15:16.412: INFO: Breadth first check of 10.244.1.186 on host 192.168.61.148...
Jan 31 18:15:16.420: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.187:9080/dial?request=hostname&protocol=http&host=10.244.1.186&port=8083&tries=1'] Namespace:pod-network-test-775 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 31 18:15:16.420: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
Jan 31 18:15:16.420: INFO: ExecWithOptions: Clientset creation
Jan 31 18:15:16.420: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-775/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.187%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.186%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 31 18:15:16.507: INFO: Waiting for responses: map[]
Jan 31 18:15:16.507: INFO: reached 10.244.1.186 after 0/1 tries
Jan 31 18:15:16.507: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Jan 31 18:15:16.507: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-775" for this suite. 01/31/23 18:15:16.515
------------------------------
â€¢ [SLOW TEST] [24.401 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:82

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:14:52.122
    Jan 31 18:14:52.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pod-network-test 01/31/23 18:14:52.123
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:14:52.139
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:14:52.148
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: http [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:82
    STEP: Performing setup for networking test in namespace pod-network-test-775 01/31/23 18:14:52.155
    STEP: creating a selector 01/31/23 18:14:52.155
    STEP: Creating the service pods in kubernetes 01/31/23 18:14:52.155
    Jan 31 18:14:52.155: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Jan 31 18:14:52.183: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-775" to be "running and ready"
    Jan 31 18:14:52.193: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 9.946479ms
    Jan 31 18:14:52.193: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 18:14:54.201: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.01831012s
    Jan 31 18:14:54.201: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 18:14:56.201: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.018630682s
    Jan 31 18:14:56.202: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 18:14:58.208: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.02492668s
    Jan 31 18:14:58.208: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 18:15:00.203: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.019799795s
    Jan 31 18:15:00.203: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 18:15:02.202: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.019741986s
    Jan 31 18:15:02.203: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 18:15:04.207: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.024279471s
    Jan 31 18:15:04.207: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 18:15:06.203: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.0203604s
    Jan 31 18:15:06.203: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 18:15:08.204: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.021500565s
    Jan 31 18:15:08.204: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 18:15:10.207: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.024608201s
    Jan 31 18:15:10.208: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 18:15:12.201: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.0179062s
    Jan 31 18:15:12.201: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 31 18:15:14.205: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.022307109s
    Jan 31 18:15:14.205: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Jan 31 18:15:14.205: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Jan 31 18:15:14.216: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-775" to be "running and ready"
    Jan 31 18:15:14.225: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 9.559194ms
    Jan 31 18:15:14.225: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Jan 31 18:15:14.226: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 01/31/23 18:15:14.233
    Jan 31 18:15:14.243: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-775" to be "running"
    Jan 31 18:15:14.256: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 12.957762ms
    Jan 31 18:15:16.267: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.023735621s
    Jan 31 18:15:16.267: INFO: Pod "test-container-pod" satisfied condition "running"
    Jan 31 18:15:16.275: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Jan 31 18:15:16.275: INFO: Breadth first check of 10.244.0.4 on host 192.168.61.199...
    Jan 31 18:15:16.284: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.187:9080/dial?request=hostname&protocol=http&host=10.244.0.4&port=8083&tries=1'] Namespace:pod-network-test-775 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 18:15:16.284: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 18:15:16.285: INFO: ExecWithOptions: Clientset creation
    Jan 31 18:15:16.285: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-775/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.187%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.4%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Jan 31 18:15:16.412: INFO: Waiting for responses: map[]
    Jan 31 18:15:16.412: INFO: reached 10.244.0.4 after 0/1 tries
    Jan 31 18:15:16.412: INFO: Breadth first check of 10.244.1.186 on host 192.168.61.148...
    Jan 31 18:15:16.420: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.187:9080/dial?request=hostname&protocol=http&host=10.244.1.186&port=8083&tries=1'] Namespace:pod-network-test-775 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 31 18:15:16.420: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    Jan 31 18:15:16.420: INFO: ExecWithOptions: Clientset creation
    Jan 31 18:15:16.420: INFO: ExecWithOptions: execute(POST https://10.104.126.18:443/api/v1/namespaces/pod-network-test-775/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.187%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.186%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Jan 31 18:15:16.507: INFO: Waiting for responses: map[]
    Jan 31 18:15:16.507: INFO: reached 10.244.1.186 after 0/1 tries
    Jan 31 18:15:16.507: INFO: Going to retry 0 out of 2 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:15:16.507: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-775" for this suite. 01/31/23 18:15:16.515
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:15:16.523
Jan 31 18:15:16.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replicaset 01/31/23 18:15:16.524
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:16.543
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:16.552
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
STEP: Create a ReplicaSet 01/31/23 18:15:16.558
STEP: Verify that the required pods have come up 01/31/23 18:15:16.566
Jan 31 18:15:16.572: INFO: Pod name sample-pod: Found 0 pods out of 3
Jan 31 18:15:21.584: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running 01/31/23 18:15:21.584
Jan 31 18:15:21.590: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets 01/31/23 18:15:21.59
STEP: DeleteCollection of the ReplicaSets 01/31/23 18:15:21.599
STEP: After DeleteCollection verify that ReplicaSets have been deleted 01/31/23 18:15:21.61
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 31 18:15:21.622: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-474" for this suite. 01/31/23 18:15:21.637
------------------------------
â€¢ [SLOW TEST] [5.136 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:15:16.523
    Jan 31 18:15:16.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replicaset 01/31/23 18:15:16.524
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:16.543
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:16.552
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of ReplicaSets [Conformance]
      test/e2e/apps/replica_set.go:165
    STEP: Create a ReplicaSet 01/31/23 18:15:16.558
    STEP: Verify that the required pods have come up 01/31/23 18:15:16.566
    Jan 31 18:15:16.572: INFO: Pod name sample-pod: Found 0 pods out of 3
    Jan 31 18:15:21.584: INFO: Pod name sample-pod: Found 3 pods out of 3
    STEP: ensuring each pod is running 01/31/23 18:15:21.584
    Jan 31 18:15:21.590: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
    STEP: Listing all ReplicaSets 01/31/23 18:15:21.59
    STEP: DeleteCollection of the ReplicaSets 01/31/23 18:15:21.599
    STEP: After DeleteCollection verify that ReplicaSets have been deleted 01/31/23 18:15:21.61
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:15:21.622: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-474" for this suite. 01/31/23 18:15:21.637
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:15:21.664
Jan 31 18:15:21.664: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 18:15:21.665
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:21.698
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:21.708
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
Jan 31 18:15:21.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: creating the pod 01/31/23 18:15:21.724
STEP: submitting the pod to kubernetes 01/31/23 18:15:21.724
Jan 31 18:15:21.742: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1" in namespace "pods-1797" to be "running and ready"
Jan 31 18:15:21.751: INFO: Pod "pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.769083ms
Jan 31 18:15:21.751: INFO: The phase of Pod pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1 is Pending, waiting for it to be Running (with Ready = true)
Jan 31 18:15:23.760: INFO: Pod "pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1": Phase="Running", Reason="", readiness=true. Elapsed: 2.017701886s
Jan 31 18:15:23.760: INFO: The phase of Pod pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1 is Running (Ready = true)
Jan 31 18:15:23.760: INFO: Pod "pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 31 18:15:24.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-1797" for this suite. 01/31/23 18:15:24.114
------------------------------
â€¢ [2.463 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:15:21.664
    Jan 31 18:15:21.664: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 18:15:21.665
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:21.698
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:21.708
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support remote command execution over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:536
    Jan 31 18:15:21.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: creating the pod 01/31/23 18:15:21.724
    STEP: submitting the pod to kubernetes 01/31/23 18:15:21.724
    Jan 31 18:15:21.742: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1" in namespace "pods-1797" to be "running and ready"
    Jan 31 18:15:21.751: INFO: Pod "pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.769083ms
    Jan 31 18:15:21.751: INFO: The phase of Pod pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1 is Pending, waiting for it to be Running (with Ready = true)
    Jan 31 18:15:23.760: INFO: Pod "pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1": Phase="Running", Reason="", readiness=true. Elapsed: 2.017701886s
    Jan 31 18:15:23.760: INFO: The phase of Pod pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1 is Running (Ready = true)
    Jan 31 18:15:23.760: INFO: Pod "pod-exec-websocket-ce9eecdf-41df-43d0-abe1-4f74c92180e1" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:15:24.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-1797" for this suite. 01/31/23 18:15:24.114
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:15:24.128
Jan 31 18:15:24.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename kubectl 01/31/23 18:15:24.129
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:24.148
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:24.155
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
STEP: validating cluster-info 01/31/23 18:15:24.163
Jan 31 18:15:24.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1413 cluster-info'
Jan 31 18:15:24.283: INFO: stderr: ""
Jan 31 18:15:24.283: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.104.126.18:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 31 18:15:24.283: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1413" for this suite. 01/31/23 18:15:24.289
------------------------------
â€¢ [0.168 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl cluster-info
  test/e2e/kubectl/kubectl.go:1244
    should check if Kubernetes control plane services is included in cluster-info  [Conformance]
    test/e2e/kubectl/kubectl.go:1250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:15:24.128
    Jan 31 18:15:24.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename kubectl 01/31/23 18:15:24.129
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:24.148
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:24.155
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
      test/e2e/kubectl/kubectl.go:1250
    STEP: validating cluster-info 01/31/23 18:15:24.163
    Jan 31 18:15:24.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=kubectl-1413 cluster-info'
    Jan 31 18:15:24.283: INFO: stderr: ""
    Jan 31 18:15:24.283: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.104.126.18:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:15:24.283: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1413" for this suite. 01/31/23 18:15:24.289
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:15:24.297
Jan 31 18:15:24.297: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 18:15:24.297
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:24.312
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:24.318
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
STEP: creating service in namespace services-553 01/31/23 18:15:24.324
STEP: creating service affinity-nodeport in namespace services-553 01/31/23 18:15:24.324
STEP: creating replication controller affinity-nodeport in namespace services-553 01/31/23 18:15:24.374
I0131 18:15:24.382249      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-553, replica count: 3
I0131 18:15:27.433239      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 31 18:15:27.465: INFO: Creating new exec pod
Jan 31 18:15:27.476: INFO: Waiting up to 5m0s for pod "execpod-affinitysl9fs" in namespace "services-553" to be "running"
Jan 31 18:15:27.486: INFO: Pod "execpod-affinitysl9fs": Phase="Pending", Reason="", readiness=false. Elapsed: 10.112004ms
Jan 31 18:15:29.497: INFO: Pod "execpod-affinitysl9fs": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020714699s
Jan 31 18:15:31.496: INFO: Pod "execpod-affinitysl9fs": Phase="Running", Reason="", readiness=true. Elapsed: 4.019702546s
Jan 31 18:15:31.496: INFO: Pod "execpod-affinitysl9fs" satisfied condition "running"
Jan 31 18:15:32.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-553 exec execpod-affinitysl9fs -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
Jan 31 18:15:32.722: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Jan 31 18:15:32.722: INFO: stdout: ""
Jan 31 18:15:32.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-553 exec execpod-affinitysl9fs -- /bin/sh -x -c nc -v -z -w 2 10.96.233.168 80'
Jan 31 18:15:32.897: INFO: stderr: "+ nc -v -z -w 2 10.96.233.168 80\nConnection to 10.96.233.168 80 port [tcp/http] succeeded!\n"
Jan 31 18:15:32.897: INFO: stdout: ""
Jan 31 18:15:32.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-553 exec execpod-affinitysl9fs -- /bin/sh -x -c nc -v -z -w 2 192.168.61.199 32000'
Jan 31 18:15:33.082: INFO: stderr: "+ nc -v -z -w 2 192.168.61.199 32000\nConnection to 192.168.61.199 32000 port [tcp/*] succeeded!\n"
Jan 31 18:15:33.082: INFO: stdout: ""
Jan 31 18:15:33.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-553 exec execpod-affinitysl9fs -- /bin/sh -x -c nc -v -z -w 2 192.168.61.148 32000'
Jan 31 18:15:33.256: INFO: stderr: "+ nc -v -z -w 2 192.168.61.148 32000\nConnection to 192.168.61.148 32000 port [tcp/*] succeeded!\n"
Jan 31 18:15:33.256: INFO: stdout: ""
Jan 31 18:15:33.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-553 exec execpod-affinitysl9fs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.61.199:32000/ ; done'
Jan 31 18:15:33.508: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n"
Jan 31 18:15:33.508: INFO: stdout: "\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59"
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
Jan 31 18:15:33.508: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-553, will wait for the garbage collector to delete the pods 01/31/23 18:15:33.519
Jan 31 18:15:33.584: INFO: Deleting ReplicationController affinity-nodeport took: 9.247412ms
Jan 31 18:15:33.684: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.161813ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 18:15:36.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-553" for this suite. 01/31/23 18:15:36.238
------------------------------
â€¢ [SLOW TEST] [11.949 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:15:24.297
    Jan 31 18:15:24.297: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 18:15:24.297
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:24.312
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:24.318
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2228
    STEP: creating service in namespace services-553 01/31/23 18:15:24.324
    STEP: creating service affinity-nodeport in namespace services-553 01/31/23 18:15:24.324
    STEP: creating replication controller affinity-nodeport in namespace services-553 01/31/23 18:15:24.374
    I0131 18:15:24.382249      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-553, replica count: 3
    I0131 18:15:27.433239      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 31 18:15:27.465: INFO: Creating new exec pod
    Jan 31 18:15:27.476: INFO: Waiting up to 5m0s for pod "execpod-affinitysl9fs" in namespace "services-553" to be "running"
    Jan 31 18:15:27.486: INFO: Pod "execpod-affinitysl9fs": Phase="Pending", Reason="", readiness=false. Elapsed: 10.112004ms
    Jan 31 18:15:29.497: INFO: Pod "execpod-affinitysl9fs": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020714699s
    Jan 31 18:15:31.496: INFO: Pod "execpod-affinitysl9fs": Phase="Running", Reason="", readiness=true. Elapsed: 4.019702546s
    Jan 31 18:15:31.496: INFO: Pod "execpod-affinitysl9fs" satisfied condition "running"
    Jan 31 18:15:32.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-553 exec execpod-affinitysl9fs -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
    Jan 31 18:15:32.722: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
    Jan 31 18:15:32.722: INFO: stdout: ""
    Jan 31 18:15:32.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-553 exec execpod-affinitysl9fs -- /bin/sh -x -c nc -v -z -w 2 10.96.233.168 80'
    Jan 31 18:15:32.897: INFO: stderr: "+ nc -v -z -w 2 10.96.233.168 80\nConnection to 10.96.233.168 80 port [tcp/http] succeeded!\n"
    Jan 31 18:15:32.897: INFO: stdout: ""
    Jan 31 18:15:32.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-553 exec execpod-affinitysl9fs -- /bin/sh -x -c nc -v -z -w 2 192.168.61.199 32000'
    Jan 31 18:15:33.082: INFO: stderr: "+ nc -v -z -w 2 192.168.61.199 32000\nConnection to 192.168.61.199 32000 port [tcp/*] succeeded!\n"
    Jan 31 18:15:33.082: INFO: stdout: ""
    Jan 31 18:15:33.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-553 exec execpod-affinitysl9fs -- /bin/sh -x -c nc -v -z -w 2 192.168.61.148 32000'
    Jan 31 18:15:33.256: INFO: stderr: "+ nc -v -z -w 2 192.168.61.148 32000\nConnection to 192.168.61.148 32000 port [tcp/*] succeeded!\n"
    Jan 31 18:15:33.256: INFO: stdout: ""
    Jan 31 18:15:33.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=services-553 exec execpod-affinitysl9fs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.61.199:32000/ ; done'
    Jan 31 18:15:33.508: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.61.199:32000/\n"
    Jan 31 18:15:33.508: INFO: stdout: "\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59\naffinity-nodeport-6qk59"
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Received response from host: affinity-nodeport-6qk59
    Jan 31 18:15:33.508: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport in namespace services-553, will wait for the garbage collector to delete the pods 01/31/23 18:15:33.519
    Jan 31 18:15:33.584: INFO: Deleting ReplicationController affinity-nodeport took: 9.247412ms
    Jan 31 18:15:33.684: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.161813ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:15:36.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-553" for this suite. 01/31/23 18:15:36.238
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:15:36.247
Jan 31 18:15:36.247: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename resourcequota 01/31/23 18:15:36.248
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:36.263
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:36.271
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
STEP: Creating a ResourceQuota 01/31/23 18:15:36.279
STEP: Getting a ResourceQuota 01/31/23 18:15:36.285
STEP: Listing all ResourceQuotas with LabelSelector 01/31/23 18:15:36.291
STEP: Patching the ResourceQuota 01/31/23 18:15:36.295
STEP: Deleting a Collection of ResourceQuotas 01/31/23 18:15:36.301
STEP: Verifying the deleted ResourceQuota 01/31/23 18:15:36.308
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 31 18:15:36.315: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-517" for this suite. 01/31/23 18:15:36.331
------------------------------
â€¢ [0.091 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:15:36.247
    Jan 31 18:15:36.247: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename resourcequota 01/31/23 18:15:36.248
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:36.263
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:36.271
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a ResourceQuota [Conformance]
      test/e2e/apimachinery/resource_quota.go:943
    STEP: Creating a ResourceQuota 01/31/23 18:15:36.279
    STEP: Getting a ResourceQuota 01/31/23 18:15:36.285
    STEP: Listing all ResourceQuotas with LabelSelector 01/31/23 18:15:36.291
    STEP: Patching the ResourceQuota 01/31/23 18:15:36.295
    STEP: Deleting a Collection of ResourceQuotas 01/31/23 18:15:36.301
    STEP: Verifying the deleted ResourceQuota 01/31/23 18:15:36.308
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:15:36.315: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-517" for this suite. 01/31/23 18:15:36.331
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:15:36.339
Jan 31 18:15:36.339: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename job 01/31/23 18:15:36.34
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:36.355
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:36.361
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
STEP: Creating a job 01/31/23 18:15:36.368
STEP: Ensuring job reaches completions 01/31/23 18:15:36.374
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 31 18:15:50.383: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-3410" for this suite. 01/31/23 18:15:50.393
------------------------------
â€¢ [SLOW TEST] [14.065 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:15:36.339
    Jan 31 18:15:36.339: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename job 01/31/23 18:15:36.34
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:36.355
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:36.361
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
      test/e2e/apps/job.go:426
    STEP: Creating a job 01/31/23 18:15:36.368
    STEP: Ensuring job reaches completions 01/31/23 18:15:36.374
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:15:50.383: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-3410" for this suite. 01/31/23 18:15:50.393
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:15:50.407
Jan 31 18:15:50.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename namespaces 01/31/23 18:15:50.409
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:50.428
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:50.435
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
STEP: Updating Namespace "namespaces-2958" 01/31/23 18:15:50.441
Jan 31 18:15:50.452: INFO: Namespace "namespaces-2958" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"abf1f6e0-31e2-4923-8a54-a844ae6aeab1", "kubernetes.io/metadata.name":"namespaces-2958", "namespaces-2958":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:15:50.452: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-2958" for this suite. 01/31/23 18:15:50.46
------------------------------
â€¢ [0.063 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:15:50.407
    Jan 31 18:15:50.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename namespaces 01/31/23 18:15:50.409
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:50.428
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:50.435
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply an update to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:366
    STEP: Updating Namespace "namespaces-2958" 01/31/23 18:15:50.441
    Jan 31 18:15:50.452: INFO: Namespace "namespaces-2958" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"abf1f6e0-31e2-4923-8a54-a844ae6aeab1", "kubernetes.io/metadata.name":"namespaces-2958", "namespaces-2958":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:15:50.452: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-2958" for this suite. 01/31/23 18:15:50.46
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:15:50.472
Jan 31 18:15:50.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 18:15:50.475
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:50.491
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:50.499
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
STEP: Creating configMap with name projected-configmap-test-volume-map-a21dada1-4a03-40c9-87bf-c19c5f6bde90 01/31/23 18:15:50.506
STEP: Creating a pod to test consume configMaps 01/31/23 18:15:50.515
Jan 31 18:15:50.525: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f" in namespace "projected-1028" to be "Succeeded or Failed"
Jan 31 18:15:50.536: INFO: Pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f": Phase="Pending", Reason="", readiness=false. Elapsed: 11.238885ms
Jan 31 18:15:52.547: INFO: Pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022286705s
Jan 31 18:15:54.548: INFO: Pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022520619s
Jan 31 18:15:56.547: INFO: Pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021487577s
STEP: Saw pod success 01/31/23 18:15:56.547
Jan 31 18:15:56.547: INFO: Pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f" satisfied condition "Succeeded or Failed"
Jan 31 18:15:56.556: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f container agnhost-container: <nil>
STEP: delete the pod 01/31/23 18:15:56.584
Jan 31 18:15:56.599: INFO: Waiting for pod pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f to disappear
Jan 31 18:15:56.605: INFO: Pod pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 31 18:15:56.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1028" for this suite. 01/31/23 18:15:56.616
------------------------------
â€¢ [SLOW TEST] [6.154 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:15:50.472
    Jan 31 18:15:50.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 18:15:50.475
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:50.491
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:50.499
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:109
    STEP: Creating configMap with name projected-configmap-test-volume-map-a21dada1-4a03-40c9-87bf-c19c5f6bde90 01/31/23 18:15:50.506
    STEP: Creating a pod to test consume configMaps 01/31/23 18:15:50.515
    Jan 31 18:15:50.525: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f" in namespace "projected-1028" to be "Succeeded or Failed"
    Jan 31 18:15:50.536: INFO: Pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f": Phase="Pending", Reason="", readiness=false. Elapsed: 11.238885ms
    Jan 31 18:15:52.547: INFO: Pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022286705s
    Jan 31 18:15:54.548: INFO: Pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022520619s
    Jan 31 18:15:56.547: INFO: Pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021487577s
    STEP: Saw pod success 01/31/23 18:15:56.547
    Jan 31 18:15:56.547: INFO: Pod "pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f" satisfied condition "Succeeded or Failed"
    Jan 31 18:15:56.556: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 18:15:56.584
    Jan 31 18:15:56.599: INFO: Waiting for pod pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f to disappear
    Jan 31 18:15:56.605: INFO: Pod pod-projected-configmaps-11ff08cd-76f7-40ab-8222-66dae6881a7f no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:15:56.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1028" for this suite. 01/31/23 18:15:56.616
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:15:56.628
Jan 31 18:15:56.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename cronjob 01/31/23 18:15:56.629
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:56.645
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:56.651
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
STEP: Creating a ReplaceConcurrent cronjob 01/31/23 18:15:56.659
STEP: Ensuring a job is scheduled 01/31/23 18:15:56.669
STEP: Ensuring exactly one is scheduled 01/31/23 18:16:00.68
STEP: Ensuring exactly one running job exists by listing jobs explicitly 01/31/23 18:16:00.687
STEP: Ensuring the job is replaced with a new one 01/31/23 18:16:00.694
STEP: Removing cronjob 01/31/23 18:17:00.705
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Jan 31 18:17:00.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-9819" for this suite. 01/31/23 18:17:00.722
------------------------------
â€¢ [SLOW TEST] [64.104 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:15:56.628
    Jan 31 18:15:56.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename cronjob 01/31/23 18:15:56.629
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:15:56.645
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:15:56.651
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace jobs when ReplaceConcurrent [Conformance]
      test/e2e/apps/cronjob.go:160
    STEP: Creating a ReplaceConcurrent cronjob 01/31/23 18:15:56.659
    STEP: Ensuring a job is scheduled 01/31/23 18:15:56.669
    STEP: Ensuring exactly one is scheduled 01/31/23 18:16:00.68
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 01/31/23 18:16:00.687
    STEP: Ensuring the job is replaced with a new one 01/31/23 18:16:00.694
    STEP: Removing cronjob 01/31/23 18:17:00.705
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:17:00.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-9819" for this suite. 01/31/23 18:17:00.722
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:17:00.733
Jan 31 18:17:00.734: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename job 01/31/23 18:17:00.735
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:17:00.76
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:17:00.769
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
STEP: Creating Indexed job 01/31/23 18:17:00.776
STEP: Ensuring job reaches completions 01/31/23 18:17:00.782
STEP: Ensuring pods with index for job exist 01/31/23 18:17:10.792
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 31 18:17:10.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-3870" for this suite. 01/31/23 18:17:10.815
------------------------------
â€¢ [SLOW TEST] [10.095 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:17:00.733
    Jan 31 18:17:00.734: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename job 01/31/23 18:17:00.735
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:17:00.76
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:17:00.769
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
      test/e2e/apps/job.go:366
    STEP: Creating Indexed job 01/31/23 18:17:00.776
    STEP: Ensuring job reaches completions 01/31/23 18:17:00.782
    STEP: Ensuring pods with index for job exist 01/31/23 18:17:10.792
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:17:10.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-3870" for this suite. 01/31/23 18:17:10.815
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] ConfigMap
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:17:10.829
Jan 31 18:17:10.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 18:17:10.83
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:17:10.856
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:17:10.865
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
STEP: Creating configMap configmap-9754/configmap-test-4fad17be-a0df-4ecd-b85a-7ca6471776a4 01/31/23 18:17:10.874
STEP: Creating a pod to test consume configMaps 01/31/23 18:17:10.884
Jan 31 18:17:10.899: INFO: Waiting up to 5m0s for pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62" in namespace "configmap-9754" to be "Succeeded or Failed"
Jan 31 18:17:10.910: INFO: Pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62": Phase="Pending", Reason="", readiness=false. Elapsed: 11.131341ms
Jan 31 18:17:12.918: INFO: Pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019014128s
Jan 31 18:17:14.921: INFO: Pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62": Phase="Pending", Reason="", readiness=false. Elapsed: 4.021758536s
Jan 31 18:17:16.923: INFO: Pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.023974329s
STEP: Saw pod success 01/31/23 18:17:16.923
Jan 31 18:17:16.924: INFO: Pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62" satisfied condition "Succeeded or Failed"
Jan 31 18:17:16.934: INFO: Trying to get logs from node 26 pod pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62 container env-test: <nil>
STEP: delete the pod 01/31/23 18:17:16.969
Jan 31 18:17:16.985: INFO: Waiting for pod pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62 to disappear
Jan 31 18:17:16.993: INFO: Pod pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 18:17:16.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-9754" for this suite. 01/31/23 18:17:17
------------------------------
â€¢ [SLOW TEST] [6.179 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:17:10.829
    Jan 31 18:17:10.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 18:17:10.83
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:17:10.856
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:17:10.865
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via environment variable [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:45
    STEP: Creating configMap configmap-9754/configmap-test-4fad17be-a0df-4ecd-b85a-7ca6471776a4 01/31/23 18:17:10.874
    STEP: Creating a pod to test consume configMaps 01/31/23 18:17:10.884
    Jan 31 18:17:10.899: INFO: Waiting up to 5m0s for pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62" in namespace "configmap-9754" to be "Succeeded or Failed"
    Jan 31 18:17:10.910: INFO: Pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62": Phase="Pending", Reason="", readiness=false. Elapsed: 11.131341ms
    Jan 31 18:17:12.918: INFO: Pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019014128s
    Jan 31 18:17:14.921: INFO: Pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62": Phase="Pending", Reason="", readiness=false. Elapsed: 4.021758536s
    Jan 31 18:17:16.923: INFO: Pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.023974329s
    STEP: Saw pod success 01/31/23 18:17:16.923
    Jan 31 18:17:16.924: INFO: Pod "pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62" satisfied condition "Succeeded or Failed"
    Jan 31 18:17:16.934: INFO: Trying to get logs from node 26 pod pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62 container env-test: <nil>
    STEP: delete the pod 01/31/23 18:17:16.969
    Jan 31 18:17:16.985: INFO: Waiting for pod pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62 to disappear
    Jan 31 18:17:16.993: INFO: Pod pod-configmaps-de9ac4f5-6408-4584-a5c7-e701166a2a62 no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:17:16.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-9754" for this suite. 01/31/23 18:17:17
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:17:17.009
Jan 31 18:17:17.009: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename webhook 01/31/23 18:17:17.009
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:17:17.027
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:17:17.033
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/31/23 18:17:17.055
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 18:17:17.472
STEP: Deploying the webhook pod 01/31/23 18:17:17.483
STEP: Wait for the deployment to be ready 01/31/23 18:17:17.496
Jan 31 18:17:17.513: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 31 18:17:19.536: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 18, 17, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 17, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 18, 17, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 17, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/31/23 18:17:21.545
STEP: Verifying the service has paired with the endpoint 01/31/23 18:17:21.606
Jan 31 18:17:22.606: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
Jan 31 18:17:22.623: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Registering the custom resource webhook via the AdmissionRegistration API 01/31/23 18:17:23.15
STEP: Creating a custom resource that should be denied by the webhook 01/31/23 18:17:23.178
STEP: Creating a custom resource whose deletion would be denied by the webhook 01/31/23 18:17:25.198
STEP: Updating the custom resource with disallowed data should be denied 01/31/23 18:17:25.211
STEP: Deleting the custom resource should be denied 01/31/23 18:17:25.231
STEP: Remove the offending key and value from the custom resource data 01/31/23 18:17:25.246
STEP: Deleting the updated custom resource should be successful 01/31/23 18:17:25.265
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:17:25.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-386" for this suite. 01/31/23 18:17:25.908
STEP: Destroying namespace "webhook-386-markers" for this suite. 01/31/23 18:17:25.916
------------------------------
â€¢ [SLOW TEST] [8.922 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:17:17.009
    Jan 31 18:17:17.009: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename webhook 01/31/23 18:17:17.009
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:17:17.027
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:17:17.033
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/31/23 18:17:17.055
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/31/23 18:17:17.472
    STEP: Deploying the webhook pod 01/31/23 18:17:17.483
    STEP: Wait for the deployment to be ready 01/31/23 18:17:17.496
    Jan 31 18:17:17.513: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 31 18:17:19.536: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 18, 17, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 17, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 18, 17, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 17, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/31/23 18:17:21.545
    STEP: Verifying the service has paired with the endpoint 01/31/23 18:17:21.606
    Jan 31 18:17:22.606: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny custom resource creation, update and deletion [Conformance]
      test/e2e/apimachinery/webhook.go:221
    Jan 31 18:17:22.623: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Registering the custom resource webhook via the AdmissionRegistration API 01/31/23 18:17:23.15
    STEP: Creating a custom resource that should be denied by the webhook 01/31/23 18:17:23.178
    STEP: Creating a custom resource whose deletion would be denied by the webhook 01/31/23 18:17:25.198
    STEP: Updating the custom resource with disallowed data should be denied 01/31/23 18:17:25.211
    STEP: Deleting the custom resource should be denied 01/31/23 18:17:25.231
    STEP: Remove the offending key and value from the custom resource data 01/31/23 18:17:25.246
    STEP: Deleting the updated custom resource should be successful 01/31/23 18:17:25.265
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:17:25.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-386" for this suite. 01/31/23 18:17:25.908
    STEP: Destroying namespace "webhook-386-markers" for this suite. 01/31/23 18:17:25.916
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:17:25.934
Jan 31 18:17:25.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename containers 01/31/23 18:17:25.935
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:17:25.972
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:17:25.979
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
STEP: Creating a pod to test override command 01/31/23 18:17:25.987
Jan 31 18:17:25.997: INFO: Waiting up to 5m0s for pod "client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4" in namespace "containers-9679" to be "Succeeded or Failed"
Jan 31 18:17:26.007: INFO: Pod "client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4": Phase="Pending", Reason="", readiness=false. Elapsed: 10.104531ms
Jan 31 18:17:28.024: INFO: Pod "client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026770926s
Jan 31 18:17:30.018: INFO: Pod "client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020505236s
STEP: Saw pod success 01/31/23 18:17:30.018
Jan 31 18:17:30.018: INFO: Pod "client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4" satisfied condition "Succeeded or Failed"
Jan 31 18:17:30.031: INFO: Trying to get logs from node 26 pod client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 18:17:30.045
Jan 31 18:17:30.058: INFO: Waiting for pod client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4 to disappear
Jan 31 18:17:30.064: INFO: Pod client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Jan 31 18:17:30.064: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-9679" for this suite. 01/31/23 18:17:30.071
------------------------------
â€¢ [4.144 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:17:25.934
    Jan 31 18:17:25.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename containers 01/31/23 18:17:25.935
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:17:25.972
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:17:25.979
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:73
    STEP: Creating a pod to test override command 01/31/23 18:17:25.987
    Jan 31 18:17:25.997: INFO: Waiting up to 5m0s for pod "client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4" in namespace "containers-9679" to be "Succeeded or Failed"
    Jan 31 18:17:26.007: INFO: Pod "client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4": Phase="Pending", Reason="", readiness=false. Elapsed: 10.104531ms
    Jan 31 18:17:28.024: INFO: Pod "client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026770926s
    Jan 31 18:17:30.018: INFO: Pod "client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020505236s
    STEP: Saw pod success 01/31/23 18:17:30.018
    Jan 31 18:17:30.018: INFO: Pod "client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4" satisfied condition "Succeeded or Failed"
    Jan 31 18:17:30.031: INFO: Trying to get logs from node 26 pod client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 18:17:30.045
    Jan 31 18:17:30.058: INFO: Waiting for pod client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4 to disappear
    Jan 31 18:17:30.064: INFO: Pod client-containers-a7b4054f-dfc9-4d59-9e30-f65b10aea7e4 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:17:30.064: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-9679" for this suite. 01/31/23 18:17:30.071
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] CronJob
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:17:30.079
Jan 31 18:17:30.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename cronjob 01/31/23 18:17:30.08
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:17:30.098
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:17:30.105
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
STEP: Creating a suspended cronjob 01/31/23 18:17:30.112
STEP: Ensuring no jobs are scheduled 01/31/23 18:17:30.117
STEP: Ensuring no job exists by listing jobs explicitly 01/31/23 18:22:30.134
STEP: Removing cronjob 01/31/23 18:22:30.141
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Jan 31 18:22:30.149: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-2011" for this suite. 01/31/23 18:22:30.155
------------------------------
â€¢ [SLOW TEST] [300.084 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:17:30.079
    Jan 31 18:17:30.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename cronjob 01/31/23 18:17:30.08
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:17:30.098
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:17:30.105
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule jobs when suspended [Slow] [Conformance]
      test/e2e/apps/cronjob.go:96
    STEP: Creating a suspended cronjob 01/31/23 18:17:30.112
    STEP: Ensuring no jobs are scheduled 01/31/23 18:17:30.117
    STEP: Ensuring no job exists by listing jobs explicitly 01/31/23 18:22:30.134
    STEP: Removing cronjob 01/31/23 18:22:30.141
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:22:30.149: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-2011" for this suite. 01/31/23 18:22:30.155
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Pods
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:22:30.163
Jan 31 18:22:30.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename pods 01/31/23 18:22:30.163
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:22:30.18
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:22:30.186
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
STEP: creating a Pod with a static label 01/31/23 18:22:30.199
STEP: watching for Pod to be ready 01/31/23 18:22:30.208
Jan 31 18:22:30.213: INFO: observed Pod pod-test in namespace pods-2221 in phase Pending with labels: map[test-pod-static:true] & conditions []
Jan 31 18:22:30.215: INFO: observed Pod pod-test in namespace pods-2221 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC  }]
Jan 31 18:22:30.252: INFO: observed Pod pod-test in namespace pods-2221 in phase Pending with labels: map[test-pod-static:true] & conditions []
Jan 31 18:22:30.257: INFO: observed Pod pod-test in namespace pods-2221 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC  }]
Jan 31 18:22:32.280: INFO: Found Pod pod-test in namespace pods-2221 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:32 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data 01/31/23 18:22:32.288
STEP: getting the Pod and ensuring that it's patched 01/31/23 18:22:32.299
STEP: replacing the Pod's status Ready condition to False 01/31/23 18:22:32.304
STEP: check the Pod again to ensure its Ready conditions are False 01/31/23 18:22:32.318
STEP: deleting the Pod via a Collection with a LabelSelector 01/31/23 18:22:32.318
STEP: watching for the Pod to be deleted 01/31/23 18:22:32.329
Jan 31 18:22:32.332: INFO: observed event type MODIFIED
Jan 31 18:22:32.332: INFO: observed event type MODIFIED
Jan 31 18:22:35.460: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 31 18:22:35.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-2221" for this suite. 01/31/23 18:22:35.476
------------------------------
â€¢ [SLOW TEST] [5.320 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:22:30.163
    Jan 31 18:22:30.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename pods 01/31/23 18:22:30.163
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:22:30.18
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:22:30.186
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should run through the lifecycle of Pods and PodStatus [Conformance]
      test/e2e/common/node/pods.go:896
    STEP: creating a Pod with a static label 01/31/23 18:22:30.199
    STEP: watching for Pod to be ready 01/31/23 18:22:30.208
    Jan 31 18:22:30.213: INFO: observed Pod pod-test in namespace pods-2221 in phase Pending with labels: map[test-pod-static:true] & conditions []
    Jan 31 18:22:30.215: INFO: observed Pod pod-test in namespace pods-2221 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC  }]
    Jan 31 18:22:30.252: INFO: observed Pod pod-test in namespace pods-2221 in phase Pending with labels: map[test-pod-static:true] & conditions []
    Jan 31 18:22:30.257: INFO: observed Pod pod-test in namespace pods-2221 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC  }]
    Jan 31 18:22:32.280: INFO: Found Pod pod-test in namespace pods-2221 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:32 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-31 18:22:30 +0000 UTC  }]
    STEP: patching the Pod with a new Label and updated data 01/31/23 18:22:32.288
    STEP: getting the Pod and ensuring that it's patched 01/31/23 18:22:32.299
    STEP: replacing the Pod's status Ready condition to False 01/31/23 18:22:32.304
    STEP: check the Pod again to ensure its Ready conditions are False 01/31/23 18:22:32.318
    STEP: deleting the Pod via a Collection with a LabelSelector 01/31/23 18:22:32.318
    STEP: watching for the Pod to be deleted 01/31/23 18:22:32.329
    Jan 31 18:22:32.332: INFO: observed event type MODIFIED
    Jan 31 18:22:32.332: INFO: observed event type MODIFIED
    Jan 31 18:22:35.460: INFO: observed event type MODIFIED
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:22:35.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-2221" for this suite. 01/31/23 18:22:35.476
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:22:35.483
Jan 31 18:22:35.483: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename replicaset 01/31/23 18:22:35.484
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:22:35.5
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:22:35.507
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 01/31/23 18:22:35.512
Jan 31 18:22:35.525: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 31 18:22:40.537: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/31/23 18:22:40.537
STEP: getting scale subresource 01/31/23 18:22:40.537
STEP: updating a scale subresource 01/31/23 18:22:40.546
STEP: verifying the replicaset Spec.Replicas was modified 01/31/23 18:22:40.556
STEP: Patch a scale subresource 01/31/23 18:22:40.564
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 31 18:22:40.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-8409" for this suite. 01/31/23 18:22:40.601
------------------------------
â€¢ [SLOW TEST] [5.131 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:22:35.483
    Jan 31 18:22:35.483: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename replicaset 01/31/23 18:22:35.484
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:22:35.5
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:22:35.507
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replicaset should have a working scale subresource [Conformance]
      test/e2e/apps/replica_set.go:143
    STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 01/31/23 18:22:35.512
    Jan 31 18:22:35.525: INFO: Pod name sample-pod: Found 0 pods out of 1
    Jan 31 18:22:40.537: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/31/23 18:22:40.537
    STEP: getting scale subresource 01/31/23 18:22:40.537
    STEP: updating a scale subresource 01/31/23 18:22:40.546
    STEP: verifying the replicaset Spec.Replicas was modified 01/31/23 18:22:40.556
    STEP: Patch a scale subresource 01/31/23 18:22:40.564
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:22:40.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-8409" for this suite. 01/31/23 18:22:40.601
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:22:40.615
Jan 31 18:22:40.615: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename statefulset 01/31/23 18:22:40.616
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:22:40.647
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:22:40.663
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-3544 01/31/23 18:22:40.671
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
STEP: Looking for a node to schedule stateful set and pod 01/31/23 18:22:40.69
STEP: Creating pod with conflicting port in namespace statefulset-3544 01/31/23 18:22:40.697
STEP: Waiting until pod test-pod will start running in namespace statefulset-3544 01/31/23 18:22:40.715
Jan 31 18:22:40.715: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-3544" to be "running"
Jan 31 18:22:40.721: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.054585ms
Jan 31 18:22:42.728: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.012612416s
Jan 31 18:22:42.728: INFO: Pod "test-pod" satisfied condition "running"
STEP: Creating statefulset with conflicting port in namespace statefulset-3544 01/31/23 18:22:42.728
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3544 01/31/23 18:22:42.735
Jan 31 18:22:42.757: INFO: Observed stateful pod in namespace: statefulset-3544, name: ss-0, uid: ad6cc428-2a05-4648-9b29-69dfe72095c8, status phase: Pending. Waiting for statefulset controller to delete.
Jan 31 18:22:42.792: INFO: Observed stateful pod in namespace: statefulset-3544, name: ss-0, uid: ad6cc428-2a05-4648-9b29-69dfe72095c8, status phase: Pending. Waiting for statefulset controller to delete.
Jan 31 18:22:42.833: INFO: Observed stateful pod in namespace: statefulset-3544, name: ss-0, uid: ad6cc428-2a05-4648-9b29-69dfe72095c8, status phase: Failed. Waiting for statefulset controller to delete.
Jan 31 18:22:42.848: INFO: Observed stateful pod in namespace: statefulset-3544, name: ss-0, uid: ad6cc428-2a05-4648-9b29-69dfe72095c8, status phase: Failed. Waiting for statefulset controller to delete.
Jan 31 18:22:42.853: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-3544
STEP: Removing pod with conflicting port in namespace statefulset-3544 01/31/23 18:22:42.853
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3544 and will be in running state 01/31/23 18:22:42.868
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 31 18:23:09.020: INFO: Deleting all statefulset in ns statefulset-3544
Jan 31 18:23:09.030: INFO: Scaling statefulset ss to 0
Jan 31 18:23:19.068: INFO: Waiting for statefulset status.replicas updated to 0
Jan 31 18:23:19.075: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 31 18:23:19.102: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-3544" for this suite. 01/31/23 18:23:19.109
------------------------------
â€¢ [SLOW TEST] [38.504 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Should recreate evicted statefulset [Conformance]
    test/e2e/apps/statefulset.go:739

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:22:40.615
    Jan 31 18:22:40.615: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename statefulset 01/31/23 18:22:40.616
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:22:40.647
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:22:40.663
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-3544 01/31/23 18:22:40.671
    [It] Should recreate evicted statefulset [Conformance]
      test/e2e/apps/statefulset.go:739
    STEP: Looking for a node to schedule stateful set and pod 01/31/23 18:22:40.69
    STEP: Creating pod with conflicting port in namespace statefulset-3544 01/31/23 18:22:40.697
    STEP: Waiting until pod test-pod will start running in namespace statefulset-3544 01/31/23 18:22:40.715
    Jan 31 18:22:40.715: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-3544" to be "running"
    Jan 31 18:22:40.721: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.054585ms
    Jan 31 18:22:42.728: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.012612416s
    Jan 31 18:22:42.728: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Creating statefulset with conflicting port in namespace statefulset-3544 01/31/23 18:22:42.728
    STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3544 01/31/23 18:22:42.735
    Jan 31 18:22:42.757: INFO: Observed stateful pod in namespace: statefulset-3544, name: ss-0, uid: ad6cc428-2a05-4648-9b29-69dfe72095c8, status phase: Pending. Waiting for statefulset controller to delete.
    Jan 31 18:22:42.792: INFO: Observed stateful pod in namespace: statefulset-3544, name: ss-0, uid: ad6cc428-2a05-4648-9b29-69dfe72095c8, status phase: Pending. Waiting for statefulset controller to delete.
    Jan 31 18:22:42.833: INFO: Observed stateful pod in namespace: statefulset-3544, name: ss-0, uid: ad6cc428-2a05-4648-9b29-69dfe72095c8, status phase: Failed. Waiting for statefulset controller to delete.
    Jan 31 18:22:42.848: INFO: Observed stateful pod in namespace: statefulset-3544, name: ss-0, uid: ad6cc428-2a05-4648-9b29-69dfe72095c8, status phase: Failed. Waiting for statefulset controller to delete.
    Jan 31 18:22:42.853: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-3544
    STEP: Removing pod with conflicting port in namespace statefulset-3544 01/31/23 18:22:42.853
    STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3544 and will be in running state 01/31/23 18:22:42.868
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 31 18:23:09.020: INFO: Deleting all statefulset in ns statefulset-3544
    Jan 31 18:23:09.030: INFO: Scaling statefulset ss to 0
    Jan 31 18:23:19.068: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 31 18:23:19.075: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:23:19.102: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-3544" for this suite. 01/31/23 18:23:19.109
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:23:19.12
Jan 31 18:23:19.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename var-expansion 01/31/23 18:23:19.121
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:19.155
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:19.174
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
STEP: Creating a pod to test substitution in container's command 01/31/23 18:23:19.183
Jan 31 18:23:19.192: INFO: Waiting up to 5m0s for pod "var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc" in namespace "var-expansion-9146" to be "Succeeded or Failed"
Jan 31 18:23:19.201: INFO: Pod "var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc": Phase="Pending", Reason="", readiness=false. Elapsed: 8.996376ms
Jan 31 18:23:21.211: INFO: Pod "var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018288555s
Jan 31 18:23:23.212: INFO: Pod "var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019665823s
STEP: Saw pod success 01/31/23 18:23:23.212
Jan 31 18:23:23.212: INFO: Pod "var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc" satisfied condition "Succeeded or Failed"
Jan 31 18:23:23.221: INFO: Trying to get logs from node 26-m02 pod var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc container dapi-container: <nil>
STEP: delete the pod 01/31/23 18:23:23.256
Jan 31 18:23:23.280: INFO: Waiting for pod var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc to disappear
Jan 31 18:23:23.288: INFO: Pod var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 31 18:23:23.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-9146" for this suite. 01/31/23 18:23:23.298
------------------------------
â€¢ [4.189 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:23:19.12
    Jan 31 18:23:19.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename var-expansion 01/31/23 18:23:19.121
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:19.155
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:19.174
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's command [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:73
    STEP: Creating a pod to test substitution in container's command 01/31/23 18:23:19.183
    Jan 31 18:23:19.192: INFO: Waiting up to 5m0s for pod "var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc" in namespace "var-expansion-9146" to be "Succeeded or Failed"
    Jan 31 18:23:19.201: INFO: Pod "var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc": Phase="Pending", Reason="", readiness=false. Elapsed: 8.996376ms
    Jan 31 18:23:21.211: INFO: Pod "var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018288555s
    Jan 31 18:23:23.212: INFO: Pod "var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019665823s
    STEP: Saw pod success 01/31/23 18:23:23.212
    Jan 31 18:23:23.212: INFO: Pod "var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc" satisfied condition "Succeeded or Failed"
    Jan 31 18:23:23.221: INFO: Trying to get logs from node 26-m02 pod var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc container dapi-container: <nil>
    STEP: delete the pod 01/31/23 18:23:23.256
    Jan 31 18:23:23.280: INFO: Waiting for pod var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc to disappear
    Jan 31 18:23:23.288: INFO: Pod var-expansion-a2068ac1-b844-45ef-a45b-e833589104cc no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:23:23.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-9146" for this suite. 01/31/23 18:23:23.298
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:23:23.312
Jan 31 18:23:23.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename deployment 01/31/23 18:23:23.312
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:23.329
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:23.335
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
STEP: creating a Deployment 01/31/23 18:23:23.346
Jan 31 18:23:23.346: INFO: Creating simple deployment test-deployment-b9ttr
Jan 31 18:23:23.363: INFO: new replicaset for deployment "test-deployment-b9ttr" is yet to be created
Jan 31 18:23:25.392: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 18, 23, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 23, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 18, 23, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 23, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-b9ttr-54bc444df\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Getting /status 01/31/23 18:23:27.404
Jan 31 18:23:27.411: INFO: Deployment test-deployment-b9ttr has Conditions: [{Available True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b9ttr-54bc444df" has successfully progressed.}]
STEP: updating Deployment Status 01/31/23 18:23:27.411
Jan 31 18:23:27.428: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 18, 23, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 23, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 18, 23, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 23, 23, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-b9ttr-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated 01/31/23 18:23:27.428
Jan 31 18:23:27.434: INFO: Observed &Deployment event: ADDED
Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b9ttr-54bc444df"}
Jan 31 18:23:27.434: INFO: Observed &Deployment event: MODIFIED
Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b9ttr-54bc444df"}
Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 31 18:23:27.434: INFO: Observed &Deployment event: MODIFIED
Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-b9ttr-54bc444df" is progressing.}
Jan 31 18:23:27.434: INFO: Observed &Deployment event: MODIFIED
Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 31 18:23:27.435: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b9ttr-54bc444df" has successfully progressed.}
Jan 31 18:23:27.435: INFO: Observed &Deployment event: MODIFIED
Jan 31 18:23:27.435: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 31 18:23:27.435: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b9ttr-54bc444df" has successfully progressed.}
Jan 31 18:23:27.435: INFO: Found Deployment test-deployment-b9ttr in namespace deployment-3649 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 31 18:23:27.435: INFO: Deployment test-deployment-b9ttr has an updated status
STEP: patching the Statefulset Status 01/31/23 18:23:27.435
Jan 31 18:23:27.435: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 31 18:23:27.444: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched 01/31/23 18:23:27.444
Jan 31 18:23:27.449: INFO: Observed &Deployment event: ADDED
Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b9ttr-54bc444df"}
Jan 31 18:23:27.449: INFO: Observed &Deployment event: MODIFIED
Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b9ttr-54bc444df"}
Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 31 18:23:27.449: INFO: Observed &Deployment event: MODIFIED
Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-b9ttr-54bc444df" is progressing.}
Jan 31 18:23:27.449: INFO: Observed &Deployment event: MODIFIED
Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b9ttr-54bc444df" has successfully progressed.}
Jan 31 18:23:27.449: INFO: Observed &Deployment event: MODIFIED
Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 31 18:23:27.450: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b9ttr-54bc444df" has successfully progressed.}
Jan 31 18:23:27.450: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 31 18:23:27.450: INFO: Observed &Deployment event: MODIFIED
Jan 31 18:23:27.450: INFO: Found deployment test-deployment-b9ttr in namespace deployment-3649 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Jan 31 18:23:27.450: INFO: Deployment test-deployment-b9ttr has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 31 18:23:27.455: INFO: Deployment "test-deployment-b9ttr":
&Deployment{ObjectMeta:{test-deployment-b9ttr  deployment-3649  5c301342-4bcb-4167-acef-12a70b985ac5 21593 1 2023-01-31 18:23:23 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-01-31 18:23:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {k3s Update apps/v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0047ab028 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-b9ttr-54bc444df",LastUpdateTime:2023-01-31 18:23:27 +0000 UTC,LastTransitionTime:2023-01-31 18:23:27 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 31 18:23:27.462: INFO: New ReplicaSet "test-deployment-b9ttr-54bc444df" of Deployment "test-deployment-b9ttr":
&ReplicaSet{ObjectMeta:{test-deployment-b9ttr-54bc444df  deployment-3649  f365f6de-2be5-462e-8d8c-3daa8ad9b31e 21589 1 2023-01-31 18:23:23 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-b9ttr 5c301342-4bcb-4167-acef-12a70b985ac5 0xc0047ab410 0xc0047ab411}] [] [{k3s Update apps/v1 2023-01-31 18:23:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5c301342-4bcb-4167-acef-12a70b985ac5\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 18:23:25 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0047ab4c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 31 18:23:27.468: INFO: Pod "test-deployment-b9ttr-54bc444df-pggn5" is available:
&Pod{ObjectMeta:{test-deployment-b9ttr-54bc444df-pggn5 test-deployment-b9ttr-54bc444df- deployment-3649  90f942c5-2144-4669-b075-553c8775a9d9 21588 0 2023-01-31 18:23:23 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [{apps/v1 ReplicaSet test-deployment-b9ttr-54bc444df f365f6de-2be5-462e-8d8c-3daa8ad9b31e 0xc0047ab880 0xc0047ab881}] [] [{k3s Update v1 2023-01-31 18:23:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f365f6de-2be5-462e-8d8c-3daa8ad9b31e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 18:23:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.205\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fbknc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fbknc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:23:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:23:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:23:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:23:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.205,StartTime:2023-01-31 18:23:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 18:23:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://dcd97f5ef957a4d4f4479cc23f42355ba7b31cbd9dd7b413a172b9bf8c3b5928,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.205,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 31 18:23:27.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-3649" for this suite. 01/31/23 18:23:27.473
------------------------------
â€¢ [4.172 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:23:23.312
    Jan 31 18:23:23.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename deployment 01/31/23 18:23:23.312
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:23.329
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:23.335
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should validate Deployment Status endpoints [Conformance]
      test/e2e/apps/deployment.go:479
    STEP: creating a Deployment 01/31/23 18:23:23.346
    Jan 31 18:23:23.346: INFO: Creating simple deployment test-deployment-b9ttr
    Jan 31 18:23:23.363: INFO: new replicaset for deployment "test-deployment-b9ttr" is yet to be created
    Jan 31 18:23:25.392: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 31, 18, 23, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 23, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 18, 23, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 23, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-b9ttr-54bc444df\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Getting /status 01/31/23 18:23:27.404
    Jan 31 18:23:27.411: INFO: Deployment test-deployment-b9ttr has Conditions: [{Available True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b9ttr-54bc444df" has successfully progressed.}]
    STEP: updating Deployment Status 01/31/23 18:23:27.411
    Jan 31 18:23:27.428: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 18, 23, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 23, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 31, 18, 23, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 31, 18, 23, 23, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-b9ttr-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Deployment status to be updated 01/31/23 18:23:27.428
    Jan 31 18:23:27.434: INFO: Observed &Deployment event: ADDED
    Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b9ttr-54bc444df"}
    Jan 31 18:23:27.434: INFO: Observed &Deployment event: MODIFIED
    Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b9ttr-54bc444df"}
    Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Jan 31 18:23:27.434: INFO: Observed &Deployment event: MODIFIED
    Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-b9ttr-54bc444df" is progressing.}
    Jan 31 18:23:27.434: INFO: Observed &Deployment event: MODIFIED
    Jan 31 18:23:27.434: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Jan 31 18:23:27.435: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b9ttr-54bc444df" has successfully progressed.}
    Jan 31 18:23:27.435: INFO: Observed &Deployment event: MODIFIED
    Jan 31 18:23:27.435: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Jan 31 18:23:27.435: INFO: Observed Deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b9ttr-54bc444df" has successfully progressed.}
    Jan 31 18:23:27.435: INFO: Found Deployment test-deployment-b9ttr in namespace deployment-3649 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Jan 31 18:23:27.435: INFO: Deployment test-deployment-b9ttr has an updated status
    STEP: patching the Statefulset Status 01/31/23 18:23:27.435
    Jan 31 18:23:27.435: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Jan 31 18:23:27.444: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Deployment status to be patched 01/31/23 18:23:27.444
    Jan 31 18:23:27.449: INFO: Observed &Deployment event: ADDED
    Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b9ttr-54bc444df"}
    Jan 31 18:23:27.449: INFO: Observed &Deployment event: MODIFIED
    Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b9ttr-54bc444df"}
    Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Jan 31 18:23:27.449: INFO: Observed &Deployment event: MODIFIED
    Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:23 +0000 UTC 2023-01-31 18:23:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-b9ttr-54bc444df" is progressing.}
    Jan 31 18:23:27.449: INFO: Observed &Deployment event: MODIFIED
    Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b9ttr-54bc444df" has successfully progressed.}
    Jan 31 18:23:27.449: INFO: Observed &Deployment event: MODIFIED
    Jan 31 18:23:27.449: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Jan 31 18:23:27.450: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-31 18:23:25 +0000 UTC 2023-01-31 18:23:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b9ttr-54bc444df" has successfully progressed.}
    Jan 31 18:23:27.450: INFO: Observed deployment test-deployment-b9ttr in namespace deployment-3649 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Jan 31 18:23:27.450: INFO: Observed &Deployment event: MODIFIED
    Jan 31 18:23:27.450: INFO: Found deployment test-deployment-b9ttr in namespace deployment-3649 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
    Jan 31 18:23:27.450: INFO: Deployment test-deployment-b9ttr has a patched status
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 31 18:23:27.455: INFO: Deployment "test-deployment-b9ttr":
    &Deployment{ObjectMeta:{test-deployment-b9ttr  deployment-3649  5c301342-4bcb-4167-acef-12a70b985ac5 21593 1 2023-01-31 18:23:23 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-01-31 18:23:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {k3s Update apps/v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0047ab028 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-b9ttr-54bc444df",LastUpdateTime:2023-01-31 18:23:27 +0000 UTC,LastTransitionTime:2023-01-31 18:23:27 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Jan 31 18:23:27.462: INFO: New ReplicaSet "test-deployment-b9ttr-54bc444df" of Deployment "test-deployment-b9ttr":
    &ReplicaSet{ObjectMeta:{test-deployment-b9ttr-54bc444df  deployment-3649  f365f6de-2be5-462e-8d8c-3daa8ad9b31e 21589 1 2023-01-31 18:23:23 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-b9ttr 5c301342-4bcb-4167-acef-12a70b985ac5 0xc0047ab410 0xc0047ab411}] [] [{k3s Update apps/v1 2023-01-31 18:23:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5c301342-4bcb-4167-acef-12a70b985ac5\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {k3s Update apps/v1 2023-01-31 18:23:25 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0047ab4c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Jan 31 18:23:27.468: INFO: Pod "test-deployment-b9ttr-54bc444df-pggn5" is available:
    &Pod{ObjectMeta:{test-deployment-b9ttr-54bc444df-pggn5 test-deployment-b9ttr-54bc444df- deployment-3649  90f942c5-2144-4669-b075-553c8775a9d9 21588 0 2023-01-31 18:23:23 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [{apps/v1 ReplicaSet test-deployment-b9ttr-54bc444df f365f6de-2be5-462e-8d8c-3daa8ad9b31e 0xc0047ab880 0xc0047ab881}] [] [{k3s Update v1 2023-01-31 18:23:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f365f6de-2be5-462e-8d8c-3daa8ad9b31e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {vcluster Update v1 2023-01-31 18:23:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.205\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fbknc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fbknc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:26-m02,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:23:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:23:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:23:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-31 18:23:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.61.148,PodIP:10.244.1.205,StartTime:2023-01-31 18:23:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-31 18:23:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:docker://dcd97f5ef957a4d4f4479cc23f42355ba7b31cbd9dd7b413a172b9bf8c3b5928,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.205,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:23:27.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-3649" for this suite. 01/31/23 18:23:27.473
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] Services
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:23:27.484
Jan 31 18:23:27.484: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename services 01/31/23 18:23:27.485
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:27.501
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:27.51
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
STEP: creating a Service 01/31/23 18:23:27.522
STEP: watching for the Service to be added 01/31/23 18:23:27.572
Jan 31 18:23:27.578: INFO: Found Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Jan 31 18:23:27.578: INFO: Service test-service-h2mns created
STEP: Getting /status 01/31/23 18:23:27.578
Jan 31 18:23:27.584: INFO: Service test-service-h2mns has LoadBalancer: {[]}
STEP: patching the ServiceStatus 01/31/23 18:23:27.584
STEP: watching for the Service to be patched 01/31/23 18:23:27.592
Jan 31 18:23:27.595: INFO: observed Service test-service-h2mns in namespace services-1517 with annotations: map[] & LoadBalancer: {[]}
Jan 31 18:23:27.596: INFO: Found Service test-service-h2mns in namespace services-1517 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Jan 31 18:23:27.596: INFO: Service test-service-h2mns has service status patched
STEP: updating the ServiceStatus 01/31/23 18:23:27.596
Jan 31 18:23:27.610: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated 01/31/23 18:23:27.61
Jan 31 18:23:27.613: INFO: Observed Service test-service-h2mns in namespace services-1517 with annotations: map[] & Conditions: {[]}
Jan 31 18:23:27.613: INFO: Observed event: &Service{ObjectMeta:{test-service-h2mns  services-1517  bf572bb5-f50e-4829-a27f-a50cbdac7d7b 21601 0 2023-01-31 18:23:27 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status} {vcluster Update v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:clusterIP":{},"f:clusterIPs":{},"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} }]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.101.126.72,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.101.126.72],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Jan 31 18:23:27.613: INFO: Observed event: &Service{ObjectMeta:{test-service-h2mns  services-1517  bf572bb5-f50e-4829-a27f-a50cbdac7d7b 21602 0 2023-01-31 18:23:27 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}}} status} {vcluster Update v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:clusterIP":{},"f:clusterIPs":{},"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} }]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.101.126.72,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.101.126.72],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{},},Conditions:[]Condition{},},}
Jan 31 18:23:27.613: INFO: Found Service test-service-h2mns in namespace services-1517 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 31 18:23:27.613: INFO: Service test-service-h2mns has service status updated
STEP: patching the service 01/31/23 18:23:27.613
STEP: watching for the Service to be patched 01/31/23 18:23:27.624
Jan 31 18:23:27.627: INFO: observed Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true]
Jan 31 18:23:27.627: INFO: observed Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true]
Jan 31 18:23:27.627: INFO: observed Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true]
Jan 31 18:23:27.627: INFO: observed Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true]
Jan 31 18:23:27.627: INFO: observed Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true]
Jan 31 18:23:27.627: INFO: Found Service test-service-h2mns in namespace services-1517 with labels: map[test-service:patched test-service-static:true]
Jan 31 18:23:27.627: INFO: Service test-service-h2mns patched
STEP: deleting the service 01/31/23 18:23:27.627
STEP: watching for the Service to be deleted 01/31/23 18:23:27.645
Jan 31 18:23:27.648: INFO: Observed event: ADDED
Jan 31 18:23:27.648: INFO: Observed event: MODIFIED
Jan 31 18:23:27.648: INFO: Observed event: MODIFIED
Jan 31 18:23:27.648: INFO: Observed event: MODIFIED
Jan 31 18:23:27.648: INFO: Observed event: MODIFIED
Jan 31 18:23:27.648: INFO: Observed event: MODIFIED
Jan 31 18:23:27.648: INFO: Found Service test-service-h2mns in namespace services-1517 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Jan 31 18:23:27.648: INFO: Service test-service-h2mns deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 31 18:23:27.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-1517" for this suite. 01/31/23 18:23:27.654
------------------------------
â€¢ [0.178 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:23:27.484
    Jan 31 18:23:27.484: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename services 01/31/23 18:23:27.485
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:27.501
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:27.51
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should complete a service status lifecycle [Conformance]
      test/e2e/network/service.go:3428
    STEP: creating a Service 01/31/23 18:23:27.522
    STEP: watching for the Service to be added 01/31/23 18:23:27.572
    Jan 31 18:23:27.578: INFO: Found Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
    Jan 31 18:23:27.578: INFO: Service test-service-h2mns created
    STEP: Getting /status 01/31/23 18:23:27.578
    Jan 31 18:23:27.584: INFO: Service test-service-h2mns has LoadBalancer: {[]}
    STEP: patching the ServiceStatus 01/31/23 18:23:27.584
    STEP: watching for the Service to be patched 01/31/23 18:23:27.592
    Jan 31 18:23:27.595: INFO: observed Service test-service-h2mns in namespace services-1517 with annotations: map[] & LoadBalancer: {[]}
    Jan 31 18:23:27.596: INFO: Found Service test-service-h2mns in namespace services-1517 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
    Jan 31 18:23:27.596: INFO: Service test-service-h2mns has service status patched
    STEP: updating the ServiceStatus 01/31/23 18:23:27.596
    Jan 31 18:23:27.610: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Service to be updated 01/31/23 18:23:27.61
    Jan 31 18:23:27.613: INFO: Observed Service test-service-h2mns in namespace services-1517 with annotations: map[] & Conditions: {[]}
    Jan 31 18:23:27.613: INFO: Observed event: &Service{ObjectMeta:{test-service-h2mns  services-1517  bf572bb5-f50e-4829-a27f-a50cbdac7d7b 21601 0 2023-01-31 18:23:27 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status} {vcluster Update v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:clusterIP":{},"f:clusterIPs":{},"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} }]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.101.126.72,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.101.126.72],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
    Jan 31 18:23:27.613: INFO: Observed event: &Service{ObjectMeta:{test-service-h2mns  services-1517  bf572bb5-f50e-4829-a27f-a50cbdac7d7b 21602 0 2023-01-31 18:23:27 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}}} status} {vcluster Update v1 2023-01-31 18:23:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:clusterIP":{},"f:clusterIPs":{},"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} }]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.101.126.72,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.101.126.72],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{},},Conditions:[]Condition{},},}
    Jan 31 18:23:27.613: INFO: Found Service test-service-h2mns in namespace services-1517 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Jan 31 18:23:27.613: INFO: Service test-service-h2mns has service status updated
    STEP: patching the service 01/31/23 18:23:27.613
    STEP: watching for the Service to be patched 01/31/23 18:23:27.624
    Jan 31 18:23:27.627: INFO: observed Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true]
    Jan 31 18:23:27.627: INFO: observed Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true]
    Jan 31 18:23:27.627: INFO: observed Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true]
    Jan 31 18:23:27.627: INFO: observed Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true]
    Jan 31 18:23:27.627: INFO: observed Service test-service-h2mns in namespace services-1517 with labels: map[test-service-static:true]
    Jan 31 18:23:27.627: INFO: Found Service test-service-h2mns in namespace services-1517 with labels: map[test-service:patched test-service-static:true]
    Jan 31 18:23:27.627: INFO: Service test-service-h2mns patched
    STEP: deleting the service 01/31/23 18:23:27.627
    STEP: watching for the Service to be deleted 01/31/23 18:23:27.645
    Jan 31 18:23:27.648: INFO: Observed event: ADDED
    Jan 31 18:23:27.648: INFO: Observed event: MODIFIED
    Jan 31 18:23:27.648: INFO: Observed event: MODIFIED
    Jan 31 18:23:27.648: INFO: Observed event: MODIFIED
    Jan 31 18:23:27.648: INFO: Observed event: MODIFIED
    Jan 31 18:23:27.648: INFO: Observed event: MODIFIED
    Jan 31 18:23:27.648: INFO: Found Service test-service-h2mns in namespace services-1517 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
    Jan 31 18:23:27.648: INFO: Service test-service-h2mns deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:23:27.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-1517" for this suite. 01/31/23 18:23:27.654
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:23:27.663
Jan 31 18:23:27.663: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename gc 01/31/23 18:23:27.664
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:27.682
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:27.689
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
STEP: create the rc1 01/31/23 18:23:27.701
STEP: create the rc2 01/31/23 18:23:27.708
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 01/31/23 18:23:32.739
STEP: delete the rc simpletest-rc-to-be-deleted 01/31/23 18:23:34.655
STEP: wait for the rc to be deleted 01/31/23 18:23:34.719
Jan 31 18:23:39.791: INFO: 72 pods remaining
Jan 31 18:23:39.791: INFO: 72 pods has nil DeletionTimestamp
Jan 31 18:23:39.791: INFO: 
STEP: Gathering metrics 01/31/23 18:23:44.762
W0131 18:23:44.774668      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jan 31 18:23:44.774: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Jan 31 18:23:44.774: INFO: Deleting pod "simpletest-rc-to-be-deleted-l62qz" in namespace "gc-296"
Jan 31 18:23:44.796: INFO: Deleting pod "simpletest-rc-to-be-deleted-jlvfg" in namespace "gc-296"
Jan 31 18:23:44.821: INFO: Deleting pod "simpletest-rc-to-be-deleted-lvrfj" in namespace "gc-296"
Jan 31 18:23:44.850: INFO: Deleting pod "simpletest-rc-to-be-deleted-hcpgh" in namespace "gc-296"
Jan 31 18:23:44.875: INFO: Deleting pod "simpletest-rc-to-be-deleted-rsx48" in namespace "gc-296"
Jan 31 18:23:44.901: INFO: Deleting pod "simpletest-rc-to-be-deleted-mf7p7" in namespace "gc-296"
Jan 31 18:23:44.929: INFO: Deleting pod "simpletest-rc-to-be-deleted-ndbxf" in namespace "gc-296"
Jan 31 18:23:45.000: INFO: Deleting pod "simpletest-rc-to-be-deleted-mwcpk" in namespace "gc-296"
Jan 31 18:23:45.034: INFO: Deleting pod "simpletest-rc-to-be-deleted-dp45w" in namespace "gc-296"
Jan 31 18:23:45.064: INFO: Deleting pod "simpletest-rc-to-be-deleted-jp2k2" in namespace "gc-296"
Jan 31 18:23:45.095: INFO: Deleting pod "simpletest-rc-to-be-deleted-m648n" in namespace "gc-296"
Jan 31 18:23:45.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-x8cpd" in namespace "gc-296"
Jan 31 18:23:45.143: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4zxn" in namespace "gc-296"
Jan 31 18:23:45.170: INFO: Deleting pod "simpletest-rc-to-be-deleted-7wp6c" in namespace "gc-296"
Jan 31 18:23:45.200: INFO: Deleting pod "simpletest-rc-to-be-deleted-7gvdf" in namespace "gc-296"
Jan 31 18:23:45.223: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvw24" in namespace "gc-296"
Jan 31 18:23:45.254: INFO: Deleting pod "simpletest-rc-to-be-deleted-khx5b" in namespace "gc-296"
Jan 31 18:23:45.284: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xhkw" in namespace "gc-296"
Jan 31 18:23:45.312: INFO: Deleting pod "simpletest-rc-to-be-deleted-7jw7c" in namespace "gc-296"
Jan 31 18:23:45.336: INFO: Deleting pod "simpletest-rc-to-be-deleted-jfbb7" in namespace "gc-296"
Jan 31 18:23:45.357: INFO: Deleting pod "simpletest-rc-to-be-deleted-r8lqv" in namespace "gc-296"
Jan 31 18:23:45.378: INFO: Deleting pod "simpletest-rc-to-be-deleted-r5vmh" in namespace "gc-296"
Jan 31 18:23:45.402: INFO: Deleting pod "simpletest-rc-to-be-deleted-4w8zx" in namespace "gc-296"
Jan 31 18:23:45.427: INFO: Deleting pod "simpletest-rc-to-be-deleted-hpd45" in namespace "gc-296"
Jan 31 18:23:45.483: INFO: Deleting pod "simpletest-rc-to-be-deleted-svxg2" in namespace "gc-296"
Jan 31 18:23:45.504: INFO: Deleting pod "simpletest-rc-to-be-deleted-4ckk8" in namespace "gc-296"
Jan 31 18:23:45.534: INFO: Deleting pod "simpletest-rc-to-be-deleted-j5tq5" in namespace "gc-296"
Jan 31 18:23:45.579: INFO: Deleting pod "simpletest-rc-to-be-deleted-r2mwf" in namespace "gc-296"
Jan 31 18:23:45.608: INFO: Deleting pod "simpletest-rc-to-be-deleted-nrr2p" in namespace "gc-296"
Jan 31 18:23:45.633: INFO: Deleting pod "simpletest-rc-to-be-deleted-brszv" in namespace "gc-296"
Jan 31 18:23:45.672: INFO: Deleting pod "simpletest-rc-to-be-deleted-2blxc" in namespace "gc-296"
Jan 31 18:23:45.701: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jk6g" in namespace "gc-296"
Jan 31 18:23:45.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-766mq" in namespace "gc-296"
Jan 31 18:23:45.749: INFO: Deleting pod "simpletest-rc-to-be-deleted-5b56f" in namespace "gc-296"
Jan 31 18:23:45.784: INFO: Deleting pod "simpletest-rc-to-be-deleted-7zrvk" in namespace "gc-296"
Jan 31 18:23:45.808: INFO: Deleting pod "simpletest-rc-to-be-deleted-58s7c" in namespace "gc-296"
Jan 31 18:23:45.879: INFO: Deleting pod "simpletest-rc-to-be-deleted-97j8m" in namespace "gc-296"
Jan 31 18:23:45.910: INFO: Deleting pod "simpletest-rc-to-be-deleted-pggp7" in namespace "gc-296"
Jan 31 18:23:45.935: INFO: Deleting pod "simpletest-rc-to-be-deleted-zglhc" in namespace "gc-296"
Jan 31 18:23:45.956: INFO: Deleting pod "simpletest-rc-to-be-deleted-28j95" in namespace "gc-296"
Jan 31 18:23:45.978: INFO: Deleting pod "simpletest-rc-to-be-deleted-nczs4" in namespace "gc-296"
Jan 31 18:23:46.004: INFO: Deleting pod "simpletest-rc-to-be-deleted-jzc6b" in namespace "gc-296"
Jan 31 18:23:46.033: INFO: Deleting pod "simpletest-rc-to-be-deleted-tmbgd" in namespace "gc-296"
Jan 31 18:23:46.060: INFO: Deleting pod "simpletest-rc-to-be-deleted-b8ndp" in namespace "gc-296"
Jan 31 18:23:46.080: INFO: Deleting pod "simpletest-rc-to-be-deleted-9vl9k" in namespace "gc-296"
Jan 31 18:23:46.116: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqh5v" in namespace "gc-296"
Jan 31 18:23:46.147: INFO: Deleting pod "simpletest-rc-to-be-deleted-9jggj" in namespace "gc-296"
Jan 31 18:23:46.194: INFO: Deleting pod "simpletest-rc-to-be-deleted-w72pj" in namespace "gc-296"
Jan 31 18:23:46.227: INFO: Deleting pod "simpletest-rc-to-be-deleted-jdtc7" in namespace "gc-296"
Jan 31 18:23:46.257: INFO: Deleting pod "simpletest-rc-to-be-deleted-8v6m8" in namespace "gc-296"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 31 18:23:46.276: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-296" for this suite. 01/31/23 18:23:46.289
------------------------------
â€¢ [SLOW TEST] [18.664 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:23:27.663
    Jan 31 18:23:27.663: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename gc 01/31/23 18:23:27.664
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:27.682
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:27.689
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
      test/e2e/apimachinery/garbage_collector.go:735
    STEP: create the rc1 01/31/23 18:23:27.701
    STEP: create the rc2 01/31/23 18:23:27.708
    STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 01/31/23 18:23:32.739
    STEP: delete the rc simpletest-rc-to-be-deleted 01/31/23 18:23:34.655
    STEP: wait for the rc to be deleted 01/31/23 18:23:34.719
    Jan 31 18:23:39.791: INFO: 72 pods remaining
    Jan 31 18:23:39.791: INFO: 72 pods has nil DeletionTimestamp
    Jan 31 18:23:39.791: INFO: 
    STEP: Gathering metrics 01/31/23 18:23:44.762
    W0131 18:23:44.774668      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Jan 31 18:23:44.774: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Jan 31 18:23:44.774: INFO: Deleting pod "simpletest-rc-to-be-deleted-l62qz" in namespace "gc-296"
    Jan 31 18:23:44.796: INFO: Deleting pod "simpletest-rc-to-be-deleted-jlvfg" in namespace "gc-296"
    Jan 31 18:23:44.821: INFO: Deleting pod "simpletest-rc-to-be-deleted-lvrfj" in namespace "gc-296"
    Jan 31 18:23:44.850: INFO: Deleting pod "simpletest-rc-to-be-deleted-hcpgh" in namespace "gc-296"
    Jan 31 18:23:44.875: INFO: Deleting pod "simpletest-rc-to-be-deleted-rsx48" in namespace "gc-296"
    Jan 31 18:23:44.901: INFO: Deleting pod "simpletest-rc-to-be-deleted-mf7p7" in namespace "gc-296"
    Jan 31 18:23:44.929: INFO: Deleting pod "simpletest-rc-to-be-deleted-ndbxf" in namespace "gc-296"
    Jan 31 18:23:45.000: INFO: Deleting pod "simpletest-rc-to-be-deleted-mwcpk" in namespace "gc-296"
    Jan 31 18:23:45.034: INFO: Deleting pod "simpletest-rc-to-be-deleted-dp45w" in namespace "gc-296"
    Jan 31 18:23:45.064: INFO: Deleting pod "simpletest-rc-to-be-deleted-jp2k2" in namespace "gc-296"
    Jan 31 18:23:45.095: INFO: Deleting pod "simpletest-rc-to-be-deleted-m648n" in namespace "gc-296"
    Jan 31 18:23:45.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-x8cpd" in namespace "gc-296"
    Jan 31 18:23:45.143: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4zxn" in namespace "gc-296"
    Jan 31 18:23:45.170: INFO: Deleting pod "simpletest-rc-to-be-deleted-7wp6c" in namespace "gc-296"
    Jan 31 18:23:45.200: INFO: Deleting pod "simpletest-rc-to-be-deleted-7gvdf" in namespace "gc-296"
    Jan 31 18:23:45.223: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvw24" in namespace "gc-296"
    Jan 31 18:23:45.254: INFO: Deleting pod "simpletest-rc-to-be-deleted-khx5b" in namespace "gc-296"
    Jan 31 18:23:45.284: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xhkw" in namespace "gc-296"
    Jan 31 18:23:45.312: INFO: Deleting pod "simpletest-rc-to-be-deleted-7jw7c" in namespace "gc-296"
    Jan 31 18:23:45.336: INFO: Deleting pod "simpletest-rc-to-be-deleted-jfbb7" in namespace "gc-296"
    Jan 31 18:23:45.357: INFO: Deleting pod "simpletest-rc-to-be-deleted-r8lqv" in namespace "gc-296"
    Jan 31 18:23:45.378: INFO: Deleting pod "simpletest-rc-to-be-deleted-r5vmh" in namespace "gc-296"
    Jan 31 18:23:45.402: INFO: Deleting pod "simpletest-rc-to-be-deleted-4w8zx" in namespace "gc-296"
    Jan 31 18:23:45.427: INFO: Deleting pod "simpletest-rc-to-be-deleted-hpd45" in namespace "gc-296"
    Jan 31 18:23:45.483: INFO: Deleting pod "simpletest-rc-to-be-deleted-svxg2" in namespace "gc-296"
    Jan 31 18:23:45.504: INFO: Deleting pod "simpletest-rc-to-be-deleted-4ckk8" in namespace "gc-296"
    Jan 31 18:23:45.534: INFO: Deleting pod "simpletest-rc-to-be-deleted-j5tq5" in namespace "gc-296"
    Jan 31 18:23:45.579: INFO: Deleting pod "simpletest-rc-to-be-deleted-r2mwf" in namespace "gc-296"
    Jan 31 18:23:45.608: INFO: Deleting pod "simpletest-rc-to-be-deleted-nrr2p" in namespace "gc-296"
    Jan 31 18:23:45.633: INFO: Deleting pod "simpletest-rc-to-be-deleted-brszv" in namespace "gc-296"
    Jan 31 18:23:45.672: INFO: Deleting pod "simpletest-rc-to-be-deleted-2blxc" in namespace "gc-296"
    Jan 31 18:23:45.701: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jk6g" in namespace "gc-296"
    Jan 31 18:23:45.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-766mq" in namespace "gc-296"
    Jan 31 18:23:45.749: INFO: Deleting pod "simpletest-rc-to-be-deleted-5b56f" in namespace "gc-296"
    Jan 31 18:23:45.784: INFO: Deleting pod "simpletest-rc-to-be-deleted-7zrvk" in namespace "gc-296"
    Jan 31 18:23:45.808: INFO: Deleting pod "simpletest-rc-to-be-deleted-58s7c" in namespace "gc-296"
    Jan 31 18:23:45.879: INFO: Deleting pod "simpletest-rc-to-be-deleted-97j8m" in namespace "gc-296"
    Jan 31 18:23:45.910: INFO: Deleting pod "simpletest-rc-to-be-deleted-pggp7" in namespace "gc-296"
    Jan 31 18:23:45.935: INFO: Deleting pod "simpletest-rc-to-be-deleted-zglhc" in namespace "gc-296"
    Jan 31 18:23:45.956: INFO: Deleting pod "simpletest-rc-to-be-deleted-28j95" in namespace "gc-296"
    Jan 31 18:23:45.978: INFO: Deleting pod "simpletest-rc-to-be-deleted-nczs4" in namespace "gc-296"
    Jan 31 18:23:46.004: INFO: Deleting pod "simpletest-rc-to-be-deleted-jzc6b" in namespace "gc-296"
    Jan 31 18:23:46.033: INFO: Deleting pod "simpletest-rc-to-be-deleted-tmbgd" in namespace "gc-296"
    Jan 31 18:23:46.060: INFO: Deleting pod "simpletest-rc-to-be-deleted-b8ndp" in namespace "gc-296"
    Jan 31 18:23:46.080: INFO: Deleting pod "simpletest-rc-to-be-deleted-9vl9k" in namespace "gc-296"
    Jan 31 18:23:46.116: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqh5v" in namespace "gc-296"
    Jan 31 18:23:46.147: INFO: Deleting pod "simpletest-rc-to-be-deleted-9jggj" in namespace "gc-296"
    Jan 31 18:23:46.194: INFO: Deleting pod "simpletest-rc-to-be-deleted-w72pj" in namespace "gc-296"
    Jan 31 18:23:46.227: INFO: Deleting pod "simpletest-rc-to-be-deleted-jdtc7" in namespace "gc-296"
    Jan 31 18:23:46.257: INFO: Deleting pod "simpletest-rc-to-be-deleted-8v6m8" in namespace "gc-296"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:23:46.276: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-296" for this suite. 01/31/23 18:23:46.289
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:23:46.328
Jan 31 18:23:46.328: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 18:23:46.329
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:46.39
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:46.424
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
STEP: Creating projection with secret that has name projected-secret-test-759e8c0e-f2c6-4647-92bd-a2e36e2cf6fa 01/31/23 18:23:46.458
STEP: Creating a pod to test consume secrets 01/31/23 18:23:46.484
Jan 31 18:23:46.514: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79" in namespace "projected-4864" to be "Succeeded or Failed"
Jan 31 18:23:46.532: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Pending", Reason="", readiness=false. Elapsed: 17.691921ms
Jan 31 18:23:48.542: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027704862s
Jan 31 18:23:50.545: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Pending", Reason="", readiness=false. Elapsed: 4.030982516s
Jan 31 18:23:52.542: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Pending", Reason="", readiness=false. Elapsed: 6.027991248s
Jan 31 18:23:54.543: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Pending", Reason="", readiness=false. Elapsed: 8.028721631s
Jan 31 18:23:56.546: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.031686092s
STEP: Saw pod success 01/31/23 18:23:56.546
Jan 31 18:23:56.546: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79" satisfied condition "Succeeded or Failed"
Jan 31 18:23:56.556: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79 container projected-secret-volume-test: <nil>
STEP: delete the pod 01/31/23 18:23:56.577
Jan 31 18:23:56.597: INFO: Waiting for pod pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79 to disappear
Jan 31 18:23:56.609: INFO: Pod pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 31 18:23:56.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4864" for this suite. 01/31/23 18:23:56.618
------------------------------
â€¢ [SLOW TEST] [10.299 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:23:46.328
    Jan 31 18:23:46.328: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 18:23:46.329
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:46.39
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:46.424
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:56
    STEP: Creating projection with secret that has name projected-secret-test-759e8c0e-f2c6-4647-92bd-a2e36e2cf6fa 01/31/23 18:23:46.458
    STEP: Creating a pod to test consume secrets 01/31/23 18:23:46.484
    Jan 31 18:23:46.514: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79" in namespace "projected-4864" to be "Succeeded or Failed"
    Jan 31 18:23:46.532: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Pending", Reason="", readiness=false. Elapsed: 17.691921ms
    Jan 31 18:23:48.542: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027704862s
    Jan 31 18:23:50.545: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Pending", Reason="", readiness=false. Elapsed: 4.030982516s
    Jan 31 18:23:52.542: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Pending", Reason="", readiness=false. Elapsed: 6.027991248s
    Jan 31 18:23:54.543: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Pending", Reason="", readiness=false. Elapsed: 8.028721631s
    Jan 31 18:23:56.546: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.031686092s
    STEP: Saw pod success 01/31/23 18:23:56.546
    Jan 31 18:23:56.546: INFO: Pod "pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79" satisfied condition "Succeeded or Failed"
    Jan 31 18:23:56.556: INFO: Trying to get logs from node 26-m02 pod pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79 container projected-secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 18:23:56.577
    Jan 31 18:23:56.597: INFO: Waiting for pod pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79 to disappear
    Jan 31 18:23:56.609: INFO: Pod pod-projected-secrets-80ca01df-3f8f-4ed6-ac7c-b2ad93faed79 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:23:56.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4864" for this suite. 01/31/23 18:23:56.618
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:23:56.63
Jan 31 18:23:56.630: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename configmap 01/31/23 18:23:56.631
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:56.648
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:56.654
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
STEP: Creating configMap with name configmap-test-upd-42fdd25b-3270-41c4-b3d0-b0cccc19c770 01/31/23 18:23:56.668
STEP: Creating the pod 01/31/23 18:23:56.674
Jan 31 18:23:56.685: INFO: Waiting up to 5m0s for pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3" in namespace "configmap-8852" to be "running"
Jan 31 18:23:56.694: INFO: Pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3": Phase="Pending", Reason="", readiness=false. Elapsed: 8.128117ms
Jan 31 18:23:58.703: INFO: Pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017351803s
Jan 31 18:24:00.701: INFO: Pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01588208s
Jan 31 18:24:02.706: INFO: Pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3": Phase="Running", Reason="", readiness=false. Elapsed: 6.020852836s
Jan 31 18:24:02.706: INFO: Pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3" satisfied condition "running"
STEP: Waiting for pod with text data 01/31/23 18:24:02.706
STEP: Waiting for pod with binary data 01/31/23 18:24:02.719
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 31 18:24:02.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8852" for this suite. 01/31/23 18:24:02.736
------------------------------
â€¢ [SLOW TEST] [6.114 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:23:56.63
    Jan 31 18:23:56.630: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename configmap 01/31/23 18:23:56.631
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:23:56.648
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:23:56.654
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] binary data should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:175
    STEP: Creating configMap with name configmap-test-upd-42fdd25b-3270-41c4-b3d0-b0cccc19c770 01/31/23 18:23:56.668
    STEP: Creating the pod 01/31/23 18:23:56.674
    Jan 31 18:23:56.685: INFO: Waiting up to 5m0s for pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3" in namespace "configmap-8852" to be "running"
    Jan 31 18:23:56.694: INFO: Pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3": Phase="Pending", Reason="", readiness=false. Elapsed: 8.128117ms
    Jan 31 18:23:58.703: INFO: Pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017351803s
    Jan 31 18:24:00.701: INFO: Pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01588208s
    Jan 31 18:24:02.706: INFO: Pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3": Phase="Running", Reason="", readiness=false. Elapsed: 6.020852836s
    Jan 31 18:24:02.706: INFO: Pod "pod-configmaps-a8dafc71-1af4-4427-8fa9-3ce5f58f08c3" satisfied condition "running"
    STEP: Waiting for pod with text data 01/31/23 18:24:02.706
    STEP: Waiting for pod with binary data 01/31/23 18:24:02.719
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:24:02.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8852" for this suite. 01/31/23 18:24:02.736
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:24:02.745
Jan 31 18:24:02.745: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename secrets 01/31/23 18:24:02.746
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:24:02.765
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:24:02.773
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
STEP: Creating secret with name secret-test-cb0a25ce-e93c-4a00-bab7-2148d6471f16 01/31/23 18:24:02.781
STEP: Creating a pod to test consume secrets 01/31/23 18:24:02.789
Jan 31 18:24:02.802: INFO: Waiting up to 5m0s for pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4" in namespace "secrets-9691" to be "Succeeded or Failed"
Jan 31 18:24:02.809: INFO: Pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4": Phase="Pending", Reason="", readiness=false. Elapsed: 7.663423ms
Jan 31 18:24:04.818: INFO: Pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015942728s
Jan 31 18:24:06.817: INFO: Pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015559772s
Jan 31 18:24:08.820: INFO: Pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017962651s
STEP: Saw pod success 01/31/23 18:24:08.82
Jan 31 18:24:08.820: INFO: Pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4" satisfied condition "Succeeded or Failed"
Jan 31 18:24:08.826: INFO: Trying to get logs from node 26 pod pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4 container secret-volume-test: <nil>
STEP: delete the pod 01/31/23 18:24:08.844
Jan 31 18:24:08.856: INFO: Waiting for pod pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4 to disappear
Jan 31 18:24:08.866: INFO: Pod pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 31 18:24:08.866: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-9691" for this suite. 01/31/23 18:24:08.874
------------------------------
â€¢ [SLOW TEST] [6.140 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:24:02.745
    Jan 31 18:24:02.745: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename secrets 01/31/23 18:24:02.746
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:24:02.765
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:24:02.773
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:47
    STEP: Creating secret with name secret-test-cb0a25ce-e93c-4a00-bab7-2148d6471f16 01/31/23 18:24:02.781
    STEP: Creating a pod to test consume secrets 01/31/23 18:24:02.789
    Jan 31 18:24:02.802: INFO: Waiting up to 5m0s for pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4" in namespace "secrets-9691" to be "Succeeded or Failed"
    Jan 31 18:24:02.809: INFO: Pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4": Phase="Pending", Reason="", readiness=false. Elapsed: 7.663423ms
    Jan 31 18:24:04.818: INFO: Pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015942728s
    Jan 31 18:24:06.817: INFO: Pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015559772s
    Jan 31 18:24:08.820: INFO: Pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017962651s
    STEP: Saw pod success 01/31/23 18:24:08.82
    Jan 31 18:24:08.820: INFO: Pod "pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4" satisfied condition "Succeeded or Failed"
    Jan 31 18:24:08.826: INFO: Trying to get logs from node 26 pod pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4 container secret-volume-test: <nil>
    STEP: delete the pod 01/31/23 18:24:08.844
    Jan 31 18:24:08.856: INFO: Waiting for pod pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4 to disappear
    Jan 31 18:24:08.866: INFO: Pod pod-secrets-59a4866a-43c4-41f9-b91c-f9a7323ad6e4 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:24:08.866: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-9691" for this suite. 01/31/23 18:24:08.874
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:24:08.886
Jan 31 18:24:08.887: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename svcaccounts 01/31/23 18:24:08.887
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:24:08.905
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:24:08.911
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
Jan 31 18:24:08.931: INFO: created pod
Jan 31 18:24:08.931: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-3963" to be "Succeeded or Failed"
Jan 31 18:24:08.938: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 7.040731ms
Jan 31 18:24:10.944: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013388637s
Jan 31 18:24:12.950: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018968616s
Jan 31 18:24:14.954: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.023152814s
STEP: Saw pod success 01/31/23 18:24:14.954
Jan 31 18:24:14.954: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Jan 31 18:24:44.957: INFO: polling logs
Jan 31 18:24:44.974: INFO: Pod logs: 
I0131 18:24:10.061034       1 log.go:198] OK: Got token
I0131 18:24:10.061082       1 log.go:198] validating with in-cluster discovery
I0131 18:24:10.061365       1 log.go:198] OK: got issuer https://kubernetes.default.svc.cluster.local
I0131 18:24:10.061397       1 log.go:198] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-3963:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1990549448, NotBefore:1675189448, IssuedAt:1675189448, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3963", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9097c52b-8e8d-45f4-a5e0-4a6504678f64"}}}
I0131 18:24:10.071295       1 log.go:198] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
I0131 18:24:10.074605       1 log.go:198] OK: Validated signature on JWT
I0131 18:24:10.074733       1 log.go:198] OK: Got valid claims from token!
I0131 18:24:10.074765       1 log.go:198] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-3963:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1990549448, NotBefore:1675189448, IssuedAt:1675189448, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3963", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9097c52b-8e8d-45f4-a5e0-4a6504678f64"}}}

Jan 31 18:24:44.974: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 31 18:24:44.981: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-3963" for this suite. 01/31/23 18:24:44.99
------------------------------
â€¢ [SLOW TEST] [36.114 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:24:08.886
    Jan 31 18:24:08.887: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename svcaccounts 01/31/23 18:24:08.887
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:24:08.905
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:24:08.911
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
      test/e2e/auth/service_accounts.go:531
    Jan 31 18:24:08.931: INFO: created pod
    Jan 31 18:24:08.931: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-3963" to be "Succeeded or Failed"
    Jan 31 18:24:08.938: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 7.040731ms
    Jan 31 18:24:10.944: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013388637s
    Jan 31 18:24:12.950: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018968616s
    Jan 31 18:24:14.954: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.023152814s
    STEP: Saw pod success 01/31/23 18:24:14.954
    Jan 31 18:24:14.954: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
    Jan 31 18:24:44.957: INFO: polling logs
    Jan 31 18:24:44.974: INFO: Pod logs: 
    I0131 18:24:10.061034       1 log.go:198] OK: Got token
    I0131 18:24:10.061082       1 log.go:198] validating with in-cluster discovery
    I0131 18:24:10.061365       1 log.go:198] OK: got issuer https://kubernetes.default.svc.cluster.local
    I0131 18:24:10.061397       1 log.go:198] Full, not-validated claims: 
    openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-3963:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1990549448, NotBefore:1675189448, IssuedAt:1675189448, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3963", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9097c52b-8e8d-45f4-a5e0-4a6504678f64"}}}
    I0131 18:24:10.071295       1 log.go:198] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
    I0131 18:24:10.074605       1 log.go:198] OK: Validated signature on JWT
    I0131 18:24:10.074733       1 log.go:198] OK: Got valid claims from token!
    I0131 18:24:10.074765       1 log.go:198] Full, validated claims: 
    &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-3963:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1990549448, NotBefore:1675189448, IssuedAt:1675189448, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3963", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9097c52b-8e8d-45f4-a5e0-4a6504678f64"}}}

    Jan 31 18:24:44.974: INFO: completed pod
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:24:44.981: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-3963" for this suite. 01/31/23 18:24:44.99
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:24:45.007
Jan 31 18:24:45.007: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename projected 01/31/23 18:24:45.008
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:24:45.029
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:24:45.036
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
STEP: Creating configMap with name projected-configmap-test-volume-map-8b399e6f-d272-4abb-9ec4-a6109ecead31 01/31/23 18:24:45.043
STEP: Creating a pod to test consume configMaps 01/31/23 18:24:45.049
Jan 31 18:24:45.060: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333" in namespace "projected-1134" to be "Succeeded or Failed"
Jan 31 18:24:45.068: INFO: Pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333": Phase="Pending", Reason="", readiness=false. Elapsed: 7.247272ms
Jan 31 18:24:47.078: INFO: Pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017649993s
Jan 31 18:24:49.077: INFO: Pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333": Phase="Pending", Reason="", readiness=false. Elapsed: 4.016709437s
Jan 31 18:24:51.083: INFO: Pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022318398s
STEP: Saw pod success 01/31/23 18:24:51.083
Jan 31 18:24:51.083: INFO: Pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333" satisfied condition "Succeeded or Failed"
Jan 31 18:24:51.093: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333 container agnhost-container: <nil>
STEP: delete the pod 01/31/23 18:24:51.112
Jan 31 18:24:51.125: INFO: Waiting for pod pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333 to disappear
Jan 31 18:24:51.131: INFO: Pod pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 31 18:24:51.131: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1134" for this suite. 01/31/23 18:24:51.136
------------------------------
â€¢ [SLOW TEST] [6.137 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:24:45.007
    Jan 31 18:24:45.007: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename projected 01/31/23 18:24:45.008
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:24:45.029
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:24:45.036
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:89
    STEP: Creating configMap with name projected-configmap-test-volume-map-8b399e6f-d272-4abb-9ec4-a6109ecead31 01/31/23 18:24:45.043
    STEP: Creating a pod to test consume configMaps 01/31/23 18:24:45.049
    Jan 31 18:24:45.060: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333" in namespace "projected-1134" to be "Succeeded or Failed"
    Jan 31 18:24:45.068: INFO: Pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333": Phase="Pending", Reason="", readiness=false. Elapsed: 7.247272ms
    Jan 31 18:24:47.078: INFO: Pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017649993s
    Jan 31 18:24:49.077: INFO: Pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333": Phase="Pending", Reason="", readiness=false. Elapsed: 4.016709437s
    Jan 31 18:24:51.083: INFO: Pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022318398s
    STEP: Saw pod success 01/31/23 18:24:51.083
    Jan 31 18:24:51.083: INFO: Pod "pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333" satisfied condition "Succeeded or Failed"
    Jan 31 18:24:51.093: INFO: Trying to get logs from node 26-m02 pod pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333 container agnhost-container: <nil>
    STEP: delete the pod 01/31/23 18:24:51.112
    Jan 31 18:24:51.125: INFO: Waiting for pod pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333 to disappear
    Jan 31 18:24:51.131: INFO: Pod pod-projected-configmaps-ffc8caba-6afd-47eb-a6cf-b205b2be9333 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:24:51.131: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1134" for this suite. 01/31/23 18:24:51.136
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
[BeforeEach] [sig-node] PreStop
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:24:51.145
Jan 31 18:24:51.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename prestop 01/31/23 18:24:51.146
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:24:51.164
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:24:51.17
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
STEP: Creating server pod server in namespace prestop-5537 01/31/23 18:24:51.176
STEP: Waiting for pods to come up. 01/31/23 18:24:51.185
Jan 31 18:24:51.185: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-5537" to be "running"
Jan 31 18:24:51.190: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 5.772932ms
Jan 31 18:24:53.199: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 2.014019537s
Jan 31 18:24:53.199: INFO: Pod "server" satisfied condition "running"
STEP: Creating tester pod tester in namespace prestop-5537 01/31/23 18:24:53.208
Jan 31 18:24:53.216: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-5537" to be "running"
Jan 31 18:24:53.224: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 7.706685ms
Jan 31 18:24:55.234: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 2.017945017s
Jan 31 18:24:55.235: INFO: Pod "tester" satisfied condition "running"
STEP: Deleting pre-stop pod 01/31/23 18:24:55.235
Jan 31 18:25:00.266: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod 01/31/23 18:25:00.266
[AfterEach] [sig-node] PreStop
  test/e2e/framework/node/init/init.go:32
Jan 31 18:25:00.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PreStop
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PreStop
  tear down framework | framework.go:193
STEP: Destroying namespace "prestop-5537" for this suite. 01/31/23 18:25:00.3
------------------------------
â€¢ [SLOW TEST] [9.166 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PreStop
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:24:51.145
    Jan 31 18:24:51.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename prestop 01/31/23 18:24:51.146
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:24:51.164
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:24:51.17
    [BeforeEach] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] PreStop
      test/e2e/node/pre_stop.go:159
    [It] should call prestop when killing a pod  [Conformance]
      test/e2e/node/pre_stop.go:168
    STEP: Creating server pod server in namespace prestop-5537 01/31/23 18:24:51.176
    STEP: Waiting for pods to come up. 01/31/23 18:24:51.185
    Jan 31 18:24:51.185: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-5537" to be "running"
    Jan 31 18:24:51.190: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 5.772932ms
    Jan 31 18:24:53.199: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 2.014019537s
    Jan 31 18:24:53.199: INFO: Pod "server" satisfied condition "running"
    STEP: Creating tester pod tester in namespace prestop-5537 01/31/23 18:24:53.208
    Jan 31 18:24:53.216: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-5537" to be "running"
    Jan 31 18:24:53.224: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 7.706685ms
    Jan 31 18:24:55.234: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 2.017945017s
    Jan 31 18:24:55.235: INFO: Pod "tester" satisfied condition "running"
    STEP: Deleting pre-stop pod 01/31/23 18:24:55.235
    Jan 31 18:25:00.266: INFO: Saw: {
    	"Hostname": "server",
    	"Sent": null,
    	"Received": {
    		"prestop": 1
    	},
    	"Errors": null,
    	"Log": [
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
    	],
    	"StillContactingPeers": true
    }
    STEP: Deleting the server pod 01/31/23 18:25:00.266
    [AfterEach] [sig-node] PreStop
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:25:00.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PreStop
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PreStop
      tear down framework | framework.go:193
    STEP: Destroying namespace "prestop-5537" for this suite. 01/31/23 18:25:00.3
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:25:00.311
Jan 31 18:25:00.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename sched-pred 01/31/23 18:25:00.312
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:25:00.335
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:25:00.343
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Jan 31 18:25:00.350: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 31 18:25:00.362: INFO: Waiting for terminating namespaces to be deleted...
Jan 31 18:25:00.368: INFO: 
Logging pods the apiserver thinks is on node 26 before test
Jan 31 18:25:00.375: INFO: coredns-56bfc489cf-8ptdd from kube-system started at 2023-01-31 16:39:52 +0000 UTC (1 container statuses recorded)
Jan 31 18:25:00.375: INFO: 	Container coredns ready: true, restart count 0
Jan 31 18:25:00.375: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 18:25:00.375: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 18:25:00.375: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 31 18:25:00.375: INFO: sonobuoy-e2e-job-1f36c7afce724735 from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 18:25:00.375: INFO: 	Container e2e ready: true, restart count 0
Jan 31 18:25:00.375: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 18:25:00.375: INFO: 
Logging pods the apiserver thinks is on node 26-m02 before test
Jan 31 18:25:00.382: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-2s64n from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
Jan 31 18:25:00.382: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 31 18:25:00.382: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 31 18:25:00.382: INFO: tester from prestop-5537 started at 2023-01-31 18:24:53 +0000 UTC (1 container statuses recorded)
Jan 31 18:25:00.382: INFO: 	Container tester ready: true, restart count 0
Jan 31 18:25:00.382: INFO: sonobuoy from sonobuoy started at 2023-01-31 16:39:57 +0000 UTC (1 container statuses recorded)
Jan 31 18:25:00.382: INFO: 	Container kube-sonobuoy ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
STEP: Trying to launch a pod without a label to get a node which can launch it. 01/31/23 18:25:00.382
Jan 31 18:25:00.392: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-3006" to be "running"
Jan 31 18:25:00.400: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 7.835731ms
Jan 31 18:25:02.411: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018381551s
Jan 31 18:25:04.411: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 4.018390034s
Jan 31 18:25:04.411: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 01/31/23 18:25:04.421
STEP: Trying to apply a random label on the found node. 01/31/23 18:25:04.45
STEP: verifying the node has the label kubernetes.io/e2e-f9899284-73dc-4d6e-8481-4ab47ab0adfd 95 01/31/23 18:25:04.468
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 01/31/23 18:25:04.475
Jan 31 18:25:04.483: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-3006" to be "not pending"
Jan 31 18:25:04.491: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 7.423538ms
Jan 31 18:25:06.505: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021843631s
Jan 31 18:25:08.501: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 4.017460131s
Jan 31 18:25:08.501: INFO: Pod "pod4" satisfied condition "not pending"
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.61.148 on the node which pod4 resides and expect not scheduled 01/31/23 18:25:08.501
Jan 31 18:25:08.537: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-3006" to be "not pending"
Jan 31 18:25:08.548: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.937425ms
Jan 31 18:25:10.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021291973s
Jan 31 18:25:12.565: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.027922846s
Jan 31 18:25:14.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.019363492s
Jan 31 18:25:16.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.020710194s
Jan 31 18:25:18.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.026741129s
Jan 31 18:25:20.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.020258103s
Jan 31 18:25:22.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.022936009s
Jan 31 18:25:24.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.025336498s
Jan 31 18:25:26.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.023078925s
Jan 31 18:25:28.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.022442153s
Jan 31 18:25:30.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.021611835s
Jan 31 18:25:32.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.022294823s
Jan 31 18:25:34.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.022816605s
Jan 31 18:25:36.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.021884797s
Jan 31 18:25:38.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.021872826s
Jan 31 18:25:40.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.024532053s
Jan 31 18:25:42.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.018300585s
Jan 31 18:25:44.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.022415129s
Jan 31 18:25:46.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.026850732s
Jan 31 18:25:48.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.021543612s
Jan 31 18:25:50.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.021083376s
Jan 31 18:25:52.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.026867304s
Jan 31 18:25:54.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.020564936s
Jan 31 18:25:56.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.021869735s
Jan 31 18:25:58.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.026459957s
Jan 31 18:26:00.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.020348355s
Jan 31 18:26:02.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.021451774s
Jan 31 18:26:04.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.025927693s
Jan 31 18:26:06.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.018000501s
Jan 31 18:26:08.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.022426096s
Jan 31 18:26:10.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.021620661s
Jan 31 18:26:12.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.022429213s
Jan 31 18:26:14.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.018694702s
Jan 31 18:26:16.566: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.029307466s
Jan 31 18:26:18.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.017582793s
Jan 31 18:26:20.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.020102161s
Jan 31 18:26:22.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.022783955s
Jan 31 18:26:24.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.022158307s
Jan 31 18:26:26.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.018621076s
Jan 31 18:26:28.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.026637741s
Jan 31 18:26:30.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.020248441s
Jan 31 18:26:32.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.020996024s
Jan 31 18:26:34.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.025915115s
Jan 31 18:26:36.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.021973337s
Jan 31 18:26:38.561: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.023743175s
Jan 31 18:26:40.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.020648029s
Jan 31 18:26:42.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.020233427s
Jan 31 18:26:44.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.020767209s
Jan 31 18:26:46.569: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.031947423s
Jan 31 18:26:48.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.022285951s
Jan 31 18:26:50.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.018452977s
Jan 31 18:26:52.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.021131546s
Jan 31 18:26:54.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.023077566s
Jan 31 18:26:56.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.022328714s
Jan 31 18:26:58.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.025857362s
Jan 31 18:27:00.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.017476125s
Jan 31 18:27:02.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.020538711s
Jan 31 18:27:04.561: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.024197188s
Jan 31 18:27:06.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.019847606s
Jan 31 18:27:08.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.019945036s
Jan 31 18:27:10.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.021546287s
Jan 31 18:27:12.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.020527899s
Jan 31 18:27:14.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.021569365s
Jan 31 18:27:16.561: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.024363752s
Jan 31 18:27:18.561: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.023741588s
Jan 31 18:27:20.553: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.016284355s
Jan 31 18:27:22.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.025550735s
Jan 31 18:27:24.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.022507111s
Jan 31 18:27:26.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.021113873s
Jan 31 18:27:28.566: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.028817446s
Jan 31 18:27:30.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.021214329s
Jan 31 18:27:32.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.02108697s
Jan 31 18:27:34.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.027150007s
Jan 31 18:27:36.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.019989985s
Jan 31 18:27:38.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.022144415s
Jan 31 18:27:40.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.021440744s
Jan 31 18:27:42.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.019987718s
Jan 31 18:27:44.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.021410258s
Jan 31 18:27:46.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.019591749s
Jan 31 18:27:48.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.02211314s
Jan 31 18:27:50.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.024702658s
Jan 31 18:27:52.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.021779252s
Jan 31 18:27:54.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.023121343s
Jan 31 18:27:56.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.019291685s
Jan 31 18:27:58.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.022849126s
Jan 31 18:28:00.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.019120603s
Jan 31 18:28:02.565: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.027782115s
Jan 31 18:28:04.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.02125743s
Jan 31 18:28:06.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.020097789s
Jan 31 18:28:08.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.026584321s
Jan 31 18:28:10.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.019831362s
Jan 31 18:28:12.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.025449324s
Jan 31 18:28:14.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.026209455s
Jan 31 18:28:16.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.022502708s
Jan 31 18:28:18.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.019302151s
Jan 31 18:28:20.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.021901408s
Jan 31 18:28:22.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.021211997s
Jan 31 18:28:24.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.02010932s
Jan 31 18:28:26.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.026116976s
Jan 31 18:28:28.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.0265137s
Jan 31 18:28:30.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.021292307s
Jan 31 18:28:32.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.019659666s
Jan 31 18:28:34.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.020813462s
Jan 31 18:28:36.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.01915405s
Jan 31 18:28:38.565: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.027895003s
Jan 31 18:28:40.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.019441632s
Jan 31 18:28:42.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.018675719s
Jan 31 18:28:44.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.024988831s
Jan 31 18:28:46.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.021253009s
Jan 31 18:28:48.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.022336593s
Jan 31 18:28:50.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.021589269s
Jan 31 18:28:52.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.021467424s
Jan 31 18:28:54.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.022334488s
Jan 31 18:28:56.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.027397267s
Jan 31 18:28:58.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.021716019s
Jan 31 18:29:00.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.019205395s
Jan 31 18:29:02.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.024652838s
Jan 31 18:29:04.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.021305205s
Jan 31 18:29:06.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.020929562s
Jan 31 18:29:08.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.025213503s
Jan 31 18:29:10.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.021932849s
Jan 31 18:29:12.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.021569892s
Jan 31 18:29:14.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.024736893s
Jan 31 18:29:16.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.021702258s
Jan 31 18:29:18.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.022952247s
Jan 31 18:29:20.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.020075584s
Jan 31 18:29:22.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.02261302s
Jan 31 18:29:24.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.021769353s
Jan 31 18:29:26.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.021755684s
Jan 31 18:29:28.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.021303973s
Jan 31 18:29:30.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.018445917s
Jan 31 18:29:32.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.02020672s
Jan 31 18:29:34.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.020540822s
Jan 31 18:29:36.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.026501318s
Jan 31 18:29:38.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.021077829s
Jan 31 18:29:40.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.021961097s
Jan 31 18:29:42.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.025093639s
Jan 31 18:29:44.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.022734938s
Jan 31 18:29:46.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.021294491s
Jan 31 18:29:48.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.026161612s
Jan 31 18:29:50.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.019952915s
Jan 31 18:29:52.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.01985962s
Jan 31 18:29:54.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.026049075s
Jan 31 18:29:56.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.021380587s
Jan 31 18:29:58.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.022283566s
Jan 31 18:30:00.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.019775744s
Jan 31 18:30:02.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.022105585s
Jan 31 18:30:04.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.022098626s
Jan 31 18:30:06.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.025956193s
Jan 31 18:30:08.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.021271916s
Jan 31 18:30:08.568: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.030546792s
STEP: removing the label kubernetes.io/e2e-f9899284-73dc-4d6e-8481-4ab47ab0adfd off the node 26-m02 01/31/23 18:30:08.568
STEP: verifying the node doesn't have the label kubernetes.io/e2e-f9899284-73dc-4d6e-8481-4ab47ab0adfd 01/31/23 18:30:08.594
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:30:08.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-3006" for this suite. 01/31/23 18:30:08.615
------------------------------
â€¢ [SLOW TEST] [308.317 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:25:00.311
    Jan 31 18:25:00.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename sched-pred 01/31/23 18:25:00.312
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:25:00.335
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:25:00.343
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Jan 31 18:25:00.350: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Jan 31 18:25:00.362: INFO: Waiting for terminating namespaces to be deleted...
    Jan 31 18:25:00.368: INFO: 
    Logging pods the apiserver thinks is on node 26 before test
    Jan 31 18:25:00.375: INFO: coredns-56bfc489cf-8ptdd from kube-system started at 2023-01-31 16:39:52 +0000 UTC (1 container statuses recorded)
    Jan 31 18:25:00.375: INFO: 	Container coredns ready: true, restart count 0
    Jan 31 18:25:00.375: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-9ggzl from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 18:25:00.375: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 18:25:00.375: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 31 18:25:00.375: INFO: sonobuoy-e2e-job-1f36c7afce724735 from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 18:25:00.375: INFO: 	Container e2e ready: true, restart count 0
    Jan 31 18:25:00.375: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 18:25:00.375: INFO: 
    Logging pods the apiserver thinks is on node 26-m02 before test
    Jan 31 18:25:00.382: INFO: sonobuoy-systemd-logs-daemon-set-f734edb8850c4fa8-2s64n from sonobuoy started at 2023-01-31 16:39:58 +0000 UTC (2 container statuses recorded)
    Jan 31 18:25:00.382: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 31 18:25:00.382: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 31 18:25:00.382: INFO: tester from prestop-5537 started at 2023-01-31 18:24:53 +0000 UTC (1 container statuses recorded)
    Jan 31 18:25:00.382: INFO: 	Container tester ready: true, restart count 0
    Jan 31 18:25:00.382: INFO: sonobuoy from sonobuoy started at 2023-01-31 16:39:57 +0000 UTC (1 container statuses recorded)
    Jan 31 18:25:00.382: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    [It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
      test/e2e/scheduling/predicates.go:704
    STEP: Trying to launch a pod without a label to get a node which can launch it. 01/31/23 18:25:00.382
    Jan 31 18:25:00.392: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-3006" to be "running"
    Jan 31 18:25:00.400: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 7.835731ms
    Jan 31 18:25:02.411: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018381551s
    Jan 31 18:25:04.411: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 4.018390034s
    Jan 31 18:25:04.411: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 01/31/23 18:25:04.421
    STEP: Trying to apply a random label on the found node. 01/31/23 18:25:04.45
    STEP: verifying the node has the label kubernetes.io/e2e-f9899284-73dc-4d6e-8481-4ab47ab0adfd 95 01/31/23 18:25:04.468
    STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 01/31/23 18:25:04.475
    Jan 31 18:25:04.483: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-3006" to be "not pending"
    Jan 31 18:25:04.491: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 7.423538ms
    Jan 31 18:25:06.505: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021843631s
    Jan 31 18:25:08.501: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 4.017460131s
    Jan 31 18:25:08.501: INFO: Pod "pod4" satisfied condition "not pending"
    STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.61.148 on the node which pod4 resides and expect not scheduled 01/31/23 18:25:08.501
    Jan 31 18:25:08.537: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-3006" to be "not pending"
    Jan 31 18:25:08.548: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.937425ms
    Jan 31 18:25:10.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021291973s
    Jan 31 18:25:12.565: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.027922846s
    Jan 31 18:25:14.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.019363492s
    Jan 31 18:25:16.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.020710194s
    Jan 31 18:25:18.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.026741129s
    Jan 31 18:25:20.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.020258103s
    Jan 31 18:25:22.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.022936009s
    Jan 31 18:25:24.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.025336498s
    Jan 31 18:25:26.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.023078925s
    Jan 31 18:25:28.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.022442153s
    Jan 31 18:25:30.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.021611835s
    Jan 31 18:25:32.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.022294823s
    Jan 31 18:25:34.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.022816605s
    Jan 31 18:25:36.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.021884797s
    Jan 31 18:25:38.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.021872826s
    Jan 31 18:25:40.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.024532053s
    Jan 31 18:25:42.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.018300585s
    Jan 31 18:25:44.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.022415129s
    Jan 31 18:25:46.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.026850732s
    Jan 31 18:25:48.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.021543612s
    Jan 31 18:25:50.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.021083376s
    Jan 31 18:25:52.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.026867304s
    Jan 31 18:25:54.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.020564936s
    Jan 31 18:25:56.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.021869735s
    Jan 31 18:25:58.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.026459957s
    Jan 31 18:26:00.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.020348355s
    Jan 31 18:26:02.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.021451774s
    Jan 31 18:26:04.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.025927693s
    Jan 31 18:26:06.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.018000501s
    Jan 31 18:26:08.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.022426096s
    Jan 31 18:26:10.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.021620661s
    Jan 31 18:26:12.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.022429213s
    Jan 31 18:26:14.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.018694702s
    Jan 31 18:26:16.566: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.029307466s
    Jan 31 18:26:18.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.017582793s
    Jan 31 18:26:20.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.020102161s
    Jan 31 18:26:22.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.022783955s
    Jan 31 18:26:24.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.022158307s
    Jan 31 18:26:26.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.018621076s
    Jan 31 18:26:28.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.026637741s
    Jan 31 18:26:30.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.020248441s
    Jan 31 18:26:32.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.020996024s
    Jan 31 18:26:34.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.025915115s
    Jan 31 18:26:36.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.021973337s
    Jan 31 18:26:38.561: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.023743175s
    Jan 31 18:26:40.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.020648029s
    Jan 31 18:26:42.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.020233427s
    Jan 31 18:26:44.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.020767209s
    Jan 31 18:26:46.569: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.031947423s
    Jan 31 18:26:48.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.022285951s
    Jan 31 18:26:50.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.018452977s
    Jan 31 18:26:52.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.021131546s
    Jan 31 18:26:54.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.023077566s
    Jan 31 18:26:56.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.022328714s
    Jan 31 18:26:58.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.025857362s
    Jan 31 18:27:00.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.017476125s
    Jan 31 18:27:02.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.020538711s
    Jan 31 18:27:04.561: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.024197188s
    Jan 31 18:27:06.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.019847606s
    Jan 31 18:27:08.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.019945036s
    Jan 31 18:27:10.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.021546287s
    Jan 31 18:27:12.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.020527899s
    Jan 31 18:27:14.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.021569365s
    Jan 31 18:27:16.561: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.024363752s
    Jan 31 18:27:18.561: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.023741588s
    Jan 31 18:27:20.553: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.016284355s
    Jan 31 18:27:22.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.025550735s
    Jan 31 18:27:24.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.022507111s
    Jan 31 18:27:26.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.021113873s
    Jan 31 18:27:28.566: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.028817446s
    Jan 31 18:27:30.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.021214329s
    Jan 31 18:27:32.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.02108697s
    Jan 31 18:27:34.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.027150007s
    Jan 31 18:27:36.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.019989985s
    Jan 31 18:27:38.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.022144415s
    Jan 31 18:27:40.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.021440744s
    Jan 31 18:27:42.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.019987718s
    Jan 31 18:27:44.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.021410258s
    Jan 31 18:27:46.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.019591749s
    Jan 31 18:27:48.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.02211314s
    Jan 31 18:27:50.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.024702658s
    Jan 31 18:27:52.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.021779252s
    Jan 31 18:27:54.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.023121343s
    Jan 31 18:27:56.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.019291685s
    Jan 31 18:27:58.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.022849126s
    Jan 31 18:28:00.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.019120603s
    Jan 31 18:28:02.565: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.027782115s
    Jan 31 18:28:04.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.02125743s
    Jan 31 18:28:06.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.020097789s
    Jan 31 18:28:08.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.026584321s
    Jan 31 18:28:10.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.019831362s
    Jan 31 18:28:12.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.025449324s
    Jan 31 18:28:14.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.026209455s
    Jan 31 18:28:16.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.022502708s
    Jan 31 18:28:18.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.019302151s
    Jan 31 18:28:20.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.021901408s
    Jan 31 18:28:22.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.021211997s
    Jan 31 18:28:24.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.02010932s
    Jan 31 18:28:26.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.026116976s
    Jan 31 18:28:28.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.0265137s
    Jan 31 18:28:30.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.021292307s
    Jan 31 18:28:32.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.019659666s
    Jan 31 18:28:34.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.020813462s
    Jan 31 18:28:36.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.01915405s
    Jan 31 18:28:38.565: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.027895003s
    Jan 31 18:28:40.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.019441632s
    Jan 31 18:28:42.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.018675719s
    Jan 31 18:28:44.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.024988831s
    Jan 31 18:28:46.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.021253009s
    Jan 31 18:28:48.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.022336593s
    Jan 31 18:28:50.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.021589269s
    Jan 31 18:28:52.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.021467424s
    Jan 31 18:28:54.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.022334488s
    Jan 31 18:28:56.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.027397267s
    Jan 31 18:28:58.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.021716019s
    Jan 31 18:29:00.556: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.019205395s
    Jan 31 18:29:02.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.024652838s
    Jan 31 18:29:04.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.021305205s
    Jan 31 18:29:06.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.020929562s
    Jan 31 18:29:08.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.025213503s
    Jan 31 18:29:10.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.021932849s
    Jan 31 18:29:12.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.021569892s
    Jan 31 18:29:14.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.024736893s
    Jan 31 18:29:16.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.021702258s
    Jan 31 18:29:18.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.022952247s
    Jan 31 18:29:20.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.020075584s
    Jan 31 18:29:22.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.02261302s
    Jan 31 18:29:24.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.021769353s
    Jan 31 18:29:26.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.021755684s
    Jan 31 18:29:28.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.021303973s
    Jan 31 18:29:30.555: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.018445917s
    Jan 31 18:29:32.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.02020672s
    Jan 31 18:29:34.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.020540822s
    Jan 31 18:29:36.564: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.026501318s
    Jan 31 18:29:38.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.021077829s
    Jan 31 18:29:40.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.021961097s
    Jan 31 18:29:42.562: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.025093639s
    Jan 31 18:29:44.560: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.022734938s
    Jan 31 18:29:46.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.021294491s
    Jan 31 18:29:48.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.026161612s
    Jan 31 18:29:50.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.019952915s
    Jan 31 18:29:52.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.01985962s
    Jan 31 18:29:54.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.026049075s
    Jan 31 18:29:56.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.021380587s
    Jan 31 18:29:58.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.022283566s
    Jan 31 18:30:00.557: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.019775744s
    Jan 31 18:30:02.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.022105585s
    Jan 31 18:30:04.559: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.022098626s
    Jan 31 18:30:06.563: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.025956193s
    Jan 31 18:30:08.558: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.021271916s
    Jan 31 18:30:08.568: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.030546792s
    STEP: removing the label kubernetes.io/e2e-f9899284-73dc-4d6e-8481-4ab47ab0adfd off the node 26-m02 01/31/23 18:30:08.568
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-f9899284-73dc-4d6e-8481-4ab47ab0adfd 01/31/23 18:30:08.594
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:30:08.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-3006" for this suite. 01/31/23 18:30:08.615
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:30:08.63
Jan 31 18:30:08.630: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 18:30:08.631
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:30:08.647
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:30:08.655
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
Jan 31 18:30:08.668: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/31/23 18:30:10.186
Jan 31 18:30:10.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-6986 --namespace=crd-publish-openapi-6986 create -f -'
Jan 31 18:30:10.910: INFO: stderr: ""
Jan 31 18:30:10.910: INFO: stdout: "e2e-test-crd-publish-openapi-3702-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jan 31 18:30:10.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-6986 --namespace=crd-publish-openapi-6986 delete e2e-test-crd-publish-openapi-3702-crds test-cr'
Jan 31 18:30:11.003: INFO: stderr: ""
Jan 31 18:30:11.003: INFO: stdout: "e2e-test-crd-publish-openapi-3702-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Jan 31 18:30:11.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-6986 --namespace=crd-publish-openapi-6986 apply -f -'
Jan 31 18:30:11.265: INFO: stderr: ""
Jan 31 18:30:11.265: INFO: stdout: "e2e-test-crd-publish-openapi-3702-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jan 31 18:30:11.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-6986 --namespace=crd-publish-openapi-6986 delete e2e-test-crd-publish-openapi-3702-crds test-cr'
Jan 31 18:30:11.400: INFO: stderr: ""
Jan 31 18:30:11.400: INFO: stdout: "e2e-test-crd-publish-openapi-3702-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema 01/31/23 18:30:11.4
Jan 31 18:30:11.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-6986 explain e2e-test-crd-publish-openapi-3702-crds'
Jan 31 18:30:11.649: INFO: stderr: ""
Jan 31 18:30:11.649: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3702-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 31 18:30:13.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-6986" for this suite. 01/31/23 18:30:13.249
------------------------------
â€¢ [4.626 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:30:08.63
    Jan 31 18:30:08.630: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename crd-publish-openapi 01/31/23 18:30:08.631
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:30:08.647
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:30:08.655
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD without validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:153
    Jan 31 18:30:08.668: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/31/23 18:30:10.186
    Jan 31 18:30:10.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-6986 --namespace=crd-publish-openapi-6986 create -f -'
    Jan 31 18:30:10.910: INFO: stderr: ""
    Jan 31 18:30:10.910: INFO: stdout: "e2e-test-crd-publish-openapi-3702-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Jan 31 18:30:10.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-6986 --namespace=crd-publish-openapi-6986 delete e2e-test-crd-publish-openapi-3702-crds test-cr'
    Jan 31 18:30:11.003: INFO: stderr: ""
    Jan 31 18:30:11.003: INFO: stdout: "e2e-test-crd-publish-openapi-3702-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    Jan 31 18:30:11.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-6986 --namespace=crd-publish-openapi-6986 apply -f -'
    Jan 31 18:30:11.265: INFO: stderr: ""
    Jan 31 18:30:11.265: INFO: stdout: "e2e-test-crd-publish-openapi-3702-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Jan 31 18:30:11.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-6986 --namespace=crd-publish-openapi-6986 delete e2e-test-crd-publish-openapi-3702-crds test-cr'
    Jan 31 18:30:11.400: INFO: stderr: ""
    Jan 31 18:30:11.400: INFO: stdout: "e2e-test-crd-publish-openapi-3702-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR without validation schema 01/31/23 18:30:11.4
    Jan 31 18:30:11.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2489093203 --namespace=crd-publish-openapi-6986 explain e2e-test-crd-publish-openapi-3702-crds'
    Jan 31 18:30:11.649: INFO: stderr: ""
    Jan 31 18:30:11.649: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3702-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:30:13.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-6986" for this suite. 01/31/23 18:30:13.249
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] DNS
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:30:13.257
Jan 31 18:30:13.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename dns 01/31/23 18:30:13.258
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:30:13.287
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:30:13.295
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 01/31/23 18:30:13.308
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 01/31/23 18:30:13.308
STEP: creating a pod to probe DNS 01/31/23 18:30:13.308
STEP: submitting the pod to kubernetes 01/31/23 18:30:13.309
Jan 31 18:30:13.324: INFO: Waiting up to 15m0s for pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828" in namespace "dns-8906" to be "running"
Jan 31 18:30:13.332: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 7.59265ms
Jan 31 18:30:15.339: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015296647s
Jan 31 18:30:17.347: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022606697s
Jan 31 18:30:19.342: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 6.017496535s
Jan 31 18:30:21.340: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 8.015725207s
Jan 31 18:30:23.345: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 10.020910842s
Jan 31 18:30:25.344: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 12.019720589s
Jan 31 18:30:27.343: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 14.019149685s
Jan 31 18:30:29.345: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 16.020732383s
Jan 31 18:30:31.340: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 18.015699328s
Jan 31 18:30:33.343: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 20.018596496s
Jan 31 18:30:35.343: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 22.018447042s
Jan 31 18:30:37.343: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Running", Reason="", readiness=true. Elapsed: 24.018632757s
Jan 31 18:30:37.343: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828" satisfied condition "running"
STEP: retrieving the pod 01/31/23 18:30:37.343
STEP: looking for the results for each expected name from probers 01/31/23 18:30:37.352
Jan 31 18:30:37.399: INFO: DNS probes using dns-8906/dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828 succeeded

STEP: deleting the pod 01/31/23 18:30:37.399
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 31 18:30:37.424: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-8906" for this suite. 01/31/23 18:30:37.435
------------------------------
â€¢ [SLOW TEST] [24.188 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:30:13.257
    Jan 31 18:30:13.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename dns 01/31/23 18:30:13.258
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:30:13.287
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:30:13.295
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for the cluster  [Conformance]
      test/e2e/network/dns.go:50
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     01/31/23 18:30:13.308
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     01/31/23 18:30:13.308
    STEP: creating a pod to probe DNS 01/31/23 18:30:13.308
    STEP: submitting the pod to kubernetes 01/31/23 18:30:13.309
    Jan 31 18:30:13.324: INFO: Waiting up to 15m0s for pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828" in namespace "dns-8906" to be "running"
    Jan 31 18:30:13.332: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 7.59265ms
    Jan 31 18:30:15.339: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015296647s
    Jan 31 18:30:17.347: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022606697s
    Jan 31 18:30:19.342: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 6.017496535s
    Jan 31 18:30:21.340: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 8.015725207s
    Jan 31 18:30:23.345: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 10.020910842s
    Jan 31 18:30:25.344: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 12.019720589s
    Jan 31 18:30:27.343: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 14.019149685s
    Jan 31 18:30:29.345: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 16.020732383s
    Jan 31 18:30:31.340: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 18.015699328s
    Jan 31 18:30:33.343: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 20.018596496s
    Jan 31 18:30:35.343: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Pending", Reason="", readiness=false. Elapsed: 22.018447042s
    Jan 31 18:30:37.343: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828": Phase="Running", Reason="", readiness=true. Elapsed: 24.018632757s
    Jan 31 18:30:37.343: INFO: Pod "dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828" satisfied condition "running"
    STEP: retrieving the pod 01/31/23 18:30:37.343
    STEP: looking for the results for each expected name from probers 01/31/23 18:30:37.352
    Jan 31 18:30:37.399: INFO: DNS probes using dns-8906/dns-test-d50d2677-c2c9-4141-9fe4-28547c64d828 succeeded

    STEP: deleting the pod 01/31/23 18:30:37.399
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:30:37.424: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-8906" for this suite. 01/31/23 18:30:37.435
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/31/23 18:30:37.446
Jan 31 18:30:37.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
STEP: Building a namespace api object, basename emptydir 01/31/23 18:30:37.447
STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:30:37.468
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:30:37.476
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
STEP: Creating a pod to test emptydir 0644 on tmpfs 01/31/23 18:30:37.484
Jan 31 18:30:37.498: INFO: Waiting up to 5m0s for pod "pod-48c7484c-be01-43c9-b732-76ac4e6195bf" in namespace "emptydir-3750" to be "Succeeded or Failed"
Jan 31 18:30:37.507: INFO: Pod "pod-48c7484c-be01-43c9-b732-76ac4e6195bf": Phase="Pending", Reason="", readiness=false. Elapsed: 8.407849ms
Jan 31 18:30:39.517: INFO: Pod "pod-48c7484c-be01-43c9-b732-76ac4e6195bf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018548483s
Jan 31 18:30:41.519: INFO: Pod "pod-48c7484c-be01-43c9-b732-76ac4e6195bf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020752935s
STEP: Saw pod success 01/31/23 18:30:41.519
Jan 31 18:30:41.519: INFO: Pod "pod-48c7484c-be01-43c9-b732-76ac4e6195bf" satisfied condition "Succeeded or Failed"
Jan 31 18:30:41.528: INFO: Trying to get logs from node 26-m02 pod pod-48c7484c-be01-43c9-b732-76ac4e6195bf container test-container: <nil>
STEP: delete the pod 01/31/23 18:30:41.565
Jan 31 18:30:41.585: INFO: Waiting for pod pod-48c7484c-be01-43c9-b732-76ac4e6195bf to disappear
Jan 31 18:30:41.595: INFO: Pod pod-48c7484c-be01-43c9-b732-76ac4e6195bf no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 31 18:30:41.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3750" for this suite. 01/31/23 18:30:41.604
------------------------------
â€¢ [4.167 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/31/23 18:30:37.446
    Jan 31 18:30:37.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2489093203
    STEP: Building a namespace api object, basename emptydir 01/31/23 18:30:37.447
    STEP: Waiting for a default service account to be provisioned in namespace 01/31/23 18:30:37.468
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/31/23 18:30:37.476
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:127
    STEP: Creating a pod to test emptydir 0644 on tmpfs 01/31/23 18:30:37.484
    Jan 31 18:30:37.498: INFO: Waiting up to 5m0s for pod "pod-48c7484c-be01-43c9-b732-76ac4e6195bf" in namespace "emptydir-3750" to be "Succeeded or Failed"
    Jan 31 18:30:37.507: INFO: Pod "pod-48c7484c-be01-43c9-b732-76ac4e6195bf": Phase="Pending", Reason="", readiness=false. Elapsed: 8.407849ms
    Jan 31 18:30:39.517: INFO: Pod "pod-48c7484c-be01-43c9-b732-76ac4e6195bf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018548483s
    Jan 31 18:30:41.519: INFO: Pod "pod-48c7484c-be01-43c9-b732-76ac4e6195bf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020752935s
    STEP: Saw pod success 01/31/23 18:30:41.519
    Jan 31 18:30:41.519: INFO: Pod "pod-48c7484c-be01-43c9-b732-76ac4e6195bf" satisfied condition "Succeeded or Failed"
    Jan 31 18:30:41.528: INFO: Trying to get logs from node 26-m02 pod pod-48c7484c-be01-43c9-b732-76ac4e6195bf container test-container: <nil>
    STEP: delete the pod 01/31/23 18:30:41.565
    Jan 31 18:30:41.585: INFO: Waiting for pod pod-48c7484c-be01-43c9-b732-76ac4e6195bf to disappear
    Jan 31 18:30:41.595: INFO: Pod pod-48c7484c-be01-43c9-b732-76ac4e6195bf no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 31 18:30:41.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3750" for this suite. 01/31/23 18:30:41.604
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
Jan 31 18:30:41.614: INFO: Running AfterSuite actions on node 1
Jan 31 18:30:41.614: INFO: Skipping dumping logs from cluster
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88

  Begin Captured GinkgoWriter Output >>
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    Jan 31 18:30:41.614: INFO: Running AfterSuite actions on node 1
    Jan 31 18:30:41.614: INFO: Skipping dumping logs from cluster
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153
[ReportAfterSuite] TOP-LEVEL
  test/e2e/e2e_test.go:153
------------------------------
[ReportAfterSuite] PASSED [0.000 seconds]
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/e2e_test.go:153
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529
[ReportAfterSuite] TOP-LEVEL
  test/e2e/framework/test_context.go:529
------------------------------
[ReportAfterSuite] PASSED [0.091 seconds]
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/framework/test_context.go:529
  << End Captured GinkgoWriter Output
------------------------------

Ran 366 of 7069 Specs in 6641.350 seconds
SUCCESS! -- 366 Passed | 0 Failed | 0 Pending | 6703 Skipped
PASS

Ginkgo ran 1 suite in 1h50m41.705791123s
Test Suite Passed
[38;5;228mYou're using deprecated Ginkgo functionality:[0m
[38;5;228m=============================================[0m
  [38;5;11m--noColor is deprecated, use --no-color instead[0m
  [1mLearn more at:[0m [38;5;14m[4mhttps://onsi.github.io/ginkgo/MIGRATING_TO_V2#changed-command-line-flags[0m

[38;5;243mTo silence deprecations that can be silenced set the following environment variable:[0m
  [38;5;243mACK_GINKGO_DEPRECATIONS=2.4.0[0m

